{
	"id": "9457f5e3ee30aac9e636ce2bfd1966e6",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.20",
	"solcLongVersion": "0.8.20+commit.a1b79de6",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/faykGovernance.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.20;\r\n\r\nimport {Authority} from \"contracts/authority.sol\";\r\nimport \"@openzeppelin/contracts/utils/types/Time.sol\";\r\n\r\n\r\n\r\n\r\n\r\n\r\ncontract faykGovernance is Authority {\r\n    //using Time for *;\r\n\r\n\r\n    event AnOfficialWasElected(address indexed newCaller, bytes32 indexed  peopleName_satrap, uint32 indexed roleId);\r\n    event AnOfficialWasConfirmed(address indexed newCaller, bytes32 indexed  peopleName_satrap, uint32 indexed roleId);\r\n\r\n\r\n    struct CallerInfo {\r\n        bytes32 peopleName_satrap; //be in nokte tavajoh kon ke etelaate peopleName va satrap mitavanad dar yek bitmap Zakhire shavad badha avazesh kon\r\n        uint32 roleId;\r\n        uint48 since;\r\n        uint48 EndSession;\r\n        uint48 executeDelay;\r\n    }\r\n\r\n    struct TargetConfig {\r\n        uint32 roleId;\r\n        bytes32 peopleName_satrap;\r\n        uint48 executeDelay;\r\n        bool closed;\r\n    }\r\n\r\n    struct Role {\r\n        bytes32 roleLabel;\r\n        uint32 admin;\r\n        uint32 guardian;\r\n        uint48 periodTime;\r\n    }\r\n\r\n    mapping(address caller => CallerInfo callerInfo) private _callerInfo;\r\n    mapping(bytes32 contractTypeName => mapping (bytes32 peopleName_satrap => address addContract)) private _connectorMapping;\r\n    mapping(uint32 roleId => mapping (bytes32 peopleName_satrap => Role roleInfo)) private _roleinfo;\r\n    mapping(address target => mapping(bytes4 selector => TargetConfig roleAccess)) private _targets;\r\n\r\n\r\n    modifier onlyPrimeMinister() {\r\n        require(msg.sender == getPrimeMinisterAdd() && !getPrimeMinisterBan(), \"Access is not valid\");\r\n\r\n        _;\r\n    }\r\n\r\n    modifier onlyPrimeRepublic() {\r\n         if (TimeFirstElection < block.timestamp) {\r\n            require(msg.sender == getRepublicAddress(), \"Access is not valid\");\r\n\r\n        } else require(msg.sender == getPrimeMinisterAdd() && !getPrimeMinisterBan(), \"Access is not valid\");\r\n\r\n        _;\r\n    }\r\n\r\n    function setCallerInfo(address oldCaller, address newCaller, bytes32 peopleName_satrap, uint32 roleId, uint48 delay) public onlyPrimeRepublic {\r\n        if (oldCaller != address(0)) {\r\n            delete _callerInfo[oldCaller];\r\n        } \r\n        if (_callerInfo[newCaller].peopleName_satrap != peopleName_satrap && _callerInfo[newCaller].roleId != roleId) {\r\n\r\n            _callerInfo[newCaller].peopleName_satrap = peopleName_satrap;\r\n            _callerInfo[newCaller].roleId = roleId;\r\n            _callerInfo[newCaller].executeDelay = delay;\r\n\r\n            emit AnOfficialWasElected(newCaller, peopleName_satrap, roleId);\r\n\r\n        } else {}\r\n    }\r\n    \r\n    function transferCallerInfo() public {\r\n       if (_callerInfo[msg.sender].roleId > 0 && _callerInfo[msg.sender].since == 0) {\r\n        _callerInfo[msg.sender];\r\n\r\n        emit AnOfficialWasConfirmed(msg.sender, _callerInfo[msg.sender].peopleName_satrap, _callerInfo[msg.sender].roleId);\r\n\r\n       } else revert AccessOnlyForThePendig();\r\n    }\r\n   \r\n}"
			},
			"@openzeppelin/contracts/utils/types/Time.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/types/Time.sol)\n\npragma solidity ^0.8.20;\n\nimport {Math} from \"../math/Math.sol\";\nimport {SafeCast} from \"../math/SafeCast.sol\";\n\n/**\n * @dev This library provides helpers for manipulating time-related objects.\n *\n * It uses the following types:\n * - `uint48` for timepoints\n * - `uint32` for durations\n *\n * While the library doesn't provide specific types for timepoints and duration, it does provide:\n * - a `Delay` type to represent duration that can be programmed to change value automatically at a given point\n * - additional helper functions\n */\nlibrary Time {\n    using Time for *;\n\n    /**\n     * @dev Get the block timestamp as a Timepoint.\n     */\n    function timestamp() internal view returns (uint48) {\n        return SafeCast.toUint48(block.timestamp);\n    }\n\n    /**\n     * @dev Get the block number as a Timepoint.\n     */\n    function blockNumber() internal view returns (uint48) {\n        return SafeCast.toUint48(block.number);\n    }\n\n    // ==================================================== Delay =====================================================\n    /**\n     * @dev A `Delay` is a uint32 duration that can be programmed to change value automatically at a given point in the\n     * future. The \"effect\" timepoint describes when the transitions happens from the \"old\" value to the \"new\" value.\n     * This allows updating the delay applied to some operation while keeping some guarantees.\n     *\n     * In particular, the {update} function guarantees that if the delay is reduced, the old delay still applies for\n     * some time. For example if the delay is currently 7 days to do an upgrade, the admin should not be able to set\n     * the delay to 0 and upgrade immediately. If the admin wants to reduce the delay, the old delay (7 days) should\n     * still apply for some time.\n     *\n     *\n     * The `Delay` type is 112 bits long, and packs the following:\n     *\n     * ```\n     *   | [uint48]: effect date (timepoint)\n     *   |           | [uint32]: value before (duration)\n     *   ↓           ↓       ↓ [uint32]: value after (duration)\n     * 0xAAAAAAAAAAAABBBBBBBBCCCCCCCC\n     * ```\n     *\n     * NOTE: The {get} and {withUpdate} functions operate using timestamps. Block number based delays are not currently\n     * supported.\n     */\n    type Delay is uint112;\n\n    /**\n     * @dev Wrap a duration into a Delay to add the one-step \"update in the future\" feature\n     */\n    function toDelay(uint32 duration) internal pure returns (Delay) {\n        return Delay.wrap(duration);\n    }\n\n    /**\n     * @dev Get the value at a given timepoint plus the pending value and effect timepoint if there is a scheduled\n     * change after this timepoint. If the effect timepoint is 0, then the pending value should not be considered.\n     */\n    function _getFullAt(Delay self, uint48 timepoint) private pure returns (uint32, uint32, uint48) {\n        (uint32 valueBefore, uint32 valueAfter, uint48 effect) = self.unpack();\n        return effect <= timepoint ? (valueAfter, 0, 0) : (valueBefore, valueAfter, effect);\n    }\n\n    /**\n     * @dev Get the current value plus the pending value and effect timepoint if there is a scheduled change. If the\n     * effect timepoint is 0, then the pending value should not be considered.\n     */\n    function getFull(Delay self) internal view returns (uint32, uint32, uint48) {\n        return _getFullAt(self, timestamp());\n    }\n\n    /**\n     * @dev Get the current value.\n     */\n    function get(Delay self) internal view returns (uint32) {\n        (uint32 delay, , ) = self.getFull();\n        return delay;\n    }\n\n    /**\n     * @dev Update a Delay object so that it takes a new duration after a timepoint that is automatically computed to\n     * enforce the old delay at the moment of the update. Returns the updated Delay object and the timestamp when the\n     * new delay becomes effective.\n     */\n    function withUpdate(\n        Delay self,\n        uint32 newValue,\n        uint32 minSetback\n    ) internal view returns (Delay updatedDelay, uint48 effect) {\n        uint32 value = self.get();\n        uint32 setback = uint32(Math.max(minSetback, value > newValue ? value - newValue : 0));\n        effect = timestamp() + setback;\n        return (pack(value, newValue, effect), effect);\n    }\n\n    /**\n     * @dev Split a delay into its components: valueBefore, valueAfter and effect (transition timepoint).\n     */\n    function unpack(Delay self) internal pure returns (uint32 valueBefore, uint32 valueAfter, uint48 effect) {\n        uint112 raw = Delay.unwrap(self);\n\n        valueAfter = uint32(raw);\n        valueBefore = uint32(raw >> 32);\n        effect = uint48(raw >> 64);\n\n        return (valueBefore, valueAfter, effect);\n    }\n\n    /**\n     * @dev pack the components into a Delay object.\n     */\n    function pack(uint32 valueBefore, uint32 valueAfter, uint48 effect) internal pure returns (Delay) {\n        return Delay.wrap((uint112(effect) << 64) | (uint112(valueBefore) << 32) | uint112(valueAfter));\n    }\n}\n"
			},
			"contracts/authority.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.20;\r\n\r\n\r\n\r\n\r\ninterface Igovernance_set {\r\n    function AccessControl(address caller, address target, bytes4 Fselector) external returns (bool accessed);\r\n}\r\n\r\n\r\n\r\n\r\n\r\ncontract Authority {\r\n\r\n    error TheAddressIsNotValidForRAddress(address newRAddress);\r\n    error AccessOnlyForThePendig();\r\n    error TheAddressIsNotValidForGC(address NewGCAddress);\r\n    error RemainingTimeUntilTheConfirmationDeadline(uint48 reminingTime);\r\n\r\n\r\n    event TheNextPresidentWasElected(address indexed newPresidentAdd);\r\n    event TheNewPresidentWasConfirmed(address indexed presidentAdd, uint32 indexed nonce);\r\n    event TheNextGCAddressWasElected(address indexed newGCAddress);\r\n    event TheNewGCAddressWasConfirmed(address indexed GCAddress, uint32 indexed version);\r\n    event TheStatusOfBanningAllActivitiesAndDone(bool indexed baned, bool indexed done);\r\n    event TheNextRepublicAddressWasElected(address indexed newRepublicAddress);\r\n    event TheNewRepublicAddressWasConfirmed(address indexed RepublicAddress, uint32 indexed version);\r\n    event TheNextRepublicAddressWasCancelled(address indexed PRAddress);\r\n    event TheNextPrimeMinisterWasElected(address indexed newPrimeMinister);\r\n    event TheNewPrimeMinisterWasConfirmed(address indexed primeMinisterAdd, uint32 indexed nonce);\r\n\r\n    \r\n    \r\n\r\n    address private _pendigRepublicAddress;\r\n    address private _pendingGCAddress;\r\n    address private _pendigPresident;\r\n    address _pendingPrimeMinister;\r\n    uint48 immutable TimeFirstElection;\r\n    uint48 private _delayConfirmRepublicAddress;\r\n\r\n\r\n    struct access {\r\n        address roleAdd;\r\n        bool baned;\r\n        uint32 nonce;\r\n    }\r\n\r\n        \r\n    access private _president;\r\n    access private _primeMinister;\r\n    access private _governance;\r\n    access private _Republic;\r\n    // access private _primeMinister;\r\n    \r\n    modifier onlyRepublic() {\r\n        if (TimeFirstElection < block.timestamp) {\r\n            require(msg.sender == getRepublicAddress(), \"Access is not valid\");\r\n\r\n        } else require(msg.sender == getPresidentAdd() && !getPresidentBan(), \"Access is not valid\");\r\n\r\n        _;\r\n    }\r\n\r\n    modifier onlyPresident() {\r\n        require(msg.sender == getPresidentAdd() && !getPresidentBan(), \"Access is not valid\");\r\n\r\n        _;\r\n    }\r\n\r\n    modifier AccessCheck(address caller) {\r\n        require(!getPresidentBan() && Igovernance_set(_governance.roleAdd).AccessControl(caller, msg.sender, msg.sig), \"Access is not valid\");\r\n        \r\n        _;\r\n    }\r\n\r\n    constructor() {\r\n        TimeFirstElection = uint48(block.timestamp + 4400 days);\r\n        _president.roleAdd = msg.sender;\r\n        _president.nonce++;\r\n    }\r\n\r\n    function setPendingRepublicAddress(address newRAddress) public onlyRepublic {\r\n        if (newRAddress.code.length > 0) {\r\n            if (_president.roleAdd == msg.sender) {\r\n                _transferRepublicAddress(newRAddress);\r\n\r\n            } else {\r\n                _delayConfirmRepublicAddress = uint48(block.timestamp + 15 days);\r\n                _pendigRepublicAddress = newRAddress;\r\n                emit TheNextRepublicAddressWasElected(newRAddress);\r\n            }\r\n\r\n        } else revert TheAddressIsNotValidForRAddress(newRAddress);\r\n\r\n    }\r\n\r\n    function transferRepublicAddress(address RAddress) public onlyRepublic {\r\n        if (_delayConfirmRepublicAddress < block.timestamp) {\r\n            require(_delayConfirmRepublicAddress != 0,\"The request is invalid\");\r\n            if (_pendigRepublicAddress == RAddress) {\r\n                delete _delayConfirmRepublicAddress;\r\n                delete _pendigRepublicAddress;\r\n                _transferRepublicAddress(RAddress);\r\n\r\n            } else revert TheAddressIsNotValidForRAddress(RAddress);\r\n\r\n        } else revert RemainingTimeUntilTheConfirmationDeadline(_delayConfirmRepublicAddress - uint48(block.timestamp));\r\n    }\r\n\r\n    function cancelPendingRepublicAddress(address PRAdress) public onlyRepublic {\r\n        if (_pendigRepublicAddress == PRAdress) {\r\n                delete _delayConfirmRepublicAddress;\r\n                delete _pendigRepublicAddress;\r\n                emit  TheNextRepublicAddressWasCancelled(PRAdress);\r\n\r\n        } else revert TheAddressIsNotValidForRAddress(PRAdress);\r\n    }\r\n\r\n    function getRepublicAddress() public view returns (address RG) {\r\n            return _Republic.roleAdd;\r\n        }\r\n\r\n        function getAuthorityAddress() public view returns (address) {\r\n            return  address(this);\r\n        }\r\n\r\n    function setPendigPresident(address newPresident) public onlyRepublic {\r\n        _pendigPresident = newPresident;\r\n        _setPresidentBaned(true);\r\n        _setPrimeMinisterBaned(true);\r\n\r\n        emit TheNextPresidentWasElected(newPresident);\r\n    }\r\n\r\n    function transferPresident() public {\r\n        if (_pendigPresident == msg.sender) {\r\n            delete _pendigPresident;\r\n            _president.roleAdd = msg.sender;\r\n            _president.nonce++;\r\n            _setPresidentBaned(false);\r\n\r\n            emit TheNewPresidentWasConfirmed(_president.roleAdd, _president.nonce);\r\n\r\n        } else revert AccessOnlyForThePendig();\r\n    }\r\n\r\n    function getPresidentAdd() public view returns (address) {\r\n        return _president.roleAdd;\r\n    }\r\n\r\n    function getPresidentBan() public view returns (bool) {\r\n        return _president.baned;\r\n    }\r\n\r\n    function setPendingPrimeMinister(address newPM) public onlyPresident {\r\n        _pendingPrimeMinister = newPM;\r\n\r\n        emit TheNextPrimeMinisterWasElected(newPM);\r\n    }\r\n\r\n    function transferPrimeMinister() public {\r\n        if (_pendingPrimeMinister == msg.sender) {\r\n            delete _pendingPrimeMinister;\r\n            _primeMinister.roleAdd = msg.sender;\r\n            _primeMinister.nonce++;\r\n            if (_primeMinister.baned){\r\n                _setPrimeMinisterBaned(false);\r\n            }\r\n            emit TheNewPrimeMinisterWasConfirmed(_primeMinister.roleAdd, _primeMinister.nonce);\r\n\r\n        } else revert AccessOnlyForThePendig();\r\n    }\r\n\r\n    function getPrimeMinisterAdd() public view returns (address) {\r\n        return _primeMinister.roleAdd;\r\n    }\r\n\r\n    function getPrimeMinisterBan() public view returns (bool) {\r\n        return _primeMinister.baned;\r\n    }\r\n\r\n\r\n    function setPendingGovernanceContractAddress(address newGCAddress) public onlyRepublic {\r\n        if (newGCAddress.code.length > 0) {\r\n            _pendingGCAddress = newGCAddress;\r\n            emit TheNextGCAddressWasElected(newGCAddress);\r\n\r\n        } else revert TheAddressIsNotValidForGC(newGCAddress);\r\n\r\n    }\r\n\r\n    function transferGovernanceContractAddress(address pendingGCAdd) public onlyPresident {\r\n        if (_pendingGCAddress == pendingGCAdd) {\r\n            delete _pendingGCAddress;\r\n            _governance.roleAdd = pendingGCAdd;\r\n            _governance.nonce++;\r\n            emit TheNewGCAddressWasConfirmed(_governance.roleAdd, _governance.nonce);\r\n\r\n        } else revert TheAddressIsNotValidForGC(pendingGCAdd);\r\n    }\r\n\r\n    function getGovernance() public view returns (address) {\r\n        return _governance.roleAdd;\r\n    }\r\n\r\n    function getgovernanceVersion() public view returns (uint32) {\r\n        return _governance.nonce;\r\n    }\r\n\r\n    function setPresidentBaned(bool baned) public onlyRepublic {\r\n        _setPresidentBaned(baned);\r\n        _setPrimeMinisterBaned(baned);\r\n    }\r\n\r\n    function setPrimeMinister(bool baned) public onlyPresident {\r\n        _setPrimeMinisterBaned(baned);\r\n    }\r\n\r\n\r\n\r\n    function _transferRepublicAddress(address RAddress) private {\r\n        _Republic.roleAdd = RAddress;\r\n        _Republic.nonce++;\r\n        emit TheNewRepublicAddressWasConfirmed(_Republic.roleAdd, _Republic.nonce);\r\n    }\r\n\r\n    function _setPresidentBaned(bool baned) private {\r\n        _president.baned = baned;\r\n    }\r\n\r\n    function _setPrimeMinisterBaned(bool baned) private {\r\n        _primeMinister.baned = baned;\r\n    }\r\n\r\n\r\n}"
			},
			"@openzeppelin/contracts/utils/math/SafeCast.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/SafeCast.sol)\n// This file was procedurally generated from scripts/generate/templates/SafeCast.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Wrappers over Solidity's uintXX/intXX casting operators with added overflow\n * checks.\n *\n * Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n * easily result in undesired exploitation or bugs, since developers usually\n * assume that overflows raise errors. `SafeCast` restores this intuition by\n * reverting the transaction when such an operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n */\nlibrary SafeCast {\n    /**\n     * @dev Value doesn't fit in an uint of `bits` size.\n     */\n    error SafeCastOverflowedUintDowncast(uint8 bits, uint256 value);\n\n    /**\n     * @dev An int value doesn't fit in an uint of `bits` size.\n     */\n    error SafeCastOverflowedIntToUint(int256 value);\n\n    /**\n     * @dev Value doesn't fit in an int of `bits` size.\n     */\n    error SafeCastOverflowedIntDowncast(uint8 bits, int256 value);\n\n    /**\n     * @dev An uint value doesn't fit in an int of `bits` size.\n     */\n    error SafeCastOverflowedUintToInt(uint256 value);\n\n    /**\n     * @dev Returns the downcasted uint248 from uint256, reverting on\n     * overflow (when the input is greater than largest uint248).\n     *\n     * Counterpart to Solidity's `uint248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     */\n    function toUint248(uint256 value) internal pure returns (uint248) {\n        if (value > type(uint248).max) {\n            revert SafeCastOverflowedUintDowncast(248, value);\n        }\n        return uint248(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint240 from uint256, reverting on\n     * overflow (when the input is greater than largest uint240).\n     *\n     * Counterpart to Solidity's `uint240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     */\n    function toUint240(uint256 value) internal pure returns (uint240) {\n        if (value > type(uint240).max) {\n            revert SafeCastOverflowedUintDowncast(240, value);\n        }\n        return uint240(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint232 from uint256, reverting on\n     * overflow (when the input is greater than largest uint232).\n     *\n     * Counterpart to Solidity's `uint232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     */\n    function toUint232(uint256 value) internal pure returns (uint232) {\n        if (value > type(uint232).max) {\n            revert SafeCastOverflowedUintDowncast(232, value);\n        }\n        return uint232(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint224 from uint256, reverting on\n     * overflow (when the input is greater than largest uint224).\n     *\n     * Counterpart to Solidity's `uint224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     */\n    function toUint224(uint256 value) internal pure returns (uint224) {\n        if (value > type(uint224).max) {\n            revert SafeCastOverflowedUintDowncast(224, value);\n        }\n        return uint224(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint216 from uint256, reverting on\n     * overflow (when the input is greater than largest uint216).\n     *\n     * Counterpart to Solidity's `uint216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     */\n    function toUint216(uint256 value) internal pure returns (uint216) {\n        if (value > type(uint216).max) {\n            revert SafeCastOverflowedUintDowncast(216, value);\n        }\n        return uint216(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint208 from uint256, reverting on\n     * overflow (when the input is greater than largest uint208).\n     *\n     * Counterpart to Solidity's `uint208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     */\n    function toUint208(uint256 value) internal pure returns (uint208) {\n        if (value > type(uint208).max) {\n            revert SafeCastOverflowedUintDowncast(208, value);\n        }\n        return uint208(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint200 from uint256, reverting on\n     * overflow (when the input is greater than largest uint200).\n     *\n     * Counterpart to Solidity's `uint200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     */\n    function toUint200(uint256 value) internal pure returns (uint200) {\n        if (value > type(uint200).max) {\n            revert SafeCastOverflowedUintDowncast(200, value);\n        }\n        return uint200(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint192 from uint256, reverting on\n     * overflow (when the input is greater than largest uint192).\n     *\n     * Counterpart to Solidity's `uint192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     */\n    function toUint192(uint256 value) internal pure returns (uint192) {\n        if (value > type(uint192).max) {\n            revert SafeCastOverflowedUintDowncast(192, value);\n        }\n        return uint192(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint184 from uint256, reverting on\n     * overflow (when the input is greater than largest uint184).\n     *\n     * Counterpart to Solidity's `uint184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     */\n    function toUint184(uint256 value) internal pure returns (uint184) {\n        if (value > type(uint184).max) {\n            revert SafeCastOverflowedUintDowncast(184, value);\n        }\n        return uint184(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint176 from uint256, reverting on\n     * overflow (when the input is greater than largest uint176).\n     *\n     * Counterpart to Solidity's `uint176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     */\n    function toUint176(uint256 value) internal pure returns (uint176) {\n        if (value > type(uint176).max) {\n            revert SafeCastOverflowedUintDowncast(176, value);\n        }\n        return uint176(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint168 from uint256, reverting on\n     * overflow (when the input is greater than largest uint168).\n     *\n     * Counterpart to Solidity's `uint168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     */\n    function toUint168(uint256 value) internal pure returns (uint168) {\n        if (value > type(uint168).max) {\n            revert SafeCastOverflowedUintDowncast(168, value);\n        }\n        return uint168(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint160 from uint256, reverting on\n     * overflow (when the input is greater than largest uint160).\n     *\n     * Counterpart to Solidity's `uint160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     */\n    function toUint160(uint256 value) internal pure returns (uint160) {\n        if (value > type(uint160).max) {\n            revert SafeCastOverflowedUintDowncast(160, value);\n        }\n        return uint160(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint152 from uint256, reverting on\n     * overflow (when the input is greater than largest uint152).\n     *\n     * Counterpart to Solidity's `uint152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     */\n    function toUint152(uint256 value) internal pure returns (uint152) {\n        if (value > type(uint152).max) {\n            revert SafeCastOverflowedUintDowncast(152, value);\n        }\n        return uint152(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint144 from uint256, reverting on\n     * overflow (when the input is greater than largest uint144).\n     *\n     * Counterpart to Solidity's `uint144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     */\n    function toUint144(uint256 value) internal pure returns (uint144) {\n        if (value > type(uint144).max) {\n            revert SafeCastOverflowedUintDowncast(144, value);\n        }\n        return uint144(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint136 from uint256, reverting on\n     * overflow (when the input is greater than largest uint136).\n     *\n     * Counterpart to Solidity's `uint136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     */\n    function toUint136(uint256 value) internal pure returns (uint136) {\n        if (value > type(uint136).max) {\n            revert SafeCastOverflowedUintDowncast(136, value);\n        }\n        return uint136(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint128 from uint256, reverting on\n     * overflow (when the input is greater than largest uint128).\n     *\n     * Counterpart to Solidity's `uint128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     */\n    function toUint128(uint256 value) internal pure returns (uint128) {\n        if (value > type(uint128).max) {\n            revert SafeCastOverflowedUintDowncast(128, value);\n        }\n        return uint128(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint120 from uint256, reverting on\n     * overflow (when the input is greater than largest uint120).\n     *\n     * Counterpart to Solidity's `uint120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     */\n    function toUint120(uint256 value) internal pure returns (uint120) {\n        if (value > type(uint120).max) {\n            revert SafeCastOverflowedUintDowncast(120, value);\n        }\n        return uint120(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint112 from uint256, reverting on\n     * overflow (when the input is greater than largest uint112).\n     *\n     * Counterpart to Solidity's `uint112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     */\n    function toUint112(uint256 value) internal pure returns (uint112) {\n        if (value > type(uint112).max) {\n            revert SafeCastOverflowedUintDowncast(112, value);\n        }\n        return uint112(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint104 from uint256, reverting on\n     * overflow (when the input is greater than largest uint104).\n     *\n     * Counterpart to Solidity's `uint104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     */\n    function toUint104(uint256 value) internal pure returns (uint104) {\n        if (value > type(uint104).max) {\n            revert SafeCastOverflowedUintDowncast(104, value);\n        }\n        return uint104(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint96 from uint256, reverting on\n     * overflow (when the input is greater than largest uint96).\n     *\n     * Counterpart to Solidity's `uint96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     */\n    function toUint96(uint256 value) internal pure returns (uint96) {\n        if (value > type(uint96).max) {\n            revert SafeCastOverflowedUintDowncast(96, value);\n        }\n        return uint96(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint88 from uint256, reverting on\n     * overflow (when the input is greater than largest uint88).\n     *\n     * Counterpart to Solidity's `uint88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     */\n    function toUint88(uint256 value) internal pure returns (uint88) {\n        if (value > type(uint88).max) {\n            revert SafeCastOverflowedUintDowncast(88, value);\n        }\n        return uint88(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint80 from uint256, reverting on\n     * overflow (when the input is greater than largest uint80).\n     *\n     * Counterpart to Solidity's `uint80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     */\n    function toUint80(uint256 value) internal pure returns (uint80) {\n        if (value > type(uint80).max) {\n            revert SafeCastOverflowedUintDowncast(80, value);\n        }\n        return uint80(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint72 from uint256, reverting on\n     * overflow (when the input is greater than largest uint72).\n     *\n     * Counterpart to Solidity's `uint72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     */\n    function toUint72(uint256 value) internal pure returns (uint72) {\n        if (value > type(uint72).max) {\n            revert SafeCastOverflowedUintDowncast(72, value);\n        }\n        return uint72(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint64 from uint256, reverting on\n     * overflow (when the input is greater than largest uint64).\n     *\n     * Counterpart to Solidity's `uint64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     */\n    function toUint64(uint256 value) internal pure returns (uint64) {\n        if (value > type(uint64).max) {\n            revert SafeCastOverflowedUintDowncast(64, value);\n        }\n        return uint64(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint56 from uint256, reverting on\n     * overflow (when the input is greater than largest uint56).\n     *\n     * Counterpart to Solidity's `uint56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     */\n    function toUint56(uint256 value) internal pure returns (uint56) {\n        if (value > type(uint56).max) {\n            revert SafeCastOverflowedUintDowncast(56, value);\n        }\n        return uint56(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint48 from uint256, reverting on\n     * overflow (when the input is greater than largest uint48).\n     *\n     * Counterpart to Solidity's `uint48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     */\n    function toUint48(uint256 value) internal pure returns (uint48) {\n        if (value > type(uint48).max) {\n            revert SafeCastOverflowedUintDowncast(48, value);\n        }\n        return uint48(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint40 from uint256, reverting on\n     * overflow (when the input is greater than largest uint40).\n     *\n     * Counterpart to Solidity's `uint40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     */\n    function toUint40(uint256 value) internal pure returns (uint40) {\n        if (value > type(uint40).max) {\n            revert SafeCastOverflowedUintDowncast(40, value);\n        }\n        return uint40(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint32 from uint256, reverting on\n     * overflow (when the input is greater than largest uint32).\n     *\n     * Counterpart to Solidity's `uint32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     */\n    function toUint32(uint256 value) internal pure returns (uint32) {\n        if (value > type(uint32).max) {\n            revert SafeCastOverflowedUintDowncast(32, value);\n        }\n        return uint32(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint24 from uint256, reverting on\n     * overflow (when the input is greater than largest uint24).\n     *\n     * Counterpart to Solidity's `uint24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     */\n    function toUint24(uint256 value) internal pure returns (uint24) {\n        if (value > type(uint24).max) {\n            revert SafeCastOverflowedUintDowncast(24, value);\n        }\n        return uint24(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint16 from uint256, reverting on\n     * overflow (when the input is greater than largest uint16).\n     *\n     * Counterpart to Solidity's `uint16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     */\n    function toUint16(uint256 value) internal pure returns (uint16) {\n        if (value > type(uint16).max) {\n            revert SafeCastOverflowedUintDowncast(16, value);\n        }\n        return uint16(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint8 from uint256, reverting on\n     * overflow (when the input is greater than largest uint8).\n     *\n     * Counterpart to Solidity's `uint8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     */\n    function toUint8(uint256 value) internal pure returns (uint8) {\n        if (value > type(uint8).max) {\n            revert SafeCastOverflowedUintDowncast(8, value);\n        }\n        return uint8(value);\n    }\n\n    /**\n     * @dev Converts a signed int256 into an unsigned uint256.\n     *\n     * Requirements:\n     *\n     * - input must be greater than or equal to 0.\n     */\n    function toUint256(int256 value) internal pure returns (uint256) {\n        if (value < 0) {\n            revert SafeCastOverflowedIntToUint(value);\n        }\n        return uint256(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int248 from int256, reverting on\n     * overflow (when the input is less than smallest int248 or\n     * greater than largest int248).\n     *\n     * Counterpart to Solidity's `int248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     */\n    function toInt248(int256 value) internal pure returns (int248 downcasted) {\n        downcasted = int248(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(248, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int240 from int256, reverting on\n     * overflow (when the input is less than smallest int240 or\n     * greater than largest int240).\n     *\n     * Counterpart to Solidity's `int240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     */\n    function toInt240(int256 value) internal pure returns (int240 downcasted) {\n        downcasted = int240(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(240, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int232 from int256, reverting on\n     * overflow (when the input is less than smallest int232 or\n     * greater than largest int232).\n     *\n     * Counterpart to Solidity's `int232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     */\n    function toInt232(int256 value) internal pure returns (int232 downcasted) {\n        downcasted = int232(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(232, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int224 from int256, reverting on\n     * overflow (when the input is less than smallest int224 or\n     * greater than largest int224).\n     *\n     * Counterpart to Solidity's `int224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     */\n    function toInt224(int256 value) internal pure returns (int224 downcasted) {\n        downcasted = int224(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(224, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int216 from int256, reverting on\n     * overflow (when the input is less than smallest int216 or\n     * greater than largest int216).\n     *\n     * Counterpart to Solidity's `int216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     */\n    function toInt216(int256 value) internal pure returns (int216 downcasted) {\n        downcasted = int216(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(216, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int208 from int256, reverting on\n     * overflow (when the input is less than smallest int208 or\n     * greater than largest int208).\n     *\n     * Counterpart to Solidity's `int208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     */\n    function toInt208(int256 value) internal pure returns (int208 downcasted) {\n        downcasted = int208(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(208, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int200 from int256, reverting on\n     * overflow (when the input is less than smallest int200 or\n     * greater than largest int200).\n     *\n     * Counterpart to Solidity's `int200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     */\n    function toInt200(int256 value) internal pure returns (int200 downcasted) {\n        downcasted = int200(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(200, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int192 from int256, reverting on\n     * overflow (when the input is less than smallest int192 or\n     * greater than largest int192).\n     *\n     * Counterpart to Solidity's `int192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     */\n    function toInt192(int256 value) internal pure returns (int192 downcasted) {\n        downcasted = int192(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(192, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int184 from int256, reverting on\n     * overflow (when the input is less than smallest int184 or\n     * greater than largest int184).\n     *\n     * Counterpart to Solidity's `int184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     */\n    function toInt184(int256 value) internal pure returns (int184 downcasted) {\n        downcasted = int184(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(184, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int176 from int256, reverting on\n     * overflow (when the input is less than smallest int176 or\n     * greater than largest int176).\n     *\n     * Counterpart to Solidity's `int176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     */\n    function toInt176(int256 value) internal pure returns (int176 downcasted) {\n        downcasted = int176(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(176, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int168 from int256, reverting on\n     * overflow (when the input is less than smallest int168 or\n     * greater than largest int168).\n     *\n     * Counterpart to Solidity's `int168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     */\n    function toInt168(int256 value) internal pure returns (int168 downcasted) {\n        downcasted = int168(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(168, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int160 from int256, reverting on\n     * overflow (when the input is less than smallest int160 or\n     * greater than largest int160).\n     *\n     * Counterpart to Solidity's `int160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     */\n    function toInt160(int256 value) internal pure returns (int160 downcasted) {\n        downcasted = int160(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(160, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int152 from int256, reverting on\n     * overflow (when the input is less than smallest int152 or\n     * greater than largest int152).\n     *\n     * Counterpart to Solidity's `int152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     */\n    function toInt152(int256 value) internal pure returns (int152 downcasted) {\n        downcasted = int152(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(152, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int144 from int256, reverting on\n     * overflow (when the input is less than smallest int144 or\n     * greater than largest int144).\n     *\n     * Counterpart to Solidity's `int144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     */\n    function toInt144(int256 value) internal pure returns (int144 downcasted) {\n        downcasted = int144(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(144, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int136 from int256, reverting on\n     * overflow (when the input is less than smallest int136 or\n     * greater than largest int136).\n     *\n     * Counterpart to Solidity's `int136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     */\n    function toInt136(int256 value) internal pure returns (int136 downcasted) {\n        downcasted = int136(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(136, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int128 from int256, reverting on\n     * overflow (when the input is less than smallest int128 or\n     * greater than largest int128).\n     *\n     * Counterpart to Solidity's `int128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     */\n    function toInt128(int256 value) internal pure returns (int128 downcasted) {\n        downcasted = int128(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(128, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int120 from int256, reverting on\n     * overflow (when the input is less than smallest int120 or\n     * greater than largest int120).\n     *\n     * Counterpart to Solidity's `int120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     */\n    function toInt120(int256 value) internal pure returns (int120 downcasted) {\n        downcasted = int120(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(120, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int112 from int256, reverting on\n     * overflow (when the input is less than smallest int112 or\n     * greater than largest int112).\n     *\n     * Counterpart to Solidity's `int112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     */\n    function toInt112(int256 value) internal pure returns (int112 downcasted) {\n        downcasted = int112(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(112, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int104 from int256, reverting on\n     * overflow (when the input is less than smallest int104 or\n     * greater than largest int104).\n     *\n     * Counterpart to Solidity's `int104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     */\n    function toInt104(int256 value) internal pure returns (int104 downcasted) {\n        downcasted = int104(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(104, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int96 from int256, reverting on\n     * overflow (when the input is less than smallest int96 or\n     * greater than largest int96).\n     *\n     * Counterpart to Solidity's `int96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     */\n    function toInt96(int256 value) internal pure returns (int96 downcasted) {\n        downcasted = int96(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(96, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int88 from int256, reverting on\n     * overflow (when the input is less than smallest int88 or\n     * greater than largest int88).\n     *\n     * Counterpart to Solidity's `int88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     */\n    function toInt88(int256 value) internal pure returns (int88 downcasted) {\n        downcasted = int88(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(88, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int80 from int256, reverting on\n     * overflow (when the input is less than smallest int80 or\n     * greater than largest int80).\n     *\n     * Counterpart to Solidity's `int80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     */\n    function toInt80(int256 value) internal pure returns (int80 downcasted) {\n        downcasted = int80(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(80, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int72 from int256, reverting on\n     * overflow (when the input is less than smallest int72 or\n     * greater than largest int72).\n     *\n     * Counterpart to Solidity's `int72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     */\n    function toInt72(int256 value) internal pure returns (int72 downcasted) {\n        downcasted = int72(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(72, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int64 from int256, reverting on\n     * overflow (when the input is less than smallest int64 or\n     * greater than largest int64).\n     *\n     * Counterpart to Solidity's `int64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     */\n    function toInt64(int256 value) internal pure returns (int64 downcasted) {\n        downcasted = int64(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(64, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int56 from int256, reverting on\n     * overflow (when the input is less than smallest int56 or\n     * greater than largest int56).\n     *\n     * Counterpart to Solidity's `int56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     */\n    function toInt56(int256 value) internal pure returns (int56 downcasted) {\n        downcasted = int56(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(56, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int48 from int256, reverting on\n     * overflow (when the input is less than smallest int48 or\n     * greater than largest int48).\n     *\n     * Counterpart to Solidity's `int48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     */\n    function toInt48(int256 value) internal pure returns (int48 downcasted) {\n        downcasted = int48(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(48, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int40 from int256, reverting on\n     * overflow (when the input is less than smallest int40 or\n     * greater than largest int40).\n     *\n     * Counterpart to Solidity's `int40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     */\n    function toInt40(int256 value) internal pure returns (int40 downcasted) {\n        downcasted = int40(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(40, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int32 from int256, reverting on\n     * overflow (when the input is less than smallest int32 or\n     * greater than largest int32).\n     *\n     * Counterpart to Solidity's `int32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     */\n    function toInt32(int256 value) internal pure returns (int32 downcasted) {\n        downcasted = int32(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(32, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int24 from int256, reverting on\n     * overflow (when the input is less than smallest int24 or\n     * greater than largest int24).\n     *\n     * Counterpart to Solidity's `int24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     */\n    function toInt24(int256 value) internal pure returns (int24 downcasted) {\n        downcasted = int24(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(24, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int16 from int256, reverting on\n     * overflow (when the input is less than smallest int16 or\n     * greater than largest int16).\n     *\n     * Counterpart to Solidity's `int16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     */\n    function toInt16(int256 value) internal pure returns (int16 downcasted) {\n        downcasted = int16(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(16, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int8 from int256, reverting on\n     * overflow (when the input is less than smallest int8 or\n     * greater than largest int8).\n     *\n     * Counterpart to Solidity's `int8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     */\n    function toInt8(int256 value) internal pure returns (int8 downcasted) {\n        downcasted = int8(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(8, value);\n        }\n    }\n\n    /**\n     * @dev Converts an unsigned uint256 into a signed int256.\n     *\n     * Requirements:\n     *\n     * - input must be less than or equal to maxInt256.\n     */\n    function toInt256(uint256 value) internal pure returns (int256) {\n        // Note: Unsafe cast below is okay because `type(int256).max` is guaranteed to be positive\n        if (value > uint256(type(int256).max)) {\n            revert SafeCastOverflowedUintToInt(value);\n        }\n        return int256(value);\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    /**\n     * @dev Muldiv operation overflow.\n     */\n    error MathOverflowedMulDiv();\n\n    enum Rounding {\n        Floor, // Toward negative infinity\n        Ceil, // Toward positive infinity\n        Trunc, // Toward zero\n        Expand // Away from zero\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds towards infinity instead\n     * of rounding towards zero.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (b == 0) {\n            // Guarantee the same behavior as in a regular Solidity division.\n            return a / b;\n        }\n\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n     * denominator == 0.\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n     * Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0 = x * y; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            if (denominator <= prod1) {\n                revert MathOverflowedMulDiv();\n            }\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\n\n            uint256 twos = denominator & (0 - denominator);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\n            // works in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n     * towards zero.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (unsignedRoundsUp(rounding) && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (unsignedRoundsUp(rounding) && 10 ** result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << (result << 3) < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\n     */\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\n        return uint8(rounding) % 2 == 1;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"Math": {
					"abi": [
						{
							"inputs": [],
							"name": "MathOverflowedMulDiv",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard math utilities missing in the Solidity language.",
						"errors": {
							"MathOverflowedMulDiv()": [
								{
									"details": "Muldiv operation overflow."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/Math.sol\":203:15117  library Math {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":203:15117  library Math {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212204a90bcf65ffb48e9c51d3503f33f51a10bd9a2c31b2d95cf873206fc780da2d364736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212204a90bcf65ffb48e9c51d3503f33f51a10bd9a2c31b2d95cf873206fc780da2d364736f6c63430008140033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4A SWAP1 0xBC 0xF6 PUSH0 0xFB BASEFEE 0xE9 0xC5 SAR CALLDATALOAD SUB RETURN EXTCODEHASH MLOAD LOG1 SIGNEXTEND 0xD9 LOG2 0xC3 SHL 0x2D SWAP6 0xCF DUP8 ORIGIN MOD 0xFC PUSH25 0xDA2D364736F6C634300081400330000000000000000000000 ",
							"sourceMap": "203:14914:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212204a90bcf65ffb48e9c51d3503f33f51a10bd9a2c31b2d95cf873206fc780da2d364736f6c63430008140033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4A SWAP1 0xBC 0xF6 PUSH0 0xFB BASEFEE 0xE9 0xC5 SAR CALLDATALOAD SUB RETURN EXTCODEHASH MLOAD LOG1 SIGNEXTEND 0xD9 LOG2 0xC3 SHL 0x2D SWAP6 0xCF DUP8 ORIGIN MOD 0xFC PUSH25 0xDA2D364736F6C634300081400330000000000000000000000 ",
							"sourceMap": "203:14914:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"average(uint256,uint256)": "infinite",
								"ceilDiv(uint256,uint256)": "infinite",
								"log10(uint256)": "infinite",
								"log10(uint256,enum Math.Rounding)": "infinite",
								"log2(uint256)": "infinite",
								"log2(uint256,enum Math.Rounding)": "infinite",
								"log256(uint256)": "infinite",
								"log256(uint256,enum Math.Rounding)": "infinite",
								"max(uint256,uint256)": "infinite",
								"min(uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256,enum Math.Rounding)": "infinite",
								"sqrt(uint256)": "infinite",
								"sqrt(uint256,enum Math.Rounding)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite",
								"unsignedRoundsUp(enum Math.Rounding)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 0,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212204a90bcf65ffb48e9c51d3503f33f51a10bd9a2c31b2d95cf873206fc780da2d364736f6c63430008140033",
									".code": [
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SafeCast.sol",
								"@openzeppelin/contracts/utils/types/Time.sol",
								"contracts/authority.sol",
								"contracts/faykGovernance.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"MathOverflowedMulDiv\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"errors\":{\"MathOverflowedMulDiv()\":[{\"details\":\"Muldiv operation overflow.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/SafeCast.sol": {
				"SafeCast": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint8",
									"name": "bits",
									"type": "uint8"
								},
								{
									"internalType": "int256",
									"name": "value",
									"type": "int256"
								}
							],
							"name": "SafeCastOverflowedIntDowncast",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "int256",
									"name": "value",
									"type": "int256"
								}
							],
							"name": "SafeCastOverflowedIntToUint",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint8",
									"name": "bits",
									"type": "uint8"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "SafeCastOverflowedUintDowncast",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "SafeCastOverflowedUintToInt",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Wrappers over Solidity's uintXX/intXX casting operators with added overflow checks. Downcasting from uint256/int256 in Solidity does not revert on overflow. This can easily result in undesired exploitation or bugs, since developers usually assume that overflows raise errors. `SafeCast` restores this intuition by reverting the transaction when such an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.",
						"errors": {
							"SafeCastOverflowedIntDowncast(uint8,int256)": [
								{
									"details": "Value doesn't fit in an int of `bits` size."
								}
							],
							"SafeCastOverflowedIntToUint(int256)": [
								{
									"details": "An int value doesn't fit in an uint of `bits` size."
								}
							],
							"SafeCastOverflowedUintDowncast(uint8,uint256)": [
								{
									"details": "Value doesn't fit in an uint of `bits` size."
								}
							],
							"SafeCastOverflowedUintToInt(uint256)": [
								{
									"details": "An uint value doesn't fit in an int of `bits` size."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/SafeCast.sol\":764:34691  library SafeCast {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/SafeCast.sol\":764:34691  library SafeCast {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220b65ff69bca7820bb4722804cacc050e3f3a39721716aae49c2b260cc144687f164736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220b65ff69bca7820bb4722804cacc050e3f3a39721716aae49c2b260cc144687f164736f6c63430008140033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB6 PUSH0 0xF6 SWAP12 0xCA PUSH25 0x20BB4722804CACC050E3F3A39721716AAE49C2B260CC144687 CALL PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ",
							"sourceMap": "764:33927:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220b65ff69bca7820bb4722804cacc050e3f3a39721716aae49c2b260cc144687f164736f6c63430008140033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB6 PUSH0 0xF6 SWAP12 0xCA PUSH25 0x20BB4722804CACC050E3F3A39721716AAE49C2B260CC144687 CALL PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ",
							"sourceMap": "764:33927:1:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"toInt104(int256)": "infinite",
								"toInt112(int256)": "infinite",
								"toInt120(int256)": "infinite",
								"toInt128(int256)": "infinite",
								"toInt136(int256)": "infinite",
								"toInt144(int256)": "infinite",
								"toInt152(int256)": "infinite",
								"toInt16(int256)": "infinite",
								"toInt160(int256)": "infinite",
								"toInt168(int256)": "infinite",
								"toInt176(int256)": "infinite",
								"toInt184(int256)": "infinite",
								"toInt192(int256)": "infinite",
								"toInt200(int256)": "infinite",
								"toInt208(int256)": "infinite",
								"toInt216(int256)": "infinite",
								"toInt224(int256)": "infinite",
								"toInt232(int256)": "infinite",
								"toInt24(int256)": "infinite",
								"toInt240(int256)": "infinite",
								"toInt248(int256)": "infinite",
								"toInt256(uint256)": "infinite",
								"toInt32(int256)": "infinite",
								"toInt40(int256)": "infinite",
								"toInt48(int256)": "infinite",
								"toInt56(int256)": "infinite",
								"toInt64(int256)": "infinite",
								"toInt72(int256)": "infinite",
								"toInt8(int256)": "infinite",
								"toInt80(int256)": "infinite",
								"toInt88(int256)": "infinite",
								"toInt96(int256)": "infinite",
								"toUint104(uint256)": "infinite",
								"toUint112(uint256)": "infinite",
								"toUint120(uint256)": "infinite",
								"toUint128(uint256)": "infinite",
								"toUint136(uint256)": "infinite",
								"toUint144(uint256)": "infinite",
								"toUint152(uint256)": "infinite",
								"toUint16(uint256)": "infinite",
								"toUint160(uint256)": "infinite",
								"toUint168(uint256)": "infinite",
								"toUint176(uint256)": "infinite",
								"toUint184(uint256)": "infinite",
								"toUint192(uint256)": "infinite",
								"toUint200(uint256)": "infinite",
								"toUint208(uint256)": "infinite",
								"toUint216(uint256)": "infinite",
								"toUint224(uint256)": "infinite",
								"toUint232(uint256)": "infinite",
								"toUint24(uint256)": "infinite",
								"toUint240(uint256)": "infinite",
								"toUint248(uint256)": "infinite",
								"toUint256(int256)": "infinite",
								"toUint32(uint256)": "infinite",
								"toUint40(uint256)": "infinite",
								"toUint48(uint256)": "infinite",
								"toUint56(uint256)": "infinite",
								"toUint64(uint256)": "infinite",
								"toUint72(uint256)": "infinite",
								"toUint8(uint256)": "infinite",
								"toUint80(uint256)": "infinite",
								"toUint88(uint256)": "infinite",
								"toUint96(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 764,
									"end": 34691,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 764,
									"end": 34691,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 764,
									"end": 34691,
									"name": "PUSH",
									"source": 1,
									"value": "B"
								},
								{
									"begin": 764,
									"end": 34691,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 764,
									"end": 34691,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 764,
									"end": 34691,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 764,
									"end": 34691,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 764,
									"end": 34691,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 764,
									"end": 34691,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 764,
									"end": 34691,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 764,
									"end": 34691,
									"name": "BYTE",
									"source": 1
								},
								{
									"begin": 764,
									"end": 34691,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 764,
									"end": 34691,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 764,
									"end": 34691,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 764,
									"end": 34691,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 764,
									"end": 34691,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 764,
									"end": 34691,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 764,
									"end": 34691,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 764,
									"end": 34691,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 764,
									"end": 34691,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 764,
									"end": 34691,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 764,
									"end": 34691,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 764,
									"end": 34691,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 764,
									"end": 34691,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 764,
									"end": 34691,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 764,
									"end": 34691,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 764,
									"end": 34691,
									"name": "ADDRESS",
									"source": 1
								},
								{
									"begin": 764,
									"end": 34691,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 764,
									"end": 34691,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 764,
									"end": 34691,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 764,
									"end": 34691,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 764,
									"end": 34691,
									"name": "MSTORE8",
									"source": 1
								},
								{
									"begin": 764,
									"end": 34691,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 764,
									"end": 34691,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 764,
									"end": 34691,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220b65ff69bca7820bb4722804cacc050e3f3a39721716aae49c2b260cc144687f164736f6c63430008140033",
									".code": [
										{
											"begin": 764,
											"end": 34691,
											"name": "PUSHDEPLOYADDRESS",
											"source": 1
										},
										{
											"begin": 764,
											"end": 34691,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 764,
											"end": 34691,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 764,
											"end": 34691,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 764,
											"end": 34691,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 764,
											"end": 34691,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 764,
											"end": 34691,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 764,
											"end": 34691,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 764,
											"end": 34691,
											"name": "REVERT",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SafeCast.sol",
								"@openzeppelin/contracts/utils/types/Time.sol",
								"contracts/authority.sol",
								"contracts/faykGovernance.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"SafeCastOverflowedIntDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"SafeCastOverflowedIntToUint\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintToInt\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers over Solidity's uintXX/intXX casting operators with added overflow checks. Downcasting from uint256/int256 in Solidity does not revert on overflow. This can easily result in undesired exploitation or bugs, since developers usually assume that overflows raise errors. `SafeCast` restores this intuition by reverting the transaction when such an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"errors\":{\"SafeCastOverflowedIntDowncast(uint8,int256)\":[{\"details\":\"Value doesn't fit in an int of `bits` size.\"}],\"SafeCastOverflowedIntToUint(int256)\":[{\"details\":\"An int value doesn't fit in an uint of `bits` size.\"}],\"SafeCastOverflowedUintDowncast(uint8,uint256)\":[{\"details\":\"Value doesn't fit in an uint of `bits` size.\"}],\"SafeCastOverflowedUintToInt(uint256)\":[{\"details\":\"An uint value doesn't fit in an int of `bits` size.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":\"SafeCast\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0xe19a4d5f31d2861e7344e8e535e2feafb913d806d3e2b5fe7782741a2a7094fe\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4aed79c0fa6f0546ed02f2f683e8f77f0fd2ed7eb34d8bbf3d373c9a6d95b13c\",\"dweb:/ipfs/QmWqVz6UAVqmnWU5pqYPt1o6iDEZyPaBraAA3rKfTTSfYj\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/types/Time.sol": {
				"Time": {
					"abi": [],
					"devdoc": {
						"details": "This library provides helpers for manipulating time-related objects. It uses the following types: - `uint48` for timepoints - `uint32` for durations While the library doesn't provide specific types for timepoints and duration, it does provide: - a `Delay` type to represent duration that can be programmed to change value automatically at a given point - additional helper functions",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/types/Time.sol\":640:5094  library Time {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/types/Time.sol\":640:5094  library Time {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122045f3a2913c6187189e7199d6288da22449ef087715075d7917beb7e3b36f4eff64736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122045f3a2913c6187189e7199d6288da22449ef087715075d7917beb7e3b36f4eff64736f6c63430008140033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 GASLIMIT RETURN LOG2 SWAP2 EXTCODECOPY PUSH2 0x8718 SWAP15 PUSH18 0x99D6288DA22449EF087715075D7917BEB7E3 0xB3 PUSH16 0x4EFF64736F6C63430008140033000000 ",
							"sourceMap": "640:4454:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122045f3a2913c6187189e7199d6288da22449ef087715075d7917beb7e3b36f4eff64736f6c63430008140033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 GASLIMIT RETURN LOG2 SWAP2 EXTCODECOPY PUSH2 0x8718 SWAP15 PUSH18 0x99D6288DA22449EF087715075D7917BEB7E3 0xB3 PUSH16 0x4EFF64736F6C63430008140033000000 ",
							"sourceMap": "640:4454:2:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"_getFullAt(Time.Delay,uint48)": "infinite",
								"blockNumber()": "infinite",
								"get(Time.Delay)": "infinite",
								"getFull(Time.Delay)": "infinite",
								"pack(uint32,uint32,uint48)": "infinite",
								"timestamp()": "infinite",
								"toDelay(uint32)": "infinite",
								"unpack(Time.Delay)": "infinite",
								"withUpdate(Time.Delay,uint32,uint32)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 640,
									"end": 5094,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 640,
									"end": 5094,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 640,
									"end": 5094,
									"name": "PUSH",
									"source": 2,
									"value": "B"
								},
								{
									"begin": 640,
									"end": 5094,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 640,
									"end": 5094,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 640,
									"end": 5094,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 640,
									"end": 5094,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 640,
									"end": 5094,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 640,
									"end": 5094,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 640,
									"end": 5094,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 640,
									"end": 5094,
									"name": "BYTE",
									"source": 2
								},
								{
									"begin": 640,
									"end": 5094,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 640,
									"end": 5094,
									"name": "EQ",
									"source": 2
								},
								{
									"begin": 640,
									"end": 5094,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 640,
									"end": 5094,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 640,
									"end": 5094,
									"name": "PUSH",
									"source": 2,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 640,
									"end": 5094,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 640,
									"end": 5094,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 640,
									"end": 5094,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 640,
									"end": 5094,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 640,
									"end": 5094,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 640,
									"end": 5094,
									"name": "PUSH",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 640,
									"end": 5094,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 640,
									"end": 5094,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 640,
									"end": 5094,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 640,
									"end": 5094,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 640,
									"end": 5094,
									"name": "ADDRESS",
									"source": 2
								},
								{
									"begin": 640,
									"end": 5094,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 640,
									"end": 5094,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 640,
									"end": 5094,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 640,
									"end": 5094,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 640,
									"end": 5094,
									"name": "MSTORE8",
									"source": 2
								},
								{
									"begin": 640,
									"end": 5094,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 640,
									"end": 5094,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 640,
									"end": 5094,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122045f3a2913c6187189e7199d6288da22449ef087715075d7917beb7e3b36f4eff64736f6c63430008140033",
									".code": [
										{
											"begin": 640,
											"end": 5094,
											"name": "PUSHDEPLOYADDRESS",
											"source": 2
										},
										{
											"begin": 640,
											"end": 5094,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 640,
											"end": 5094,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 640,
											"end": 5094,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 640,
											"end": 5094,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 640,
											"end": 5094,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 640,
											"end": 5094,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 640,
											"end": 5094,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 640,
											"end": 5094,
											"name": "REVERT",
											"source": 2
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SafeCast.sol",
								"@openzeppelin/contracts/utils/types/Time.sol",
								"contracts/authority.sol",
								"contracts/faykGovernance.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"This library provides helpers for manipulating time-related objects. It uses the following types: - `uint48` for timepoints - `uint32` for durations While the library doesn't provide specific types for timepoints and duration, it does provide: - a `Delay` type to represent duration that can be programmed to change value automatically at a given point - additional helper functions\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/types/Time.sol\":\"Time\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0xe19a4d5f31d2861e7344e8e535e2feafb913d806d3e2b5fe7782741a2a7094fe\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4aed79c0fa6f0546ed02f2f683e8f77f0fd2ed7eb34d8bbf3d373c9a6d95b13c\",\"dweb:/ipfs/QmWqVz6UAVqmnWU5pqYPt1o6iDEZyPaBraAA3rKfTTSfYj\"]},\"@openzeppelin/contracts/utils/types/Time.sol\":{\"keccak256\":\"0xc7755af115020049e4140f224f9ee88d7e1799ffb0646f37bf0df24bf6213f58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7f09bf94d5274334ec021f61a04659db303f31e60460e14b709c9bf187740111\",\"dweb:/ipfs/QmNvgomZYUwFAt4cZbPWAiTeSZQreGehY9BK5xyVJsUttb\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/authority.sol": {
				"Authority": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "AccessOnlyForThePendig",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint48",
									"name": "reminingTime",
									"type": "uint48"
								}
							],
							"name": "RemainingTimeUntilTheConfirmationDeadline",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "NewGCAddress",
									"type": "address"
								}
							],
							"name": "TheAddressIsNotValidForGC",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newRAddress",
									"type": "address"
								}
							],
							"name": "TheAddressIsNotValidForRAddress",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "GCAddress",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint32",
									"name": "version",
									"type": "uint32"
								}
							],
							"name": "TheNewGCAddressWasConfirmed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "presidentAdd",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint32",
									"name": "nonce",
									"type": "uint32"
								}
							],
							"name": "TheNewPresidentWasConfirmed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "primeMinisterAdd",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint32",
									"name": "nonce",
									"type": "uint32"
								}
							],
							"name": "TheNewPrimeMinisterWasConfirmed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "RepublicAddress",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint32",
									"name": "version",
									"type": "uint32"
								}
							],
							"name": "TheNewRepublicAddressWasConfirmed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "newGCAddress",
									"type": "address"
								}
							],
							"name": "TheNextGCAddressWasElected",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "newPresidentAdd",
									"type": "address"
								}
							],
							"name": "TheNextPresidentWasElected",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "newPrimeMinister",
									"type": "address"
								}
							],
							"name": "TheNextPrimeMinisterWasElected",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "PRAddress",
									"type": "address"
								}
							],
							"name": "TheNextRepublicAddressWasCancelled",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "newRepublicAddress",
									"type": "address"
								}
							],
							"name": "TheNextRepublicAddressWasElected",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bool",
									"name": "baned",
									"type": "bool"
								},
								{
									"indexed": true,
									"internalType": "bool",
									"name": "done",
									"type": "bool"
								}
							],
							"name": "TheStatusOfBanningAllActivitiesAndDone",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "PRAdress",
									"type": "address"
								}
							],
							"name": "cancelPendingRepublicAddress",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getAuthorityAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getGovernance",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getPresidentAdd",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getPresidentBan",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getPrimeMinisterAdd",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getPrimeMinisterBan",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getRepublicAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "RG",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getgovernanceVersion",
							"outputs": [
								{
									"internalType": "uint32",
									"name": "",
									"type": "uint32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newPresident",
									"type": "address"
								}
							],
							"name": "setPendigPresident",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newGCAddress",
									"type": "address"
								}
							],
							"name": "setPendingGovernanceContractAddress",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newPM",
									"type": "address"
								}
							],
							"name": "setPendingPrimeMinister",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newRAddress",
									"type": "address"
								}
							],
							"name": "setPendingRepublicAddress",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bool",
									"name": "baned",
									"type": "bool"
								}
							],
							"name": "setPresidentBaned",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bool",
									"name": "baned",
									"type": "bool"
								}
							],
							"name": "setPrimeMinister",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "pendingGCAdd",
									"type": "address"
								}
							],
							"name": "transferGovernanceContractAddress",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "transferPresident",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "transferPrimeMinister",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "RAddress",
									"type": "address"
								}
							],
							"name": "transferRepublicAddress",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/authority.sol\":221:7993  contract Authority {... */\n  mstore(0x40, 0xa0)\n    /* \"contracts/authority.sol\":2559:2718  constructor() {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"contracts/authority.sol\":2629:2638  4400 days */\n  0x16a8c800\n    /* \"contracts/authority.sol\":2611:2626  block.timestamp */\n  timestamp\n    /* \"contracts/authority.sol\":2611:2638  block.timestamp + 4400 days */\n  tag_4\n  swap2\n  swap1\n  tag_5\n  jump\t// in\ntag_4:\n    /* \"contracts/authority.sol\":2584:2639  TimeFirstElection = uint48(block.timestamp + 4400 days) */\n  0xffffffffffff\n  and\n  0x80\n  dup2\n  0xffffffffffff\n  and\n  dup2\n  mstore\n  pop\n  pop\n    /* \"contracts/authority.sol\":2671:2681  msg.sender */\n  caller\n    /* \"contracts/authority.sol\":2650:2660  _president */\n  0x04\n    /* \"contracts/authority.sol\":2650:2668  _president.roleAdd */\n  0x00\n  add\n  0x00\n    /* \"contracts/authority.sol\":2650:2681  _president.roleAdd = msg.sender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/authority.sol\":2692:2702  _president */\n  0x04\n    /* \"contracts/authority.sol\":2692:2708  _president.nonce */\n  0x00\n  add\n  0x15\n    /* \"contracts/authority.sol\":2692:2710  _president.nonce++ */\n  dup2\n  dup2\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffff\n  and\n  dup1\n  swap3\n  swap2\n  swap1\n  tag_6\n  swap1\n  tag_7\n  jump\t// in\ntag_6:\n  swap2\n  swap1\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n  pop\n    /* \"contracts/authority.sol\":221:7993  contract Authority {... */\n  jump(tag_8)\n    /* \"#utility.yul\":7:84   */\ntag_9:\n    /* \"#utility.yul\":44:51   */\n  0x00\n    /* \"#utility.yul\":73:78   */\n  dup2\n    /* \"#utility.yul\":62:78   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:84   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":90:270   */\ntag_10:\n    /* \"#utility.yul\":138:215   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":135:136   */\n  0x00\n    /* \"#utility.yul\":128:216   */\n  mstore\n    /* \"#utility.yul\":235:239   */\n  0x11\n    /* \"#utility.yul\":232:233   */\n  0x04\n    /* \"#utility.yul\":225:240   */\n  mstore\n    /* \"#utility.yul\":259:263   */\n  0x24\n    /* \"#utility.yul\":256:257   */\n  0x00\n    /* \"#utility.yul\":249:264   */\n  revert\n    /* \"#utility.yul\":276:467   */\ntag_5:\n    /* \"#utility.yul\":316:319   */\n  0x00\n    /* \"#utility.yul\":335:355   */\n  tag_16\n    /* \"#utility.yul\":353:354   */\n  dup3\n    /* \"#utility.yul\":335:355   */\n  tag_9\n  jump\t// in\ntag_16:\n    /* \"#utility.yul\":330:355   */\n  swap2\n  pop\n    /* \"#utility.yul\":369:389   */\n  tag_17\n    /* \"#utility.yul\":387:388   */\n  dup4\n    /* \"#utility.yul\":369:389   */\n  tag_9\n  jump\t// in\ntag_17:\n    /* \"#utility.yul\":364:389   */\n  swap3\n  pop\n    /* \"#utility.yul\":412:413   */\n  dup3\n    /* \"#utility.yul\":409:410   */\n  dup3\n    /* \"#utility.yul\":405:414   */\n  add\n    /* \"#utility.yul\":398:414   */\n  swap1\n  pop\n    /* \"#utility.yul\":433:436   */\n  dup1\n    /* \"#utility.yul\":430:431   */\n  dup3\n    /* \"#utility.yul\":427:437   */\n  gt\n    /* \"#utility.yul\":424:460   */\n  iszero\n  tag_18\n  jumpi\n    /* \"#utility.yul\":440:458   */\n  tag_19\n  tag_10\n  jump\t// in\ntag_19:\n    /* \"#utility.yul\":424:460   */\ntag_18:\n    /* \"#utility.yul\":276:467   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":473:566   */\ntag_11:\n    /* \"#utility.yul\":509:516   */\n  0x00\n    /* \"#utility.yul\":549:559   */\n  0xffffffff\n    /* \"#utility.yul\":542:547   */\n  dup3\n    /* \"#utility.yul\":538:560   */\n  and\n    /* \"#utility.yul\":527:560   */\n  swap1\n  pop\n    /* \"#utility.yul\":473:566   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":572:747   */\ntag_7:\n    /* \"#utility.yul\":610:613   */\n  0x00\n    /* \"#utility.yul\":633:656   */\n  tag_22\n    /* \"#utility.yul\":650:655   */\n  dup3\n    /* \"#utility.yul\":633:656   */\n  tag_11\n  jump\t// in\ntag_22:\n    /* \"#utility.yul\":624:656   */\n  swap2\n  pop\n    /* \"#utility.yul\":678:688   */\n  0xffffffff\n    /* \"#utility.yul\":671:676   */\n  dup3\n    /* \"#utility.yul\":668:689   */\n  sub\n    /* \"#utility.yul\":665:712   */\n  tag_23\n  jumpi\n    /* \"#utility.yul\":692:710   */\n  tag_24\n  tag_10\n  jump\t// in\ntag_24:\n    /* \"#utility.yul\":665:712   */\ntag_23:\n    /* \"#utility.yul\":739:740   */\n  0x01\n    /* \"#utility.yul\":732:737   */\n  dup3\n    /* \"#utility.yul\":728:741   */\n  add\n    /* \"#utility.yul\":721:741   */\n  swap1\n  pop\n    /* \"#utility.yul\":572:747   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"contracts/authority.sol\":221:7993  contract Authority {... */\ntag_8:\n  mload(0x80)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0x243d3ba375e91e040b8b9e2bbbb1688b2b311eacea842eebda952071560e7854\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"contracts/authority.sol\":221:7993  contract Authority {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x6cf106d7\n      gt\n      tag_22\n      jumpi\n      dup1\n      0xc5a1c5c1\n      gt\n      tag_23\n      jumpi\n      dup1\n      0xc5a1c5c1\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xca4cce68\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xe47a9d46\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xe4f3e947\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xee7126c3\n      eq\n      tag_21\n      jumpi\n      jump(tag_2)\n    tag_23:\n      dup1\n      0x6cf106d7\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x9c20fe71\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xa53da00b\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xb5c09c68\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xc387b49c\n      eq\n      tag_16\n      jumpi\n      jump(tag_2)\n    tag_22:\n      dup1\n      0x1f72783a\n      gt\n      tag_24\n      jumpi\n      dup1\n      0x1f72783a\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x289b3c0d\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x52e305de\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x544fa93e\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x66410997\n      eq\n      tag_11\n      jumpi\n      jump(tag_2)\n    tag_24:\n      dup1\n      0x054203bd\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x06e99d93\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x0df4c390\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x18074eee\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/authority.sol\":4553:4805  function setPendigPresident(address newPresident) public onlyRepublic {... */\n    tag_3:\n      tag_25\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_26\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_26:\n      tag_28\n      jump\t// in\n    tag_25:\n      stop\n        /* \"contracts/authority.sol\":7441:7548  function setPrimeMinister(bool baned) public onlyPresident {... */\n    tag_4:\n      tag_29\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_30\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_30:\n      tag_32\n      jump\t// in\n    tag_29:\n      stop\n        /* \"contracts/authority.sol\":4813:5199  function transferPresident() public {... */\n    tag_5:\n      tag_33\n      tag_34\n      jump\t// in\n    tag_33:\n      stop\n        /* \"contracts/authority.sol\":5600:6081  function transferPrimeMinister() public {... */\n    tag_6:\n      tag_35\n      tag_36\n      jump\t// in\n    tag_35:\n      stop\n        /* \"contracts/authority.sol\":2726:3282  function setPendingRepublicAddress(address newRAddress) public onlyRepublic {... */\n    tag_7:\n      tag_37\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_38\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_38:\n      tag_39\n      jump\t// in\n    tag_37:\n      stop\n        /* \"contracts/authority.sol\":7070:7170  function getGovernance() public view returns (address) {... */\n    tag_8:\n      tag_40\n      tag_41\n      jump\t// in\n    tag_40:\n      mload(0x40)\n      tag_42\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/authority.sol\":3928:4302  function cancelPendingRepublicAddress(address PRAdress) public onlyRepublic {... */\n    tag_9:\n      tag_44\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_45\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_45:\n      tag_46\n      jump\t// in\n    tag_44:\n      stop\n        /* \"contracts/authority.sol\":5420:5592  function setPendingPrimeMinister(address newPM) public onlyPresident {... */\n    tag_10:\n      tag_47\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_48\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_48:\n      tag_49\n      jump\t// in\n    tag_47:\n      stop\n        /* \"contracts/authority.sol\":5207:5308  function getPresidentAdd() public view returns (address) {... */\n    tag_11:\n      tag_50\n      tag_51\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      tag_52\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_52:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/authority.sol\":5316:5412  function getPresidentBan() public view returns (bool) {... */\n    tag_12:\n      tag_53\n      tag_54\n      jump\t// in\n    tag_53:\n      mload(0x40)\n      tag_55\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_55:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/authority.sol\":3290:3920  function transferRepublicAddress(address RAddress) public onlyRepublic {... */\n    tag_13:\n      tag_57\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_58\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_58:\n      tag_59\n      jump\t// in\n    tag_57:\n      stop\n        /* \"contracts/authority.sol\":6089:6198  function getPrimeMinisterAdd() public view returns (address) {... */\n    tag_14:\n      tag_60\n      tag_61\n      jump\t// in\n    tag_60:\n      mload(0x40)\n      tag_62\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_62:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/authority.sol\":7290:7433  function setPresidentBaned(bool baned) public onlyRepublic {... */\n    tag_15:\n      tag_63\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_64\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_64:\n      tag_65\n      jump\t// in\n    tag_63:\n      stop\n        /* \"contracts/authority.sol\":7178:7282  function getgovernanceVersion() public view returns (uint32) {... */\n    tag_16:\n      tag_66\n      tag_67\n      jump\t// in\n    tag_66:\n      mload(0x40)\n      tag_68\n      swap2\n      swap1\n      tag_69\n      jump\t// in\n    tag_68:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/authority.sol\":4310:4424  function getRepublicAddress() public view returns (address RG) {... */\n    tag_17:\n      tag_70\n      tag_71\n      jump\t// in\n    tag_70:\n      mload(0x40)\n      tag_72\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_72:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/authority.sol\":6320:6635  function setPendingGovernanceContractAddress(address newGCAddress) public onlyRepublic {... */\n    tag_18:\n      tag_73\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_74\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_74:\n      tag_75\n      jump\t// in\n    tag_73:\n      stop\n        /* \"contracts/authority.sol\":4436:4545  function getAuthorityAddress() public view returns (address) {... */\n    tag_19:\n      tag_76\n      tag_77\n      jump\t// in\n    tag_76:\n      mload(0x40)\n      tag_78\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_78:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/authority.sol\":6206:6310  function getPrimeMinisterBan() public view returns (bool) {... */\n    tag_20:\n      tag_79\n      tag_80\n      jump\t// in\n    tag_79:\n      mload(0x40)\n      tag_81\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_81:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/authority.sol\":6643:7062  function transferGovernanceContractAddress(address pendingGCAdd) public onlyPresident {... */\n    tag_21:\n      tag_82\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_83\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_83:\n      tag_84\n      jump\t// in\n    tag_82:\n      stop\n        /* \"contracts/authority.sol\":4553:4805  function setPendigPresident(address newPresident) public onlyRepublic {... */\n    tag_28:\n        /* \"contracts/authority.sol\":1956:1971  block.timestamp */\n      timestamp\n        /* \"contracts/authority.sol\":1936:1953  TimeFirstElection */\n      immutable(\"0x243d3ba375e91e040b8b9e2bbbb1688b2b311eacea842eebda952071560e7854\")\n        /* \"contracts/authority.sol\":1936:1971  TimeFirstElection < block.timestamp */\n      0xffffffffffff\n      and\n      lt\n        /* \"contracts/authority.sol\":1932:2159  if (TimeFirstElection < block.timestamp) {... */\n      iszero\n      tag_86\n      jumpi\n        /* \"contracts/authority.sol\":2010:2030  getRepublicAddress() */\n      tag_87\n        /* \"contracts/authority.sol\":2010:2028  getRepublicAddress */\n      tag_71\n        /* \"contracts/authority.sol\":2010:2030  getRepublicAddress() */\n      jump\t// in\n    tag_87:\n        /* \"contracts/authority.sol\":1996:2030  msg.sender == getRepublicAddress() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/authority.sol\":1996:2006  msg.sender */\n      caller\n        /* \"contracts/authority.sol\":1996:2030  msg.sender == getRepublicAddress() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/authority.sol\":1988:2054  require(msg.sender == getRepublicAddress(), \"Access is not valid\") */\n      tag_88\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_89\n      swap1\n      tag_90\n      jump\t// in\n    tag_89:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_88:\n        /* \"contracts/authority.sol\":1932:2159  if (TimeFirstElection < block.timestamp) {... */\n      jump(tag_91)\n    tag_86:\n        /* \"contracts/authority.sol\":2096:2113  getPresidentAdd() */\n      tag_92\n        /* \"contracts/authority.sol\":2096:2111  getPresidentAdd */\n      tag_51\n        /* \"contracts/authority.sol\":2096:2113  getPresidentAdd() */\n      jump\t// in\n    tag_92:\n        /* \"contracts/authority.sol\":2082:2113  msg.sender == getPresidentAdd() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/authority.sol\":2082:2092  msg.sender */\n      caller\n        /* \"contracts/authority.sol\":2082:2113  msg.sender == getPresidentAdd() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/authority.sol\":2082:2135  msg.sender == getPresidentAdd() && !getPresidentBan() */\n      dup1\n      iszero\n      tag_93\n      jumpi\n      pop\n        /* \"contracts/authority.sol\":2118:2135  getPresidentBan() */\n      tag_94\n        /* \"contracts/authority.sol\":2118:2133  getPresidentBan */\n      tag_54\n        /* \"contracts/authority.sol\":2118:2135  getPresidentBan() */\n      jump\t// in\n    tag_94:\n        /* \"contracts/authority.sol\":2117:2135  !getPresidentBan() */\n      iszero\n        /* \"contracts/authority.sol\":2082:2135  msg.sender == getPresidentAdd() && !getPresidentBan() */\n    tag_93:\n        /* \"contracts/authority.sol\":2074:2159  require(msg.sender == getPresidentAdd() && !getPresidentBan(), \"Access is not valid\") */\n      tag_95\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_96\n      swap1\n      tag_90\n      jump\t// in\n    tag_96:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_95:\n        /* \"contracts/authority.sol\":1932:2159  if (TimeFirstElection < block.timestamp) {... */\n    tag_91:\n        /* \"contracts/authority.sol\":4653:4665  newPresident */\n      dup1\n        /* \"contracts/authority.sol\":4634:4650  _pendigPresident */\n      0x02\n      0x00\n        /* \"contracts/authority.sol\":4634:4665  _pendigPresident = newPresident */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/authority.sol\":4676:4700  _setPresidentBaned(true) */\n      tag_98\n        /* \"contracts/authority.sol\":4695:4699  true */\n      0x01\n        /* \"contracts/authority.sol\":4676:4694  _setPresidentBaned */\n      tag_99\n        /* \"contracts/authority.sol\":4676:4700  _setPresidentBaned(true) */\n      jump\t// in\n    tag_98:\n        /* \"contracts/authority.sol\":4711:4739  _setPrimeMinisterBaned(true) */\n      tag_100\n        /* \"contracts/authority.sol\":4734:4738  true */\n      0x01\n        /* \"contracts/authority.sol\":4711:4733  _setPrimeMinisterBaned */\n      tag_101\n        /* \"contracts/authority.sol\":4711:4739  _setPrimeMinisterBaned(true) */\n      jump\t// in\n    tag_100:\n        /* \"contracts/authority.sol\":4784:4796  newPresident */\n      dup1\n        /* \"contracts/authority.sol\":4757:4797  TheNextPresidentWasElected(newPresident) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x3553f1f7ef0242113266a8d183b621bb87468c99237f36b1150b6ab3d688b686\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/authority.sol\":4553:4805  function setPendigPresident(address newPresident) public onlyRepublic {... */\n      pop\n      jump\t// out\n        /* \"contracts/authority.sol\":7441:7548  function setPrimeMinister(bool baned) public onlyPresident {... */\n    tag_32:\n        /* \"contracts/authority.sol\":2247:2264  getPresidentAdd() */\n      tag_103\n        /* \"contracts/authority.sol\":2247:2262  getPresidentAdd */\n      tag_51\n        /* \"contracts/authority.sol\":2247:2264  getPresidentAdd() */\n      jump\t// in\n    tag_103:\n        /* \"contracts/authority.sol\":2233:2264  msg.sender == getPresidentAdd() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/authority.sol\":2233:2243  msg.sender */\n      caller\n        /* \"contracts/authority.sol\":2233:2264  msg.sender == getPresidentAdd() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/authority.sol\":2233:2286  msg.sender == getPresidentAdd() && !getPresidentBan() */\n      dup1\n      iszero\n      tag_104\n      jumpi\n      pop\n        /* \"contracts/authority.sol\":2269:2286  getPresidentBan() */\n      tag_105\n        /* \"contracts/authority.sol\":2269:2284  getPresidentBan */\n      tag_54\n        /* \"contracts/authority.sol\":2269:2286  getPresidentBan() */\n      jump\t// in\n    tag_105:\n        /* \"contracts/authority.sol\":2268:2286  !getPresidentBan() */\n      iszero\n        /* \"contracts/authority.sol\":2233:2286  msg.sender == getPresidentAdd() && !getPresidentBan() */\n    tag_104:\n        /* \"contracts/authority.sol\":2225:2310  require(msg.sender == getPresidentAdd() && !getPresidentBan(), \"Access is not valid\") */\n      tag_106\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_107\n      swap1\n      tag_90\n      jump\t// in\n    tag_107:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_106:\n        /* \"contracts/authority.sol\":7511:7540  _setPrimeMinisterBaned(baned) */\n      tag_109\n        /* \"contracts/authority.sol\":7534:7539  baned */\n      dup2\n        /* \"contracts/authority.sol\":7511:7533  _setPrimeMinisterBaned */\n      tag_101\n        /* \"contracts/authority.sol\":7511:7540  _setPrimeMinisterBaned(baned) */\n      jump\t// in\n    tag_109:\n        /* \"contracts/authority.sol\":7441:7548  function setPrimeMinister(bool baned) public onlyPresident {... */\n      pop\n      jump\t// out\n        /* \"contracts/authority.sol\":4813:5199  function transferPresident() public {... */\n    tag_34:\n        /* \"contracts/authority.sol\":4884:4894  msg.sender */\n      caller\n        /* \"contracts/authority.sol\":4864:4894  _pendigPresident == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/authority.sol\":4864:4880  _pendigPresident */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/authority.sol\":4864:4894  _pendigPresident == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/authority.sol\":4860:5191  if (_pendigPresident == msg.sender) {... */\n      tag_111\n      jumpi\n        /* \"contracts/authority.sol\":4918:4934  _pendigPresident */\n      0x02\n      0x00\n        /* \"contracts/authority.sol\":4911:4934  delete _pendigPresident */\n      0x0100\n      exp\n      dup2\n      sload\n      swap1\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      sstore\n        /* \"contracts/authority.sol\":4970:4980  msg.sender */\n      caller\n        /* \"contracts/authority.sol\":4949:4959  _president */\n      0x04\n        /* \"contracts/authority.sol\":4949:4967  _president.roleAdd */\n      0x00\n      add\n      0x00\n        /* \"contracts/authority.sol\":4949:4980  _president.roleAdd = msg.sender */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/authority.sol\":4995:5005  _president */\n      0x04\n        /* \"contracts/authority.sol\":4995:5011  _president.nonce */\n      0x00\n      add\n      0x15\n        /* \"contracts/authority.sol\":4995:5013  _president.nonce++ */\n      dup2\n      dup2\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffff\n      and\n      dup1\n      swap3\n      swap2\n      swap1\n      tag_112\n      swap1\n      tag_113\n      jump\t// in\n    tag_112:\n      swap2\n      swap1\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      pop\n        /* \"contracts/authority.sol\":5028:5053  _setPresidentBaned(false) */\n      tag_114\n        /* \"contracts/authority.sol\":5047:5052  false */\n      0x00\n        /* \"contracts/authority.sol\":5028:5046  _setPresidentBaned */\n      tag_99\n        /* \"contracts/authority.sol\":5028:5053  _setPresidentBaned(false) */\n      jump\t// in\n    tag_114:\n        /* \"contracts/authority.sol\":5123:5133  _president */\n      0x04\n        /* \"contracts/authority.sol\":5123:5139  _president.nonce */\n      0x00\n      add\n      0x15\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffff\n      and\n        /* \"contracts/authority.sol\":5075:5140  TheNewPresidentWasConfirmed(_president.roleAdd, _president.nonce) */\n      0xffffffff\n      and\n        /* \"contracts/authority.sol\":5103:5113  _president */\n      0x04\n        /* \"contracts/authority.sol\":5103:5121  _president.roleAdd */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/authority.sol\":5075:5140  TheNewPresidentWasConfirmed(_president.roleAdd, _president.nonce) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x05ad9b3688012cd825c1bfb941e4f5afb2558af6af3deaddf01dbb5e85abdaf9\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/authority.sol\":4860:5191  if (_pendigPresident == msg.sender) {... */\n      jump(tag_115)\n    tag_111:\n        /* \"contracts/authority.sol\":5167:5191  AccessOnlyForThePendig() */\n      mload(0x40)\n      0x6c4360f000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/authority.sol\":4860:5191  if (_pendigPresident == msg.sender) {... */\n    tag_115:\n        /* \"contracts/authority.sol\":4813:5199  function transferPresident() public {... */\n      jump\t// out\n        /* \"contracts/authority.sol\":5600:6081  function transferPrimeMinister() public {... */\n    tag_36:\n        /* \"contracts/authority.sol\":5680:5690  msg.sender */\n      caller\n        /* \"contracts/authority.sol\":5655:5690  _pendingPrimeMinister == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/authority.sol\":5655:5676  _pendingPrimeMinister */\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/authority.sol\":5655:5690  _pendingPrimeMinister == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/authority.sol\":5651:6073  if (_pendingPrimeMinister == msg.sender) {... */\n      tag_117\n      jumpi\n        /* \"contracts/authority.sol\":5714:5735  _pendingPrimeMinister */\n      0x03\n      0x00\n        /* \"contracts/authority.sol\":5707:5735  delete _pendingPrimeMinister */\n      0x0100\n      exp\n      dup2\n      sload\n      swap1\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      sstore\n        /* \"contracts/authority.sol\":5775:5785  msg.sender */\n      caller\n        /* \"contracts/authority.sol\":5750:5764  _primeMinister */\n      0x05\n        /* \"contracts/authority.sol\":5750:5772  _primeMinister.roleAdd */\n      0x00\n      add\n      0x00\n        /* \"contracts/authority.sol\":5750:5785  _primeMinister.roleAdd = msg.sender */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/authority.sol\":5800:5814  _primeMinister */\n      0x05\n        /* \"contracts/authority.sol\":5800:5820  _primeMinister.nonce */\n      0x00\n      add\n      0x15\n        /* \"contracts/authority.sol\":5800:5822  _primeMinister.nonce++ */\n      dup2\n      dup2\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffff\n      and\n      dup1\n      swap3\n      swap2\n      swap1\n      tag_118\n      swap1\n      tag_113\n      jump\t// in\n    tag_118:\n      swap2\n      swap1\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      pop\n        /* \"contracts/authority.sol\":5841:5855  _primeMinister */\n      0x05\n        /* \"contracts/authority.sol\":5841:5861  _primeMinister.baned */\n      0x00\n      add\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/authority.sol\":5837:5926  if (_primeMinister.baned){... */\n      iszero\n      tag_119\n      jumpi\n        /* \"contracts/authority.sol\":5881:5910  _setPrimeMinisterBaned(false) */\n      tag_120\n        /* \"contracts/authority.sol\":5904:5909  false */\n      0x00\n        /* \"contracts/authority.sol\":5881:5903  _setPrimeMinisterBaned */\n      tag_101\n        /* \"contracts/authority.sol\":5881:5910  _setPrimeMinisterBaned(false) */\n      jump\t// in\n    tag_120:\n        /* \"contracts/authority.sol\":5837:5926  if (_primeMinister.baned){... */\n    tag_119:\n        /* \"contracts/authority.sol\":6001:6015  _primeMinister */\n      0x05\n        /* \"contracts/authority.sol\":6001:6021  _primeMinister.nonce */\n      0x00\n      add\n      0x15\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffff\n      and\n        /* \"contracts/authority.sol\":5945:6022  TheNewPrimeMinisterWasConfirmed(_primeMinister.roleAdd, _primeMinister.nonce) */\n      0xffffffff\n      and\n        /* \"contracts/authority.sol\":5977:5991  _primeMinister */\n      0x05\n        /* \"contracts/authority.sol\":5977:5999  _primeMinister.roleAdd */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/authority.sol\":5945:6022  TheNewPrimeMinisterWasConfirmed(_primeMinister.roleAdd, _primeMinister.nonce) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x11e1b985c07e1bf3fec9bfd0bdb8c4a8e870ba2b26aa89fe50a6a19132ca10fd\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/authority.sol\":5651:6073  if (_pendingPrimeMinister == msg.sender) {... */\n      jump(tag_121)\n    tag_117:\n        /* \"contracts/authority.sol\":6049:6073  AccessOnlyForThePendig() */\n      mload(0x40)\n      0x6c4360f000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/authority.sol\":5651:6073  if (_pendingPrimeMinister == msg.sender) {... */\n    tag_121:\n        /* \"contracts/authority.sol\":5600:6081  function transferPrimeMinister() public {... */\n      jump\t// out\n        /* \"contracts/authority.sol\":2726:3282  function setPendingRepublicAddress(address newRAddress) public onlyRepublic {... */\n    tag_39:\n        /* \"contracts/authority.sol\":1956:1971  block.timestamp */\n      timestamp\n        /* \"contracts/authority.sol\":1936:1953  TimeFirstElection */\n      immutable(\"0x243d3ba375e91e040b8b9e2bbbb1688b2b311eacea842eebda952071560e7854\")\n        /* \"contracts/authority.sol\":1936:1971  TimeFirstElection < block.timestamp */\n      0xffffffffffff\n      and\n      lt\n        /* \"contracts/authority.sol\":1932:2159  if (TimeFirstElection < block.timestamp) {... */\n      iszero\n      tag_123\n      jumpi\n        /* \"contracts/authority.sol\":2010:2030  getRepublicAddress() */\n      tag_124\n        /* \"contracts/authority.sol\":2010:2028  getRepublicAddress */\n      tag_71\n        /* \"contracts/authority.sol\":2010:2030  getRepublicAddress() */\n      jump\t// in\n    tag_124:\n        /* \"contracts/authority.sol\":1996:2030  msg.sender == getRepublicAddress() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/authority.sol\":1996:2006  msg.sender */\n      caller\n        /* \"contracts/authority.sol\":1996:2030  msg.sender == getRepublicAddress() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/authority.sol\":1988:2054  require(msg.sender == getRepublicAddress(), \"Access is not valid\") */\n      tag_125\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_126\n      swap1\n      tag_90\n      jump\t// in\n    tag_126:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_125:\n        /* \"contracts/authority.sol\":1932:2159  if (TimeFirstElection < block.timestamp) {... */\n      jump(tag_127)\n    tag_123:\n        /* \"contracts/authority.sol\":2096:2113  getPresidentAdd() */\n      tag_128\n        /* \"contracts/authority.sol\":2096:2111  getPresidentAdd */\n      tag_51\n        /* \"contracts/authority.sol\":2096:2113  getPresidentAdd() */\n      jump\t// in\n    tag_128:\n        /* \"contracts/authority.sol\":2082:2113  msg.sender == getPresidentAdd() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/authority.sol\":2082:2092  msg.sender */\n      caller\n        /* \"contracts/authority.sol\":2082:2113  msg.sender == getPresidentAdd() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/authority.sol\":2082:2135  msg.sender == getPresidentAdd() && !getPresidentBan() */\n      dup1\n      iszero\n      tag_129\n      jumpi\n      pop\n        /* \"contracts/authority.sol\":2118:2135  getPresidentBan() */\n      tag_130\n        /* \"contracts/authority.sol\":2118:2133  getPresidentBan */\n      tag_54\n        /* \"contracts/authority.sol\":2118:2135  getPresidentBan() */\n      jump\t// in\n    tag_130:\n        /* \"contracts/authority.sol\":2117:2135  !getPresidentBan() */\n      iszero\n        /* \"contracts/authority.sol\":2082:2135  msg.sender == getPresidentAdd() && !getPresidentBan() */\n    tag_129:\n        /* \"contracts/authority.sol\":2074:2159  require(msg.sender == getPresidentAdd() && !getPresidentBan(), \"Access is not valid\") */\n      tag_131\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_132\n      swap1\n      tag_90\n      jump\t// in\n    tag_132:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_131:\n        /* \"contracts/authority.sol\":1932:2159  if (TimeFirstElection < block.timestamp) {... */\n    tag_127:\n        /* \"contracts/authority.sol\":2843:2844  0 */\n      0x00\n        /* \"contracts/authority.sol\":2817:2828  newRAddress */\n      dup2\n        /* \"contracts/authority.sol\":2817:2840  newRAddress.code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"contracts/authority.sol\":2817:2844  newRAddress.code.length > 0 */\n      gt\n        /* \"contracts/authority.sol\":2813:3272  if (newRAddress.code.length > 0) {... */\n      iszero\n      tag_134\n      jumpi\n        /* \"contracts/authority.sol\":2887:2897  msg.sender */\n      caller\n        /* \"contracts/authority.sol\":2865:2897  _president.roleAdd == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/authority.sol\":2865:2875  _president */\n      0x04\n        /* \"contracts/authority.sol\":2865:2883  _president.roleAdd */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/authority.sol\":2865:2897  _president.roleAdd == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/authority.sol\":2861:3202  if (_president.roleAdd == msg.sender) {... */\n      tag_135\n      jumpi\n        /* \"contracts/authority.sol\":2918:2955  _transferRepublicAddress(newRAddress) */\n      tag_136\n        /* \"contracts/authority.sol\":2943:2954  newRAddress */\n      dup2\n        /* \"contracts/authority.sol\":2918:2942  _transferRepublicAddress */\n      tag_137\n        /* \"contracts/authority.sol\":2918:2955  _transferRepublicAddress(newRAddress) */\n      jump\t// in\n    tag_136:\n        /* \"contracts/authority.sol\":2861:3202  if (_president.roleAdd == msg.sender) {... */\n      jump(tag_138)\n    tag_135:\n        /* \"contracts/authority.sol\":3054:3061  15 days */\n      0x13c680\n        /* \"contracts/authority.sol\":3036:3051  block.timestamp */\n      timestamp\n        /* \"contracts/authority.sol\":3036:3061  block.timestamp + 15 days */\n      tag_139\n      swap2\n      swap1\n      tag_140\n      jump\t// in\n    tag_139:\n        /* \"contracts/authority.sol\":2998:3026  _delayConfirmRepublicAddress */\n      0x03\n      0x14\n        /* \"contracts/authority.sol\":2998:3062  _delayConfirmRepublicAddress = uint48(block.timestamp + 15 days) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/authority.sol\":3106:3117  newRAddress */\n      dup1\n        /* \"contracts/authority.sol\":3081:3103  _pendigRepublicAddress */\n      0x00\n      dup1\n        /* \"contracts/authority.sol\":3081:3117  _pendigRepublicAddress = newRAddress */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/authority.sol\":3174:3185  newRAddress */\n      dup1\n        /* \"contracts/authority.sol\":3141:3186  TheNextRepublicAddressWasElected(newRAddress) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x675b770e821ba4aad20be77c58f912d689226272e805637f42f838a6035eed86\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/authority.sol\":2861:3202  if (_president.roleAdd == msg.sender) {... */\n    tag_138:\n        /* \"contracts/authority.sol\":2813:3272  if (newRAddress.code.length > 0) {... */\n      jump(tag_141)\n    tag_134:\n        /* \"contracts/authority.sol\":3260:3271  newRAddress */\n      dup1\n        /* \"contracts/authority.sol\":3228:3272  TheAddressIsNotValidForRAddress(newRAddress) */\n      mload(0x40)\n      0xc632231500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_142\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_142:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/authority.sol\":2813:3272  if (newRAddress.code.length > 0) {... */\n    tag_141:\n        /* \"contracts/authority.sol\":2726:3282  function setPendingRepublicAddress(address newRAddress) public onlyRepublic {... */\n      pop\n      jump\t// out\n        /* \"contracts/authority.sol\":7070:7170  function getGovernance() public view returns (address) {... */\n    tag_41:\n        /* \"contracts/authority.sol\":7116:7123  address */\n      0x00\n        /* \"contracts/authority.sol\":7143:7154  _governance */\n      0x06\n        /* \"contracts/authority.sol\":7143:7162  _governance.roleAdd */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/authority.sol\":7136:7162  return _governance.roleAdd */\n      swap1\n      pop\n        /* \"contracts/authority.sol\":7070:7170  function getGovernance() public view returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/authority.sol\":3928:4302  function cancelPendingRepublicAddress(address PRAdress) public onlyRepublic {... */\n    tag_46:\n        /* \"contracts/authority.sol\":1956:1971  block.timestamp */\n      timestamp\n        /* \"contracts/authority.sol\":1936:1953  TimeFirstElection */\n      immutable(\"0x243d3ba375e91e040b8b9e2bbbb1688b2b311eacea842eebda952071560e7854\")\n        /* \"contracts/authority.sol\":1936:1971  TimeFirstElection < block.timestamp */\n      0xffffffffffff\n      and\n      lt\n        /* \"contracts/authority.sol\":1932:2159  if (TimeFirstElection < block.timestamp) {... */\n      iszero\n      tag_145\n      jumpi\n        /* \"contracts/authority.sol\":2010:2030  getRepublicAddress() */\n      tag_146\n        /* \"contracts/authority.sol\":2010:2028  getRepublicAddress */\n      tag_71\n        /* \"contracts/authority.sol\":2010:2030  getRepublicAddress() */\n      jump\t// in\n    tag_146:\n        /* \"contracts/authority.sol\":1996:2030  msg.sender == getRepublicAddress() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/authority.sol\":1996:2006  msg.sender */\n      caller\n        /* \"contracts/authority.sol\":1996:2030  msg.sender == getRepublicAddress() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/authority.sol\":1988:2054  require(msg.sender == getRepublicAddress(), \"Access is not valid\") */\n      tag_147\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_148\n      swap1\n      tag_90\n      jump\t// in\n    tag_148:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_147:\n        /* \"contracts/authority.sol\":1932:2159  if (TimeFirstElection < block.timestamp) {... */\n      jump(tag_149)\n    tag_145:\n        /* \"contracts/authority.sol\":2096:2113  getPresidentAdd() */\n      tag_150\n        /* \"contracts/authority.sol\":2096:2111  getPresidentAdd */\n      tag_51\n        /* \"contracts/authority.sol\":2096:2113  getPresidentAdd() */\n      jump\t// in\n    tag_150:\n        /* \"contracts/authority.sol\":2082:2113  msg.sender == getPresidentAdd() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/authority.sol\":2082:2092  msg.sender */\n      caller\n        /* \"contracts/authority.sol\":2082:2113  msg.sender == getPresidentAdd() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/authority.sol\":2082:2135  msg.sender == getPresidentAdd() && !getPresidentBan() */\n      dup1\n      iszero\n      tag_151\n      jumpi\n      pop\n        /* \"contracts/authority.sol\":2118:2135  getPresidentBan() */\n      tag_152\n        /* \"contracts/authority.sol\":2118:2133  getPresidentBan */\n      tag_54\n        /* \"contracts/authority.sol\":2118:2135  getPresidentBan() */\n      jump\t// in\n    tag_152:\n        /* \"contracts/authority.sol\":2117:2135  !getPresidentBan() */\n      iszero\n        /* \"contracts/authority.sol\":2082:2135  msg.sender == getPresidentAdd() && !getPresidentBan() */\n    tag_151:\n        /* \"contracts/authority.sol\":2074:2159  require(msg.sender == getPresidentAdd() && !getPresidentBan(), \"Access is not valid\") */\n      tag_153\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_154\n      swap1\n      tag_90\n      jump\t// in\n    tag_154:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_153:\n        /* \"contracts/authority.sol\":1932:2159  if (TimeFirstElection < block.timestamp) {... */\n    tag_149:\n        /* \"contracts/authority.sol\":4045:4053  PRAdress */\n      dup1\n        /* \"contracts/authority.sol\":4019:4053  _pendigRepublicAddress == PRAdress */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/authority.sol\":4019:4041  _pendigRepublicAddress */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/authority.sol\":4019:4053  _pendigRepublicAddress == PRAdress */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/authority.sol\":4015:4294  if (_pendigRepublicAddress == PRAdress) {... */\n      tag_156\n      jumpi\n        /* \"contracts/authority.sol\":4081:4109  _delayConfirmRepublicAddress */\n      0x03\n      0x14\n        /* \"contracts/authority.sol\":4074:4109  delete _delayConfirmRepublicAddress */\n      0x0100\n      exp\n      dup2\n      sload\n      swap1\n      0xffffffffffff\n      mul\n      not\n      and\n      swap1\n      sstore\n        /* \"contracts/authority.sol\":4135:4157  _pendigRepublicAddress */\n      0x00\n      dup1\n        /* \"contracts/authority.sol\":4128:4157  delete _pendigRepublicAddress */\n      0x0100\n      exp\n      dup2\n      sload\n      swap1\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      sstore\n        /* \"contracts/authority.sol\":4217:4225  PRAdress */\n      dup1\n        /* \"contracts/authority.sol\":4182:4226  TheNextRepublicAddressWasCancelled(PRAdress) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xf299f61c7e493f99b20cb36c587ca903d085d5206bfe4452d295711e372da029\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/authority.sol\":4015:4294  if (_pendigRepublicAddress == PRAdress) {... */\n      jump(tag_157)\n    tag_156:\n        /* \"contracts/authority.sol\":4285:4293  PRAdress */\n      dup1\n        /* \"contracts/authority.sol\":4253:4294  TheAddressIsNotValidForRAddress(PRAdress) */\n      mload(0x40)\n      0xc632231500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_158\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_158:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/authority.sol\":4015:4294  if (_pendigRepublicAddress == PRAdress) {... */\n    tag_157:\n        /* \"contracts/authority.sol\":3928:4302  function cancelPendingRepublicAddress(address PRAdress) public onlyRepublic {... */\n      pop\n      jump\t// out\n        /* \"contracts/authority.sol\":5420:5592  function setPendingPrimeMinister(address newPM) public onlyPresident {... */\n    tag_49:\n        /* \"contracts/authority.sol\":2247:2264  getPresidentAdd() */\n      tag_160\n        /* \"contracts/authority.sol\":2247:2262  getPresidentAdd */\n      tag_51\n        /* \"contracts/authority.sol\":2247:2264  getPresidentAdd() */\n      jump\t// in\n    tag_160:\n        /* \"contracts/authority.sol\":2233:2264  msg.sender == getPresidentAdd() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/authority.sol\":2233:2243  msg.sender */\n      caller\n        /* \"contracts/authority.sol\":2233:2264  msg.sender == getPresidentAdd() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/authority.sol\":2233:2286  msg.sender == getPresidentAdd() && !getPresidentBan() */\n      dup1\n      iszero\n      tag_161\n      jumpi\n      pop\n        /* \"contracts/authority.sol\":2269:2286  getPresidentBan() */\n      tag_162\n        /* \"contracts/authority.sol\":2269:2284  getPresidentBan */\n      tag_54\n        /* \"contracts/authority.sol\":2269:2286  getPresidentBan() */\n      jump\t// in\n    tag_162:\n        /* \"contracts/authority.sol\":2268:2286  !getPresidentBan() */\n      iszero\n        /* \"contracts/authority.sol\":2233:2286  msg.sender == getPresidentAdd() && !getPresidentBan() */\n    tag_161:\n        /* \"contracts/authority.sol\":2225:2310  require(msg.sender == getPresidentAdd() && !getPresidentBan(), \"Access is not valid\") */\n      tag_163\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_164\n      swap1\n      tag_90\n      jump\t// in\n    tag_164:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_163:\n        /* \"contracts/authority.sol\":5524:5529  newPM */\n      dup1\n        /* \"contracts/authority.sol\":5500:5521  _pendingPrimeMinister */\n      0x03\n      0x00\n        /* \"contracts/authority.sol\":5500:5529  _pendingPrimeMinister = newPM */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/authority.sol\":5578:5583  newPM */\n      dup1\n        /* \"contracts/authority.sol\":5547:5584  TheNextPrimeMinisterWasElected(newPM) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xff3cad3ee28c342ad5f3d7c8ff8559ee4d21eb48494092b82a1652e443b3420b\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/authority.sol\":5420:5592  function setPendingPrimeMinister(address newPM) public onlyPresident {... */\n      pop\n      jump\t// out\n        /* \"contracts/authority.sol\":5207:5308  function getPresidentAdd() public view returns (address) {... */\n    tag_51:\n        /* \"contracts/authority.sol\":5255:5262  address */\n      0x00\n        /* \"contracts/authority.sol\":5282:5292  _president */\n      0x04\n        /* \"contracts/authority.sol\":5282:5300  _president.roleAdd */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/authority.sol\":5275:5300  return _president.roleAdd */\n      swap1\n      pop\n        /* \"contracts/authority.sol\":5207:5308  function getPresidentAdd() public view returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/authority.sol\":5316:5412  function getPresidentBan() public view returns (bool) {... */\n    tag_54:\n        /* \"contracts/authority.sol\":5364:5368  bool */\n      0x00\n        /* \"contracts/authority.sol\":5388:5398  _president */\n      0x04\n        /* \"contracts/authority.sol\":5388:5404  _president.baned */\n      0x00\n      add\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/authority.sol\":5381:5404  return _president.baned */\n      swap1\n      pop\n        /* \"contracts/authority.sol\":5316:5412  function getPresidentBan() public view returns (bool) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/authority.sol\":3290:3920  function transferRepublicAddress(address RAddress) public onlyRepublic {... */\n    tag_59:\n        /* \"contracts/authority.sol\":1956:1971  block.timestamp */\n      timestamp\n        /* \"contracts/authority.sol\":1936:1953  TimeFirstElection */\n      immutable(\"0x243d3ba375e91e040b8b9e2bbbb1688b2b311eacea842eebda952071560e7854\")\n        /* \"contracts/authority.sol\":1936:1971  TimeFirstElection < block.timestamp */\n      0xffffffffffff\n      and\n      lt\n        /* \"contracts/authority.sol\":1932:2159  if (TimeFirstElection < block.timestamp) {... */\n      iszero\n      tag_169\n      jumpi\n        /* \"contracts/authority.sol\":2010:2030  getRepublicAddress() */\n      tag_170\n        /* \"contracts/authority.sol\":2010:2028  getRepublicAddress */\n      tag_71\n        /* \"contracts/authority.sol\":2010:2030  getRepublicAddress() */\n      jump\t// in\n    tag_170:\n        /* \"contracts/authority.sol\":1996:2030  msg.sender == getRepublicAddress() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/authority.sol\":1996:2006  msg.sender */\n      caller\n        /* \"contracts/authority.sol\":1996:2030  msg.sender == getRepublicAddress() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/authority.sol\":1988:2054  require(msg.sender == getRepublicAddress(), \"Access is not valid\") */\n      tag_171\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_172\n      swap1\n      tag_90\n      jump\t// in\n    tag_172:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_171:\n        /* \"contracts/authority.sol\":1932:2159  if (TimeFirstElection < block.timestamp) {... */\n      jump(tag_173)\n    tag_169:\n        /* \"contracts/authority.sol\":2096:2113  getPresidentAdd() */\n      tag_174\n        /* \"contracts/authority.sol\":2096:2111  getPresidentAdd */\n      tag_51\n        /* \"contracts/authority.sol\":2096:2113  getPresidentAdd() */\n      jump\t// in\n    tag_174:\n        /* \"contracts/authority.sol\":2082:2113  msg.sender == getPresidentAdd() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/authority.sol\":2082:2092  msg.sender */\n      caller\n        /* \"contracts/authority.sol\":2082:2113  msg.sender == getPresidentAdd() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/authority.sol\":2082:2135  msg.sender == getPresidentAdd() && !getPresidentBan() */\n      dup1\n      iszero\n      tag_175\n      jumpi\n      pop\n        /* \"contracts/authority.sol\":2118:2135  getPresidentBan() */\n      tag_176\n        /* \"contracts/authority.sol\":2118:2133  getPresidentBan */\n      tag_54\n        /* \"contracts/authority.sol\":2118:2135  getPresidentBan() */\n      jump\t// in\n    tag_176:\n        /* \"contracts/authority.sol\":2117:2135  !getPresidentBan() */\n      iszero\n        /* \"contracts/authority.sol\":2082:2135  msg.sender == getPresidentAdd() && !getPresidentBan() */\n    tag_175:\n        /* \"contracts/authority.sol\":2074:2159  require(msg.sender == getPresidentAdd() && !getPresidentBan(), \"Access is not valid\") */\n      tag_177\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_178\n      swap1\n      tag_90\n      jump\t// in\n    tag_178:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_177:\n        /* \"contracts/authority.sol\":1932:2159  if (TimeFirstElection < block.timestamp) {... */\n    tag_173:\n        /* \"contracts/authority.sol\":3407:3422  block.timestamp */\n      timestamp\n        /* \"contracts/authority.sol\":3376:3404  _delayConfirmRepublicAddress */\n      0x03\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffff\n      and\n        /* \"contracts/authority.sol\":3376:3422  _delayConfirmRepublicAddress < block.timestamp */\n      0xffffffffffff\n      and\n      lt\n        /* \"contracts/authority.sol\":3372:3912  if (_delayConfirmRepublicAddress < block.timestamp) {... */\n      iszero\n      tag_180\n      jumpi\n        /* \"contracts/authority.sol\":3479:3480  0 */\n      0x00\n        /* \"contracts/authority.sol\":3447:3475  _delayConfirmRepublicAddress */\n      0x03\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffff\n      and\n        /* \"contracts/authority.sol\":3447:3480  _delayConfirmRepublicAddress != 0 */\n      0xffffffffffff\n      and\n      sub\n        /* \"contracts/authority.sol\":3439:3506  require(_delayConfirmRepublicAddress != 0,\"The request is invalid\") */\n      tag_181\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_182\n      swap1\n      tag_183\n      jump\t// in\n    tag_182:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_181:\n        /* \"contracts/authority.sol\":3551:3559  RAddress */\n      dup1\n        /* \"contracts/authority.sol\":3525:3559  _pendigRepublicAddress == RAddress */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/authority.sol\":3525:3547  _pendigRepublicAddress */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/authority.sol\":3525:3559  _pendigRepublicAddress == RAddress */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/authority.sol\":3521:3788  if (_pendigRepublicAddress == RAddress) {... */\n      tag_184\n      jumpi\n        /* \"contracts/authority.sol\":3587:3615  _delayConfirmRepublicAddress */\n      0x03\n      0x14\n        /* \"contracts/authority.sol\":3580:3615  delete _delayConfirmRepublicAddress */\n      0x0100\n      exp\n      dup2\n      sload\n      swap1\n      0xffffffffffff\n      mul\n      not\n      and\n      swap1\n      sstore\n        /* \"contracts/authority.sol\":3641:3663  _pendigRepublicAddress */\n      0x00\n      dup1\n        /* \"contracts/authority.sol\":3634:3663  delete _pendigRepublicAddress */\n      0x0100\n      exp\n      dup2\n      sload\n      swap1\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      sstore\n        /* \"contracts/authority.sol\":3682:3716  _transferRepublicAddress(RAddress) */\n      tag_185\n        /* \"contracts/authority.sol\":3707:3715  RAddress */\n      dup2\n        /* \"contracts/authority.sol\":3682:3706  _transferRepublicAddress */\n      tag_137\n        /* \"contracts/authority.sol\":3682:3716  _transferRepublicAddress(RAddress) */\n      jump\t// in\n    tag_185:\n        /* \"contracts/authority.sol\":3521:3788  if (_pendigRepublicAddress == RAddress) {... */\n      jump(tag_186)\n    tag_184:\n        /* \"contracts/authority.sol\":3779:3787  RAddress */\n      dup1\n        /* \"contracts/authority.sol\":3747:3788  TheAddressIsNotValidForRAddress(RAddress) */\n      mload(0x40)\n      0xc632231500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_187\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_187:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/authority.sol\":3521:3788  if (_pendigRepublicAddress == RAddress) {... */\n    tag_186:\n        /* \"contracts/authority.sol\":3372:3912  if (_delayConfirmRepublicAddress < block.timestamp) {... */\n      jump(tag_188)\n    tag_180:\n        /* \"contracts/authority.sol\":3895:3910  block.timestamp */\n      timestamp\n        /* \"contracts/authority.sol\":3857:3885  _delayConfirmRepublicAddress */\n      0x03\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffff\n      and\n        /* \"contracts/authority.sol\":3857:3911  _delayConfirmRepublicAddress - uint48(block.timestamp) */\n      tag_189\n      swap2\n      swap1\n      tag_190\n      jump\t// in\n    tag_189:\n        /* \"contracts/authority.sol\":3815:3912  RemainingTimeUntilTheConfirmationDeadline(_delayConfirmRepublicAddress - uint48(block.timestamp)) */\n      mload(0x40)\n      0x223a6cbb00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_191\n      swap2\n      swap1\n      tag_192\n      jump\t// in\n    tag_191:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/authority.sol\":3372:3912  if (_delayConfirmRepublicAddress < block.timestamp) {... */\n    tag_188:\n        /* \"contracts/authority.sol\":3290:3920  function transferRepublicAddress(address RAddress) public onlyRepublic {... */\n      pop\n      jump\t// out\n        /* \"contracts/authority.sol\":6089:6198  function getPrimeMinisterAdd() public view returns (address) {... */\n    tag_61:\n        /* \"contracts/authority.sol\":6141:6148  address */\n      0x00\n        /* \"contracts/authority.sol\":6168:6182  _primeMinister */\n      0x05\n        /* \"contracts/authority.sol\":6168:6190  _primeMinister.roleAdd */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/authority.sol\":6161:6190  return _primeMinister.roleAdd */\n      swap1\n      pop\n        /* \"contracts/authority.sol\":6089:6198  function getPrimeMinisterAdd() public view returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/authority.sol\":7290:7433  function setPresidentBaned(bool baned) public onlyRepublic {... */\n    tag_65:\n        /* \"contracts/authority.sol\":1956:1971  block.timestamp */\n      timestamp\n        /* \"contracts/authority.sol\":1936:1953  TimeFirstElection */\n      immutable(\"0x243d3ba375e91e040b8b9e2bbbb1688b2b311eacea842eebda952071560e7854\")\n        /* \"contracts/authority.sol\":1936:1971  TimeFirstElection < block.timestamp */\n      0xffffffffffff\n      and\n      lt\n        /* \"contracts/authority.sol\":1932:2159  if (TimeFirstElection < block.timestamp) {... */\n      iszero\n      tag_195\n      jumpi\n        /* \"contracts/authority.sol\":2010:2030  getRepublicAddress() */\n      tag_196\n        /* \"contracts/authority.sol\":2010:2028  getRepublicAddress */\n      tag_71\n        /* \"contracts/authority.sol\":2010:2030  getRepublicAddress() */\n      jump\t// in\n    tag_196:\n        /* \"contracts/authority.sol\":1996:2030  msg.sender == getRepublicAddress() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/authority.sol\":1996:2006  msg.sender */\n      caller\n        /* \"contracts/authority.sol\":1996:2030  msg.sender == getRepublicAddress() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/authority.sol\":1988:2054  require(msg.sender == getRepublicAddress(), \"Access is not valid\") */\n      tag_197\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_198\n      swap1\n      tag_90\n      jump\t// in\n    tag_198:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_197:\n        /* \"contracts/authority.sol\":1932:2159  if (TimeFirstElection < block.timestamp) {... */\n      jump(tag_199)\n    tag_195:\n        /* \"contracts/authority.sol\":2096:2113  getPresidentAdd() */\n      tag_200\n        /* \"contracts/authority.sol\":2096:2111  getPresidentAdd */\n      tag_51\n        /* \"contracts/authority.sol\":2096:2113  getPresidentAdd() */\n      jump\t// in\n    tag_200:\n        /* \"contracts/authority.sol\":2082:2113  msg.sender == getPresidentAdd() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/authority.sol\":2082:2092  msg.sender */\n      caller\n        /* \"contracts/authority.sol\":2082:2113  msg.sender == getPresidentAdd() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/authority.sol\":2082:2135  msg.sender == getPresidentAdd() && !getPresidentBan() */\n      dup1\n      iszero\n      tag_201\n      jumpi\n      pop\n        /* \"contracts/authority.sol\":2118:2135  getPresidentBan() */\n      tag_202\n        /* \"contracts/authority.sol\":2118:2133  getPresidentBan */\n      tag_54\n        /* \"contracts/authority.sol\":2118:2135  getPresidentBan() */\n      jump\t// in\n    tag_202:\n        /* \"contracts/authority.sol\":2117:2135  !getPresidentBan() */\n      iszero\n        /* \"contracts/authority.sol\":2082:2135  msg.sender == getPresidentAdd() && !getPresidentBan() */\n    tag_201:\n        /* \"contracts/authority.sol\":2074:2159  require(msg.sender == getPresidentAdd() && !getPresidentBan(), \"Access is not valid\") */\n      tag_203\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_204\n      swap1\n      tag_90\n      jump\t// in\n    tag_204:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_203:\n        /* \"contracts/authority.sol\":1932:2159  if (TimeFirstElection < block.timestamp) {... */\n    tag_199:\n        /* \"contracts/authority.sol\":7360:7385  _setPresidentBaned(baned) */\n      tag_206\n        /* \"contracts/authority.sol\":7379:7384  baned */\n      dup2\n        /* \"contracts/authority.sol\":7360:7378  _setPresidentBaned */\n      tag_99\n        /* \"contracts/authority.sol\":7360:7385  _setPresidentBaned(baned) */\n      jump\t// in\n    tag_206:\n        /* \"contracts/authority.sol\":7396:7425  _setPrimeMinisterBaned(baned) */\n      tag_207\n        /* \"contracts/authority.sol\":7419:7424  baned */\n      dup2\n        /* \"contracts/authority.sol\":7396:7418  _setPrimeMinisterBaned */\n      tag_101\n        /* \"contracts/authority.sol\":7396:7425  _setPrimeMinisterBaned(baned) */\n      jump\t// in\n    tag_207:\n        /* \"contracts/authority.sol\":7290:7433  function setPresidentBaned(bool baned) public onlyRepublic {... */\n      pop\n      jump\t// out\n        /* \"contracts/authority.sol\":7178:7282  function getgovernanceVersion() public view returns (uint32) {... */\n    tag_67:\n        /* \"contracts/authority.sol\":7231:7237  uint32 */\n      0x00\n        /* \"contracts/authority.sol\":7257:7268  _governance */\n      0x06\n        /* \"contracts/authority.sol\":7257:7274  _governance.nonce */\n      0x00\n      add\n      0x15\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffff\n      and\n        /* \"contracts/authority.sol\":7250:7274  return _governance.nonce */\n      swap1\n      pop\n        /* \"contracts/authority.sol\":7178:7282  function getgovernanceVersion() public view returns (uint32) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/authority.sol\":4310:4424  function getRepublicAddress() public view returns (address RG) {... */\n    tag_71:\n        /* \"contracts/authority.sol\":4361:4371  address RG */\n      0x00\n        /* \"contracts/authority.sol\":4395:4404  _Republic */\n      0x07\n        /* \"contracts/authority.sol\":4395:4412  _Republic.roleAdd */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/authority.sol\":4388:4412  return _Republic.roleAdd */\n      swap1\n      pop\n        /* \"contracts/authority.sol\":4310:4424  function getRepublicAddress() public view returns (address RG) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/authority.sol\":6320:6635  function setPendingGovernanceContractAddress(address newGCAddress) public onlyRepublic {... */\n    tag_75:\n        /* \"contracts/authority.sol\":1956:1971  block.timestamp */\n      timestamp\n        /* \"contracts/authority.sol\":1936:1953  TimeFirstElection */\n      immutable(\"0x243d3ba375e91e040b8b9e2bbbb1688b2b311eacea842eebda952071560e7854\")\n        /* \"contracts/authority.sol\":1936:1971  TimeFirstElection < block.timestamp */\n      0xffffffffffff\n      and\n      lt\n        /* \"contracts/authority.sol\":1932:2159  if (TimeFirstElection < block.timestamp) {... */\n      iszero\n      tag_211\n      jumpi\n        /* \"contracts/authority.sol\":2010:2030  getRepublicAddress() */\n      tag_212\n        /* \"contracts/authority.sol\":2010:2028  getRepublicAddress */\n      tag_71\n        /* \"contracts/authority.sol\":2010:2030  getRepublicAddress() */\n      jump\t// in\n    tag_212:\n        /* \"contracts/authority.sol\":1996:2030  msg.sender == getRepublicAddress() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/authority.sol\":1996:2006  msg.sender */\n      caller\n        /* \"contracts/authority.sol\":1996:2030  msg.sender == getRepublicAddress() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/authority.sol\":1988:2054  require(msg.sender == getRepublicAddress(), \"Access is not valid\") */\n      tag_213\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_214\n      swap1\n      tag_90\n      jump\t// in\n    tag_214:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_213:\n        /* \"contracts/authority.sol\":1932:2159  if (TimeFirstElection < block.timestamp) {... */\n      jump(tag_215)\n    tag_211:\n        /* \"contracts/authority.sol\":2096:2113  getPresidentAdd() */\n      tag_216\n        /* \"contracts/authority.sol\":2096:2111  getPresidentAdd */\n      tag_51\n        /* \"contracts/authority.sol\":2096:2113  getPresidentAdd() */\n      jump\t// in\n    tag_216:\n        /* \"contracts/authority.sol\":2082:2113  msg.sender == getPresidentAdd() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/authority.sol\":2082:2092  msg.sender */\n      caller\n        /* \"contracts/authority.sol\":2082:2113  msg.sender == getPresidentAdd() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/authority.sol\":2082:2135  msg.sender == getPresidentAdd() && !getPresidentBan() */\n      dup1\n      iszero\n      tag_217\n      jumpi\n      pop\n        /* \"contracts/authority.sol\":2118:2135  getPresidentBan() */\n      tag_218\n        /* \"contracts/authority.sol\":2118:2133  getPresidentBan */\n      tag_54\n        /* \"contracts/authority.sol\":2118:2135  getPresidentBan() */\n      jump\t// in\n    tag_218:\n        /* \"contracts/authority.sol\":2117:2135  !getPresidentBan() */\n      iszero\n        /* \"contracts/authority.sol\":2082:2135  msg.sender == getPresidentAdd() && !getPresidentBan() */\n    tag_217:\n        /* \"contracts/authority.sol\":2074:2159  require(msg.sender == getPresidentAdd() && !getPresidentBan(), \"Access is not valid\") */\n      tag_219\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_220\n      swap1\n      tag_90\n      jump\t// in\n    tag_220:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_219:\n        /* \"contracts/authority.sol\":1932:2159  if (TimeFirstElection < block.timestamp) {... */\n    tag_215:\n        /* \"contracts/authority.sol\":6449:6450  0 */\n      0x00\n        /* \"contracts/authority.sol\":6422:6434  newGCAddress */\n      dup2\n        /* \"contracts/authority.sol\":6422:6446  newGCAddress.code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"contracts/authority.sol\":6422:6450  newGCAddress.code.length > 0 */\n      gt\n        /* \"contracts/authority.sol\":6418:6625  if (newGCAddress.code.length > 0) {... */\n      iszero\n      tag_222\n      jumpi\n        /* \"contracts/authority.sol\":6487:6499  newGCAddress */\n      dup1\n        /* \"contracts/authority.sol\":6467:6484  _pendingGCAddress */\n      0x01\n      0x00\n        /* \"contracts/authority.sol\":6467:6499  _pendingGCAddress = newGCAddress */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/authority.sol\":6546:6558  newGCAddress */\n      dup1\n        /* \"contracts/authority.sol\":6519:6559  TheNextGCAddressWasElected(newGCAddress) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xe8d8e3c7c3ebec0c177d0fe22d223f8b5071db39155104808d45027e368ba77a\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/authority.sol\":6418:6625  if (newGCAddress.code.length > 0) {... */\n      jump(tag_223)\n    tag_222:\n        /* \"contracts/authority.sol\":6612:6624  newGCAddress */\n      dup1\n        /* \"contracts/authority.sol\":6586:6625  TheAddressIsNotValidForGC(newGCAddress) */\n      mload(0x40)\n      0x84dbc6cb00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_224\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_224:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/authority.sol\":6418:6625  if (newGCAddress.code.length > 0) {... */\n    tag_223:\n        /* \"contracts/authority.sol\":6320:6635  function setPendingGovernanceContractAddress(address newGCAddress) public onlyRepublic {... */\n      pop\n      jump\t// out\n        /* \"contracts/authority.sol\":4436:4545  function getAuthorityAddress() public view returns (address) {... */\n    tag_77:\n        /* \"contracts/authority.sol\":4488:4495  address */\n      0x00\n        /* \"contracts/authority.sol\":4528:4532  this */\n      address\n        /* \"contracts/authority.sol\":4512:4533  return  address(this) */\n      swap1\n      pop\n        /* \"contracts/authority.sol\":4436:4545  function getAuthorityAddress() public view returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/authority.sol\":6206:6310  function getPrimeMinisterBan() public view returns (bool) {... */\n    tag_80:\n        /* \"contracts/authority.sol\":6258:6262  bool */\n      0x00\n        /* \"contracts/authority.sol\":6282:6296  _primeMinister */\n      0x05\n        /* \"contracts/authority.sol\":6282:6302  _primeMinister.baned */\n      0x00\n      add\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/authority.sol\":6275:6302  return _primeMinister.baned */\n      swap1\n      pop\n        /* \"contracts/authority.sol\":6206:6310  function getPrimeMinisterBan() public view returns (bool) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/authority.sol\":6643:7062  function transferGovernanceContractAddress(address pendingGCAdd) public onlyPresident {... */\n    tag_84:\n        /* \"contracts/authority.sol\":2247:2264  getPresidentAdd() */\n      tag_228\n        /* \"contracts/authority.sol\":2247:2262  getPresidentAdd */\n      tag_51\n        /* \"contracts/authority.sol\":2247:2264  getPresidentAdd() */\n      jump\t// in\n    tag_228:\n        /* \"contracts/authority.sol\":2233:2264  msg.sender == getPresidentAdd() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/authority.sol\":2233:2243  msg.sender */\n      caller\n        /* \"contracts/authority.sol\":2233:2264  msg.sender == getPresidentAdd() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/authority.sol\":2233:2286  msg.sender == getPresidentAdd() && !getPresidentBan() */\n      dup1\n      iszero\n      tag_229\n      jumpi\n      pop\n        /* \"contracts/authority.sol\":2269:2286  getPresidentBan() */\n      tag_230\n        /* \"contracts/authority.sol\":2269:2284  getPresidentBan */\n      tag_54\n        /* \"contracts/authority.sol\":2269:2286  getPresidentBan() */\n      jump\t// in\n    tag_230:\n        /* \"contracts/authority.sol\":2268:2286  !getPresidentBan() */\n      iszero\n        /* \"contracts/authority.sol\":2233:2286  msg.sender == getPresidentAdd() && !getPresidentBan() */\n    tag_229:\n        /* \"contracts/authority.sol\":2225:2310  require(msg.sender == getPresidentAdd() && !getPresidentBan(), \"Access is not valid\") */\n      tag_231\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_232\n      swap1\n      tag_90\n      jump\t// in\n    tag_232:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_231:\n        /* \"contracts/authority.sol\":6765:6777  pendingGCAdd */\n      dup1\n        /* \"contracts/authority.sol\":6744:6777  _pendingGCAddress == pendingGCAdd */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/authority.sol\":6744:6761  _pendingGCAddress */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/authority.sol\":6744:6777  _pendingGCAddress == pendingGCAdd */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/authority.sol\":6740:7054  if (_pendingGCAddress == pendingGCAdd) {... */\n      tag_234\n      jumpi\n        /* \"contracts/authority.sol\":6801:6818  _pendingGCAddress */\n      0x01\n      0x00\n        /* \"contracts/authority.sol\":6794:6818  delete _pendingGCAddress */\n      0x0100\n      exp\n      dup2\n      sload\n      swap1\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      sstore\n        /* \"contracts/authority.sol\":6855:6867  pendingGCAdd */\n      dup1\n        /* \"contracts/authority.sol\":6833:6844  _governance */\n      0x06\n        /* \"contracts/authority.sol\":6833:6852  _governance.roleAdd */\n      0x00\n      add\n      0x00\n        /* \"contracts/authority.sol\":6833:6867  _governance.roleAdd = pendingGCAdd */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/authority.sol\":6882:6893  _governance */\n      0x06\n        /* \"contracts/authority.sol\":6882:6899  _governance.nonce */\n      0x00\n      add\n      0x15\n        /* \"contracts/authority.sol\":6882:6901  _governance.nonce++ */\n      dup2\n      dup2\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffff\n      and\n      dup1\n      swap3\n      swap2\n      swap1\n      tag_235\n      swap1\n      tag_113\n      jump\t// in\n    tag_235:\n      swap2\n      swap1\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      pop\n        /* \"contracts/authority.sol\":6970:6981  _governance */\n      0x06\n        /* \"contracts/authority.sol\":6970:6987  _governance.nonce */\n      0x00\n      add\n      0x15\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffff\n      and\n        /* \"contracts/authority.sol\":6921:6988  TheNewGCAddressWasConfirmed(_governance.roleAdd, _governance.nonce) */\n      0xffffffff\n      and\n        /* \"contracts/authority.sol\":6949:6960  _governance */\n      0x06\n        /* \"contracts/authority.sol\":6949:6968  _governance.roleAdd */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/authority.sol\":6921:6988  TheNewGCAddressWasConfirmed(_governance.roleAdd, _governance.nonce) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x5e86008a8467d1efccfe6cb6bd49ba7278d6af2745a1e6994e443322a4237093\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/authority.sol\":6740:7054  if (_pendingGCAddress == pendingGCAdd) {... */\n      jump(tag_236)\n    tag_234:\n        /* \"contracts/authority.sol\":7041:7053  pendingGCAdd */\n      dup1\n        /* \"contracts/authority.sol\":7015:7054  TheAddressIsNotValidForGC(pendingGCAdd) */\n      mload(0x40)\n      0x84dbc6cb00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_237\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_237:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/authority.sol\":6740:7054  if (_pendingGCAddress == pendingGCAdd) {... */\n    tag_236:\n        /* \"contracts/authority.sol\":6643:7062  function transferGovernanceContractAddress(address pendingGCAdd) public onlyPresident {... */\n      pop\n      jump\t// out\n        /* \"contracts/authority.sol\":7788:7879  function _setPresidentBaned(bool baned) private {... */\n    tag_99:\n        /* \"contracts/authority.sol\":7866:7871  baned */\n      dup1\n        /* \"contracts/authority.sol\":7847:7857  _president */\n      0x04\n        /* \"contracts/authority.sol\":7847:7863  _president.baned */\n      0x00\n      add\n      0x14\n        /* \"contracts/authority.sol\":7847:7871  _president.baned = baned */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/authority.sol\":7788:7879  function _setPresidentBaned(bool baned) private {... */\n      pop\n      jump\t// out\n        /* \"contracts/authority.sol\":7887:7986  function _setPrimeMinisterBaned(bool baned) private {... */\n    tag_101:\n        /* \"contracts/authority.sol\":7973:7978  baned */\n      dup1\n        /* \"contracts/authority.sol\":7950:7964  _primeMinister */\n      0x05\n        /* \"contracts/authority.sol\":7950:7970  _primeMinister.baned */\n      0x00\n      add\n      0x14\n        /* \"contracts/authority.sol\":7950:7978  _primeMinister.baned = baned */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/authority.sol\":7887:7986  function _setPrimeMinisterBaned(bool baned) private {... */\n      pop\n      jump\t// out\n        /* \"contracts/authority.sol\":7560:7780  function _transferRepublicAddress(address RAddress) private {... */\n    tag_137:\n        /* \"contracts/authority.sol\":7651:7659  RAddress */\n      dup1\n        /* \"contracts/authority.sol\":7631:7640  _Republic */\n      0x07\n        /* \"contracts/authority.sol\":7631:7648  _Republic.roleAdd */\n      0x00\n      add\n      0x00\n        /* \"contracts/authority.sol\":7631:7659  _Republic.roleAdd = RAddress */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/authority.sol\":7670:7679  _Republic */\n      0x07\n        /* \"contracts/authority.sol\":7670:7685  _Republic.nonce */\n      0x00\n      add\n      0x15\n        /* \"contracts/authority.sol\":7670:7687  _Republic.nonce++ */\n      dup2\n      dup2\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffff\n      and\n      dup1\n      swap3\n      swap2\n      swap1\n      tag_241\n      swap1\n      tag_113\n      jump\t// in\n    tag_241:\n      swap2\n      swap1\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      pop\n        /* \"contracts/authority.sol\":7756:7765  _Republic */\n      0x07\n        /* \"contracts/authority.sol\":7756:7771  _Republic.nonce */\n      0x00\n      add\n      0x15\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffff\n      and\n        /* \"contracts/authority.sol\":7703:7772  TheNewRepublicAddressWasConfirmed(_Republic.roleAdd, _Republic.nonce) */\n      0xffffffff\n      and\n        /* \"contracts/authority.sol\":7737:7746  _Republic */\n      0x07\n        /* \"contracts/authority.sol\":7737:7754  _Republic.roleAdd */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/authority.sol\":7703:7772  TheNewRepublicAddressWasConfirmed(_Republic.roleAdd, _Republic.nonce) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xf7f7c26682668c39fd8c6dbca125bd9466e743b9e38acc3240867c139cd93c30\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/authority.sol\":7560:7780  function _transferRepublicAddress(address RAddress) private {... */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_243:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:460   */\n    tag_245:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":411:453   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":404:409   */\n      dup3\n        /* \"#utility.yul\":400:454   */\n      and\n        /* \"#utility.yul\":389:454   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:460   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":466:562   */\n    tag_246:\n        /* \"#utility.yul\":503:510   */\n      0x00\n        /* \"#utility.yul\":532:556   */\n      tag_271\n        /* \"#utility.yul\":550:555   */\n      dup3\n        /* \"#utility.yul\":532:556   */\n      tag_245\n      jump\t// in\n    tag_271:\n        /* \"#utility.yul\":521:556   */\n      swap1\n      pop\n        /* \"#utility.yul\":466:562   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":568:690   */\n    tag_247:\n        /* \"#utility.yul\":641:665   */\n      tag_273\n        /* \"#utility.yul\":659:664   */\n      dup2\n        /* \"#utility.yul\":641:665   */\n      tag_246\n      jump\t// in\n    tag_273:\n        /* \"#utility.yul\":634:639   */\n      dup2\n        /* \"#utility.yul\":631:666   */\n      eq\n        /* \"#utility.yul\":621:684   */\n      tag_274\n      jumpi\n        /* \"#utility.yul\":680:681   */\n      0x00\n        /* \"#utility.yul\":677:678   */\n      dup1\n        /* \"#utility.yul\":670:682   */\n      revert\n        /* \"#utility.yul\":621:684   */\n    tag_274:\n        /* \"#utility.yul\":568:690   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":696:835   */\n    tag_248:\n        /* \"#utility.yul\":742:747   */\n      0x00\n        /* \"#utility.yul\":780:786   */\n      dup2\n        /* \"#utility.yul\":767:787   */\n      calldataload\n        /* \"#utility.yul\":758:787   */\n      swap1\n      pop\n        /* \"#utility.yul\":796:829   */\n      tag_276\n        /* \"#utility.yul\":823:828   */\n      dup2\n        /* \"#utility.yul\":796:829   */\n      tag_247\n      jump\t// in\n    tag_276:\n        /* \"#utility.yul\":696:835   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":841:1170   */\n    tag_27:\n        /* \"#utility.yul\":900:906   */\n      0x00\n        /* \"#utility.yul\":949:951   */\n      0x20\n        /* \"#utility.yul\":937:946   */\n      dup3\n        /* \"#utility.yul\":928:935   */\n      dup5\n        /* \"#utility.yul\":924:947   */\n      sub\n        /* \"#utility.yul\":920:952   */\n      slt\n        /* \"#utility.yul\":917:1036   */\n      iszero\n      tag_278\n      jumpi\n        /* \"#utility.yul\":955:1034   */\n      tag_279\n      tag_243\n      jump\t// in\n    tag_279:\n        /* \"#utility.yul\":917:1036   */\n    tag_278:\n        /* \"#utility.yul\":1075:1076   */\n      0x00\n        /* \"#utility.yul\":1100:1153   */\n      tag_280\n        /* \"#utility.yul\":1145:1152   */\n      dup5\n        /* \"#utility.yul\":1136:1142   */\n      dup3\n        /* \"#utility.yul\":1125:1134   */\n      dup6\n        /* \"#utility.yul\":1121:1143   */\n      add\n        /* \"#utility.yul\":1100:1153   */\n      tag_248\n      jump\t// in\n    tag_280:\n        /* \"#utility.yul\":1090:1153   */\n      swap2\n      pop\n        /* \"#utility.yul\":1046:1163   */\n      pop\n        /* \"#utility.yul\":841:1170   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1176:1266   */\n    tag_249:\n        /* \"#utility.yul\":1210:1217   */\n      0x00\n        /* \"#utility.yul\":1253:1258   */\n      dup2\n        /* \"#utility.yul\":1246:1259   */\n      iszero\n        /* \"#utility.yul\":1239:1260   */\n      iszero\n        /* \"#utility.yul\":1228:1260   */\n      swap1\n      pop\n        /* \"#utility.yul\":1176:1266   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1272:1388   */\n    tag_250:\n        /* \"#utility.yul\":1342:1363   */\n      tag_283\n        /* \"#utility.yul\":1357:1362   */\n      dup2\n        /* \"#utility.yul\":1342:1363   */\n      tag_249\n      jump\t// in\n    tag_283:\n        /* \"#utility.yul\":1335:1340   */\n      dup2\n        /* \"#utility.yul\":1332:1364   */\n      eq\n        /* \"#utility.yul\":1322:1382   */\n      tag_284\n      jumpi\n        /* \"#utility.yul\":1378:1379   */\n      0x00\n        /* \"#utility.yul\":1375:1376   */\n      dup1\n        /* \"#utility.yul\":1368:1380   */\n      revert\n        /* \"#utility.yul\":1322:1382   */\n    tag_284:\n        /* \"#utility.yul\":1272:1388   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1394:1527   */\n    tag_251:\n        /* \"#utility.yul\":1437:1442   */\n      0x00\n        /* \"#utility.yul\":1475:1481   */\n      dup2\n        /* \"#utility.yul\":1462:1482   */\n      calldataload\n        /* \"#utility.yul\":1453:1482   */\n      swap1\n      pop\n        /* \"#utility.yul\":1491:1521   */\n      tag_286\n        /* \"#utility.yul\":1515:1520   */\n      dup2\n        /* \"#utility.yul\":1491:1521   */\n      tag_250\n      jump\t// in\n    tag_286:\n        /* \"#utility.yul\":1394:1527   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1533:1856   */\n    tag_31:\n        /* \"#utility.yul\":1589:1595   */\n      0x00\n        /* \"#utility.yul\":1638:1640   */\n      0x20\n        /* \"#utility.yul\":1626:1635   */\n      dup3\n        /* \"#utility.yul\":1617:1624   */\n      dup5\n        /* \"#utility.yul\":1613:1636   */\n      sub\n        /* \"#utility.yul\":1609:1641   */\n      slt\n        /* \"#utility.yul\":1606:1725   */\n      iszero\n      tag_288\n      jumpi\n        /* \"#utility.yul\":1644:1723   */\n      tag_289\n      tag_243\n      jump\t// in\n    tag_289:\n        /* \"#utility.yul\":1606:1725   */\n    tag_288:\n        /* \"#utility.yul\":1764:1765   */\n      0x00\n        /* \"#utility.yul\":1789:1839   */\n      tag_290\n        /* \"#utility.yul\":1831:1838   */\n      dup5\n        /* \"#utility.yul\":1822:1828   */\n      dup3\n        /* \"#utility.yul\":1811:1820   */\n      dup6\n        /* \"#utility.yul\":1807:1829   */\n      add\n        /* \"#utility.yul\":1789:1839   */\n      tag_251\n      jump\t// in\n    tag_290:\n        /* \"#utility.yul\":1779:1839   */\n      swap2\n      pop\n        /* \"#utility.yul\":1735:1849   */\n      pop\n        /* \"#utility.yul\":1533:1856   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1862:1980   */\n    tag_252:\n        /* \"#utility.yul\":1949:1973   */\n      tag_292\n        /* \"#utility.yul\":1967:1972   */\n      dup2\n        /* \"#utility.yul\":1949:1973   */\n      tag_246\n      jump\t// in\n    tag_292:\n        /* \"#utility.yul\":1944:1947   */\n      dup3\n        /* \"#utility.yul\":1937:1974   */\n      mstore\n        /* \"#utility.yul\":1862:1980   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1986:2208   */\n    tag_43:\n        /* \"#utility.yul\":2079:2083   */\n      0x00\n        /* \"#utility.yul\":2117:2119   */\n      0x20\n        /* \"#utility.yul\":2106:2115   */\n      dup3\n        /* \"#utility.yul\":2102:2120   */\n      add\n        /* \"#utility.yul\":2094:2120   */\n      swap1\n      pop\n        /* \"#utility.yul\":2130:2201   */\n      tag_294\n        /* \"#utility.yul\":2198:2199   */\n      0x00\n        /* \"#utility.yul\":2187:2196   */\n      dup4\n        /* \"#utility.yul\":2183:2200   */\n      add\n        /* \"#utility.yul\":2174:2180   */\n      dup5\n        /* \"#utility.yul\":2130:2201   */\n      tag_252\n      jump\t// in\n    tag_294:\n        /* \"#utility.yul\":1986:2208   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2214:2323   */\n    tag_253:\n        /* \"#utility.yul\":2295:2316   */\n      tag_296\n        /* \"#utility.yul\":2310:2315   */\n      dup2\n        /* \"#utility.yul\":2295:2316   */\n      tag_249\n      jump\t// in\n    tag_296:\n        /* \"#utility.yul\":2290:2293   */\n      dup3\n        /* \"#utility.yul\":2283:2317   */\n      mstore\n        /* \"#utility.yul\":2214:2323   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2329:2539   */\n    tag_56:\n        /* \"#utility.yul\":2416:2420   */\n      0x00\n        /* \"#utility.yul\":2454:2456   */\n      0x20\n        /* \"#utility.yul\":2443:2452   */\n      dup3\n        /* \"#utility.yul\":2439:2457   */\n      add\n        /* \"#utility.yul\":2431:2457   */\n      swap1\n      pop\n        /* \"#utility.yul\":2467:2532   */\n      tag_298\n        /* \"#utility.yul\":2529:2530   */\n      0x00\n        /* \"#utility.yul\":2518:2527   */\n      dup4\n        /* \"#utility.yul\":2514:2531   */\n      add\n        /* \"#utility.yul\":2505:2511   */\n      dup5\n        /* \"#utility.yul\":2467:2532   */\n      tag_253\n      jump\t// in\n    tag_298:\n        /* \"#utility.yul\":2329:2539   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2545:2638   */\n    tag_254:\n        /* \"#utility.yul\":2581:2588   */\n      0x00\n        /* \"#utility.yul\":2621:2631   */\n      0xffffffff\n        /* \"#utility.yul\":2614:2619   */\n      dup3\n        /* \"#utility.yul\":2610:2632   */\n      and\n        /* \"#utility.yul\":2599:2632   */\n      swap1\n      pop\n        /* \"#utility.yul\":2545:2638   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2644:2759   */\n    tag_255:\n        /* \"#utility.yul\":2729:2752   */\n      tag_301\n        /* \"#utility.yul\":2746:2751   */\n      dup2\n        /* \"#utility.yul\":2729:2752   */\n      tag_254\n      jump\t// in\n    tag_301:\n        /* \"#utility.yul\":2724:2727   */\n      dup3\n        /* \"#utility.yul\":2717:2753   */\n      mstore\n        /* \"#utility.yul\":2644:2759   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2765:2983   */\n    tag_69:\n        /* \"#utility.yul\":2856:2860   */\n      0x00\n        /* \"#utility.yul\":2894:2896   */\n      0x20\n        /* \"#utility.yul\":2883:2892   */\n      dup3\n        /* \"#utility.yul\":2879:2897   */\n      add\n        /* \"#utility.yul\":2871:2897   */\n      swap1\n      pop\n        /* \"#utility.yul\":2907:2976   */\n      tag_303\n        /* \"#utility.yul\":2973:2974   */\n      0x00\n        /* \"#utility.yul\":2962:2971   */\n      dup4\n        /* \"#utility.yul\":2958:2975   */\n      add\n        /* \"#utility.yul\":2949:2955   */\n      dup5\n        /* \"#utility.yul\":2907:2976   */\n      tag_255\n      jump\t// in\n    tag_303:\n        /* \"#utility.yul\":2765:2983   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2989:3158   */\n    tag_256:\n        /* \"#utility.yul\":3073:3084   */\n      0x00\n        /* \"#utility.yul\":3107:3113   */\n      dup3\n        /* \"#utility.yul\":3102:3105   */\n      dup3\n        /* \"#utility.yul\":3095:3114   */\n      mstore\n        /* \"#utility.yul\":3147:3151   */\n      0x20\n        /* \"#utility.yul\":3142:3145   */\n      dup3\n        /* \"#utility.yul\":3138:3152   */\n      add\n        /* \"#utility.yul\":3123:3152   */\n      swap1\n      pop\n        /* \"#utility.yul\":2989:3158   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3164:3333   */\n    tag_257:\n        /* \"#utility.yul\":3304:3325   */\n      0x416363657373206973206e6f742076616c696400000000000000000000000000\n        /* \"#utility.yul\":3300:3301   */\n      0x00\n        /* \"#utility.yul\":3292:3298   */\n      dup3\n        /* \"#utility.yul\":3288:3302   */\n      add\n        /* \"#utility.yul\":3281:3326   */\n      mstore\n        /* \"#utility.yul\":3164:3333   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3339:3705   */\n    tag_258:\n        /* \"#utility.yul\":3481:3484   */\n      0x00\n        /* \"#utility.yul\":3502:3569   */\n      tag_307\n        /* \"#utility.yul\":3566:3568   */\n      0x13\n        /* \"#utility.yul\":3561:3564   */\n      dup4\n        /* \"#utility.yul\":3502:3569   */\n      tag_256\n      jump\t// in\n    tag_307:\n        /* \"#utility.yul\":3495:3569   */\n      swap2\n      pop\n        /* \"#utility.yul\":3578:3671   */\n      tag_308\n        /* \"#utility.yul\":3667:3670   */\n      dup3\n        /* \"#utility.yul\":3578:3671   */\n      tag_257\n      jump\t// in\n    tag_308:\n        /* \"#utility.yul\":3696:3698   */\n      0x20\n        /* \"#utility.yul\":3691:3694   */\n      dup3\n        /* \"#utility.yul\":3687:3699   */\n      add\n        /* \"#utility.yul\":3680:3699   */\n      swap1\n      pop\n        /* \"#utility.yul\":3339:3705   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3711:4130   */\n    tag_90:\n        /* \"#utility.yul\":3877:3881   */\n      0x00\n        /* \"#utility.yul\":3915:3917   */\n      0x20\n        /* \"#utility.yul\":3904:3913   */\n      dup3\n        /* \"#utility.yul\":3900:3918   */\n      add\n        /* \"#utility.yul\":3892:3918   */\n      swap1\n      pop\n        /* \"#utility.yul\":3964:3973   */\n      dup2\n        /* \"#utility.yul\":3958:3962   */\n      dup2\n        /* \"#utility.yul\":3954:3974   */\n      sub\n        /* \"#utility.yul\":3950:3951   */\n      0x00\n        /* \"#utility.yul\":3939:3948   */\n      dup4\n        /* \"#utility.yul\":3935:3952   */\n      add\n        /* \"#utility.yul\":3928:3975   */\n      mstore\n        /* \"#utility.yul\":3992:4123   */\n      tag_310\n        /* \"#utility.yul\":4118:4122   */\n      dup2\n        /* \"#utility.yul\":3992:4123   */\n      tag_258\n      jump\t// in\n    tag_310:\n        /* \"#utility.yul\":3984:4123   */\n      swap1\n      pop\n        /* \"#utility.yul\":3711:4130   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4136:4316   */\n    tag_259:\n        /* \"#utility.yul\":4184:4261   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":4181:4182   */\n      0x00\n        /* \"#utility.yul\":4174:4262   */\n      mstore\n        /* \"#utility.yul\":4281:4285   */\n      0x11\n        /* \"#utility.yul\":4278:4279   */\n      0x04\n        /* \"#utility.yul\":4271:4286   */\n      mstore\n        /* \"#utility.yul\":4305:4309   */\n      0x24\n        /* \"#utility.yul\":4302:4303   */\n      0x00\n        /* \"#utility.yul\":4295:4310   */\n      revert\n        /* \"#utility.yul\":4322:4497   */\n    tag_113:\n        /* \"#utility.yul\":4360:4363   */\n      0x00\n        /* \"#utility.yul\":4383:4406   */\n      tag_313\n        /* \"#utility.yul\":4400:4405   */\n      dup3\n        /* \"#utility.yul\":4383:4406   */\n      tag_254\n      jump\t// in\n    tag_313:\n        /* \"#utility.yul\":4374:4406   */\n      swap2\n      pop\n        /* \"#utility.yul\":4428:4438   */\n      0xffffffff\n        /* \"#utility.yul\":4421:4426   */\n      dup3\n        /* \"#utility.yul\":4418:4439   */\n      sub\n        /* \"#utility.yul\":4415:4462   */\n      tag_314\n      jumpi\n        /* \"#utility.yul\":4442:4460   */\n      tag_315\n      tag_259\n      jump\t// in\n    tag_315:\n        /* \"#utility.yul\":4415:4462   */\n    tag_314:\n        /* \"#utility.yul\":4489:4490   */\n      0x01\n        /* \"#utility.yul\":4482:4487   */\n      dup3\n        /* \"#utility.yul\":4478:4491   */\n      add\n        /* \"#utility.yul\":4471:4491   */\n      swap1\n      pop\n        /* \"#utility.yul\":4322:4497   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4503:4580   */\n    tag_260:\n        /* \"#utility.yul\":4540:4547   */\n      0x00\n        /* \"#utility.yul\":4569:4574   */\n      dup2\n        /* \"#utility.yul\":4558:4574   */\n      swap1\n      pop\n        /* \"#utility.yul\":4503:4580   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4586:4777   */\n    tag_140:\n        /* \"#utility.yul\":4626:4629   */\n      0x00\n        /* \"#utility.yul\":4645:4665   */\n      tag_318\n        /* \"#utility.yul\":4663:4664   */\n      dup3\n        /* \"#utility.yul\":4645:4665   */\n      tag_260\n      jump\t// in\n    tag_318:\n        /* \"#utility.yul\":4640:4665   */\n      swap2\n      pop\n        /* \"#utility.yul\":4679:4699   */\n      tag_319\n        /* \"#utility.yul\":4697:4698   */\n      dup4\n        /* \"#utility.yul\":4679:4699   */\n      tag_260\n      jump\t// in\n    tag_319:\n        /* \"#utility.yul\":4674:4699   */\n      swap3\n      pop\n        /* \"#utility.yul\":4722:4723   */\n      dup3\n        /* \"#utility.yul\":4719:4720   */\n      dup3\n        /* \"#utility.yul\":4715:4724   */\n      add\n        /* \"#utility.yul\":4708:4724   */\n      swap1\n      pop\n        /* \"#utility.yul\":4743:4746   */\n      dup1\n        /* \"#utility.yul\":4740:4741   */\n      dup3\n        /* \"#utility.yul\":4737:4747   */\n      gt\n        /* \"#utility.yul\":4734:4770   */\n      iszero\n      tag_320\n      jumpi\n        /* \"#utility.yul\":4750:4768   */\n      tag_321\n      tag_259\n      jump\t// in\n    tag_321:\n        /* \"#utility.yul\":4734:4770   */\n    tag_320:\n        /* \"#utility.yul\":4586:4777   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4783:4955   */\n    tag_261:\n        /* \"#utility.yul\":4923:4947   */\n      0x546865207265717565737420697320696e76616c696400000000000000000000\n        /* \"#utility.yul\":4919:4920   */\n      0x00\n        /* \"#utility.yul\":4911:4917   */\n      dup3\n        /* \"#utility.yul\":4907:4921   */\n      add\n        /* \"#utility.yul\":4900:4948   */\n      mstore\n        /* \"#utility.yul\":4783:4955   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4961:5327   */\n    tag_262:\n        /* \"#utility.yul\":5103:5106   */\n      0x00\n        /* \"#utility.yul\":5124:5191   */\n      tag_324\n        /* \"#utility.yul\":5188:5190   */\n      0x16\n        /* \"#utility.yul\":5183:5186   */\n      dup4\n        /* \"#utility.yul\":5124:5191   */\n      tag_256\n      jump\t// in\n    tag_324:\n        /* \"#utility.yul\":5117:5191   */\n      swap2\n      pop\n        /* \"#utility.yul\":5200:5293   */\n      tag_325\n        /* \"#utility.yul\":5289:5292   */\n      dup3\n        /* \"#utility.yul\":5200:5293   */\n      tag_261\n      jump\t// in\n    tag_325:\n        /* \"#utility.yul\":5318:5320   */\n      0x20\n        /* \"#utility.yul\":5313:5316   */\n      dup3\n        /* \"#utility.yul\":5309:5321   */\n      add\n        /* \"#utility.yul\":5302:5321   */\n      swap1\n      pop\n        /* \"#utility.yul\":4961:5327   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5333:5752   */\n    tag_183:\n        /* \"#utility.yul\":5499:5503   */\n      0x00\n        /* \"#utility.yul\":5537:5539   */\n      0x20\n        /* \"#utility.yul\":5526:5535   */\n      dup3\n        /* \"#utility.yul\":5522:5540   */\n      add\n        /* \"#utility.yul\":5514:5540   */\n      swap1\n      pop\n        /* \"#utility.yul\":5586:5595   */\n      dup2\n        /* \"#utility.yul\":5580:5584   */\n      dup2\n        /* \"#utility.yul\":5576:5596   */\n      sub\n        /* \"#utility.yul\":5572:5573   */\n      0x00\n        /* \"#utility.yul\":5561:5570   */\n      dup4\n        /* \"#utility.yul\":5557:5574   */\n      add\n        /* \"#utility.yul\":5550:5597   */\n      mstore\n        /* \"#utility.yul\":5614:5745   */\n      tag_327\n        /* \"#utility.yul\":5740:5744   */\n      dup2\n        /* \"#utility.yul\":5614:5745   */\n      tag_262\n      jump\t// in\n    tag_327:\n        /* \"#utility.yul\":5606:5745   */\n      swap1\n      pop\n        /* \"#utility.yul\":5333:5752   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5758:5855   */\n    tag_263:\n        /* \"#utility.yul\":5794:5801   */\n      0x00\n        /* \"#utility.yul\":5834:5848   */\n      0xffffffffffff\n        /* \"#utility.yul\":5827:5832   */\n      dup3\n        /* \"#utility.yul\":5823:5849   */\n      and\n        /* \"#utility.yul\":5812:5849   */\n      swap1\n      pop\n        /* \"#utility.yul\":5758:5855   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5861:6065   */\n    tag_190:\n        /* \"#utility.yul\":5900:5904   */\n      0x00\n        /* \"#utility.yul\":5920:5939   */\n      tag_330\n        /* \"#utility.yul\":5937:5938   */\n      dup3\n        /* \"#utility.yul\":5920:5939   */\n      tag_263\n      jump\t// in\n    tag_330:\n        /* \"#utility.yul\":5915:5939   */\n      swap2\n      pop\n        /* \"#utility.yul\":5953:5972   */\n      tag_331\n        /* \"#utility.yul\":5970:5971   */\n      dup4\n        /* \"#utility.yul\":5953:5972   */\n      tag_263\n      jump\t// in\n    tag_331:\n        /* \"#utility.yul\":5948:5972   */\n      swap3\n      pop\n        /* \"#utility.yul\":5996:5997   */\n      dup3\n        /* \"#utility.yul\":5993:5994   */\n      dup3\n        /* \"#utility.yul\":5989:5998   */\n      sub\n        /* \"#utility.yul\":5981:5998   */\n      swap1\n      pop\n        /* \"#utility.yul\":6020:6034   */\n      0xffffffffffff\n        /* \"#utility.yul\":6014:6018   */\n      dup2\n        /* \"#utility.yul\":6011:6035   */\n      gt\n        /* \"#utility.yul\":6008:6058   */\n      iszero\n      tag_332\n      jumpi\n        /* \"#utility.yul\":6038:6056   */\n      tag_333\n      tag_259\n      jump\t// in\n    tag_333:\n        /* \"#utility.yul\":6008:6058   */\n    tag_332:\n        /* \"#utility.yul\":5861:6065   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6071:6186   */\n    tag_264:\n        /* \"#utility.yul\":6156:6179   */\n      tag_335\n        /* \"#utility.yul\":6173:6178   */\n      dup2\n        /* \"#utility.yul\":6156:6179   */\n      tag_263\n      jump\t// in\n    tag_335:\n        /* \"#utility.yul\":6151:6154   */\n      dup3\n        /* \"#utility.yul\":6144:6180   */\n      mstore\n        /* \"#utility.yul\":6071:6186   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6192:6410   */\n    tag_192:\n        /* \"#utility.yul\":6283:6287   */\n      0x00\n        /* \"#utility.yul\":6321:6323   */\n      0x20\n        /* \"#utility.yul\":6310:6319   */\n      dup3\n        /* \"#utility.yul\":6306:6324   */\n      add\n        /* \"#utility.yul\":6298:6324   */\n      swap1\n      pop\n        /* \"#utility.yul\":6334:6403   */\n      tag_337\n        /* \"#utility.yul\":6400:6401   */\n      0x00\n        /* \"#utility.yul\":6389:6398   */\n      dup4\n        /* \"#utility.yul\":6385:6402   */\n      add\n        /* \"#utility.yul\":6376:6382   */\n      dup5\n        /* \"#utility.yul\":6334:6403   */\n      tag_264\n      jump\t// in\n    tag_337:\n        /* \"#utility.yul\":6192:6410   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212201f6285684bbf7870012b46d7bb1f2de30f79d1140eaea32964386850b9eca37264736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_3292": {
									"entryPoint": null,
									"id": 3292,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"checked_add_t_uint256": {
									"entryPoint": 253,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 199,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint32": {
									"entryPoint": 311,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"increment_t_uint32": {
									"entryPoint": 326,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 208,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:750:5",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "52:32:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "62:16:5",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "73:5:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "34:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "44:7:5",
														"type": ""
													}
												],
												"src": "7:77:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "118:152:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "135:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "138:77:5",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "128:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "128:88:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "128:88:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "232:1:5",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "235:4:5",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "225:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "225:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "225:15:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "256:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "259:4:5",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "249:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "249:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "249:15:5"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "90:180:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "320:147:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "330:25:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "353:1:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "335:17:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "335:20:5"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "330:1:5"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "364:25:5",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "387:1:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "369:17:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "369:20:5"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "364:1:5"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "398:16:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "409:1:5"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "412:1:5"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "405:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "405:9:5"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "398:3:5"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "438:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "440:16:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "440:18:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "440:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "430:1:5"
																	},
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "433:3:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "427:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "427:10:5"
															},
															"nodeType": "YulIf",
															"src": "424:36:5"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "307:1:5",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "310:1:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "316:3:5",
														"type": ""
													}
												],
												"src": "276:191:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "517:49:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "527:33:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "542:5:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "549:10:5",
																		"type": "",
																		"value": "0xffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "538:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "538:22:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "527:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "499:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "509:7:5",
														"type": ""
													}
												],
												"src": "473:93:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "614:133:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "624:32:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "650:5:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint32",
																	"nodeType": "YulIdentifier",
																	"src": "633:16:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "633:23:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "624:5:5"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "690:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "692:16:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "692:18:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "692:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "671:5:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "678:10:5",
																		"type": "",
																		"value": "0xffffffff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "668:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "668:21:5"
															},
															"nodeType": "YulIf",
															"src": "665:47:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "721:20:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "732:5:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "739:1:5",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "728:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "728:13:5"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "721:3:5"
																}
															]
														}
													]
												},
												"name": "increment_t_uint32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "600:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "610:3:5",
														"type": ""
													}
												],
												"src": "572:175:5"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function cleanup_t_uint32(value) -> cleaned {\n        cleaned := and(value, 0xffffffff)\n    }\n\n    function increment_t_uint32(value) -> ret {\n        value := cleanup_t_uint32(value)\n        if eq(value, 0xffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n}\n",
									"id": 5,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60a060405234801562000010575f80fd5b506316a8c80042620000239190620000fd565b65ffffffffffff1660808165ffffffffffff16815250503360045f015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060045f01601581819054906101000a900463ffffffff1680929190620000a29062000146565b91906101000a81548163ffffffff021916908363ffffffff1602179055505062000176565b5f819050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6200010982620000c7565b91506200011683620000c7565b9250828201905080821115620001315762000130620000d0565b5b92915050565b5f63ffffffff82169050919050565b5f620001528262000137565b915063ffffffff82036200016b576200016a620000d0565b5b600182019050919050565b608051611d7a620001b25f395f81816103260152818161091b01528181610bf401528181610f870152818161129f015261142a0152611d7a5ff3fe608060405234801561000f575f80fd5b506004361061011f575f3560e01c80636cf106d7116100ab578063c5a1c5c11161006f578063c5a1c5c114610291578063ca4cce68146102af578063e47a9d46146102cb578063e4f3e947146102e9578063ee7126c3146103075761011f565b80636cf106d7146101ff5780639c20fe711461021d578063a53da00b14610239578063b5c09c6814610257578063c387b49c146102735761011f565b80631f72783a116100f25780631f72783a1461016f578063289b3c0d1461018b57806352e305de146101a9578063544fa93e146101c557806366410997146101e15761011f565b8063054203bd1461012357806306e99d931461013f5780630df4c3901461015b57806318074eee14610165575b5f80fd5b61013d60048036038101906101389190611a4c565b610323565b005b61015960048036038101906101549190611aac565b6104ee565b005b610163610580565b005b61016d610740565b005b61018960048036038101906101849190611a4c565b610918565b005b610193610bc7565b6040516101a09190611ae6565b60405180910390f35b6101c360048036038101906101be9190611a4c565b610bf1565b005b6101df60048036038101906101da9190611a4c565b610e36565b005b6101e9610f42565b6040516101f69190611ae6565b60405180910390f35b610207610f6c565b6040516102149190611b0e565b60405180910390f35b61023760048036038101906102329190611a4c565b610f84565b005b610241611272565b60405161024e9190611ae6565b60405180910390f35b610271600480360381019061026c9190611aac565b61129c565b005b61027b6113e2565b6040516102889190611b45565b60405180910390f35b6102996113fd565b6040516102a69190611ae6565b60405180910390f35b6102c960048036038101906102c49190611a4c565b611427565b005b6102d361163f565b6040516102e09190611ae6565b60405180910390f35b6102f1611646565b6040516102fe9190611b0e565b60405180910390f35b610321600480360381019061031c9190611a4c565b61165e565b005b427f000000000000000000000000000000000000000000000000000000000000000065ffffffffffff1610156103cd5761035b6113fd565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146103c8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103bf90611bb8565b60405180910390fd5b610454565b6103d5610f42565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480156104145750610412610f6c565b155b610453576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161044a90611bb8565b60405180910390fd5b5b8060025f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061049e60016118a7565b6104a860016118c6565b8073ffffffffffffffffffffffffffffffffffffffff167f3553f1f7ef0242113266a8d183b621bb87468c99237f36b1150b6ab3d688b68660405160405180910390a250565b6104f6610f42565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480156105355750610533610f6c565b155b610574576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161056b90611bb8565b60405180910390fd5b61057d816118c6565b50565b3373ffffffffffffffffffffffffffffffffffffffff1660025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff160361070c5760025f6101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690553360045f015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060045f01601581819054906101000a900463ffffffff168092919061065e90611c03565b91906101000a81548163ffffffff021916908363ffffffff160217905550506106865f6118a7565b60045f0160159054906101000a900463ffffffff1663ffffffff1660045f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f05ad9b3688012cd825c1bfb941e4f5afb2558af6af3deaddf01dbb5e85abdaf960405160405180910390a361073e565b6040517f6c4360f000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b3373ffffffffffffffffffffffffffffffffffffffff1660035f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16036108e45760035f6101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690553360055f015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060055f01601581819054906101000a900463ffffffff168092919061081e90611c03565b91906101000a81548163ffffffff021916908363ffffffff1602179055505060055f0160149054906101000a900460ff161561085e5761085d5f6118c6565b5b60055f0160159054906101000a900463ffffffff1663ffffffff1660055f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f11e1b985c07e1bf3fec9bfd0bdb8c4a8e870ba2b26aa89fe50a6a19132ca10fd60405160405180910390a3610916565b6040517f6c4360f000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b427f000000000000000000000000000000000000000000000000000000000000000065ffffffffffff1610156109c2576109506113fd565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146109bd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109b490611bb8565b60405180910390fd5b610a49565b6109ca610f42565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16148015610a095750610a07610f6c565b155b610a48576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a3f90611bb8565b60405180910390fd5b5b5f8173ffffffffffffffffffffffffffffffffffffffff163b1115610b87573373ffffffffffffffffffffffffffffffffffffffff1660045f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603610acc57610ac7816118e5565b610b82565b6213c68042610adb9190611c37565b600360146101000a81548165ffffffffffff021916908365ffffffffffff160217905550805f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff167f675b770e821ba4aad20be77c58f912d689226272e805637f42f838a6035eed8660405160405180910390a25b610bc4565b806040517fc6322315000000000000000000000000000000000000000000000000000000008152600401610bbb9190611ae6565b60405180910390fd5b50565b5f60065f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b427f000000000000000000000000000000000000000000000000000000000000000065ffffffffffff161015610c9b57610c296113fd565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610c96576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c8d90611bb8565b60405180910390fd5b610d22565b610ca3610f42565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16148015610ce25750610ce0610f6c565b155b610d21576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d1890611bb8565b60405180910390fd5b5b8073ffffffffffffffffffffffffffffffffffffffff165f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603610df657600360146101000a81549065ffffffffffff02191690555f806101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690558073ffffffffffffffffffffffffffffffffffffffff167ff299f61c7e493f99b20cb36c587ca903d085d5206bfe4452d295711e372da02960405160405180910390a2610e33565b806040517fc6322315000000000000000000000000000000000000000000000000000000008152600401610e2a9190611ae6565b60405180910390fd5b50565b610e3e610f42565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16148015610e7d5750610e7b610f6c565b155b610ebc576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610eb390611bb8565b60405180910390fd5b8060035f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff167fff3cad3ee28c342ad5f3d7c8ff8559ee4d21eb48494092b82a1652e443b3420b60405160405180910390a250565b5f60045f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b5f60045f0160149054906101000a900460ff16905090565b427f000000000000000000000000000000000000000000000000000000000000000065ffffffffffff16101561102e57610fbc6113fd565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611029576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161102090611bb8565b60405180910390fd5b6110b5565b611036610f42565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480156110755750611073610f6c565b155b6110b4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110ab90611bb8565b60405180910390fd5b5b42600360149054906101000a900465ffffffffffff1665ffffffffffff161015611213575f600360149054906101000a900465ffffffffffff1665ffffffffffff1603611137576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161112e90611cb4565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff165f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16036111d157600360146101000a81549065ffffffffffff02191690555f806101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556111cc816118e5565b61120e565b806040517fc63223150000000000000000000000000000000000000000000000000000000081526004016112059190611ae6565b60405180910390fd5b61126f565b42600360149054906101000a900465ffffffffffff166112339190611ce3565b6040517f223a6cbb0000000000000000000000000000000000000000000000000000000081526004016112669190611d2b565b60405180910390fd5b50565b5f60055f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b427f000000000000000000000000000000000000000000000000000000000000000065ffffffffffff161015611346576112d46113fd565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611341576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161133890611bb8565b60405180910390fd5b6113cd565b61134e610f42565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614801561138d575061138b610f6c565b155b6113cc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113c390611bb8565b60405180910390fd5b5b6113d6816118a7565b6113df816118c6565b50565b5f60065f0160159054906101000a900463ffffffff16905090565b5f60075f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b427f000000000000000000000000000000000000000000000000000000000000000065ffffffffffff1610156114d15761145f6113fd565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146114cc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114c390611bb8565b60405180910390fd5b611558565b6114d9610f42565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480156115185750611516610f6c565b155b611557576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161154e90611bb8565b60405180910390fd5b5b5f8173ffffffffffffffffffffffffffffffffffffffff163b11156115ff578060015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff167fe8d8e3c7c3ebec0c177d0fe22d223f8b5071db39155104808d45027e368ba77a60405160405180910390a261163c565b806040517f84dbc6cb0000000000000000000000000000000000000000000000000000000081526004016116339190611ae6565b60405180910390fd5b50565b5f30905090565b5f60055f0160149054906101000a900460ff16905090565b611666610f42565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480156116a557506116a3610f6c565b155b6116e4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016116db90611bb8565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1660015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16036118675760015f6101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690558060065f015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060065f01601581819054906101000a900463ffffffff16809291906117c290611c03565b91906101000a81548163ffffffff021916908363ffffffff1602179055505060065f0160159054906101000a900463ffffffff1663ffffffff1660065f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f5e86008a8467d1efccfe6cb6bd49ba7278d6af2745a1e6994e443322a423709360405160405180910390a36118a4565b806040517f84dbc6cb00000000000000000000000000000000000000000000000000000000815260040161189b9190611ae6565b60405180910390fd5b50565b8060045f0160146101000a81548160ff02191690831515021790555050565b8060055f0160146101000a81548160ff02191690831515021790555050565b8060075f015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060075f01601581819054906101000a900463ffffffff168092919061194b90611c03565b91906101000a81548163ffffffff021916908363ffffffff1602179055505060075f0160159054906101000a900463ffffffff1663ffffffff1660075f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167ff7f7c26682668c39fd8c6dbca125bd9466e743b9e38acc3240867c139cd93c3060405160405180910390a350565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f611a1b826119f2565b9050919050565b611a2b81611a11565b8114611a35575f80fd5b50565b5f81359050611a4681611a22565b92915050565b5f60208284031215611a6157611a606119ee565b5b5f611a6e84828501611a38565b91505092915050565b5f8115159050919050565b611a8b81611a77565b8114611a95575f80fd5b50565b5f81359050611aa681611a82565b92915050565b5f60208284031215611ac157611ac06119ee565b5b5f611ace84828501611a98565b91505092915050565b611ae081611a11565b82525050565b5f602082019050611af95f830184611ad7565b92915050565b611b0881611a77565b82525050565b5f602082019050611b215f830184611aff565b92915050565b5f63ffffffff82169050919050565b611b3f81611b27565b82525050565b5f602082019050611b585f830184611b36565b92915050565b5f82825260208201905092915050565b7f416363657373206973206e6f742076616c6964000000000000000000000000005f82015250565b5f611ba2601383611b5e565b9150611bad82611b6e565b602082019050919050565b5f6020820190508181035f830152611bcf81611b96565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f611c0d82611b27565b915063ffffffff8203611c2357611c22611bd6565b5b600182019050919050565b5f819050919050565b5f611c4182611c2e565b9150611c4c83611c2e565b9250828201905080821115611c6457611c63611bd6565b5b92915050565b7f546865207265717565737420697320696e76616c6964000000000000000000005f82015250565b5f611c9e601683611b5e565b9150611ca982611c6a565b602082019050919050565b5f6020820190508181035f830152611ccb81611c92565b9050919050565b5f65ffffffffffff82169050919050565b5f611ced82611cd2565b9150611cf883611cd2565b9250828203905065ffffffffffff811115611d1657611d15611bd6565b5b92915050565b611d2581611cd2565b82525050565b5f602082019050611d3e5f830184611d1c565b9291505056fea26469706673582212201f6285684bbf7870012b46d7bb1f2de30f79d1140eaea32964386850b9eca37264736f6c63430008140033",
							"opcodes": "PUSH1 0xA0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x10 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH4 0x16A8C800 TIMESTAMP PUSH3 0x23 SWAP2 SWAP1 PUSH3 0xFD JUMP JUMPDEST PUSH6 0xFFFFFFFFFFFF AND PUSH1 0x80 DUP2 PUSH6 0xFFFFFFFFFFFF AND DUP2 MSTORE POP POP CALLER PUSH1 0x4 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x4 PUSH0 ADD PUSH1 0x15 DUP2 DUP2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP1 SWAP3 SWAP2 SWAP1 PUSH3 0xA2 SWAP1 PUSH3 0x146 JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP PUSH3 0x176 JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH3 0x109 DUP3 PUSH3 0xC7 JUMP JUMPDEST SWAP2 POP PUSH3 0x116 DUP4 PUSH3 0xC7 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH3 0x131 JUMPI PUSH3 0x130 PUSH3 0xD0 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH4 0xFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0x152 DUP3 PUSH3 0x137 JUMP JUMPDEST SWAP2 POP PUSH4 0xFFFFFFFF DUP3 SUB PUSH3 0x16B JUMPI PUSH3 0x16A PUSH3 0xD0 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH2 0x1D7A PUSH3 0x1B2 PUSH0 CODECOPY PUSH0 DUP2 DUP2 PUSH2 0x326 ADD MSTORE DUP2 DUP2 PUSH2 0x91B ADD MSTORE DUP2 DUP2 PUSH2 0xBF4 ADD MSTORE DUP2 DUP2 PUSH2 0xF87 ADD MSTORE DUP2 DUP2 PUSH2 0x129F ADD MSTORE PUSH2 0x142A ADD MSTORE PUSH2 0x1D7A PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x11F JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6CF106D7 GT PUSH2 0xAB JUMPI DUP1 PUSH4 0xC5A1C5C1 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xC5A1C5C1 EQ PUSH2 0x291 JUMPI DUP1 PUSH4 0xCA4CCE68 EQ PUSH2 0x2AF JUMPI DUP1 PUSH4 0xE47A9D46 EQ PUSH2 0x2CB JUMPI DUP1 PUSH4 0xE4F3E947 EQ PUSH2 0x2E9 JUMPI DUP1 PUSH4 0xEE7126C3 EQ PUSH2 0x307 JUMPI PUSH2 0x11F JUMP JUMPDEST DUP1 PUSH4 0x6CF106D7 EQ PUSH2 0x1FF JUMPI DUP1 PUSH4 0x9C20FE71 EQ PUSH2 0x21D JUMPI DUP1 PUSH4 0xA53DA00B EQ PUSH2 0x239 JUMPI DUP1 PUSH4 0xB5C09C68 EQ PUSH2 0x257 JUMPI DUP1 PUSH4 0xC387B49C EQ PUSH2 0x273 JUMPI PUSH2 0x11F JUMP JUMPDEST DUP1 PUSH4 0x1F72783A GT PUSH2 0xF2 JUMPI DUP1 PUSH4 0x1F72783A EQ PUSH2 0x16F JUMPI DUP1 PUSH4 0x289B3C0D EQ PUSH2 0x18B JUMPI DUP1 PUSH4 0x52E305DE EQ PUSH2 0x1A9 JUMPI DUP1 PUSH4 0x544FA93E EQ PUSH2 0x1C5 JUMPI DUP1 PUSH4 0x66410997 EQ PUSH2 0x1E1 JUMPI PUSH2 0x11F JUMP JUMPDEST DUP1 PUSH4 0x54203BD EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0x6E99D93 EQ PUSH2 0x13F JUMPI DUP1 PUSH4 0xDF4C390 EQ PUSH2 0x15B JUMPI DUP1 PUSH4 0x18074EEE EQ PUSH2 0x165 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x13D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x138 SWAP2 SWAP1 PUSH2 0x1A4C JUMP JUMPDEST PUSH2 0x323 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x159 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x154 SWAP2 SWAP1 PUSH2 0x1AAC JUMP JUMPDEST PUSH2 0x4EE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x163 PUSH2 0x580 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x16D PUSH2 0x740 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x189 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x184 SWAP2 SWAP1 PUSH2 0x1A4C JUMP JUMPDEST PUSH2 0x918 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x193 PUSH2 0xBC7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A0 SWAP2 SWAP1 PUSH2 0x1AE6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1BE SWAP2 SWAP1 PUSH2 0x1A4C JUMP JUMPDEST PUSH2 0xBF1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1DF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1DA SWAP2 SWAP1 PUSH2 0x1A4C JUMP JUMPDEST PUSH2 0xE36 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1E9 PUSH2 0xF42 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F6 SWAP2 SWAP1 PUSH2 0x1AE6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x207 PUSH2 0xF6C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x214 SWAP2 SWAP1 PUSH2 0x1B0E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x237 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x232 SWAP2 SWAP1 PUSH2 0x1A4C JUMP JUMPDEST PUSH2 0xF84 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x241 PUSH2 0x1272 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x24E SWAP2 SWAP1 PUSH2 0x1AE6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x271 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x26C SWAP2 SWAP1 PUSH2 0x1AAC JUMP JUMPDEST PUSH2 0x129C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x27B PUSH2 0x13E2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x288 SWAP2 SWAP1 PUSH2 0x1B45 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x299 PUSH2 0x13FD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A6 SWAP2 SWAP1 PUSH2 0x1AE6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2C9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2C4 SWAP2 SWAP1 PUSH2 0x1A4C JUMP JUMPDEST PUSH2 0x1427 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2D3 PUSH2 0x163F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2E0 SWAP2 SWAP1 PUSH2 0x1AE6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2F1 PUSH2 0x1646 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2FE SWAP2 SWAP1 PUSH2 0x1B0E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x321 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x31C SWAP2 SWAP1 PUSH2 0x1A4C JUMP JUMPDEST PUSH2 0x165E JUMP JUMPDEST STOP JUMPDEST TIMESTAMP PUSH32 0x0 PUSH6 0xFFFFFFFFFFFF AND LT ISZERO PUSH2 0x3CD JUMPI PUSH2 0x35B PUSH2 0x13FD JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x3C8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3BF SWAP1 PUSH2 0x1BB8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x454 JUMP JUMPDEST PUSH2 0x3D5 PUSH2 0xF42 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x414 JUMPI POP PUSH2 0x412 PUSH2 0xF6C JUMP JUMPDEST ISZERO JUMPDEST PUSH2 0x453 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x44A SWAP1 PUSH2 0x1BB8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST DUP1 PUSH1 0x2 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x49E PUSH1 0x1 PUSH2 0x18A7 JUMP JUMPDEST PUSH2 0x4A8 PUSH1 0x1 PUSH2 0x18C6 JUMP JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x3553F1F7EF0242113266A8D183B621BB87468C99237F36B1150B6AB3D688B686 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH2 0x4F6 PUSH2 0xF42 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x535 JUMPI POP PUSH2 0x533 PUSH2 0xF6C JUMP JUMPDEST ISZERO JUMPDEST PUSH2 0x574 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x56B SWAP1 PUSH2 0x1BB8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x57D DUP2 PUSH2 0x18C6 JUMP JUMPDEST POP JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x70C JUMPI PUSH1 0x2 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE CALLER PUSH1 0x4 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x4 PUSH0 ADD PUSH1 0x15 DUP2 DUP2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x65E SWAP1 PUSH2 0x1C03 JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP PUSH2 0x686 PUSH0 PUSH2 0x18A7 JUMP JUMPDEST PUSH1 0x4 PUSH0 ADD PUSH1 0x15 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND PUSH1 0x4 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x5AD9B3688012CD825C1BFB941E4F5AFB2558AF6AF3DEADDF01DBB5E85ABDAF9 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x73E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x6C4360F000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x3 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x8E4 JUMPI PUSH1 0x3 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE CALLER PUSH1 0x5 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x5 PUSH0 ADD PUSH1 0x15 DUP2 DUP2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x81E SWAP1 PUSH2 0x1C03 JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP PUSH1 0x5 PUSH0 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x85E JUMPI PUSH2 0x85D PUSH0 PUSH2 0x18C6 JUMP JUMPDEST JUMPDEST PUSH1 0x5 PUSH0 ADD PUSH1 0x15 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND PUSH1 0x5 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x11E1B985C07E1BF3FEC9BFD0BDB8C4A8E870BA2B26AA89FE50A6A19132CA10FD PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x916 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x6C4360F000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST TIMESTAMP PUSH32 0x0 PUSH6 0xFFFFFFFFFFFF AND LT ISZERO PUSH2 0x9C2 JUMPI PUSH2 0x950 PUSH2 0x13FD JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x9BD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9B4 SWAP1 PUSH2 0x1BB8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA49 JUMP JUMPDEST PUSH2 0x9CA PUSH2 0xF42 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0xA09 JUMPI POP PUSH2 0xA07 PUSH2 0xF6C JUMP JUMPDEST ISZERO JUMPDEST PUSH2 0xA48 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA3F SWAP1 PUSH2 0x1BB8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST PUSH0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT ISZERO PUSH2 0xB87 JUMPI CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x4 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xACC JUMPI PUSH2 0xAC7 DUP2 PUSH2 0x18E5 JUMP JUMPDEST PUSH2 0xB82 JUMP JUMPDEST PUSH3 0x13C680 TIMESTAMP PUSH2 0xADB SWAP2 SWAP1 PUSH2 0x1C37 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH6 0xFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH6 0xFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x675B770E821BA4AAD20BE77C58F912D689226272E805637F42F838A6035EED86 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMPDEST PUSH2 0xBC4 JUMP JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH32 0xC632231500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBBB SWAP2 SWAP1 PUSH2 0x1AE6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH1 0x6 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST TIMESTAMP PUSH32 0x0 PUSH6 0xFFFFFFFFFFFF AND LT ISZERO PUSH2 0xC9B JUMPI PUSH2 0xC29 PUSH2 0x13FD JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xC96 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC8D SWAP1 PUSH2 0x1BB8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xD22 JUMP JUMPDEST PUSH2 0xCA3 PUSH2 0xF42 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0xCE2 JUMPI POP PUSH2 0xCE0 PUSH2 0xF6C JUMP JUMPDEST ISZERO JUMPDEST PUSH2 0xD21 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD18 SWAP1 PUSH2 0x1BB8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xDF6 JUMPI PUSH1 0x3 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH6 0xFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xF299F61C7E493F99B20CB36C587CA903D085D5206BFE4452D295711E372DA029 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH2 0xE33 JUMP JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH32 0xC632231500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE2A SWAP2 SWAP1 PUSH2 0x1AE6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0xE3E PUSH2 0xF42 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0xE7D JUMPI POP PUSH2 0xE7B PUSH2 0xF6C JUMP JUMPDEST ISZERO JUMPDEST PUSH2 0xEBC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEB3 SWAP1 PUSH2 0x1BB8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x3 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xFF3CAD3EE28C342AD5F3D7C8FF8559EE4D21EB48494092B82A1652E443B3420B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH0 PUSH1 0x4 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x4 PUSH0 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST TIMESTAMP PUSH32 0x0 PUSH6 0xFFFFFFFFFFFF AND LT ISZERO PUSH2 0x102E JUMPI PUSH2 0xFBC PUSH2 0x13FD JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1029 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1020 SWAP1 PUSH2 0x1BB8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x10B5 JUMP JUMPDEST PUSH2 0x1036 PUSH2 0xF42 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x1075 JUMPI POP PUSH2 0x1073 PUSH2 0xF6C JUMP JUMPDEST ISZERO JUMPDEST PUSH2 0x10B4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10AB SWAP1 PUSH2 0x1BB8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST TIMESTAMP PUSH1 0x3 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH6 0xFFFFFFFFFFFF AND PUSH6 0xFFFFFFFFFFFF AND LT ISZERO PUSH2 0x1213 JUMPI PUSH0 PUSH1 0x3 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH6 0xFFFFFFFFFFFF AND PUSH6 0xFFFFFFFFFFFF AND SUB PUSH2 0x1137 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x112E SWAP1 PUSH2 0x1CB4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x11D1 JUMPI PUSH1 0x3 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH6 0xFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH2 0x11CC DUP2 PUSH2 0x18E5 JUMP JUMPDEST PUSH2 0x120E JUMP JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH32 0xC632231500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1205 SWAP2 SWAP1 PUSH2 0x1AE6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x126F JUMP JUMPDEST TIMESTAMP PUSH1 0x3 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH6 0xFFFFFFFFFFFF AND PUSH2 0x1233 SWAP2 SWAP1 PUSH2 0x1CE3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x223A6CBB00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1266 SWAP2 SWAP1 PUSH2 0x1D2B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST TIMESTAMP PUSH32 0x0 PUSH6 0xFFFFFFFFFFFF AND LT ISZERO PUSH2 0x1346 JUMPI PUSH2 0x12D4 PUSH2 0x13FD JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1341 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1338 SWAP1 PUSH2 0x1BB8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x13CD JUMP JUMPDEST PUSH2 0x134E PUSH2 0xF42 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x138D JUMPI POP PUSH2 0x138B PUSH2 0xF6C JUMP JUMPDEST ISZERO JUMPDEST PUSH2 0x13CC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13C3 SWAP1 PUSH2 0x1BB8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST PUSH2 0x13D6 DUP2 PUSH2 0x18A7 JUMP JUMPDEST PUSH2 0x13DF DUP2 PUSH2 0x18C6 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH1 0x6 PUSH0 ADD PUSH1 0x15 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x7 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST TIMESTAMP PUSH32 0x0 PUSH6 0xFFFFFFFFFFFF AND LT ISZERO PUSH2 0x14D1 JUMPI PUSH2 0x145F PUSH2 0x13FD JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x14CC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14C3 SWAP1 PUSH2 0x1BB8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1558 JUMP JUMPDEST PUSH2 0x14D9 PUSH2 0xF42 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x1518 JUMPI POP PUSH2 0x1516 PUSH2 0xF6C JUMP JUMPDEST ISZERO JUMPDEST PUSH2 0x1557 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x154E SWAP1 PUSH2 0x1BB8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST PUSH0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT ISZERO PUSH2 0x15FF JUMPI DUP1 PUSH1 0x1 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xE8D8E3C7C3EBEC0C177D0FE22D223F8B5071DB39155104808D45027E368BA77A PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH2 0x163C JUMP JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH32 0x84DBC6CB00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1633 SWAP2 SWAP1 PUSH2 0x1AE6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 ADDRESS SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1666 PUSH2 0xF42 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x16A5 JUMPI POP PUSH2 0x16A3 PUSH2 0xF6C JUMP JUMPDEST ISZERO JUMPDEST PUSH2 0x16E4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16DB SWAP1 PUSH2 0x1BB8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1867 JUMPI PUSH1 0x1 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE DUP1 PUSH1 0x6 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x6 PUSH0 ADD PUSH1 0x15 DUP2 DUP2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x17C2 SWAP1 PUSH2 0x1C03 JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP PUSH1 0x6 PUSH0 ADD PUSH1 0x15 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND PUSH1 0x6 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x5E86008A8467D1EFCCFE6CB6BD49BA7278D6AF2745A1E6994E443322A4237093 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x18A4 JUMP JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH32 0x84DBC6CB00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x189B SWAP2 SWAP1 PUSH2 0x1AE6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMP JUMPDEST DUP1 PUSH1 0x4 PUSH0 ADD PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST DUP1 PUSH1 0x5 PUSH0 ADD PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST DUP1 PUSH1 0x7 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x7 PUSH0 ADD PUSH1 0x15 DUP2 DUP2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x194B SWAP1 PUSH2 0x1C03 JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP PUSH1 0x7 PUSH0 ADD PUSH1 0x15 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND PUSH1 0x7 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xF7F7C26682668C39FD8C6DBCA125BD9466E743B9E38ACC3240867C139CD93C30 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1A1B DUP3 PUSH2 0x19F2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A2B DUP2 PUSH2 0x1A11 JUMP JUMPDEST DUP2 EQ PUSH2 0x1A35 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1A46 DUP2 PUSH2 0x1A22 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A61 JUMPI PUSH2 0x1A60 PUSH2 0x19EE JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1A6E DUP5 DUP3 DUP6 ADD PUSH2 0x1A38 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A8B DUP2 PUSH2 0x1A77 JUMP JUMPDEST DUP2 EQ PUSH2 0x1A95 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1AA6 DUP2 PUSH2 0x1A82 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1AC1 JUMPI PUSH2 0x1AC0 PUSH2 0x19EE JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1ACE DUP5 DUP3 DUP6 ADD PUSH2 0x1A98 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1AE0 DUP2 PUSH2 0x1A11 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1AF9 PUSH0 DUP4 ADD DUP5 PUSH2 0x1AD7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1B08 DUP2 PUSH2 0x1A77 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1B21 PUSH0 DUP4 ADD DUP5 PUSH2 0x1AFF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH4 0xFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1B3F DUP2 PUSH2 0x1B27 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1B58 PUSH0 DUP4 ADD DUP5 PUSH2 0x1B36 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x416363657373206973206E6F742076616C696400000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1BA2 PUSH1 0x13 DUP4 PUSH2 0x1B5E JUMP JUMPDEST SWAP2 POP PUSH2 0x1BAD DUP3 PUSH2 0x1B6E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1BCF DUP2 PUSH2 0x1B96 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1C0D DUP3 PUSH2 0x1B27 JUMP JUMPDEST SWAP2 POP PUSH4 0xFFFFFFFF DUP3 SUB PUSH2 0x1C23 JUMPI PUSH2 0x1C22 PUSH2 0x1BD6 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1C41 DUP3 PUSH2 0x1C2E JUMP JUMPDEST SWAP2 POP PUSH2 0x1C4C DUP4 PUSH2 0x1C2E JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1C64 JUMPI PUSH2 0x1C63 PUSH2 0x1BD6 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x546865207265717565737420697320696E76616C696400000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1C9E PUSH1 0x16 DUP4 PUSH2 0x1B5E JUMP JUMPDEST SWAP2 POP PUSH2 0x1CA9 DUP3 PUSH2 0x1C6A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1CCB DUP2 PUSH2 0x1C92 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH6 0xFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1CED DUP3 PUSH2 0x1CD2 JUMP JUMPDEST SWAP2 POP PUSH2 0x1CF8 DUP4 PUSH2 0x1CD2 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP PUSH6 0xFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1D16 JUMPI PUSH2 0x1D15 PUSH2 0x1BD6 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1D25 DUP2 PUSH2 0x1CD2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1D3E PUSH0 DUP4 ADD DUP5 PUSH2 0x1D1C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x1F PUSH3 0x85684B 0xBF PUSH25 0x70012B46D7BB1F2DE30F79D1140EAEA32964386850B9ECA372 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ",
							"sourceMap": "221:7772:3:-:0;;;2559:159;;;;;;;;;;2629:9;2611:15;:27;;;;:::i;:::-;2584:55;;;;;;;;;;2671:10;2650;:18;;;:31;;;;;;;;;;;;;;;;;;2692:10;:16;;;:18;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;221:7772;;7:77:5;44:7;73:5;62:16;;7:77;;;:::o;90:180::-;138:77;135:1;128:88;235:4;232:1;225:15;259:4;256:1;249:15;276:191;316:3;335:20;353:1;335:20;:::i;:::-;330:25;;369:20;387:1;369:20;:::i;:::-;364:25;;412:1;409;405:9;398:16;;433:3;430:1;427:10;424:36;;;440:18;;:::i;:::-;424:36;276:191;;;;:::o;473:93::-;509:7;549:10;542:5;538:22;527:33;;473:93;;;:::o;572:175::-;610:3;633:23;650:5;633:23;:::i;:::-;624:32;;678:10;671:5;668:21;665:47;;692:18;;:::i;:::-;665:47;739:1;732:5;728:13;721:20;;572:175;;;:::o;221:7772:3:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_setPresidentBaned_3743": {
									"entryPoint": 6311,
									"id": 3743,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_setPrimeMinisterBaned_3755": {
									"entryPoint": 6342,
									"id": 3755,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferRepublicAddress_3731": {
									"entryPoint": 6373,
									"id": 3731,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@cancelPendingRepublicAddress_3418": {
									"entryPoint": 3057,
									"id": 3418,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@getAuthorityAddress_3438": {
									"entryPoint": 5695,
									"id": 3438,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getGovernance_3670": {
									"entryPoint": 3015,
									"id": 3670,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getPresidentAdd_3510": {
									"entryPoint": 3906,
									"id": 3510,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getPresidentBan_3519": {
									"entryPoint": 3948,
									"id": 3519,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getPrimeMinisterAdd_3587": {
									"entryPoint": 4722,
									"id": 3587,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getPrimeMinisterBan_3596": {
									"entryPoint": 5702,
									"id": 3596,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getRepublicAddress_3427": {
									"entryPoint": 5117,
									"id": 3427,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getgovernanceVersion_3679": {
									"entryPoint": 5090,
									"id": 3679,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@setPendigPresident_3462": {
									"entryPoint": 803,
									"id": 3462,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setPendingGovernanceContractAddress_3623": {
									"entryPoint": 5159,
									"id": 3623,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setPendingPrimeMinister_3535": {
									"entryPoint": 3638,
									"id": 3535,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setPendingRepublicAddress_3341": {
									"entryPoint": 2328,
									"id": 3341,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setPresidentBaned_3695": {
									"entryPoint": 4764,
									"id": 3695,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setPrimeMinister_3707": {
									"entryPoint": 1262,
									"id": 3707,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transferGovernanceContractAddress_3661": {
									"entryPoint": 5726,
									"id": 3661,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transferPresident_3501": {
									"entryPoint": 1408,
									"id": 3501,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferPrimeMinister_3578": {
									"entryPoint": 1856,
									"id": 3578,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferRepublicAddress_3391": {
									"entryPoint": 3972,
									"id": 3391,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 6712,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool": {
									"entryPoint": 6808,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 6732,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool": {
									"entryPoint": 6828,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 6871,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 6911,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_7ee2f33aca8781826955961850ee0290e9bc9194955de2a97e17ec13b6234440_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7062,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_a294dcfb639c285c6de7811fdf356d91d46d9194d0c816554844d12bbf160772_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7314,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint32_to_t_uint32_fromStack": {
									"entryPoint": 6966,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint48_to_t_uint48_fromStack": {
									"entryPoint": 7452,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 6886,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 6926,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_7ee2f33aca8781826955961850ee0290e9bc9194955de2a97e17ec13b6234440__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7096,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_a294dcfb639c285c6de7811fdf356d91d46d9194d0c816554844d12bbf160772__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7348,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint32__to_t_uint32__fromStack_reversed": {
									"entryPoint": 6981,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint48__to_t_uint48__fromStack_reversed": {
									"entryPoint": 7467,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 7006,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 7223,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint48": {
									"entryPoint": 7395,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 6673,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 6775,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 6642,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 7214,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint32": {
									"entryPoint": 6951,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint48": {
									"entryPoint": 7378,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"increment_t_uint32": {
									"entryPoint": 7171,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 7126,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 6638,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_7ee2f33aca8781826955961850ee0290e9bc9194955de2a97e17ec13b6234440": {
									"entryPoint": 7022,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_a294dcfb639c285c6de7811fdf356d91d46d9194d0c816554844d12bbf160772": {
									"entryPoint": 7274,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 6690,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 6786,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:6413:5",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:5"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:5"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:5",
														"type": ""
													}
												],
												"src": "7:75:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:5"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:5"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:81:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:65:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "411:42:5",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "400:54:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:5",
														"type": ""
													}
												],
												"src": "334:126:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "511:51:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "521:35:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "532:24:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "493:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "503:7:5",
														"type": ""
													}
												],
												"src": "466:96:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "611:79:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "668:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "677:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "680:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "624:43:5"
															},
															"nodeType": "YulIf",
															"src": "621:63:5"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "604:5:5",
														"type": ""
													}
												],
												"src": "568:122:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "748:87:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "758:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "780:6:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "767:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "767:20:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "758:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "823:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "796:26:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "796:33:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "796:33:5"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "726:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "734:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "742:5:5",
														"type": ""
													}
												],
												"src": "696:139:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "907:263:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "953:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "955:77:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "955:79:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "955:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "928:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "937:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "924:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "924:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "949:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "920:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "920:32:5"
															},
															"nodeType": "YulIf",
															"src": "917:119:5"
														},
														{
															"nodeType": "YulBlock",
															"src": "1046:117:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1061:15:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1075:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1065:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1090:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1125:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1136:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1121:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1121:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1145:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1100:20:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1100:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1090:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "877:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "888:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "900:6:5",
														"type": ""
													}
												],
												"src": "841:329:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1218:48:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1228:32:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1253:5:5"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1246:6:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1246:13:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1239:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1239:21:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1228:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1200:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1210:7:5",
														"type": ""
													}
												],
												"src": "1176:90:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1312:76:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1366:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1375:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1378:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1368:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1368:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1368:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1335:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1357:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "1342:14:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1342:21:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1332:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1332:32:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1325:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1325:40:5"
															},
															"nodeType": "YulIf",
															"src": "1322:60:5"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1305:5:5",
														"type": ""
													}
												],
												"src": "1272:116:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1443:84:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1453:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1475:6:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1462:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1462:20:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1453:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1515:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "1491:23:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1491:30:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1491:30:5"
														}
													]
												},
												"name": "abi_decode_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1421:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1429:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1437:5:5",
														"type": ""
													}
												],
												"src": "1394:133:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1596:260:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1642:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1644:77:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1644:79:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1644:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1617:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1626:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1613:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1613:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1638:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1609:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1609:32:5"
															},
															"nodeType": "YulIf",
															"src": "1606:119:5"
														},
														{
															"nodeType": "YulBlock",
															"src": "1735:114:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1750:15:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1764:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1754:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1779:60:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1811:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1822:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1807:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1807:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1831:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "1789:17:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1789:50:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1779:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1566:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1577:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1589:6:5",
														"type": ""
													}
												],
												"src": "1533:323:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1927:53:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1944:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1967:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1949:17:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1949:24:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1937:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1937:37:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1937:37:5"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1915:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1922:3:5",
														"type": ""
													}
												],
												"src": "1862:118:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2084:124:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2094:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2106:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2117:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2102:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2102:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2094:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2174:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2187:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2198:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2183:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2183:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2130:43:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2130:71:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2130:71:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2056:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2068:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2079:4:5",
														"type": ""
													}
												],
												"src": "1986:222:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2273:50:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2290:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2310:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "2295:14:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2295:21:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2283:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2283:34:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2283:34:5"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2261:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2268:3:5",
														"type": ""
													}
												],
												"src": "2214:109:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2421:118:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2431:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2443:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2454:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2439:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2439:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2431:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2505:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2518:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2529:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2514:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2514:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2467:37:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2467:65:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2467:65:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2393:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2405:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2416:4:5",
														"type": ""
													}
												],
												"src": "2329:210:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2589:49:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2599:33:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2614:5:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2621:10:5",
																		"type": "",
																		"value": "0xffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2610:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2610:22:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2599:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2571:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2581:7:5",
														"type": ""
													}
												],
												"src": "2545:93:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2707:52:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2724:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2746:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint32",
																			"nodeType": "YulIdentifier",
																			"src": "2729:16:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2729:23:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2717:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2717:36:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2717:36:5"
														}
													]
												},
												"name": "abi_encode_t_uint32_to_t_uint32_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2695:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2702:3:5",
														"type": ""
													}
												],
												"src": "2644:115:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2861:122:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2871:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2883:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2894:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2879:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2879:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2871:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2949:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2962:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2973:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2958:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2958:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint32_to_t_uint32_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2907:41:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2907:69:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2907:69:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint32__to_t_uint32__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2833:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2845:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2856:4:5",
														"type": ""
													}
												],
												"src": "2765:218:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3085:73:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3102:3:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3107:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3095:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3095:19:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3095:19:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3123:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3142:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3147:4:5",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3138:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3138:14:5"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "3123:11:5"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3057:3:5",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "3062:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "3073:11:5",
														"type": ""
													}
												],
												"src": "2989:169:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3270:63:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "3292:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3300:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3288:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3288:14:5"
																	},
																	{
																		"hexValue": "416363657373206973206e6f742076616c6964",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3304:21:5",
																		"type": "",
																		"value": "Access is not valid"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3281:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3281:45:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3281:45:5"
														}
													]
												},
												"name": "store_literal_in_memory_7ee2f33aca8781826955961850ee0290e9bc9194955de2a97e17ec13b6234440",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "3262:6:5",
														"type": ""
													}
												],
												"src": "3164:169:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3485:220:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3495:74:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3561:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3566:2:5",
																		"type": "",
																		"value": "19"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3502:58:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3502:67:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "3495:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3667:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_7ee2f33aca8781826955961850ee0290e9bc9194955de2a97e17ec13b6234440",
																	"nodeType": "YulIdentifier",
																	"src": "3578:88:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3578:93:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3578:93:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3680:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3691:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3696:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3687:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3687:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3680:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_7ee2f33aca8781826955961850ee0290e9bc9194955de2a97e17ec13b6234440_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3473:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3481:3:5",
														"type": ""
													}
												],
												"src": "3339:366:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3882:248:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3892:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3904:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3915:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3900:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3900:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3892:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3939:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3950:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3935:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3935:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "3958:4:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3964:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3954:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3954:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3928:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3928:47:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3928:47:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3984:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "4118:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_7ee2f33aca8781826955961850ee0290e9bc9194955de2a97e17ec13b6234440_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3992:124:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3992:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3984:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_7ee2f33aca8781826955961850ee0290e9bc9194955de2a97e17ec13b6234440__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3862:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3877:4:5",
														"type": ""
													}
												],
												"src": "3711:419:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4164:152:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4181:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4184:77:5",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4174:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4174:88:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4174:88:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4278:1:5",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4281:4:5",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4271:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4271:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4271:15:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4302:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4305:4:5",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "4295:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4295:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4295:15:5"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "4136:180:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4364:133:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4374:32:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4400:5:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint32",
																	"nodeType": "YulIdentifier",
																	"src": "4383:16:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4383:23:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "4374:5:5"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4440:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "4442:16:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4442:18:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4442:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4421:5:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4428:10:5",
																		"type": "",
																		"value": "0xffffffff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "4418:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4418:21:5"
															},
															"nodeType": "YulIf",
															"src": "4415:47:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4471:20:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4482:5:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4489:1:5",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4478:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4478:13:5"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "4471:3:5"
																}
															]
														}
													]
												},
												"name": "increment_t_uint32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4350:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "4360:3:5",
														"type": ""
													}
												],
												"src": "4322:175:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4548:32:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4558:16:5",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "4569:5:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "4558:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4530:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "4540:7:5",
														"type": ""
													}
												],
												"src": "4503:77:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4630:147:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4640:25:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4663:1:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "4645:17:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4645:20:5"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "4640:1:5"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4674:25:5",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "4697:1:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "4679:17:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4679:20:5"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "4674:1:5"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4708:16:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4719:1:5"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "4722:1:5"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4715:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4715:9:5"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "4708:3:5"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4748:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "4750:16:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4750:18:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4750:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4740:1:5"
																	},
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "4743:3:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4737:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4737:10:5"
															},
															"nodeType": "YulIf",
															"src": "4734:36:5"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "4617:1:5",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "4620:1:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "4626:3:5",
														"type": ""
													}
												],
												"src": "4586:191:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4889:66:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "4911:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4919:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4907:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4907:14:5"
																	},
																	{
																		"hexValue": "546865207265717565737420697320696e76616c6964",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4923:24:5",
																		"type": "",
																		"value": "The request is invalid"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4900:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4900:48:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4900:48:5"
														}
													]
												},
												"name": "store_literal_in_memory_a294dcfb639c285c6de7811fdf356d91d46d9194d0c816554844d12bbf160772",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "4881:6:5",
														"type": ""
													}
												],
												"src": "4783:172:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5107:220:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5117:74:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5183:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5188:2:5",
																		"type": "",
																		"value": "22"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5124:58:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5124:67:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "5117:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5289:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_a294dcfb639c285c6de7811fdf356d91d46d9194d0c816554844d12bbf160772",
																	"nodeType": "YulIdentifier",
																	"src": "5200:88:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5200:93:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5200:93:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5302:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5313:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5318:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5309:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5309:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "5302:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_a294dcfb639c285c6de7811fdf356d91d46d9194d0c816554844d12bbf160772_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5095:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5103:3:5",
														"type": ""
													}
												],
												"src": "4961:366:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5504:248:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5514:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5526:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5537:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5522:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5522:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5514:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5561:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5572:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5557:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5557:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "5580:4:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5586:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5576:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5576:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5550:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5550:47:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5550:47:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5606:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "5740:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_a294dcfb639c285c6de7811fdf356d91d46d9194d0c816554844d12bbf160772_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5614:124:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5614:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5606:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_a294dcfb639c285c6de7811fdf356d91d46d9194d0c816554844d12bbf160772__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5484:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5499:4:5",
														"type": ""
													}
												],
												"src": "5333:419:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5802:53:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5812:37:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5827:5:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5834:14:5",
																		"type": "",
																		"value": "0xffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "5823:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5823:26:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "5812:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint48",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5784:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "5794:7:5",
														"type": ""
													}
												],
												"src": "5758:97:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5905:160:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5915:24:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5937:1:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint48",
																	"nodeType": "YulIdentifier",
																	"src": "5920:16:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5920:19:5"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "5915:1:5"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5948:24:5",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "5970:1:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint48",
																	"nodeType": "YulIdentifier",
																	"src": "5953:16:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5953:19:5"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "5948:1:5"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5981:17:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5993:1:5"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "5996:1:5"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "5989:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5989:9:5"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "5981:4:5"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6036:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "6038:16:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6038:18:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6038:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nodeType": "YulIdentifier",
																		"src": "6014:4:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6020:14:5",
																		"type": "",
																		"value": "0xffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "6011:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6011:24:5"
															},
															"nodeType": "YulIf",
															"src": "6008:50:5"
														}
													]
												},
												"name": "checked_sub_t_uint48",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "5891:1:5",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "5894:1:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "5900:4:5",
														"type": ""
													}
												],
												"src": "5861:204:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6134:52:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6151:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6173:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint48",
																			"nodeType": "YulIdentifier",
																			"src": "6156:16:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6156:23:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6144:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6144:36:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6144:36:5"
														}
													]
												},
												"name": "abi_encode_t_uint48_to_t_uint48_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6122:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6129:3:5",
														"type": ""
													}
												],
												"src": "6071:115:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6288:122:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6298:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6310:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6321:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6306:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6306:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6298:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "6376:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6389:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6400:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6385:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6385:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint48_to_t_uint48_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6334:41:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6334:69:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6334:69:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint48__to_t_uint48__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6260:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6272:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6283:4:5",
														"type": ""
													}
												],
												"src": "6192:218:5"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint32(value) -> cleaned {\n        cleaned := and(value, 0xffffffff)\n    }\n\n    function abi_encode_t_uint32_to_t_uint32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint32(value))\n    }\n\n    function abi_encode_tuple_t_uint32__to_t_uint32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint32_to_t_uint32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_7ee2f33aca8781826955961850ee0290e9bc9194955de2a97e17ec13b6234440(memPtr) {\n\n        mstore(add(memPtr, 0), \"Access is not valid\")\n\n    }\n\n    function abi_encode_t_stringliteral_7ee2f33aca8781826955961850ee0290e9bc9194955de2a97e17ec13b6234440_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 19)\n        store_literal_in_memory_7ee2f33aca8781826955961850ee0290e9bc9194955de2a97e17ec13b6234440(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_7ee2f33aca8781826955961850ee0290e9bc9194955de2a97e17ec13b6234440__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_7ee2f33aca8781826955961850ee0290e9bc9194955de2a97e17ec13b6234440_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function increment_t_uint32(value) -> ret {\n        value := cleanup_t_uint32(value)\n        if eq(value, 0xffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_a294dcfb639c285c6de7811fdf356d91d46d9194d0c816554844d12bbf160772(memPtr) {\n\n        mstore(add(memPtr, 0), \"The request is invalid\")\n\n    }\n\n    function abi_encode_t_stringliteral_a294dcfb639c285c6de7811fdf356d91d46d9194d0c816554844d12bbf160772_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 22)\n        store_literal_in_memory_a294dcfb639c285c6de7811fdf356d91d46d9194d0c816554844d12bbf160772(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_a294dcfb639c285c6de7811fdf356d91d46d9194d0c816554844d12bbf160772__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_a294dcfb639c285c6de7811fdf356d91d46d9194d0c816554844d12bbf160772_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function cleanup_t_uint48(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffff)\n    }\n\n    function checked_sub_t_uint48(x, y) -> diff {\n        x := cleanup_t_uint48(x)\n        y := cleanup_t_uint48(y)\n        diff := sub(x, y)\n\n        if gt(diff, 0xffffffffffff) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_t_uint48_to_t_uint48_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint48(value))\n    }\n\n    function abi_encode_tuple_t_uint48__to_t_uint48__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint48_to_t_uint48_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 5,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"3171": [
									{
										"length": 32,
										"start": 806
									},
									{
										"length": 32,
										"start": 2331
									},
									{
										"length": 32,
										"start": 3060
									},
									{
										"length": 32,
										"start": 3975
									},
									{
										"length": 32,
										"start": 4767
									},
									{
										"length": 32,
										"start": 5162
									}
								]
							},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b506004361061011f575f3560e01c80636cf106d7116100ab578063c5a1c5c11161006f578063c5a1c5c114610291578063ca4cce68146102af578063e47a9d46146102cb578063e4f3e947146102e9578063ee7126c3146103075761011f565b80636cf106d7146101ff5780639c20fe711461021d578063a53da00b14610239578063b5c09c6814610257578063c387b49c146102735761011f565b80631f72783a116100f25780631f72783a1461016f578063289b3c0d1461018b57806352e305de146101a9578063544fa93e146101c557806366410997146101e15761011f565b8063054203bd1461012357806306e99d931461013f5780630df4c3901461015b57806318074eee14610165575b5f80fd5b61013d60048036038101906101389190611a4c565b610323565b005b61015960048036038101906101549190611aac565b6104ee565b005b610163610580565b005b61016d610740565b005b61018960048036038101906101849190611a4c565b610918565b005b610193610bc7565b6040516101a09190611ae6565b60405180910390f35b6101c360048036038101906101be9190611a4c565b610bf1565b005b6101df60048036038101906101da9190611a4c565b610e36565b005b6101e9610f42565b6040516101f69190611ae6565b60405180910390f35b610207610f6c565b6040516102149190611b0e565b60405180910390f35b61023760048036038101906102329190611a4c565b610f84565b005b610241611272565b60405161024e9190611ae6565b60405180910390f35b610271600480360381019061026c9190611aac565b61129c565b005b61027b6113e2565b6040516102889190611b45565b60405180910390f35b6102996113fd565b6040516102a69190611ae6565b60405180910390f35b6102c960048036038101906102c49190611a4c565b611427565b005b6102d361163f565b6040516102e09190611ae6565b60405180910390f35b6102f1611646565b6040516102fe9190611b0e565b60405180910390f35b610321600480360381019061031c9190611a4c565b61165e565b005b427f000000000000000000000000000000000000000000000000000000000000000065ffffffffffff1610156103cd5761035b6113fd565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146103c8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103bf90611bb8565b60405180910390fd5b610454565b6103d5610f42565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480156104145750610412610f6c565b155b610453576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161044a90611bb8565b60405180910390fd5b5b8060025f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061049e60016118a7565b6104a860016118c6565b8073ffffffffffffffffffffffffffffffffffffffff167f3553f1f7ef0242113266a8d183b621bb87468c99237f36b1150b6ab3d688b68660405160405180910390a250565b6104f6610f42565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480156105355750610533610f6c565b155b610574576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161056b90611bb8565b60405180910390fd5b61057d816118c6565b50565b3373ffffffffffffffffffffffffffffffffffffffff1660025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff160361070c5760025f6101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690553360045f015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060045f01601581819054906101000a900463ffffffff168092919061065e90611c03565b91906101000a81548163ffffffff021916908363ffffffff160217905550506106865f6118a7565b60045f0160159054906101000a900463ffffffff1663ffffffff1660045f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f05ad9b3688012cd825c1bfb941e4f5afb2558af6af3deaddf01dbb5e85abdaf960405160405180910390a361073e565b6040517f6c4360f000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b3373ffffffffffffffffffffffffffffffffffffffff1660035f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16036108e45760035f6101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690553360055f015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060055f01601581819054906101000a900463ffffffff168092919061081e90611c03565b91906101000a81548163ffffffff021916908363ffffffff1602179055505060055f0160149054906101000a900460ff161561085e5761085d5f6118c6565b5b60055f0160159054906101000a900463ffffffff1663ffffffff1660055f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f11e1b985c07e1bf3fec9bfd0bdb8c4a8e870ba2b26aa89fe50a6a19132ca10fd60405160405180910390a3610916565b6040517f6c4360f000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b427f000000000000000000000000000000000000000000000000000000000000000065ffffffffffff1610156109c2576109506113fd565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146109bd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109b490611bb8565b60405180910390fd5b610a49565b6109ca610f42565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16148015610a095750610a07610f6c565b155b610a48576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a3f90611bb8565b60405180910390fd5b5b5f8173ffffffffffffffffffffffffffffffffffffffff163b1115610b87573373ffffffffffffffffffffffffffffffffffffffff1660045f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603610acc57610ac7816118e5565b610b82565b6213c68042610adb9190611c37565b600360146101000a81548165ffffffffffff021916908365ffffffffffff160217905550805f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff167f675b770e821ba4aad20be77c58f912d689226272e805637f42f838a6035eed8660405160405180910390a25b610bc4565b806040517fc6322315000000000000000000000000000000000000000000000000000000008152600401610bbb9190611ae6565b60405180910390fd5b50565b5f60065f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b427f000000000000000000000000000000000000000000000000000000000000000065ffffffffffff161015610c9b57610c296113fd565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610c96576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c8d90611bb8565b60405180910390fd5b610d22565b610ca3610f42565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16148015610ce25750610ce0610f6c565b155b610d21576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d1890611bb8565b60405180910390fd5b5b8073ffffffffffffffffffffffffffffffffffffffff165f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603610df657600360146101000a81549065ffffffffffff02191690555f806101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690558073ffffffffffffffffffffffffffffffffffffffff167ff299f61c7e493f99b20cb36c587ca903d085d5206bfe4452d295711e372da02960405160405180910390a2610e33565b806040517fc6322315000000000000000000000000000000000000000000000000000000008152600401610e2a9190611ae6565b60405180910390fd5b50565b610e3e610f42565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16148015610e7d5750610e7b610f6c565b155b610ebc576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610eb390611bb8565b60405180910390fd5b8060035f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff167fff3cad3ee28c342ad5f3d7c8ff8559ee4d21eb48494092b82a1652e443b3420b60405160405180910390a250565b5f60045f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b5f60045f0160149054906101000a900460ff16905090565b427f000000000000000000000000000000000000000000000000000000000000000065ffffffffffff16101561102e57610fbc6113fd565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611029576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161102090611bb8565b60405180910390fd5b6110b5565b611036610f42565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480156110755750611073610f6c565b155b6110b4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110ab90611bb8565b60405180910390fd5b5b42600360149054906101000a900465ffffffffffff1665ffffffffffff161015611213575f600360149054906101000a900465ffffffffffff1665ffffffffffff1603611137576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161112e90611cb4565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff165f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16036111d157600360146101000a81549065ffffffffffff02191690555f806101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556111cc816118e5565b61120e565b806040517fc63223150000000000000000000000000000000000000000000000000000000081526004016112059190611ae6565b60405180910390fd5b61126f565b42600360149054906101000a900465ffffffffffff166112339190611ce3565b6040517f223a6cbb0000000000000000000000000000000000000000000000000000000081526004016112669190611d2b565b60405180910390fd5b50565b5f60055f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b427f000000000000000000000000000000000000000000000000000000000000000065ffffffffffff161015611346576112d46113fd565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611341576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161133890611bb8565b60405180910390fd5b6113cd565b61134e610f42565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614801561138d575061138b610f6c565b155b6113cc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113c390611bb8565b60405180910390fd5b5b6113d6816118a7565b6113df816118c6565b50565b5f60065f0160159054906101000a900463ffffffff16905090565b5f60075f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b427f000000000000000000000000000000000000000000000000000000000000000065ffffffffffff1610156114d15761145f6113fd565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146114cc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114c390611bb8565b60405180910390fd5b611558565b6114d9610f42565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480156115185750611516610f6c565b155b611557576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161154e90611bb8565b60405180910390fd5b5b5f8173ffffffffffffffffffffffffffffffffffffffff163b11156115ff578060015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff167fe8d8e3c7c3ebec0c177d0fe22d223f8b5071db39155104808d45027e368ba77a60405160405180910390a261163c565b806040517f84dbc6cb0000000000000000000000000000000000000000000000000000000081526004016116339190611ae6565b60405180910390fd5b50565b5f30905090565b5f60055f0160149054906101000a900460ff16905090565b611666610f42565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480156116a557506116a3610f6c565b155b6116e4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016116db90611bb8565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1660015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16036118675760015f6101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690558060065f015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060065f01601581819054906101000a900463ffffffff16809291906117c290611c03565b91906101000a81548163ffffffff021916908363ffffffff1602179055505060065f0160159054906101000a900463ffffffff1663ffffffff1660065f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f5e86008a8467d1efccfe6cb6bd49ba7278d6af2745a1e6994e443322a423709360405160405180910390a36118a4565b806040517f84dbc6cb00000000000000000000000000000000000000000000000000000000815260040161189b9190611ae6565b60405180910390fd5b50565b8060045f0160146101000a81548160ff02191690831515021790555050565b8060055f0160146101000a81548160ff02191690831515021790555050565b8060075f015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060075f01601581819054906101000a900463ffffffff168092919061194b90611c03565b91906101000a81548163ffffffff021916908363ffffffff1602179055505060075f0160159054906101000a900463ffffffff1663ffffffff1660075f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167ff7f7c26682668c39fd8c6dbca125bd9466e743b9e38acc3240867c139cd93c3060405160405180910390a350565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f611a1b826119f2565b9050919050565b611a2b81611a11565b8114611a35575f80fd5b50565b5f81359050611a4681611a22565b92915050565b5f60208284031215611a6157611a606119ee565b5b5f611a6e84828501611a38565b91505092915050565b5f8115159050919050565b611a8b81611a77565b8114611a95575f80fd5b50565b5f81359050611aa681611a82565b92915050565b5f60208284031215611ac157611ac06119ee565b5b5f611ace84828501611a98565b91505092915050565b611ae081611a11565b82525050565b5f602082019050611af95f830184611ad7565b92915050565b611b0881611a77565b82525050565b5f602082019050611b215f830184611aff565b92915050565b5f63ffffffff82169050919050565b611b3f81611b27565b82525050565b5f602082019050611b585f830184611b36565b92915050565b5f82825260208201905092915050565b7f416363657373206973206e6f742076616c6964000000000000000000000000005f82015250565b5f611ba2601383611b5e565b9150611bad82611b6e565b602082019050919050565b5f6020820190508181035f830152611bcf81611b96565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f611c0d82611b27565b915063ffffffff8203611c2357611c22611bd6565b5b600182019050919050565b5f819050919050565b5f611c4182611c2e565b9150611c4c83611c2e565b9250828201905080821115611c6457611c63611bd6565b5b92915050565b7f546865207265717565737420697320696e76616c6964000000000000000000005f82015250565b5f611c9e601683611b5e565b9150611ca982611c6a565b602082019050919050565b5f6020820190508181035f830152611ccb81611c92565b9050919050565b5f65ffffffffffff82169050919050565b5f611ced82611cd2565b9150611cf883611cd2565b9250828203905065ffffffffffff811115611d1657611d15611bd6565b5b92915050565b611d2581611cd2565b82525050565b5f602082019050611d3e5f830184611d1c565b9291505056fea26469706673582212201f6285684bbf7870012b46d7bb1f2de30f79d1140eaea32964386850b9eca37264736f6c63430008140033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x11F JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6CF106D7 GT PUSH2 0xAB JUMPI DUP1 PUSH4 0xC5A1C5C1 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xC5A1C5C1 EQ PUSH2 0x291 JUMPI DUP1 PUSH4 0xCA4CCE68 EQ PUSH2 0x2AF JUMPI DUP1 PUSH4 0xE47A9D46 EQ PUSH2 0x2CB JUMPI DUP1 PUSH4 0xE4F3E947 EQ PUSH2 0x2E9 JUMPI DUP1 PUSH4 0xEE7126C3 EQ PUSH2 0x307 JUMPI PUSH2 0x11F JUMP JUMPDEST DUP1 PUSH4 0x6CF106D7 EQ PUSH2 0x1FF JUMPI DUP1 PUSH4 0x9C20FE71 EQ PUSH2 0x21D JUMPI DUP1 PUSH4 0xA53DA00B EQ PUSH2 0x239 JUMPI DUP1 PUSH4 0xB5C09C68 EQ PUSH2 0x257 JUMPI DUP1 PUSH4 0xC387B49C EQ PUSH2 0x273 JUMPI PUSH2 0x11F JUMP JUMPDEST DUP1 PUSH4 0x1F72783A GT PUSH2 0xF2 JUMPI DUP1 PUSH4 0x1F72783A EQ PUSH2 0x16F JUMPI DUP1 PUSH4 0x289B3C0D EQ PUSH2 0x18B JUMPI DUP1 PUSH4 0x52E305DE EQ PUSH2 0x1A9 JUMPI DUP1 PUSH4 0x544FA93E EQ PUSH2 0x1C5 JUMPI DUP1 PUSH4 0x66410997 EQ PUSH2 0x1E1 JUMPI PUSH2 0x11F JUMP JUMPDEST DUP1 PUSH4 0x54203BD EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0x6E99D93 EQ PUSH2 0x13F JUMPI DUP1 PUSH4 0xDF4C390 EQ PUSH2 0x15B JUMPI DUP1 PUSH4 0x18074EEE EQ PUSH2 0x165 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x13D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x138 SWAP2 SWAP1 PUSH2 0x1A4C JUMP JUMPDEST PUSH2 0x323 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x159 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x154 SWAP2 SWAP1 PUSH2 0x1AAC JUMP JUMPDEST PUSH2 0x4EE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x163 PUSH2 0x580 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x16D PUSH2 0x740 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x189 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x184 SWAP2 SWAP1 PUSH2 0x1A4C JUMP JUMPDEST PUSH2 0x918 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x193 PUSH2 0xBC7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A0 SWAP2 SWAP1 PUSH2 0x1AE6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1BE SWAP2 SWAP1 PUSH2 0x1A4C JUMP JUMPDEST PUSH2 0xBF1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1DF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1DA SWAP2 SWAP1 PUSH2 0x1A4C JUMP JUMPDEST PUSH2 0xE36 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1E9 PUSH2 0xF42 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F6 SWAP2 SWAP1 PUSH2 0x1AE6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x207 PUSH2 0xF6C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x214 SWAP2 SWAP1 PUSH2 0x1B0E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x237 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x232 SWAP2 SWAP1 PUSH2 0x1A4C JUMP JUMPDEST PUSH2 0xF84 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x241 PUSH2 0x1272 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x24E SWAP2 SWAP1 PUSH2 0x1AE6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x271 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x26C SWAP2 SWAP1 PUSH2 0x1AAC JUMP JUMPDEST PUSH2 0x129C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x27B PUSH2 0x13E2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x288 SWAP2 SWAP1 PUSH2 0x1B45 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x299 PUSH2 0x13FD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A6 SWAP2 SWAP1 PUSH2 0x1AE6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2C9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2C4 SWAP2 SWAP1 PUSH2 0x1A4C JUMP JUMPDEST PUSH2 0x1427 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2D3 PUSH2 0x163F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2E0 SWAP2 SWAP1 PUSH2 0x1AE6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2F1 PUSH2 0x1646 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2FE SWAP2 SWAP1 PUSH2 0x1B0E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x321 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x31C SWAP2 SWAP1 PUSH2 0x1A4C JUMP JUMPDEST PUSH2 0x165E JUMP JUMPDEST STOP JUMPDEST TIMESTAMP PUSH32 0x0 PUSH6 0xFFFFFFFFFFFF AND LT ISZERO PUSH2 0x3CD JUMPI PUSH2 0x35B PUSH2 0x13FD JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x3C8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3BF SWAP1 PUSH2 0x1BB8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x454 JUMP JUMPDEST PUSH2 0x3D5 PUSH2 0xF42 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x414 JUMPI POP PUSH2 0x412 PUSH2 0xF6C JUMP JUMPDEST ISZERO JUMPDEST PUSH2 0x453 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x44A SWAP1 PUSH2 0x1BB8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST DUP1 PUSH1 0x2 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x49E PUSH1 0x1 PUSH2 0x18A7 JUMP JUMPDEST PUSH2 0x4A8 PUSH1 0x1 PUSH2 0x18C6 JUMP JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x3553F1F7EF0242113266A8D183B621BB87468C99237F36B1150B6AB3D688B686 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH2 0x4F6 PUSH2 0xF42 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x535 JUMPI POP PUSH2 0x533 PUSH2 0xF6C JUMP JUMPDEST ISZERO JUMPDEST PUSH2 0x574 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x56B SWAP1 PUSH2 0x1BB8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x57D DUP2 PUSH2 0x18C6 JUMP JUMPDEST POP JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x70C JUMPI PUSH1 0x2 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE CALLER PUSH1 0x4 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x4 PUSH0 ADD PUSH1 0x15 DUP2 DUP2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x65E SWAP1 PUSH2 0x1C03 JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP PUSH2 0x686 PUSH0 PUSH2 0x18A7 JUMP JUMPDEST PUSH1 0x4 PUSH0 ADD PUSH1 0x15 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND PUSH1 0x4 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x5AD9B3688012CD825C1BFB941E4F5AFB2558AF6AF3DEADDF01DBB5E85ABDAF9 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x73E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x6C4360F000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x3 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x8E4 JUMPI PUSH1 0x3 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE CALLER PUSH1 0x5 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x5 PUSH0 ADD PUSH1 0x15 DUP2 DUP2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x81E SWAP1 PUSH2 0x1C03 JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP PUSH1 0x5 PUSH0 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x85E JUMPI PUSH2 0x85D PUSH0 PUSH2 0x18C6 JUMP JUMPDEST JUMPDEST PUSH1 0x5 PUSH0 ADD PUSH1 0x15 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND PUSH1 0x5 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x11E1B985C07E1BF3FEC9BFD0BDB8C4A8E870BA2B26AA89FE50A6A19132CA10FD PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x916 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x6C4360F000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST TIMESTAMP PUSH32 0x0 PUSH6 0xFFFFFFFFFFFF AND LT ISZERO PUSH2 0x9C2 JUMPI PUSH2 0x950 PUSH2 0x13FD JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x9BD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9B4 SWAP1 PUSH2 0x1BB8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA49 JUMP JUMPDEST PUSH2 0x9CA PUSH2 0xF42 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0xA09 JUMPI POP PUSH2 0xA07 PUSH2 0xF6C JUMP JUMPDEST ISZERO JUMPDEST PUSH2 0xA48 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA3F SWAP1 PUSH2 0x1BB8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST PUSH0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT ISZERO PUSH2 0xB87 JUMPI CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x4 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xACC JUMPI PUSH2 0xAC7 DUP2 PUSH2 0x18E5 JUMP JUMPDEST PUSH2 0xB82 JUMP JUMPDEST PUSH3 0x13C680 TIMESTAMP PUSH2 0xADB SWAP2 SWAP1 PUSH2 0x1C37 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH6 0xFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH6 0xFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x675B770E821BA4AAD20BE77C58F912D689226272E805637F42F838A6035EED86 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMPDEST PUSH2 0xBC4 JUMP JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH32 0xC632231500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBBB SWAP2 SWAP1 PUSH2 0x1AE6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH1 0x6 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST TIMESTAMP PUSH32 0x0 PUSH6 0xFFFFFFFFFFFF AND LT ISZERO PUSH2 0xC9B JUMPI PUSH2 0xC29 PUSH2 0x13FD JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xC96 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC8D SWAP1 PUSH2 0x1BB8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xD22 JUMP JUMPDEST PUSH2 0xCA3 PUSH2 0xF42 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0xCE2 JUMPI POP PUSH2 0xCE0 PUSH2 0xF6C JUMP JUMPDEST ISZERO JUMPDEST PUSH2 0xD21 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD18 SWAP1 PUSH2 0x1BB8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xDF6 JUMPI PUSH1 0x3 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH6 0xFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xF299F61C7E493F99B20CB36C587CA903D085D5206BFE4452D295711E372DA029 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH2 0xE33 JUMP JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH32 0xC632231500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE2A SWAP2 SWAP1 PUSH2 0x1AE6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0xE3E PUSH2 0xF42 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0xE7D JUMPI POP PUSH2 0xE7B PUSH2 0xF6C JUMP JUMPDEST ISZERO JUMPDEST PUSH2 0xEBC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEB3 SWAP1 PUSH2 0x1BB8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x3 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xFF3CAD3EE28C342AD5F3D7C8FF8559EE4D21EB48494092B82A1652E443B3420B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH0 PUSH1 0x4 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x4 PUSH0 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST TIMESTAMP PUSH32 0x0 PUSH6 0xFFFFFFFFFFFF AND LT ISZERO PUSH2 0x102E JUMPI PUSH2 0xFBC PUSH2 0x13FD JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1029 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1020 SWAP1 PUSH2 0x1BB8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x10B5 JUMP JUMPDEST PUSH2 0x1036 PUSH2 0xF42 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x1075 JUMPI POP PUSH2 0x1073 PUSH2 0xF6C JUMP JUMPDEST ISZERO JUMPDEST PUSH2 0x10B4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10AB SWAP1 PUSH2 0x1BB8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST TIMESTAMP PUSH1 0x3 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH6 0xFFFFFFFFFFFF AND PUSH6 0xFFFFFFFFFFFF AND LT ISZERO PUSH2 0x1213 JUMPI PUSH0 PUSH1 0x3 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH6 0xFFFFFFFFFFFF AND PUSH6 0xFFFFFFFFFFFF AND SUB PUSH2 0x1137 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x112E SWAP1 PUSH2 0x1CB4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x11D1 JUMPI PUSH1 0x3 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH6 0xFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH2 0x11CC DUP2 PUSH2 0x18E5 JUMP JUMPDEST PUSH2 0x120E JUMP JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH32 0xC632231500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1205 SWAP2 SWAP1 PUSH2 0x1AE6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x126F JUMP JUMPDEST TIMESTAMP PUSH1 0x3 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH6 0xFFFFFFFFFFFF AND PUSH2 0x1233 SWAP2 SWAP1 PUSH2 0x1CE3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x223A6CBB00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1266 SWAP2 SWAP1 PUSH2 0x1D2B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST TIMESTAMP PUSH32 0x0 PUSH6 0xFFFFFFFFFFFF AND LT ISZERO PUSH2 0x1346 JUMPI PUSH2 0x12D4 PUSH2 0x13FD JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1341 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1338 SWAP1 PUSH2 0x1BB8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x13CD JUMP JUMPDEST PUSH2 0x134E PUSH2 0xF42 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x138D JUMPI POP PUSH2 0x138B PUSH2 0xF6C JUMP JUMPDEST ISZERO JUMPDEST PUSH2 0x13CC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13C3 SWAP1 PUSH2 0x1BB8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST PUSH2 0x13D6 DUP2 PUSH2 0x18A7 JUMP JUMPDEST PUSH2 0x13DF DUP2 PUSH2 0x18C6 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH1 0x6 PUSH0 ADD PUSH1 0x15 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x7 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST TIMESTAMP PUSH32 0x0 PUSH6 0xFFFFFFFFFFFF AND LT ISZERO PUSH2 0x14D1 JUMPI PUSH2 0x145F PUSH2 0x13FD JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x14CC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14C3 SWAP1 PUSH2 0x1BB8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1558 JUMP JUMPDEST PUSH2 0x14D9 PUSH2 0xF42 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x1518 JUMPI POP PUSH2 0x1516 PUSH2 0xF6C JUMP JUMPDEST ISZERO JUMPDEST PUSH2 0x1557 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x154E SWAP1 PUSH2 0x1BB8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST PUSH0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT ISZERO PUSH2 0x15FF JUMPI DUP1 PUSH1 0x1 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xE8D8E3C7C3EBEC0C177D0FE22D223F8B5071DB39155104808D45027E368BA77A PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH2 0x163C JUMP JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH32 0x84DBC6CB00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1633 SWAP2 SWAP1 PUSH2 0x1AE6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 ADDRESS SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1666 PUSH2 0xF42 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x16A5 JUMPI POP PUSH2 0x16A3 PUSH2 0xF6C JUMP JUMPDEST ISZERO JUMPDEST PUSH2 0x16E4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16DB SWAP1 PUSH2 0x1BB8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1867 JUMPI PUSH1 0x1 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE DUP1 PUSH1 0x6 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x6 PUSH0 ADD PUSH1 0x15 DUP2 DUP2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x17C2 SWAP1 PUSH2 0x1C03 JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP PUSH1 0x6 PUSH0 ADD PUSH1 0x15 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND PUSH1 0x6 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x5E86008A8467D1EFCCFE6CB6BD49BA7278D6AF2745A1E6994E443322A4237093 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x18A4 JUMP JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH32 0x84DBC6CB00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x189B SWAP2 SWAP1 PUSH2 0x1AE6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMP JUMPDEST DUP1 PUSH1 0x4 PUSH0 ADD PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST DUP1 PUSH1 0x5 PUSH0 ADD PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST DUP1 PUSH1 0x7 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x7 PUSH0 ADD PUSH1 0x15 DUP2 DUP2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x194B SWAP1 PUSH2 0x1C03 JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP PUSH1 0x7 PUSH0 ADD PUSH1 0x15 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND PUSH1 0x7 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xF7F7C26682668C39FD8C6DBCA125BD9466E743B9E38ACC3240867C139CD93C30 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1A1B DUP3 PUSH2 0x19F2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A2B DUP2 PUSH2 0x1A11 JUMP JUMPDEST DUP2 EQ PUSH2 0x1A35 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1A46 DUP2 PUSH2 0x1A22 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A61 JUMPI PUSH2 0x1A60 PUSH2 0x19EE JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1A6E DUP5 DUP3 DUP6 ADD PUSH2 0x1A38 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A8B DUP2 PUSH2 0x1A77 JUMP JUMPDEST DUP2 EQ PUSH2 0x1A95 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1AA6 DUP2 PUSH2 0x1A82 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1AC1 JUMPI PUSH2 0x1AC0 PUSH2 0x19EE JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1ACE DUP5 DUP3 DUP6 ADD PUSH2 0x1A98 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1AE0 DUP2 PUSH2 0x1A11 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1AF9 PUSH0 DUP4 ADD DUP5 PUSH2 0x1AD7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1B08 DUP2 PUSH2 0x1A77 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1B21 PUSH0 DUP4 ADD DUP5 PUSH2 0x1AFF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH4 0xFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1B3F DUP2 PUSH2 0x1B27 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1B58 PUSH0 DUP4 ADD DUP5 PUSH2 0x1B36 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x416363657373206973206E6F742076616C696400000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1BA2 PUSH1 0x13 DUP4 PUSH2 0x1B5E JUMP JUMPDEST SWAP2 POP PUSH2 0x1BAD DUP3 PUSH2 0x1B6E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1BCF DUP2 PUSH2 0x1B96 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1C0D DUP3 PUSH2 0x1B27 JUMP JUMPDEST SWAP2 POP PUSH4 0xFFFFFFFF DUP3 SUB PUSH2 0x1C23 JUMPI PUSH2 0x1C22 PUSH2 0x1BD6 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1C41 DUP3 PUSH2 0x1C2E JUMP JUMPDEST SWAP2 POP PUSH2 0x1C4C DUP4 PUSH2 0x1C2E JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1C64 JUMPI PUSH2 0x1C63 PUSH2 0x1BD6 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x546865207265717565737420697320696E76616C696400000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1C9E PUSH1 0x16 DUP4 PUSH2 0x1B5E JUMP JUMPDEST SWAP2 POP PUSH2 0x1CA9 DUP3 PUSH2 0x1C6A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1CCB DUP2 PUSH2 0x1C92 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH6 0xFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1CED DUP3 PUSH2 0x1CD2 JUMP JUMPDEST SWAP2 POP PUSH2 0x1CF8 DUP4 PUSH2 0x1CD2 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP PUSH6 0xFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1D16 JUMPI PUSH2 0x1D15 PUSH2 0x1BD6 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1D25 DUP2 PUSH2 0x1CD2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1D3E PUSH0 DUP4 ADD DUP5 PUSH2 0x1D1C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x1F PUSH3 0x85684B 0xBF PUSH25 0x70012B46D7BB1F2DE30F79D1140EAEA32964386850B9ECA372 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ",
							"sourceMap": "221:7772:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4553:252;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;7441:107;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4813:386;;;:::i;:::-;;5600:481;;;:::i;:::-;;2726:556;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;7070:100;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3928:374;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5420:172;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5207:101;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5316:96;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3290:630;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;6089:109;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7290:143;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;7178:104;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4310:114;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6320:315;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4436:109;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6206:104;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6643:419;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4553:252;1956:15;1936:17;:35;;;1932:227;;;2010:20;:18;:20::i;:::-;1996:34;;:10;:34;;;1988:66;;;;;;;;;;;;:::i;:::-;;;;;;;;;1932:227;;;2096:17;:15;:17::i;:::-;2082:31;;:10;:31;;;:53;;;;;2118:17;:15;:17::i;:::-;2117:18;2082:53;2074:85;;;;;;;;;;;;:::i;:::-;;;;;;;;;1932:227;4653:12:::1;4634:16;;:31;;;;;;;;;;;;;;;;;;4676:24;4695:4;4676:18;:24::i;:::-;4711:28;4734:4;4711:22;:28::i;:::-;4784:12;4757:40;;;;;;;;;;;;4553:252:::0;:::o;7441:107::-;2247:17;:15;:17::i;:::-;2233:31;;:10;:31;;;:53;;;;;2269:17;:15;:17::i;:::-;2268:18;2233:53;2225:85;;;;;;;;;;;;:::i;:::-;;;;;;;;;7511:29:::1;7534:5;7511:22;:29::i;:::-;7441:107:::0;:::o;4813:386::-;4884:10;4864:30;;:16;;;;;;;;;;;:30;;;4860:331;;4918:16;;4911:23;;;;;;;;;;;4970:10;4949;:18;;;:31;;;;;;;;;;;;;;;;;;4995:10;:16;;;:18;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;5028:25;5047:5;5028:18;:25::i;:::-;5123:10;:16;;;;;;;;;;;;5075:65;;5103:10;:18;;;;;;;;;;;;5075:65;;;;;;;;;;;;4860:331;;;5167:24;;;;;;;;;;;;;;4860:331;4813:386::o;5600:481::-;5680:10;5655:35;;:21;;;;;;;;;;;:35;;;5651:422;;5714:21;;5707:28;;;;;;;;;;;5775:10;5750:14;:22;;;:35;;;;;;;;;;;;;;;;;;5800:14;:20;;;:22;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;5841:14;:20;;;;;;;;;;;;5837:89;;;5881:29;5904:5;5881:22;:29::i;:::-;5837:89;6001:14;:20;;;;;;;;;;;;5945:77;;5977:14;:22;;;;;;;;;;;;5945:77;;;;;;;;;;;;5651:422;;;6049:24;;;;;;;;;;;;;;5651:422;5600:481::o;2726:556::-;1956:15;1936:17;:35;;;1932:227;;;2010:20;:18;:20::i;:::-;1996:34;;:10;:34;;;1988:66;;;;;;;;;;;;:::i;:::-;;;;;;;;;1932:227;;;2096:17;:15;:17::i;:::-;2082:31;;:10;:31;;;:53;;;;;2118:17;:15;:17::i;:::-;2117:18;2082:53;2074:85;;;;;;;;;;;;:::i;:::-;;;;;;;;;1932:227;2843:1:::1;2817:11;:23;;;:27;2813:459;;;2887:10;2865:32;;:10;:18;;;;;;;;;;;;:32;;::::0;2861:341:::1;;2918:37;2943:11;2918:24;:37::i;:::-;2861:341;;;3054:7;3036:15;:25;;;;:::i;:::-;2998:28;;:64;;;;;;;;;;;;;;;;;;3106:11;3081:22;::::0;:36:::1;;;;;;;;;;;;;;;;;;3174:11;3141:45;;;;;;;;;;;;2861:341;2813:459;;;3260:11;3228:44;;;;;;;;;;;:::i;:::-;;;;;;;;2813:459;2726:556:::0;:::o;7070:100::-;7116:7;7143:11;:19;;;;;;;;;;;;7136:26;;7070:100;:::o;3928:374::-;1956:15;1936:17;:35;;;1932:227;;;2010:20;:18;:20::i;:::-;1996:34;;:10;:34;;;1988:66;;;;;;;;;;;;:::i;:::-;;;;;;;;;1932:227;;;2096:17;:15;:17::i;:::-;2082:31;;:10;:31;;;:53;;;;;2118:17;:15;:17::i;:::-;2117:18;2082:53;2074:85;;;;;;;;;;;;:::i;:::-;;;;;;;;;1932:227;4045:8:::1;4019:34;;:22;::::0;::::1;;;;;;;;:34;;::::0;4015:279:::1;;4081:28;;4074:35;;;;;;;;;;;4135:22;::::0;4128:29:::1;;;;;;;;;;;4217:8;4182:44;;;;;;;;;;;;4015:279;;;4285:8;4253:41;;;;;;;;;;;:::i;:::-;;;;;;;;4015:279;3928:374:::0;:::o;5420:172::-;2247:17;:15;:17::i;:::-;2233:31;;:10;:31;;;:53;;;;;2269:17;:15;:17::i;:::-;2268:18;2233:53;2225:85;;;;;;;;;;;;:::i;:::-;;;;;;;;;5524:5:::1;5500:21;;:29;;;;;;;;;;;;;;;;;;5578:5;5547:37;;;;;;;;;;;;5420:172:::0;:::o;5207:101::-;5255:7;5282:10;:18;;;;;;;;;;;;5275:25;;5207:101;:::o;5316:96::-;5364:4;5388:10;:16;;;;;;;;;;;;5381:23;;5316:96;:::o;3290:630::-;1956:15;1936:17;:35;;;1932:227;;;2010:20;:18;:20::i;:::-;1996:34;;:10;:34;;;1988:66;;;;;;;;;;;;:::i;:::-;;;;;;;;;1932:227;;;2096:17;:15;:17::i;:::-;2082:31;;:10;:31;;;:53;;;;;2118:17;:15;:17::i;:::-;2117:18;2082:53;2074:85;;;;;;;;;;;;:::i;:::-;;;;;;;;;1932:227;3407:15:::1;3376:28;;;;;;;;;;;:46;;;3372:540;;;3479:1;3447:28;;;;;;;;;;;:33;;::::0;3439:67:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;3551:8;3525:34;;:22;::::0;::::1;;;;;;;;:34;;::::0;3521:267:::1;;3587:28;;3580:35;;;;;;;;;;;3641:22;::::0;3634:29:::1;;;;;;;;;;;3682:34;3707:8;3682:24;:34::i;:::-;3521:267;;;3779:8;3747:41;;;;;;;;;;;:::i;:::-;;;;;;;;3521:267;3372:540;;;3895:15;3857:28;;;;;;;;;;;:54;;;;:::i;:::-;3815:97;;;;;;;;;;;:::i;:::-;;;;;;;;3372:540;3290:630:::0;:::o;6089:109::-;6141:7;6168:14;:22;;;;;;;;;;;;6161:29;;6089:109;:::o;7290:143::-;1956:15;1936:17;:35;;;1932:227;;;2010:20;:18;:20::i;:::-;1996:34;;:10;:34;;;1988:66;;;;;;;;;;;;:::i;:::-;;;;;;;;;1932:227;;;2096:17;:15;:17::i;:::-;2082:31;;:10;:31;;;:53;;;;;2118:17;:15;:17::i;:::-;2117:18;2082:53;2074:85;;;;;;;;;;;;:::i;:::-;;;;;;;;;1932:227;7360:25:::1;7379:5;7360:18;:25::i;:::-;7396:29;7419:5;7396:22;:29::i;:::-;7290:143:::0;:::o;7178:104::-;7231:6;7257:11;:17;;;;;;;;;;;;7250:24;;7178:104;:::o;4310:114::-;4361:10;4395:9;:17;;;;;;;;;;;;4388:24;;4310:114;:::o;6320:315::-;1956:15;1936:17;:35;;;1932:227;;;2010:20;:18;:20::i;:::-;1996:34;;:10;:34;;;1988:66;;;;;;;;;;;;:::i;:::-;;;;;;;;;1932:227;;;2096:17;:15;:17::i;:::-;2082:31;;:10;:31;;;:53;;;;;2118:17;:15;:17::i;:::-;2117:18;2082:53;2074:85;;;;;;;;;;;;:::i;:::-;;;;;;;;;1932:227;6449:1:::1;6422:12;:24;;;:28;6418:207;;;6487:12;6467:17;;:32;;;;;;;;;;;;;;;;;;6546:12;6519:40;;;;;;;;;;;;6418:207;;;6612:12;6586:39;;;;;;;;;;;:::i;:::-;;;;;;;;6418:207;6320:315:::0;:::o;4436:109::-;4488:7;4528:4;4512:21;;4436:109;:::o;6206:104::-;6258:4;6282:14;:20;;;;;;;;;;;;6275:27;;6206:104;:::o;6643:419::-;2247:17;:15;:17::i;:::-;2233:31;;:10;:31;;;:53;;;;;2269:17;:15;:17::i;:::-;2268:18;2233:53;2225:85;;;;;;;;;;;;:::i;:::-;;;;;;;;;6765:12:::1;6744:33;;:17;;;;;;;;;;;:33;;::::0;6740:314:::1;;6801:17;;6794:24;;;;;;;;;;;6855:12;6833:11;:19;;;:34;;;;;;;;;;;;;;;;;;6882:11;:17;;;:19;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;6970:11;:17;;;;;;;;;;;;6921:67;;6949:11;:19;;;;;;;;;;;;6921:67;;;;;;;;;;;;6740:314;;;7041:12;7015:39;;;;;;;;;;;:::i;:::-;;;;;;;;6740:314;6643:419:::0;:::o;7788:91::-;7866:5;7847:10;:16;;;:24;;;;;;;;;;;;;;;;;;7788:91;:::o;7887:99::-;7973:5;7950:14;:20;;;:28;;;;;;;;;;;;;;;;;;7887:99;:::o;7560:220::-;7651:8;7631:9;:17;;;:28;;;;;;;;;;;;;;;;;;7670:9;:15;;;:17;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;7756:9;:15;;;;;;;;;;;;7703:69;;7737:9;:17;;;;;;;;;;;;7703:69;;;;;;;;;;;;7560:220;:::o;88:117:5:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:329::-;900:6;949:2;937:9;928:7;924:23;920:32;917:119;;;955:79;;:::i;:::-;917:119;1075:1;1100:53;1145:7;1136:6;1125:9;1121:22;1100:53;:::i;:::-;1090:63;;1046:117;841:329;;;;:::o;1176:90::-;1210:7;1253:5;1246:13;1239:21;1228:32;;1176:90;;;:::o;1272:116::-;1342:21;1357:5;1342:21;:::i;:::-;1335:5;1332:32;1322:60;;1378:1;1375;1368:12;1322:60;1272:116;:::o;1394:133::-;1437:5;1475:6;1462:20;1453:29;;1491:30;1515:5;1491:30;:::i;:::-;1394:133;;;;:::o;1533:323::-;1589:6;1638:2;1626:9;1617:7;1613:23;1609:32;1606:119;;;1644:79;;:::i;:::-;1606:119;1764:1;1789:50;1831:7;1822:6;1811:9;1807:22;1789:50;:::i;:::-;1779:60;;1735:114;1533:323;;;;:::o;1862:118::-;1949:24;1967:5;1949:24;:::i;:::-;1944:3;1937:37;1862:118;;:::o;1986:222::-;2079:4;2117:2;2106:9;2102:18;2094:26;;2130:71;2198:1;2187:9;2183:17;2174:6;2130:71;:::i;:::-;1986:222;;;;:::o;2214:109::-;2295:21;2310:5;2295:21;:::i;:::-;2290:3;2283:34;2214:109;;:::o;2329:210::-;2416:4;2454:2;2443:9;2439:18;2431:26;;2467:65;2529:1;2518:9;2514:17;2505:6;2467:65;:::i;:::-;2329:210;;;;:::o;2545:93::-;2581:7;2621:10;2614:5;2610:22;2599:33;;2545:93;;;:::o;2644:115::-;2729:23;2746:5;2729:23;:::i;:::-;2724:3;2717:36;2644:115;;:::o;2765:218::-;2856:4;2894:2;2883:9;2879:18;2871:26;;2907:69;2973:1;2962:9;2958:17;2949:6;2907:69;:::i;:::-;2765:218;;;;:::o;2989:169::-;3073:11;3107:6;3102:3;3095:19;3147:4;3142:3;3138:14;3123:29;;2989:169;;;;:::o;3164:::-;3304:21;3300:1;3292:6;3288:14;3281:45;3164:169;:::o;3339:366::-;3481:3;3502:67;3566:2;3561:3;3502:67;:::i;:::-;3495:74;;3578:93;3667:3;3578:93;:::i;:::-;3696:2;3691:3;3687:12;3680:19;;3339:366;;;:::o;3711:419::-;3877:4;3915:2;3904:9;3900:18;3892:26;;3964:9;3958:4;3954:20;3950:1;3939:9;3935:17;3928:47;3992:131;4118:4;3992:131;:::i;:::-;3984:139;;3711:419;;;:::o;4136:180::-;4184:77;4181:1;4174:88;4281:4;4278:1;4271:15;4305:4;4302:1;4295:15;4322:175;4360:3;4383:23;4400:5;4383:23;:::i;:::-;4374:32;;4428:10;4421:5;4418:21;4415:47;;4442:18;;:::i;:::-;4415:47;4489:1;4482:5;4478:13;4471:20;;4322:175;;;:::o;4503:77::-;4540:7;4569:5;4558:16;;4503:77;;;:::o;4586:191::-;4626:3;4645:20;4663:1;4645:20;:::i;:::-;4640:25;;4679:20;4697:1;4679:20;:::i;:::-;4674:25;;4722:1;4719;4715:9;4708:16;;4743:3;4740:1;4737:10;4734:36;;;4750:18;;:::i;:::-;4734:36;4586:191;;;;:::o;4783:172::-;4923:24;4919:1;4911:6;4907:14;4900:48;4783:172;:::o;4961:366::-;5103:3;5124:67;5188:2;5183:3;5124:67;:::i;:::-;5117:74;;5200:93;5289:3;5200:93;:::i;:::-;5318:2;5313:3;5309:12;5302:19;;4961:366;;;:::o;5333:419::-;5499:4;5537:2;5526:9;5522:18;5514:26;;5586:9;5580:4;5576:20;5572:1;5561:9;5557:17;5550:47;5614:131;5740:4;5614:131;:::i;:::-;5606:139;;5333:419;;;:::o;5758:97::-;5794:7;5834:14;5827:5;5823:26;5812:37;;5758:97;;;:::o;5861:204::-;5900:4;5920:19;5937:1;5920:19;:::i;:::-;5915:24;;5953:19;5970:1;5953:19;:::i;:::-;5948:24;;5996:1;5993;5989:9;5981:17;;6020:14;6014:4;6011:24;6008:50;;;6038:18;;:::i;:::-;6008:50;5861:204;;;;:::o;6071:115::-;6156:23;6173:5;6156:23;:::i;:::-;6151:3;6144:36;6071:115;;:::o;6192:218::-;6283:4;6321:2;6310:9;6306:18;6298:26;;6334:69;6400:1;6389:9;6385:17;6376:6;6334:69;:::i;:::-;6192:218;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1509200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"cancelPendingRepublicAddress(address)": "infinite",
								"getAuthorityAddress()": "445",
								"getGovernance()": "2565",
								"getPresidentAdd()": "2631",
								"getPresidentBan()": "2552",
								"getPrimeMinisterAdd()": "2587",
								"getPrimeMinisterBan()": "2617",
								"getRepublicAddress()": "2542",
								"getgovernanceVersion()": "2640",
								"setPendigPresident(address)": "infinite",
								"setPendingGovernanceContractAddress(address)": "infinite",
								"setPendingPrimeMinister(address)": "30426",
								"setPendingRepublicAddress(address)": "infinite",
								"setPresidentBaned(bool)": "infinite",
								"setPrimeMinister(bool)": "29265",
								"transferGovernanceContractAddress(address)": "infinite",
								"transferPresident()": "107786",
								"transferPrimeMinister()": "110019",
								"transferRepublicAddress(address)": "infinite"
							},
							"internal": {
								"_setPresidentBaned(bool)": "24333",
								"_setPrimeMinisterBaned(bool)": "24333",
								"_transferRepublicAddress(address)": "56825"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 221,
									"end": 7993,
									"name": "PUSH",
									"source": 3,
									"value": "A0"
								},
								{
									"begin": 221,
									"end": 7993,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 221,
									"end": 7993,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 2559,
									"end": 2718,
									"name": "CALLVALUE",
									"source": 3
								},
								{
									"begin": 2559,
									"end": 2718,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 2559,
									"end": 2718,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 2559,
									"end": 2718,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 2559,
									"end": 2718,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 2559,
									"end": 2718,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 2559,
									"end": 2718,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 2559,
									"end": 2718,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 2559,
									"end": 2718,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 2559,
									"end": 2718,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 2559,
									"end": 2718,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 2629,
									"end": 2638,
									"name": "PUSH",
									"source": 3,
									"value": "16A8C800"
								},
								{
									"begin": 2611,
									"end": 2626,
									"name": "TIMESTAMP",
									"source": 3
								},
								{
									"begin": 2611,
									"end": 2638,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 2611,
									"end": 2638,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 2611,
									"end": 2638,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 2611,
									"end": 2638,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "5"
								},
								{
									"begin": 2611,
									"end": 2638,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 2611,
									"end": 2638,
									"name": "tag",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 2611,
									"end": 2638,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 2584,
									"end": 2639,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFF"
								},
								{
									"begin": 2584,
									"end": 2639,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 2584,
									"end": 2639,
									"name": "PUSH",
									"source": 3,
									"value": "80"
								},
								{
									"begin": 2584,
									"end": 2639,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 2584,
									"end": 2639,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFF"
								},
								{
									"begin": 2584,
									"end": 2639,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 2584,
									"end": 2639,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 2584,
									"end": 2639,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 2584,
									"end": 2639,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 2584,
									"end": 2639,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 2671,
									"end": 2681,
									"name": "CALLER",
									"source": 3
								},
								{
									"begin": 2650,
									"end": 2660,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 2650,
									"end": 2668,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 2650,
									"end": 2668,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 2650,
									"end": 2668,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 2650,
									"end": 2681,
									"name": "PUSH",
									"source": 3,
									"value": "100"
								},
								{
									"begin": 2650,
									"end": 2681,
									"name": "EXP",
									"source": 3
								},
								{
									"begin": 2650,
									"end": 2681,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 2650,
									"end": 2681,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 2650,
									"end": 2681,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 2650,
									"end": 2681,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2650,
									"end": 2681,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 2650,
									"end": 2681,
									"name": "NOT",
									"source": 3
								},
								{
									"begin": 2650,
									"end": 2681,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 2650,
									"end": 2681,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 2650,
									"end": 2681,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 2650,
									"end": 2681,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2650,
									"end": 2681,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 2650,
									"end": 2681,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 2650,
									"end": 2681,
									"name": "OR",
									"source": 3
								},
								{
									"begin": 2650,
									"end": 2681,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 2650,
									"end": 2681,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 2650,
									"end": 2681,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 2692,
									"end": 2702,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 2692,
									"end": 2708,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 2692,
									"end": 2708,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 2692,
									"end": 2708,
									"name": "PUSH",
									"source": 3,
									"value": "15"
								},
								{
									"begin": 2692,
									"end": 2710,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 2692,
									"end": 2710,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 2692,
									"end": 2710,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 2692,
									"end": 2710,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 2692,
									"end": 2710,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 2692,
									"end": 2710,
									"name": "PUSH",
									"source": 3,
									"value": "100"
								},
								{
									"begin": 2692,
									"end": 2710,
									"name": "EXP",
									"source": 3
								},
								{
									"begin": 2692,
									"end": 2710,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 2692,
									"end": 2710,
									"name": "DIV",
									"source": 3
								},
								{
									"begin": 2692,
									"end": 2710,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFF"
								},
								{
									"begin": 2692,
									"end": 2710,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 2692,
									"end": 2710,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 2692,
									"end": 2710,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 2692,
									"end": 2710,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 2692,
									"end": 2710,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 2692,
									"end": 2710,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "6"
								},
								{
									"begin": 2692,
									"end": 2710,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 2692,
									"end": 2710,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "7"
								},
								{
									"begin": 2692,
									"end": 2710,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 2692,
									"end": 2710,
									"name": "tag",
									"source": 3,
									"value": "6"
								},
								{
									"begin": 2692,
									"end": 2710,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 2692,
									"end": 2710,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 2692,
									"end": 2710,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 2692,
									"end": 2710,
									"name": "PUSH",
									"source": 3,
									"value": "100"
								},
								{
									"begin": 2692,
									"end": 2710,
									"name": "EXP",
									"source": 3
								},
								{
									"begin": 2692,
									"end": 2710,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 2692,
									"end": 2710,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 2692,
									"end": 2710,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 2692,
									"end": 2710,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFF"
								},
								{
									"begin": 2692,
									"end": 2710,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 2692,
									"end": 2710,
									"name": "NOT",
									"source": 3
								},
								{
									"begin": 2692,
									"end": 2710,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 2692,
									"end": 2710,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 2692,
									"end": 2710,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 2692,
									"end": 2710,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFF"
								},
								{
									"begin": 2692,
									"end": 2710,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 2692,
									"end": 2710,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 2692,
									"end": 2710,
									"name": "OR",
									"source": 3
								},
								{
									"begin": 2692,
									"end": 2710,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 2692,
									"end": 2710,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 2692,
									"end": 2710,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 2692,
									"end": 2710,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 221,
									"end": 7993,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "8"
								},
								{
									"begin": 221,
									"end": 7993,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 7,
									"end": 84,
									"name": "tag",
									"source": 5,
									"value": "9"
								},
								{
									"begin": 7,
									"end": 84,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 44,
									"end": 51,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 73,
									"end": 78,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 62,
									"end": 78,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 62,
									"end": 78,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 7,
									"end": 84,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 7,
									"end": 84,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 7,
									"end": 84,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 7,
									"end": 84,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 90,
									"end": 270,
									"name": "tag",
									"source": 5,
									"value": "10"
								},
								{
									"begin": 90,
									"end": 270,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 138,
									"end": 215,
									"name": "PUSH",
									"source": 5,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 135,
									"end": 136,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 128,
									"end": 216,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 235,
									"end": 239,
									"name": "PUSH",
									"source": 5,
									"value": "11"
								},
								{
									"begin": 232,
									"end": 233,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 225,
									"end": 240,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 259,
									"end": 263,
									"name": "PUSH",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 256,
									"end": 257,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 249,
									"end": 264,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 276,
									"end": 467,
									"name": "tag",
									"source": 5,
									"value": "5"
								},
								{
									"begin": 276,
									"end": 467,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 316,
									"end": 319,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 335,
									"end": 355,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "16"
								},
								{
									"begin": 353,
									"end": 354,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 335,
									"end": 355,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "9"
								},
								{
									"begin": 335,
									"end": 355,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 335,
									"end": 355,
									"name": "tag",
									"source": 5,
									"value": "16"
								},
								{
									"begin": 335,
									"end": 355,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 330,
									"end": 355,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 330,
									"end": 355,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 369,
									"end": 389,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "17"
								},
								{
									"begin": 387,
									"end": 388,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 369,
									"end": 389,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "9"
								},
								{
									"begin": 369,
									"end": 389,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 369,
									"end": 389,
									"name": "tag",
									"source": 5,
									"value": "17"
								},
								{
									"begin": 369,
									"end": 389,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 364,
									"end": 389,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 364,
									"end": 389,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 412,
									"end": 413,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 409,
									"end": 410,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 405,
									"end": 414,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 398,
									"end": 414,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 398,
									"end": 414,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 433,
									"end": 436,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 430,
									"end": 431,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 427,
									"end": 437,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 424,
									"end": 460,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 424,
									"end": 460,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "18"
								},
								{
									"begin": 424,
									"end": 460,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 440,
									"end": 458,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "19"
								},
								{
									"begin": 440,
									"end": 458,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "10"
								},
								{
									"begin": 440,
									"end": 458,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 440,
									"end": 458,
									"name": "tag",
									"source": 5,
									"value": "19"
								},
								{
									"begin": 440,
									"end": 458,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 424,
									"end": 460,
									"name": "tag",
									"source": 5,
									"value": "18"
								},
								{
									"begin": 424,
									"end": 460,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 276,
									"end": 467,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 276,
									"end": 467,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 276,
									"end": 467,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 276,
									"end": 467,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 276,
									"end": 467,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 473,
									"end": 566,
									"name": "tag",
									"source": 5,
									"value": "11"
								},
								{
									"begin": 473,
									"end": 566,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 509,
									"end": 516,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 549,
									"end": 559,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFF"
								},
								{
									"begin": 542,
									"end": 547,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 538,
									"end": 560,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 527,
									"end": 560,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 527,
									"end": 560,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 473,
									"end": 566,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 473,
									"end": 566,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 473,
									"end": 566,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 473,
									"end": 566,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 572,
									"end": 747,
									"name": "tag",
									"source": 5,
									"value": "7"
								},
								{
									"begin": 572,
									"end": 747,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 610,
									"end": 613,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 633,
									"end": 656,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "22"
								},
								{
									"begin": 650,
									"end": 655,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 633,
									"end": 656,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "11"
								},
								{
									"begin": 633,
									"end": 656,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 633,
									"end": 656,
									"name": "tag",
									"source": 5,
									"value": "22"
								},
								{
									"begin": 633,
									"end": 656,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 624,
									"end": 656,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 624,
									"end": 656,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 678,
									"end": 688,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFF"
								},
								{
									"begin": 671,
									"end": 676,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 668,
									"end": 689,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 665,
									"end": 712,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "23"
								},
								{
									"begin": 665,
									"end": 712,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 692,
									"end": 710,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 692,
									"end": 710,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "10"
								},
								{
									"begin": 692,
									"end": 710,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 692,
									"end": 710,
									"name": "tag",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 692,
									"end": 710,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 665,
									"end": 712,
									"name": "tag",
									"source": 5,
									"value": "23"
								},
								{
									"begin": 665,
									"end": 712,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 739,
									"end": 740,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 732,
									"end": 737,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 728,
									"end": 741,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 721,
									"end": 741,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 721,
									"end": 741,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 572,
									"end": 747,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 572,
									"end": 747,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 572,
									"end": 747,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 572,
									"end": 747,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 221,
									"end": 7993,
									"name": "tag",
									"source": 3,
									"value": "8"
								},
								{
									"begin": 221,
									"end": 7993,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 221,
									"end": 7993,
									"name": "PUSH",
									"source": 3,
									"value": "80"
								},
								{
									"begin": 221,
									"end": 7993,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 221,
									"end": 7993,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 221,
									"end": 7993,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 221,
									"end": 7993,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 221,
									"end": 7993,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 221,
									"end": 7993,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 221,
									"end": 7993,
									"name": "ASSIGNIMMUTABLE",
									"source": 3,
									"value": "3171"
								},
								{
									"begin": 221,
									"end": 7993,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 221,
									"end": 7993,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 221,
									"end": 7993,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212201f6285684bbf7870012b46d7bb1f2de30f79d1140eaea32964386850b9eca37264736f6c63430008140033",
									".code": [
										{
											"begin": 221,
											"end": 7993,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 221,
											"end": 7993,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 221,
											"end": 7993,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 221,
											"end": 7993,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 221,
											"end": 7993,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 221,
											"end": 7993,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 221,
											"end": 7993,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 221,
											"end": 7993,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 221,
											"end": 7993,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 221,
											"end": 7993,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 221,
											"end": 7993,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 221,
											"end": 7993,
											"name": "tag",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 221,
											"end": 7993,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 221,
											"end": 7993,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 221,
											"end": 7993,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 221,
											"end": 7993,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 221,
											"end": 7993,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 221,
											"end": 7993,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 221,
											"end": 7993,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 221,
											"end": 7993,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 221,
											"end": 7993,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 221,
											"end": 7993,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 221,
											"end": 7993,
											"name": "SHR",
											"source": 3
										},
										{
											"begin": 221,
											"end": 7993,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 221,
											"end": 7993,
											"name": "PUSH",
											"source": 3,
											"value": "6CF106D7"
										},
										{
											"begin": 221,
											"end": 7993,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 221,
											"end": 7993,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 221,
											"end": 7993,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 221,
											"end": 7993,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 221,
											"end": 7993,
											"name": "PUSH",
											"source": 3,
											"value": "C5A1C5C1"
										},
										{
											"begin": 221,
											"end": 7993,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 221,
											"end": 7993,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 221,
											"end": 7993,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 221,
											"end": 7993,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 221,
											"end": 7993,
											"name": "PUSH",
											"source": 3,
											"value": "C5A1C5C1"
										},
										{
											"begin": 221,
											"end": 7993,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 221,
											"end": 7993,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 221,
											"end": 7993,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 221,
											"end": 7993,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 221,
											"end": 7993,
											"name": "PUSH",
											"source": 3,
											"value": "CA4CCE68"
										},
										{
											"begin": 221,
											"end": 7993,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 221,
											"end": 7993,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 221,
											"end": 7993,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 221,
											"end": 7993,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 221,
											"end": 7993,
											"name": "PUSH",
											"source": 3,
											"value": "E47A9D46"
										},
										{
											"begin": 221,
											"end": 7993,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 221,
											"end": 7993,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 221,
											"end": 7993,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 221,
											"end": 7993,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 221,
											"end": 7993,
											"name": "PUSH",
											"source": 3,
											"value": "E4F3E947"
										},
										{
											"begin": 221,
											"end": 7993,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 221,
											"end": 7993,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 221,
											"end": 7993,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 221,
											"end": 7993,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 221,
											"end": 7993,
											"name": "PUSH",
											"source": 3,
											"value": "EE7126C3"
										},
										{
											"begin": 221,
											"end": 7993,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 221,
											"end": 7993,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 221,
											"end": 7993,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 221,
											"end": 7993,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 221,
											"end": 7993,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 221,
											"end": 7993,
											"name": "tag",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 221,
											"end": 7993,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 221,
											"end": 7993,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 221,
											"end": 7993,
											"name": "PUSH",
											"source": 3,
											"value": "6CF106D7"
										},
										{
											"begin": 221,
											"end": 7993,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 221,
											"end": 7993,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 221,
											"end": 7993,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 221,
											"end": 7993,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 221,
											"end": 7993,
											"name": "PUSH",
											"source": 3,
											"value": "9C20FE71"
										},
										{
											"begin": 221,
											"end": 7993,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 221,
											"end": 7993,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 221,
											"end": 7993,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 221,
											"end": 7993,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 221,
											"end": 7993,
											"name": "PUSH",
											"source": 3,
											"value": "A53DA00B"
										},
										{
											"begin": 221,
											"end": 7993,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 221,
											"end": 7993,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 221,
											"end": 7993,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 221,
											"end": 7993,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 221,
											"end": 7993,
											"name": "PUSH",
											"source": 3,
											"value": "B5C09C68"
										},
										{
											"begin": 221,
											"end": 7993,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 221,
											"end": 7993,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 221,
											"end": 7993,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 221,
											"end": 7993,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 221,
											"end": 7993,
											"name": "PUSH",
											"source": 3,
											"value": "C387B49C"
										},
										{
											"begin": 221,
											"end": 7993,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 221,
											"end": 7993,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 221,
											"end": 7993,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 221,
											"end": 7993,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 221,
											"end": 7993,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 221,
											"end": 7993,
											"name": "tag",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 221,
											"end": 7993,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 221,
											"end": 7993,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 221,
											"end": 7993,
											"name": "PUSH",
											"source": 3,
											"value": "1F72783A"
										},
										{
											"begin": 221,
											"end": 7993,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 221,
											"end": 7993,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 221,
											"end": 7993,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 221,
											"end": 7993,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 221,
											"end": 7993,
											"name": "PUSH",
											"source": 3,
											"value": "1F72783A"
										},
										{
											"begin": 221,
											"end": 7993,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 221,
											"end": 7993,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 221,
											"end": 7993,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 221,
											"end": 7993,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 221,
											"end": 7993,
											"name": "PUSH",
											"source": 3,
											"value": "289B3C0D"
										},
										{
											"begin": 221,
											"end": 7993,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 221,
											"end": 7993,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 221,
											"end": 7993,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 221,
											"end": 7993,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 221,
											"end": 7993,
											"name": "PUSH",
											"source": 3,
											"value": "52E305DE"
										},
										{
											"begin": 221,
											"end": 7993,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 221,
											"end": 7993,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 221,
											"end": 7993,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 221,
											"end": 7993,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 221,
											"end": 7993,
											"name": "PUSH",
											"source": 3,
											"value": "544FA93E"
										},
										{
											"begin": 221,
											"end": 7993,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 221,
											"end": 7993,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 221,
											"end": 7993,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 221,
											"end": 7993,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 221,
											"end": 7993,
											"name": "PUSH",
											"source": 3,
											"value": "66410997"
										},
										{
											"begin": 221,
											"end": 7993,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 221,
											"end": 7993,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 221,
											"end": 7993,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 221,
											"end": 7993,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 221,
											"end": 7993,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 221,
											"end": 7993,
											"name": "tag",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 221,
											"end": 7993,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 221,
											"end": 7993,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 221,
											"end": 7993,
											"name": "PUSH",
											"source": 3,
											"value": "54203BD"
										},
										{
											"begin": 221,
											"end": 7993,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 221,
											"end": 7993,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 221,
											"end": 7993,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 221,
											"end": 7993,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 221,
											"end": 7993,
											"name": "PUSH",
											"source": 3,
											"value": "6E99D93"
										},
										{
											"begin": 221,
											"end": 7993,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 221,
											"end": 7993,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 221,
											"end": 7993,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 221,
											"end": 7993,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 221,
											"end": 7993,
											"name": "PUSH",
											"source": 3,
											"value": "DF4C390"
										},
										{
											"begin": 221,
											"end": 7993,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 221,
											"end": 7993,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 221,
											"end": 7993,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 221,
											"end": 7993,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 221,
											"end": 7993,
											"name": "PUSH",
											"source": 3,
											"value": "18074EEE"
										},
										{
											"begin": 221,
											"end": 7993,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 221,
											"end": 7993,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 221,
											"end": 7993,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 221,
											"end": 7993,
											"name": "tag",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 221,
											"end": 7993,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 221,
											"end": 7993,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 221,
											"end": 7993,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 221,
											"end": 7993,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 4553,
											"end": 4805,
											"name": "tag",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 4553,
											"end": 4805,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4553,
											"end": 4805,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 4553,
											"end": 4805,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4553,
											"end": 4805,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4553,
											"end": 4805,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 4553,
											"end": 4805,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4553,
											"end": 4805,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4553,
											"end": 4805,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4553,
											"end": 4805,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4553,
											"end": 4805,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 4553,
											"end": 4805,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4553,
											"end": 4805,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4553,
											"end": 4805,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "27"
										},
										{
											"begin": 4553,
											"end": 4805,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4553,
											"end": 4805,
											"name": "tag",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 4553,
											"end": 4805,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4553,
											"end": 4805,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 4553,
											"end": 4805,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4553,
											"end": 4805,
											"name": "tag",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 4553,
											"end": 4805,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4553,
											"end": 4805,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 7441,
											"end": 7548,
											"name": "tag",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 7441,
											"end": 7548,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7441,
											"end": 7548,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 7441,
											"end": 7548,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 7441,
											"end": 7548,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7441,
											"end": 7548,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 7441,
											"end": 7548,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7441,
											"end": 7548,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7441,
											"end": 7548,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7441,
											"end": 7548,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7441,
											"end": 7548,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 7441,
											"end": 7548,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7441,
											"end": 7548,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7441,
											"end": 7548,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 7441,
											"end": 7548,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7441,
											"end": 7548,
											"name": "tag",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 7441,
											"end": 7548,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7441,
											"end": 7548,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 7441,
											"end": 7548,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7441,
											"end": 7548,
											"name": "tag",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 7441,
											"end": 7548,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7441,
											"end": 7548,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 4813,
											"end": 5199,
											"name": "tag",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 4813,
											"end": 5199,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4813,
											"end": 5199,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 4813,
											"end": 5199,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 4813,
											"end": 5199,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4813,
											"end": 5199,
											"name": "tag",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 4813,
											"end": 5199,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4813,
											"end": 5199,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 5600,
											"end": 6081,
											"name": "tag",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 5600,
											"end": 6081,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5600,
											"end": 6081,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "35"
										},
										{
											"begin": 5600,
											"end": 6081,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 5600,
											"end": 6081,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5600,
											"end": 6081,
											"name": "tag",
											"source": 3,
											"value": "35"
										},
										{
											"begin": 5600,
											"end": 6081,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5600,
											"end": 6081,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 2726,
											"end": 3282,
											"name": "tag",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 2726,
											"end": 3282,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2726,
											"end": 3282,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 2726,
											"end": 3282,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2726,
											"end": 3282,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2726,
											"end": 3282,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 2726,
											"end": 3282,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2726,
											"end": 3282,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2726,
											"end": 3282,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2726,
											"end": 3282,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2726,
											"end": 3282,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "38"
										},
										{
											"begin": 2726,
											"end": 3282,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2726,
											"end": 3282,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2726,
											"end": 3282,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "27"
										},
										{
											"begin": 2726,
											"end": 3282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2726,
											"end": 3282,
											"name": "tag",
											"source": 3,
											"value": "38"
										},
										{
											"begin": 2726,
											"end": 3282,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2726,
											"end": 3282,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "39"
										},
										{
											"begin": 2726,
											"end": 3282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2726,
											"end": 3282,
											"name": "tag",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 2726,
											"end": 3282,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2726,
											"end": 3282,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 7070,
											"end": 7170,
											"name": "tag",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 7070,
											"end": 7170,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7070,
											"end": 7170,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7070,
											"end": 7170,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 7070,
											"end": 7170,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7070,
											"end": 7170,
											"name": "tag",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7070,
											"end": 7170,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7070,
											"end": 7170,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7070,
											"end": 7170,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7070,
											"end": 7170,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 7070,
											"end": 7170,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7070,
											"end": 7170,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7070,
											"end": 7170,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 7070,
											"end": 7170,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7070,
											"end": 7170,
											"name": "tag",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 7070,
											"end": 7170,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7070,
											"end": 7170,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7070,
											"end": 7170,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7070,
											"end": 7170,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7070,
											"end": 7170,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7070,
											"end": 7170,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7070,
											"end": 7170,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7070,
											"end": 7170,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 3928,
											"end": 4302,
											"name": "tag",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 3928,
											"end": 4302,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3928,
											"end": 4302,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 3928,
											"end": 4302,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3928,
											"end": 4302,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3928,
											"end": 4302,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 3928,
											"end": 4302,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3928,
											"end": 4302,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3928,
											"end": 4302,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3928,
											"end": 4302,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3928,
											"end": 4302,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "45"
										},
										{
											"begin": 3928,
											"end": 4302,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3928,
											"end": 4302,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3928,
											"end": 4302,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "27"
										},
										{
											"begin": 3928,
											"end": 4302,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3928,
											"end": 4302,
											"name": "tag",
											"source": 3,
											"value": "45"
										},
										{
											"begin": 3928,
											"end": 4302,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3928,
											"end": 4302,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 3928,
											"end": 4302,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3928,
											"end": 4302,
											"name": "tag",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 3928,
											"end": 4302,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3928,
											"end": 4302,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 5420,
											"end": 5592,
											"name": "tag",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 5420,
											"end": 5592,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5420,
											"end": 5592,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "47"
										},
										{
											"begin": 5420,
											"end": 5592,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 5420,
											"end": 5592,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5420,
											"end": 5592,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 5420,
											"end": 5592,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5420,
											"end": 5592,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5420,
											"end": 5592,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5420,
											"end": 5592,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5420,
											"end": 5592,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 5420,
											"end": 5592,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5420,
											"end": 5592,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5420,
											"end": 5592,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "27"
										},
										{
											"begin": 5420,
											"end": 5592,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5420,
											"end": 5592,
											"name": "tag",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 5420,
											"end": 5592,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5420,
											"end": 5592,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "49"
										},
										{
											"begin": 5420,
											"end": 5592,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5420,
											"end": 5592,
											"name": "tag",
											"source": 3,
											"value": "47"
										},
										{
											"begin": 5420,
											"end": 5592,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5420,
											"end": 5592,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 5207,
											"end": 5308,
											"name": "tag",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 5207,
											"end": 5308,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5207,
											"end": 5308,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 5207,
											"end": 5308,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "51"
										},
										{
											"begin": 5207,
											"end": 5308,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5207,
											"end": 5308,
											"name": "tag",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 5207,
											"end": 5308,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5207,
											"end": 5308,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5207,
											"end": 5308,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5207,
											"end": 5308,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "52"
										},
										{
											"begin": 5207,
											"end": 5308,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5207,
											"end": 5308,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5207,
											"end": 5308,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 5207,
											"end": 5308,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5207,
											"end": 5308,
											"name": "tag",
											"source": 3,
											"value": "52"
										},
										{
											"begin": 5207,
											"end": 5308,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5207,
											"end": 5308,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5207,
											"end": 5308,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5207,
											"end": 5308,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5207,
											"end": 5308,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5207,
											"end": 5308,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5207,
											"end": 5308,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5207,
											"end": 5308,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 5316,
											"end": 5412,
											"name": "tag",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 5316,
											"end": 5412,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5316,
											"end": 5412,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "53"
										},
										{
											"begin": 5316,
											"end": 5412,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 5316,
											"end": 5412,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5316,
											"end": 5412,
											"name": "tag",
											"source": 3,
											"value": "53"
										},
										{
											"begin": 5316,
											"end": 5412,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5316,
											"end": 5412,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5316,
											"end": 5412,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5316,
											"end": 5412,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "55"
										},
										{
											"begin": 5316,
											"end": 5412,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5316,
											"end": 5412,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5316,
											"end": 5412,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "56"
										},
										{
											"begin": 5316,
											"end": 5412,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5316,
											"end": 5412,
											"name": "tag",
											"source": 3,
											"value": "55"
										},
										{
											"begin": 5316,
											"end": 5412,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5316,
											"end": 5412,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5316,
											"end": 5412,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5316,
											"end": 5412,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5316,
											"end": 5412,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5316,
											"end": 5412,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5316,
											"end": 5412,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5316,
											"end": 5412,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 3290,
											"end": 3920,
											"name": "tag",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 3290,
											"end": 3920,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3290,
											"end": 3920,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "57"
										},
										{
											"begin": 3290,
											"end": 3920,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3290,
											"end": 3920,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3290,
											"end": 3920,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 3290,
											"end": 3920,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3290,
											"end": 3920,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3290,
											"end": 3920,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3290,
											"end": 3920,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3290,
											"end": 3920,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "58"
										},
										{
											"begin": 3290,
											"end": 3920,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3290,
											"end": 3920,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3290,
											"end": 3920,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "27"
										},
										{
											"begin": 3290,
											"end": 3920,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3290,
											"end": 3920,
											"name": "tag",
											"source": 3,
											"value": "58"
										},
										{
											"begin": 3290,
											"end": 3920,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3290,
											"end": 3920,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "59"
										},
										{
											"begin": 3290,
											"end": 3920,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3290,
											"end": 3920,
											"name": "tag",
											"source": 3,
											"value": "57"
										},
										{
											"begin": 3290,
											"end": 3920,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3290,
											"end": 3920,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 6089,
											"end": 6198,
											"name": "tag",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 6089,
											"end": 6198,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6089,
											"end": 6198,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 6089,
											"end": 6198,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "61"
										},
										{
											"begin": 6089,
											"end": 6198,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6089,
											"end": 6198,
											"name": "tag",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 6089,
											"end": 6198,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6089,
											"end": 6198,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6089,
											"end": 6198,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6089,
											"end": 6198,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "62"
										},
										{
											"begin": 6089,
											"end": 6198,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6089,
											"end": 6198,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6089,
											"end": 6198,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 6089,
											"end": 6198,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6089,
											"end": 6198,
											"name": "tag",
											"source": 3,
											"value": "62"
										},
										{
											"begin": 6089,
											"end": 6198,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6089,
											"end": 6198,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6089,
											"end": 6198,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6089,
											"end": 6198,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6089,
											"end": 6198,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6089,
											"end": 6198,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6089,
											"end": 6198,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6089,
											"end": 6198,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 7290,
											"end": 7433,
											"name": "tag",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 7290,
											"end": 7433,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7290,
											"end": 7433,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "63"
										},
										{
											"begin": 7290,
											"end": 7433,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 7290,
											"end": 7433,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7290,
											"end": 7433,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 7290,
											"end": 7433,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7290,
											"end": 7433,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7290,
											"end": 7433,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7290,
											"end": 7433,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7290,
											"end": 7433,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 7290,
											"end": 7433,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7290,
											"end": 7433,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7290,
											"end": 7433,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 7290,
											"end": 7433,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7290,
											"end": 7433,
											"name": "tag",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 7290,
											"end": 7433,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7290,
											"end": 7433,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "65"
										},
										{
											"begin": 7290,
											"end": 7433,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7290,
											"end": 7433,
											"name": "tag",
											"source": 3,
											"value": "63"
										},
										{
											"begin": 7290,
											"end": 7433,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7290,
											"end": 7433,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 7178,
											"end": 7282,
											"name": "tag",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 7178,
											"end": 7282,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7178,
											"end": 7282,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 7178,
											"end": 7282,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "67"
										},
										{
											"begin": 7178,
											"end": 7282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7178,
											"end": 7282,
											"name": "tag",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 7178,
											"end": 7282,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7178,
											"end": 7282,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7178,
											"end": 7282,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7178,
											"end": 7282,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "68"
										},
										{
											"begin": 7178,
											"end": 7282,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7178,
											"end": 7282,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7178,
											"end": 7282,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "69"
										},
										{
											"begin": 7178,
											"end": 7282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7178,
											"end": 7282,
											"name": "tag",
											"source": 3,
											"value": "68"
										},
										{
											"begin": 7178,
											"end": 7282,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7178,
											"end": 7282,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7178,
											"end": 7282,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7178,
											"end": 7282,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7178,
											"end": 7282,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7178,
											"end": 7282,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7178,
											"end": 7282,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7178,
											"end": 7282,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 4310,
											"end": 4424,
											"name": "tag",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 4310,
											"end": 4424,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4310,
											"end": 4424,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "70"
										},
										{
											"begin": 4310,
											"end": 4424,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "71"
										},
										{
											"begin": 4310,
											"end": 4424,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4310,
											"end": 4424,
											"name": "tag",
											"source": 3,
											"value": "70"
										},
										{
											"begin": 4310,
											"end": 4424,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4310,
											"end": 4424,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4310,
											"end": 4424,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4310,
											"end": 4424,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "72"
										},
										{
											"begin": 4310,
											"end": 4424,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4310,
											"end": 4424,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4310,
											"end": 4424,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 4310,
											"end": 4424,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4310,
											"end": 4424,
											"name": "tag",
											"source": 3,
											"value": "72"
										},
										{
											"begin": 4310,
											"end": 4424,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4310,
											"end": 4424,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4310,
											"end": 4424,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4310,
											"end": 4424,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4310,
											"end": 4424,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4310,
											"end": 4424,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4310,
											"end": 4424,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4310,
											"end": 4424,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 6320,
											"end": 6635,
											"name": "tag",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 6320,
											"end": 6635,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6320,
											"end": 6635,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "73"
										},
										{
											"begin": 6320,
											"end": 6635,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 6320,
											"end": 6635,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6320,
											"end": 6635,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 6320,
											"end": 6635,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6320,
											"end": 6635,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6320,
											"end": 6635,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6320,
											"end": 6635,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6320,
											"end": 6635,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "74"
										},
										{
											"begin": 6320,
											"end": 6635,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6320,
											"end": 6635,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6320,
											"end": 6635,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "27"
										},
										{
											"begin": 6320,
											"end": 6635,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6320,
											"end": 6635,
											"name": "tag",
											"source": 3,
											"value": "74"
										},
										{
											"begin": 6320,
											"end": 6635,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6320,
											"end": 6635,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "75"
										},
										{
											"begin": 6320,
											"end": 6635,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6320,
											"end": 6635,
											"name": "tag",
											"source": 3,
											"value": "73"
										},
										{
											"begin": 6320,
											"end": 6635,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6320,
											"end": 6635,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 4436,
											"end": 4545,
											"name": "tag",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 4436,
											"end": 4545,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4436,
											"end": 4545,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "76"
										},
										{
											"begin": 4436,
											"end": 4545,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "77"
										},
										{
											"begin": 4436,
											"end": 4545,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4436,
											"end": 4545,
											"name": "tag",
											"source": 3,
											"value": "76"
										},
										{
											"begin": 4436,
											"end": 4545,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4436,
											"end": 4545,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4436,
											"end": 4545,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4436,
											"end": 4545,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "78"
										},
										{
											"begin": 4436,
											"end": 4545,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4436,
											"end": 4545,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4436,
											"end": 4545,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 4436,
											"end": 4545,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4436,
											"end": 4545,
											"name": "tag",
											"source": 3,
											"value": "78"
										},
										{
											"begin": 4436,
											"end": 4545,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4436,
											"end": 4545,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4436,
											"end": 4545,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4436,
											"end": 4545,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4436,
											"end": 4545,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4436,
											"end": 4545,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4436,
											"end": 4545,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4436,
											"end": 4545,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 6206,
											"end": 6310,
											"name": "tag",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6206,
											"end": 6310,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6206,
											"end": 6310,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "79"
										},
										{
											"begin": 6206,
											"end": 6310,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 6206,
											"end": 6310,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6206,
											"end": 6310,
											"name": "tag",
											"source": 3,
											"value": "79"
										},
										{
											"begin": 6206,
											"end": 6310,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6206,
											"end": 6310,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6206,
											"end": 6310,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6206,
											"end": 6310,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "81"
										},
										{
											"begin": 6206,
											"end": 6310,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6206,
											"end": 6310,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6206,
											"end": 6310,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "56"
										},
										{
											"begin": 6206,
											"end": 6310,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6206,
											"end": 6310,
											"name": "tag",
											"source": 3,
											"value": "81"
										},
										{
											"begin": 6206,
											"end": 6310,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6206,
											"end": 6310,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6206,
											"end": 6310,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6206,
											"end": 6310,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6206,
											"end": 6310,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6206,
											"end": 6310,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6206,
											"end": 6310,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6206,
											"end": 6310,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 6643,
											"end": 7062,
											"name": "tag",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 6643,
											"end": 7062,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6643,
											"end": 7062,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "82"
										},
										{
											"begin": 6643,
											"end": 7062,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 6643,
											"end": 7062,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6643,
											"end": 7062,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 6643,
											"end": 7062,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6643,
											"end": 7062,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6643,
											"end": 7062,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6643,
											"end": 7062,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6643,
											"end": 7062,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "83"
										},
										{
											"begin": 6643,
											"end": 7062,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6643,
											"end": 7062,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6643,
											"end": 7062,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "27"
										},
										{
											"begin": 6643,
											"end": 7062,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6643,
											"end": 7062,
											"name": "tag",
											"source": 3,
											"value": "83"
										},
										{
											"begin": 6643,
											"end": 7062,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6643,
											"end": 7062,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 6643,
											"end": 7062,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6643,
											"end": 7062,
											"name": "tag",
											"source": 3,
											"value": "82"
										},
										{
											"begin": 6643,
											"end": 7062,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6643,
											"end": 7062,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 4553,
											"end": 4805,
											"name": "tag",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 4553,
											"end": 4805,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1956,
											"end": 1971,
											"name": "TIMESTAMP",
											"source": 3
										},
										{
											"begin": 1936,
											"end": 1953,
											"name": "PUSHIMMUTABLE",
											"source": 3,
											"value": "3171"
										},
										{
											"begin": 1936,
											"end": 1971,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFF"
										},
										{
											"begin": 1936,
											"end": 1971,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1936,
											"end": 1971,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 1932,
											"end": 2159,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1932,
											"end": 2159,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "86"
										},
										{
											"begin": 1932,
											"end": 2159,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2010,
											"end": 2030,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "87"
										},
										{
											"begin": 2010,
											"end": 2028,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "71"
										},
										{
											"begin": 2010,
											"end": 2030,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2010,
											"end": 2030,
											"name": "tag",
											"source": 3,
											"value": "87"
										},
										{
											"begin": 2010,
											"end": 2030,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1996,
											"end": 2030,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1996,
											"end": 2030,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1996,
											"end": 2006,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 1996,
											"end": 2030,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1996,
											"end": 2030,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1996,
											"end": 2030,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1988,
											"end": 2054,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "88"
										},
										{
											"begin": 1988,
											"end": 2054,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1988,
											"end": 2054,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1988,
											"end": 2054,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1988,
											"end": 2054,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1988,
											"end": 2054,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1988,
											"end": 2054,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1988,
											"end": 2054,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1988,
											"end": 2054,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1988,
											"end": 2054,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "89"
										},
										{
											"begin": 1988,
											"end": 2054,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1988,
											"end": 2054,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "90"
										},
										{
											"begin": 1988,
											"end": 2054,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1988,
											"end": 2054,
											"name": "tag",
											"source": 3,
											"value": "89"
										},
										{
											"begin": 1988,
											"end": 2054,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1988,
											"end": 2054,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1988,
											"end": 2054,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1988,
											"end": 2054,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1988,
											"end": 2054,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1988,
											"end": 2054,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1988,
											"end": 2054,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1988,
											"end": 2054,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1988,
											"end": 2054,
											"name": "tag",
											"source": 3,
											"value": "88"
										},
										{
											"begin": 1988,
											"end": 2054,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1932,
											"end": 2159,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "91"
										},
										{
											"begin": 1932,
											"end": 2159,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1932,
											"end": 2159,
											"name": "tag",
											"source": 3,
											"value": "86"
										},
										{
											"begin": 1932,
											"end": 2159,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2096,
											"end": 2113,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "92"
										},
										{
											"begin": 2096,
											"end": 2111,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "51"
										},
										{
											"begin": 2096,
											"end": 2113,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2096,
											"end": 2113,
											"name": "tag",
											"source": 3,
											"value": "92"
										},
										{
											"begin": 2096,
											"end": 2113,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2082,
											"end": 2113,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2082,
											"end": 2113,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2082,
											"end": 2092,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 2082,
											"end": 2113,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2082,
											"end": 2113,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2082,
											"end": 2113,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 2082,
											"end": 2135,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2082,
											"end": 2135,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2082,
											"end": 2135,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "93"
										},
										{
											"begin": 2082,
											"end": 2135,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2082,
											"end": 2135,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2118,
											"end": 2135,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "94"
										},
										{
											"begin": 2118,
											"end": 2133,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 2118,
											"end": 2135,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2118,
											"end": 2135,
											"name": "tag",
											"source": 3,
											"value": "94"
										},
										{
											"begin": 2118,
											"end": 2135,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2117,
											"end": 2135,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2082,
											"end": 2135,
											"name": "tag",
											"source": 3,
											"value": "93"
										},
										{
											"begin": 2082,
											"end": 2135,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2159,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "95"
										},
										{
											"begin": 2074,
											"end": 2159,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2159,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2074,
											"end": 2159,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2159,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2074,
											"end": 2159,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2159,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2159,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2074,
											"end": 2159,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2159,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "96"
										},
										{
											"begin": 2074,
											"end": 2159,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2159,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "90"
										},
										{
											"begin": 2074,
											"end": 2159,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2159,
											"name": "tag",
											"source": 3,
											"value": "96"
										},
										{
											"begin": 2074,
											"end": 2159,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2159,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2074,
											"end": 2159,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2159,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2159,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2159,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2159,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2159,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2159,
											"name": "tag",
											"source": 3,
											"value": "95"
										},
										{
											"begin": 2074,
											"end": 2159,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1932,
											"end": 2159,
											"name": "tag",
											"source": 3,
											"value": "91"
										},
										{
											"begin": 1932,
											"end": 2159,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4653,
											"end": 4665,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4634,
											"end": 4650,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 4634,
											"end": 4650,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4634,
											"end": 4665,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 4634,
											"end": 4665,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 4634,
											"end": 4665,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4634,
											"end": 4665,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 4634,
											"end": 4665,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4634,
											"end": 4665,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4634,
											"end": 4665,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 4634,
											"end": 4665,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 4634,
											"end": 4665,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4634,
											"end": 4665,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4634,
											"end": 4665,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4634,
											"end": 4665,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4634,
											"end": 4665,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4634,
											"end": 4665,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 4634,
											"end": 4665,
											"modifierDepth": 1,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 4634,
											"end": 4665,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4634,
											"end": 4665,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 4634,
											"end": 4665,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4676,
											"end": 4700,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "98"
										},
										{
											"begin": 4695,
											"end": 4699,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 4676,
											"end": 4694,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "99"
										},
										{
											"begin": 4676,
											"end": 4700,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4676,
											"end": 4700,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "98"
										},
										{
											"begin": 4676,
											"end": 4700,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4711,
											"end": 4739,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 4734,
											"end": 4738,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 4711,
											"end": 4733,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "101"
										},
										{
											"begin": 4711,
											"end": 4739,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4711,
											"end": 4739,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 4711,
											"end": 4739,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4784,
											"end": 4796,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4757,
											"end": 4797,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4757,
											"end": 4797,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4757,
											"end": 4797,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "3553F1F7EF0242113266A8D183B621BB87468C99237F36B1150B6AB3D688B686"
										},
										{
											"begin": 4757,
											"end": 4797,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4757,
											"end": 4797,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4757,
											"end": 4797,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4757,
											"end": 4797,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4757,
											"end": 4797,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4757,
											"end": 4797,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4757,
											"end": 4797,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4757,
											"end": 4797,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4757,
											"end": 4797,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 3
										},
										{
											"begin": 4553,
											"end": 4805,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4553,
											"end": 4805,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7441,
											"end": 7548,
											"name": "tag",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 7441,
											"end": 7548,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2247,
											"end": 2264,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "103"
										},
										{
											"begin": 2247,
											"end": 2262,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "51"
										},
										{
											"begin": 2247,
											"end": 2264,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2247,
											"end": 2264,
											"name": "tag",
											"source": 3,
											"value": "103"
										},
										{
											"begin": 2247,
											"end": 2264,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2264,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2233,
											"end": 2264,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2243,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2264,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2233,
											"end": 2264,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2264,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2286,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2286,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2286,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "104"
										},
										{
											"begin": 2233,
											"end": 2286,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2286,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2269,
											"end": 2286,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "105"
										},
										{
											"begin": 2269,
											"end": 2284,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 2269,
											"end": 2286,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2269,
											"end": 2286,
											"name": "tag",
											"source": 3,
											"value": "105"
										},
										{
											"begin": 2269,
											"end": 2286,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2268,
											"end": 2286,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2286,
											"name": "tag",
											"source": 3,
											"value": "104"
										},
										{
											"begin": 2233,
											"end": 2286,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2225,
											"end": 2310,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "106"
										},
										{
											"begin": 2225,
											"end": 2310,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2225,
											"end": 2310,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2225,
											"end": 2310,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2225,
											"end": 2310,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2225,
											"end": 2310,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2225,
											"end": 2310,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2225,
											"end": 2310,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2225,
											"end": 2310,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2225,
											"end": 2310,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "107"
										},
										{
											"begin": 2225,
											"end": 2310,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2225,
											"end": 2310,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "90"
										},
										{
											"begin": 2225,
											"end": 2310,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2225,
											"end": 2310,
											"name": "tag",
											"source": 3,
											"value": "107"
										},
										{
											"begin": 2225,
											"end": 2310,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2225,
											"end": 2310,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2225,
											"end": 2310,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2225,
											"end": 2310,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2225,
											"end": 2310,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2225,
											"end": 2310,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2225,
											"end": 2310,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2225,
											"end": 2310,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2225,
											"end": 2310,
											"name": "tag",
											"source": 3,
											"value": "106"
										},
										{
											"begin": 2225,
											"end": 2310,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7511,
											"end": 7540,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "109"
										},
										{
											"begin": 7534,
											"end": 7539,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7511,
											"end": 7533,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "101"
										},
										{
											"begin": 7511,
											"end": 7540,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7511,
											"end": 7540,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "109"
										},
										{
											"begin": 7511,
											"end": 7540,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7441,
											"end": 7548,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7441,
											"end": 7548,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4813,
											"end": 5199,
											"name": "tag",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 4813,
											"end": 5199,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4884,
											"end": 4894,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 4864,
											"end": 4894,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4864,
											"end": 4894,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4864,
											"end": 4880,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 4864,
											"end": 4880,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4864,
											"end": 4880,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4864,
											"end": 4880,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 4864,
											"end": 4880,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4864,
											"end": 4880,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 4864,
											"end": 4880,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 4864,
											"end": 4880,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4864,
											"end": 4880,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 4864,
											"end": 4880,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4864,
											"end": 4880,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4864,
											"end": 4894,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4864,
											"end": 4894,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4864,
											"end": 4894,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4860,
											"end": 5191,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "111"
										},
										{
											"begin": 4860,
											"end": 5191,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4918,
											"end": 4934,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 4918,
											"end": 4934,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4911,
											"end": 4934,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 4911,
											"end": 4934,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 4911,
											"end": 4934,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4911,
											"end": 4934,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 4911,
											"end": 4934,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4911,
											"end": 4934,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4911,
											"end": 4934,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 4911,
											"end": 4934,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 4911,
											"end": 4934,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4911,
											"end": 4934,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4911,
											"end": 4934,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 4970,
											"end": 4980,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 4949,
											"end": 4959,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4949,
											"end": 4967,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4949,
											"end": 4967,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4949,
											"end": 4967,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4949,
											"end": 4980,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 4949,
											"end": 4980,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 4949,
											"end": 4980,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4949,
											"end": 4980,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 4949,
											"end": 4980,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4949,
											"end": 4980,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4949,
											"end": 4980,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 4949,
											"end": 4980,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 4949,
											"end": 4980,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4949,
											"end": 4980,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4949,
											"end": 4980,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4949,
											"end": 4980,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4949,
											"end": 4980,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4949,
											"end": 4980,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 4949,
											"end": 4980,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 4949,
											"end": 4980,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4949,
											"end": 4980,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 4949,
											"end": 4980,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4995,
											"end": 5005,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4995,
											"end": 5011,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4995,
											"end": 5011,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4995,
											"end": 5011,
											"name": "PUSH",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 4995,
											"end": 5013,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4995,
											"end": 5013,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4995,
											"end": 5013,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4995,
											"end": 5013,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 4995,
											"end": 5013,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4995,
											"end": 5013,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 4995,
											"end": 5013,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 4995,
											"end": 5013,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4995,
											"end": 5013,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 4995,
											"end": 5013,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4995,
											"end": 5013,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4995,
											"end": 5013,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4995,
											"end": 5013,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4995,
											"end": 5013,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4995,
											"end": 5013,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4995,
											"end": 5013,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "112"
										},
										{
											"begin": 4995,
											"end": 5013,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4995,
											"end": 5013,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "113"
										},
										{
											"begin": 4995,
											"end": 5013,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4995,
											"end": 5013,
											"name": "tag",
											"source": 3,
											"value": "112"
										},
										{
											"begin": 4995,
											"end": 5013,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4995,
											"end": 5013,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4995,
											"end": 5013,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4995,
											"end": 5013,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 4995,
											"end": 5013,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 4995,
											"end": 5013,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4995,
											"end": 5013,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 4995,
											"end": 5013,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4995,
											"end": 5013,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4995,
											"end": 5013,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 4995,
											"end": 5013,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 4995,
											"end": 5013,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4995,
											"end": 5013,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4995,
											"end": 5013,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4995,
											"end": 5013,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4995,
											"end": 5013,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4995,
											"end": 5013,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 4995,
											"end": 5013,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 4995,
											"end": 5013,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4995,
											"end": 5013,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 4995,
											"end": 5013,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4995,
											"end": 5013,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5028,
											"end": 5053,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "114"
										},
										{
											"begin": 5047,
											"end": 5052,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5028,
											"end": 5046,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "99"
										},
										{
											"begin": 5028,
											"end": 5053,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5028,
											"end": 5053,
											"name": "tag",
											"source": 3,
											"value": "114"
										},
										{
											"begin": 5028,
											"end": 5053,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5123,
											"end": 5133,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 5123,
											"end": 5139,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5123,
											"end": 5139,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5123,
											"end": 5139,
											"name": "PUSH",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 5123,
											"end": 5139,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5123,
											"end": 5139,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 5123,
											"end": 5139,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5123,
											"end": 5139,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 5123,
											"end": 5139,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 5123,
											"end": 5139,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5123,
											"end": 5139,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 5123,
											"end": 5139,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5123,
											"end": 5139,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5075,
											"end": 5140,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5075,
											"end": 5140,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5103,
											"end": 5113,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 5103,
											"end": 5121,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5103,
											"end": 5121,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5103,
											"end": 5121,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5103,
											"end": 5121,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5103,
											"end": 5121,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 5103,
											"end": 5121,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5103,
											"end": 5121,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 5103,
											"end": 5121,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 5103,
											"end": 5121,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5103,
											"end": 5121,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 5103,
											"end": 5121,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5103,
											"end": 5121,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5075,
											"end": 5140,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5075,
											"end": 5140,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5075,
											"end": 5140,
											"name": "PUSH",
											"source": 3,
											"value": "5AD9B3688012CD825C1BFB941E4F5AFB2558AF6AF3DEADDF01DBB5E85ABDAF9"
										},
										{
											"begin": 5075,
											"end": 5140,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5075,
											"end": 5140,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5075,
											"end": 5140,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5075,
											"end": 5140,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5075,
											"end": 5140,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5075,
											"end": 5140,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5075,
											"end": 5140,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5075,
											"end": 5140,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5075,
											"end": 5140,
											"name": "LOG3",
											"source": 3
										},
										{
											"begin": 4860,
											"end": 5191,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "115"
										},
										{
											"begin": 4860,
											"end": 5191,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4860,
											"end": 5191,
											"name": "tag",
											"source": 3,
											"value": "111"
										},
										{
											"begin": 4860,
											"end": 5191,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5167,
											"end": 5191,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5167,
											"end": 5191,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5167,
											"end": 5191,
											"name": "PUSH",
											"source": 3,
											"value": "6C4360F000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5167,
											"end": 5191,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5167,
											"end": 5191,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5167,
											"end": 5191,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 5167,
											"end": 5191,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5167,
											"end": 5191,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5167,
											"end": 5191,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5167,
											"end": 5191,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5167,
											"end": 5191,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5167,
											"end": 5191,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5167,
											"end": 5191,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5167,
											"end": 5191,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 4860,
											"end": 5191,
											"name": "tag",
											"source": 3,
											"value": "115"
										},
										{
											"begin": 4860,
											"end": 5191,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4813,
											"end": 5199,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5600,
											"end": 6081,
											"name": "tag",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 5600,
											"end": 6081,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5680,
											"end": 5690,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 5655,
											"end": 5690,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5655,
											"end": 5690,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5655,
											"end": 5676,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 5655,
											"end": 5676,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5655,
											"end": 5676,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5655,
											"end": 5676,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 5655,
											"end": 5676,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5655,
											"end": 5676,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 5655,
											"end": 5676,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 5655,
											"end": 5676,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5655,
											"end": 5676,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 5655,
											"end": 5676,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5655,
											"end": 5676,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5655,
											"end": 5690,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5655,
											"end": 5690,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5655,
											"end": 5690,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5651,
											"end": 6073,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "117"
										},
										{
											"begin": 5651,
											"end": 6073,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5714,
											"end": 5735,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 5714,
											"end": 5735,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5707,
											"end": 5735,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 5707,
											"end": 5735,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 5707,
											"end": 5735,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5707,
											"end": 5735,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 5707,
											"end": 5735,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5707,
											"end": 5735,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5707,
											"end": 5735,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 5707,
											"end": 5735,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 5707,
											"end": 5735,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5707,
											"end": 5735,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5707,
											"end": 5735,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 5775,
											"end": 5785,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 5750,
											"end": 5764,
											"name": "PUSH",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 5750,
											"end": 5772,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5750,
											"end": 5772,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5750,
											"end": 5772,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5750,
											"end": 5785,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 5750,
											"end": 5785,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 5750,
											"end": 5785,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5750,
											"end": 5785,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 5750,
											"end": 5785,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5750,
											"end": 5785,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5750,
											"end": 5785,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 5750,
											"end": 5785,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 5750,
											"end": 5785,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5750,
											"end": 5785,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5750,
											"end": 5785,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5750,
											"end": 5785,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5750,
											"end": 5785,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5750,
											"end": 5785,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 5750,
											"end": 5785,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 5750,
											"end": 5785,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5750,
											"end": 5785,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 5750,
											"end": 5785,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5800,
											"end": 5814,
											"name": "PUSH",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 5800,
											"end": 5820,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5800,
											"end": 5820,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5800,
											"end": 5820,
											"name": "PUSH",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 5800,
											"end": 5822,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5800,
											"end": 5822,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5800,
											"end": 5822,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5800,
											"end": 5822,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 5800,
											"end": 5822,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5800,
											"end": 5822,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 5800,
											"end": 5822,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 5800,
											"end": 5822,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5800,
											"end": 5822,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 5800,
											"end": 5822,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5800,
											"end": 5822,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5800,
											"end": 5822,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5800,
											"end": 5822,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 5800,
											"end": 5822,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5800,
											"end": 5822,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5800,
											"end": 5822,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "118"
										},
										{
											"begin": 5800,
											"end": 5822,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5800,
											"end": 5822,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "113"
										},
										{
											"begin": 5800,
											"end": 5822,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5800,
											"end": 5822,
											"name": "tag",
											"source": 3,
											"value": "118"
										},
										{
											"begin": 5800,
											"end": 5822,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5800,
											"end": 5822,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5800,
											"end": 5822,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5800,
											"end": 5822,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 5800,
											"end": 5822,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 5800,
											"end": 5822,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5800,
											"end": 5822,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 5800,
											"end": 5822,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5800,
											"end": 5822,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5800,
											"end": 5822,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 5800,
											"end": 5822,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 5800,
											"end": 5822,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5800,
											"end": 5822,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5800,
											"end": 5822,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5800,
											"end": 5822,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5800,
											"end": 5822,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5800,
											"end": 5822,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 5800,
											"end": 5822,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 5800,
											"end": 5822,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5800,
											"end": 5822,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 5800,
											"end": 5822,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5800,
											"end": 5822,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5841,
											"end": 5855,
											"name": "PUSH",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 5841,
											"end": 5861,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5841,
											"end": 5861,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5841,
											"end": 5861,
											"name": "PUSH",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 5841,
											"end": 5861,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5841,
											"end": 5861,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 5841,
											"end": 5861,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5841,
											"end": 5861,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 5841,
											"end": 5861,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 5841,
											"end": 5861,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5841,
											"end": 5861,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 5841,
											"end": 5861,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 5841,
											"end": 5861,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5837,
											"end": 5926,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 5837,
											"end": 5926,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "119"
										},
										{
											"begin": 5837,
											"end": 5926,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5881,
											"end": 5910,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "120"
										},
										{
											"begin": 5904,
											"end": 5909,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5881,
											"end": 5903,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "101"
										},
										{
											"begin": 5881,
											"end": 5910,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5881,
											"end": 5910,
											"name": "tag",
											"source": 3,
											"value": "120"
										},
										{
											"begin": 5881,
											"end": 5910,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5837,
											"end": 5926,
											"name": "tag",
											"source": 3,
											"value": "119"
										},
										{
											"begin": 5837,
											"end": 5926,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6001,
											"end": 6015,
											"name": "PUSH",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 6001,
											"end": 6021,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6001,
											"end": 6021,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6001,
											"end": 6021,
											"name": "PUSH",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 6001,
											"end": 6021,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6001,
											"end": 6021,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 6001,
											"end": 6021,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6001,
											"end": 6021,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 6001,
											"end": 6021,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 6001,
											"end": 6021,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6001,
											"end": 6021,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 6001,
											"end": 6021,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6001,
											"end": 6021,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5945,
											"end": 6022,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5945,
											"end": 6022,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5977,
											"end": 5991,
											"name": "PUSH",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 5977,
											"end": 5999,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5977,
											"end": 5999,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5977,
											"end": 5999,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5977,
											"end": 5999,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5977,
											"end": 5999,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 5977,
											"end": 5999,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5977,
											"end": 5999,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 5977,
											"end": 5999,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 5977,
											"end": 5999,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5977,
											"end": 5999,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 5977,
											"end": 5999,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5977,
											"end": 5999,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5945,
											"end": 6022,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5945,
											"end": 6022,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5945,
											"end": 6022,
											"name": "PUSH",
											"source": 3,
											"value": "11E1B985C07E1BF3FEC9BFD0BDB8C4A8E870BA2B26AA89FE50A6A19132CA10FD"
										},
										{
											"begin": 5945,
											"end": 6022,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5945,
											"end": 6022,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5945,
											"end": 6022,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5945,
											"end": 6022,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5945,
											"end": 6022,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5945,
											"end": 6022,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5945,
											"end": 6022,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5945,
											"end": 6022,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5945,
											"end": 6022,
											"name": "LOG3",
											"source": 3
										},
										{
											"begin": 5651,
											"end": 6073,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "121"
										},
										{
											"begin": 5651,
											"end": 6073,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5651,
											"end": 6073,
											"name": "tag",
											"source": 3,
											"value": "117"
										},
										{
											"begin": 5651,
											"end": 6073,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6049,
											"end": 6073,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6049,
											"end": 6073,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6049,
											"end": 6073,
											"name": "PUSH",
											"source": 3,
											"value": "6C4360F000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6049,
											"end": 6073,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6049,
											"end": 6073,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6049,
											"end": 6073,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 6049,
											"end": 6073,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6049,
											"end": 6073,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6049,
											"end": 6073,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6049,
											"end": 6073,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6049,
											"end": 6073,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6049,
											"end": 6073,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6049,
											"end": 6073,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6049,
											"end": 6073,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 5651,
											"end": 6073,
											"name": "tag",
											"source": 3,
											"value": "121"
										},
										{
											"begin": 5651,
											"end": 6073,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5600,
											"end": 6081,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2726,
											"end": 3282,
											"name": "tag",
											"source": 3,
											"value": "39"
										},
										{
											"begin": 2726,
											"end": 3282,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1956,
											"end": 1971,
											"name": "TIMESTAMP",
											"source": 3
										},
										{
											"begin": 1936,
											"end": 1953,
											"name": "PUSHIMMUTABLE",
											"source": 3,
											"value": "3171"
										},
										{
											"begin": 1936,
											"end": 1971,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFF"
										},
										{
											"begin": 1936,
											"end": 1971,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1936,
											"end": 1971,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 1932,
											"end": 2159,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1932,
											"end": 2159,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "123"
										},
										{
											"begin": 1932,
											"end": 2159,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2010,
											"end": 2030,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "124"
										},
										{
											"begin": 2010,
											"end": 2028,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "71"
										},
										{
											"begin": 2010,
											"end": 2030,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2010,
											"end": 2030,
											"name": "tag",
											"source": 3,
											"value": "124"
										},
										{
											"begin": 2010,
											"end": 2030,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1996,
											"end": 2030,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1996,
											"end": 2030,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1996,
											"end": 2006,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 1996,
											"end": 2030,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1996,
											"end": 2030,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1996,
											"end": 2030,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1988,
											"end": 2054,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "125"
										},
										{
											"begin": 1988,
											"end": 2054,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1988,
											"end": 2054,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1988,
											"end": 2054,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1988,
											"end": 2054,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1988,
											"end": 2054,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1988,
											"end": 2054,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1988,
											"end": 2054,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1988,
											"end": 2054,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1988,
											"end": 2054,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "126"
										},
										{
											"begin": 1988,
											"end": 2054,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1988,
											"end": 2054,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "90"
										},
										{
											"begin": 1988,
											"end": 2054,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1988,
											"end": 2054,
											"name": "tag",
											"source": 3,
											"value": "126"
										},
										{
											"begin": 1988,
											"end": 2054,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1988,
											"end": 2054,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1988,
											"end": 2054,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1988,
											"end": 2054,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1988,
											"end": 2054,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1988,
											"end": 2054,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1988,
											"end": 2054,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1988,
											"end": 2054,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1988,
											"end": 2054,
											"name": "tag",
											"source": 3,
											"value": "125"
										},
										{
											"begin": 1988,
											"end": 2054,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1932,
											"end": 2159,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "127"
										},
										{
											"begin": 1932,
											"end": 2159,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1932,
											"end": 2159,
											"name": "tag",
											"source": 3,
											"value": "123"
										},
										{
											"begin": 1932,
											"end": 2159,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2096,
											"end": 2113,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "128"
										},
										{
											"begin": 2096,
											"end": 2111,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "51"
										},
										{
											"begin": 2096,
											"end": 2113,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2096,
											"end": 2113,
											"name": "tag",
											"source": 3,
											"value": "128"
										},
										{
											"begin": 2096,
											"end": 2113,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2082,
											"end": 2113,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2082,
											"end": 2113,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2082,
											"end": 2092,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 2082,
											"end": 2113,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2082,
											"end": 2113,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2082,
											"end": 2113,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 2082,
											"end": 2135,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2082,
											"end": 2135,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2082,
											"end": 2135,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "129"
										},
										{
											"begin": 2082,
											"end": 2135,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2082,
											"end": 2135,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2118,
											"end": 2135,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "130"
										},
										{
											"begin": 2118,
											"end": 2133,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 2118,
											"end": 2135,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2118,
											"end": 2135,
											"name": "tag",
											"source": 3,
											"value": "130"
										},
										{
											"begin": 2118,
											"end": 2135,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2117,
											"end": 2135,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2082,
											"end": 2135,
											"name": "tag",
											"source": 3,
											"value": "129"
										},
										{
											"begin": 2082,
											"end": 2135,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2159,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "131"
										},
										{
											"begin": 2074,
											"end": 2159,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2159,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2074,
											"end": 2159,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2159,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2074,
											"end": 2159,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2159,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2159,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2074,
											"end": 2159,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2159,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "132"
										},
										{
											"begin": 2074,
											"end": 2159,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2159,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "90"
										},
										{
											"begin": 2074,
											"end": 2159,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2159,
											"name": "tag",
											"source": 3,
											"value": "132"
										},
										{
											"begin": 2074,
											"end": 2159,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2159,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2074,
											"end": 2159,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2159,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2159,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2159,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2159,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2159,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2159,
											"name": "tag",
											"source": 3,
											"value": "131"
										},
										{
											"begin": 2074,
											"end": 2159,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1932,
											"end": 2159,
											"name": "tag",
											"source": 3,
											"value": "127"
										},
										{
											"begin": 1932,
											"end": 2159,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2843,
											"end": 2844,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2817,
											"end": 2828,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2817,
											"end": 2840,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2817,
											"end": 2840,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2817,
											"end": 2840,
											"modifierDepth": 1,
											"name": "EXTCODESIZE",
											"source": 3
										},
										{
											"begin": 2817,
											"end": 2844,
											"modifierDepth": 1,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 2813,
											"end": 3272,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2813,
											"end": 3272,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "134"
										},
										{
											"begin": 2813,
											"end": 3272,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2887,
											"end": 2897,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 2865,
											"end": 2897,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2865,
											"end": 2897,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2865,
											"end": 2875,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2865,
											"end": 2883,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2865,
											"end": 2883,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2865,
											"end": 2883,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2865,
											"end": 2883,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2865,
											"end": 2883,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2865,
											"end": 2883,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2865,
											"end": 2883,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 2865,
											"end": 2883,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 2865,
											"end": 2883,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2865,
											"end": 2883,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 2865,
											"end": 2883,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2865,
											"end": 2883,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2865,
											"end": 2897,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2865,
											"end": 2897,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2865,
											"end": 2897,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2861,
											"end": 3202,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "135"
										},
										{
											"begin": 2861,
											"end": 3202,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2918,
											"end": 2955,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "136"
										},
										{
											"begin": 2943,
											"end": 2954,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2918,
											"end": 2942,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "137"
										},
										{
											"begin": 2918,
											"end": 2955,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2918,
											"end": 2955,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "136"
										},
										{
											"begin": 2918,
											"end": 2955,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2861,
											"end": 3202,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "138"
										},
										{
											"begin": 2861,
											"end": 3202,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2861,
											"end": 3202,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "135"
										},
										{
											"begin": 2861,
											"end": 3202,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3054,
											"end": 3061,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "13C680"
										},
										{
											"begin": 3036,
											"end": 3051,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 3
										},
										{
											"begin": 3036,
											"end": 3061,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "139"
										},
										{
											"begin": 3036,
											"end": 3061,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3036,
											"end": 3061,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3036,
											"end": 3061,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "140"
										},
										{
											"begin": 3036,
											"end": 3061,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3036,
											"end": 3061,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "139"
										},
										{
											"begin": 3036,
											"end": 3061,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2998,
											"end": 3026,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 2998,
											"end": 3026,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 2998,
											"end": 3062,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 2998,
											"end": 3062,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 2998,
											"end": 3062,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2998,
											"end": 3062,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2998,
											"end": 3062,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2998,
											"end": 3062,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFF"
										},
										{
											"begin": 2998,
											"end": 3062,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2998,
											"end": 3062,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 2998,
											"end": 3062,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2998,
											"end": 3062,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2998,
											"end": 3062,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2998,
											"end": 3062,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFF"
										},
										{
											"begin": 2998,
											"end": 3062,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2998,
											"end": 3062,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2998,
											"end": 3062,
											"modifierDepth": 1,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 2998,
											"end": 3062,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2998,
											"end": 3062,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 2998,
											"end": 3062,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3106,
											"end": 3117,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3081,
											"end": 3103,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3081,
											"end": 3103,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3081,
											"end": 3117,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 3081,
											"end": 3117,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 3081,
											"end": 3117,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3081,
											"end": 3117,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3081,
											"end": 3117,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3081,
											"end": 3117,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3081,
											"end": 3117,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 3081,
											"end": 3117,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 3081,
											"end": 3117,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3081,
											"end": 3117,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3081,
											"end": 3117,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3081,
											"end": 3117,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3081,
											"end": 3117,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3081,
											"end": 3117,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 3081,
											"end": 3117,
											"modifierDepth": 1,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 3081,
											"end": 3117,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3081,
											"end": 3117,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 3081,
											"end": 3117,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3174,
											"end": 3185,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3141,
											"end": 3186,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3141,
											"end": 3186,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3141,
											"end": 3186,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "675B770E821BA4AAD20BE77C58F912D689226272E805637F42F838A6035EED86"
										},
										{
											"begin": 3141,
											"end": 3186,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3141,
											"end": 3186,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3141,
											"end": 3186,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3141,
											"end": 3186,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3141,
											"end": 3186,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3141,
											"end": 3186,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3141,
											"end": 3186,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3141,
											"end": 3186,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3141,
											"end": 3186,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 3
										},
										{
											"begin": 2861,
											"end": 3202,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "138"
										},
										{
											"begin": 2861,
											"end": 3202,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2813,
											"end": 3272,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "141"
										},
										{
											"begin": 2813,
											"end": 3272,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2813,
											"end": 3272,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "134"
										},
										{
											"begin": 2813,
											"end": 3272,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3260,
											"end": 3271,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3228,
											"end": 3272,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3228,
											"end": 3272,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3228,
											"end": 3272,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "C632231500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3228,
											"end": 3272,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3228,
											"end": 3272,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3228,
											"end": 3272,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3228,
											"end": 3272,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3228,
											"end": 3272,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "142"
										},
										{
											"begin": 3228,
											"end": 3272,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3228,
											"end": 3272,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3228,
											"end": 3272,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 3228,
											"end": 3272,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3228,
											"end": 3272,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "142"
										},
										{
											"begin": 3228,
											"end": 3272,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3228,
											"end": 3272,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3228,
											"end": 3272,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3228,
											"end": 3272,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3228,
											"end": 3272,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3228,
											"end": 3272,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3228,
											"end": 3272,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3228,
											"end": 3272,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2813,
											"end": 3272,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "141"
										},
										{
											"begin": 2813,
											"end": 3272,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2726,
											"end": 3282,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2726,
											"end": 3282,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7070,
											"end": 7170,
											"name": "tag",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 7070,
											"end": 7170,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7116,
											"end": 7123,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7143,
											"end": 7154,
											"name": "PUSH",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 7143,
											"end": 7162,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7143,
											"end": 7162,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7143,
											"end": 7162,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7143,
											"end": 7162,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7143,
											"end": 7162,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 7143,
											"end": 7162,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7143,
											"end": 7162,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 7143,
											"end": 7162,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 7143,
											"end": 7162,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7143,
											"end": 7162,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 7143,
											"end": 7162,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7143,
											"end": 7162,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7136,
											"end": 7162,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7136,
											"end": 7162,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7070,
											"end": 7170,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7070,
											"end": 7170,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3928,
											"end": 4302,
											"name": "tag",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 3928,
											"end": 4302,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1956,
											"end": 1971,
											"name": "TIMESTAMP",
											"source": 3
										},
										{
											"begin": 1936,
											"end": 1953,
											"name": "PUSHIMMUTABLE",
											"source": 3,
											"value": "3171"
										},
										{
											"begin": 1936,
											"end": 1971,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFF"
										},
										{
											"begin": 1936,
											"end": 1971,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1936,
											"end": 1971,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 1932,
											"end": 2159,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1932,
											"end": 2159,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "145"
										},
										{
											"begin": 1932,
											"end": 2159,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2010,
											"end": 2030,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "146"
										},
										{
											"begin": 2010,
											"end": 2028,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "71"
										},
										{
											"begin": 2010,
											"end": 2030,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2010,
											"end": 2030,
											"name": "tag",
											"source": 3,
											"value": "146"
										},
										{
											"begin": 2010,
											"end": 2030,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1996,
											"end": 2030,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1996,
											"end": 2030,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1996,
											"end": 2006,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 1996,
											"end": 2030,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1996,
											"end": 2030,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1996,
											"end": 2030,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1988,
											"end": 2054,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "147"
										},
										{
											"begin": 1988,
											"end": 2054,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1988,
											"end": 2054,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1988,
											"end": 2054,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1988,
											"end": 2054,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1988,
											"end": 2054,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1988,
											"end": 2054,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1988,
											"end": 2054,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1988,
											"end": 2054,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1988,
											"end": 2054,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "148"
										},
										{
											"begin": 1988,
											"end": 2054,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1988,
											"end": 2054,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "90"
										},
										{
											"begin": 1988,
											"end": 2054,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1988,
											"end": 2054,
											"name": "tag",
											"source": 3,
											"value": "148"
										},
										{
											"begin": 1988,
											"end": 2054,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1988,
											"end": 2054,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1988,
											"end": 2054,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1988,
											"end": 2054,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1988,
											"end": 2054,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1988,
											"end": 2054,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1988,
											"end": 2054,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1988,
											"end": 2054,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1988,
											"end": 2054,
											"name": "tag",
											"source": 3,
											"value": "147"
										},
										{
											"begin": 1988,
											"end": 2054,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1932,
											"end": 2159,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "149"
										},
										{
											"begin": 1932,
											"end": 2159,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1932,
											"end": 2159,
											"name": "tag",
											"source": 3,
											"value": "145"
										},
										{
											"begin": 1932,
											"end": 2159,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2096,
											"end": 2113,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "150"
										},
										{
											"begin": 2096,
											"end": 2111,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "51"
										},
										{
											"begin": 2096,
											"end": 2113,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2096,
											"end": 2113,
											"name": "tag",
											"source": 3,
											"value": "150"
										},
										{
											"begin": 2096,
											"end": 2113,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2082,
											"end": 2113,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2082,
											"end": 2113,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2082,
											"end": 2092,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 2082,
											"end": 2113,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2082,
											"end": 2113,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2082,
											"end": 2113,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 2082,
											"end": 2135,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2082,
											"end": 2135,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2082,
											"end": 2135,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "151"
										},
										{
											"begin": 2082,
											"end": 2135,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2082,
											"end": 2135,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2118,
											"end": 2135,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "152"
										},
										{
											"begin": 2118,
											"end": 2133,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 2118,
											"end": 2135,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2118,
											"end": 2135,
											"name": "tag",
											"source": 3,
											"value": "152"
										},
										{
											"begin": 2118,
											"end": 2135,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2117,
											"end": 2135,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2082,
											"end": 2135,
											"name": "tag",
											"source": 3,
											"value": "151"
										},
										{
											"begin": 2082,
											"end": 2135,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2159,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "153"
										},
										{
											"begin": 2074,
											"end": 2159,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2159,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2074,
											"end": 2159,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2159,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2074,
											"end": 2159,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2159,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2159,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2074,
											"end": 2159,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2159,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "154"
										},
										{
											"begin": 2074,
											"end": 2159,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2159,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "90"
										},
										{
											"begin": 2074,
											"end": 2159,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2159,
											"name": "tag",
											"source": 3,
											"value": "154"
										},
										{
											"begin": 2074,
											"end": 2159,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2159,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2074,
											"end": 2159,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2159,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2159,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2159,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2159,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2159,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2159,
											"name": "tag",
											"source": 3,
											"value": "153"
										},
										{
											"begin": 2074,
											"end": 2159,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1932,
											"end": 2159,
											"name": "tag",
											"source": 3,
											"value": "149"
										},
										{
											"begin": 1932,
											"end": 2159,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4045,
											"end": 4053,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4019,
											"end": 4053,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4019,
											"end": 4053,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4019,
											"end": 4041,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4019,
											"end": 4041,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4019,
											"end": 4041,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 4019,
											"end": 4041,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4019,
											"end": 4041,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 4019,
											"end": 4041,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 4019,
											"end": 4041,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4019,
											"end": 4041,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 4019,
											"end": 4041,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4019,
											"end": 4041,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4019,
											"end": 4053,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4019,
											"end": 4053,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4019,
											"end": 4053,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4015,
											"end": 4294,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "156"
										},
										{
											"begin": 4015,
											"end": 4294,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4081,
											"end": 4109,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 4081,
											"end": 4109,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 4074,
											"end": 4109,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 4074,
											"end": 4109,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 4074,
											"end": 4109,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4074,
											"end": 4109,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 4074,
											"end": 4109,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4074,
											"end": 4109,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFF"
										},
										{
											"begin": 4074,
											"end": 4109,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 4074,
											"end": 4109,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 4074,
											"end": 4109,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4074,
											"end": 4109,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4074,
											"end": 4109,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 4135,
											"end": 4157,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4135,
											"end": 4157,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4128,
											"end": 4157,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 4128,
											"end": 4157,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 4128,
											"end": 4157,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4128,
											"end": 4157,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 4128,
											"end": 4157,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4128,
											"end": 4157,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4128,
											"end": 4157,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 4128,
											"end": 4157,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 4128,
											"end": 4157,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4128,
											"end": 4157,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4128,
											"end": 4157,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 4217,
											"end": 4225,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4182,
											"end": 4226,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4182,
											"end": 4226,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4182,
											"end": 4226,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "F299F61C7E493F99B20CB36C587CA903D085D5206BFE4452D295711E372DA029"
										},
										{
											"begin": 4182,
											"end": 4226,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4182,
											"end": 4226,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4182,
											"end": 4226,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4182,
											"end": 4226,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4182,
											"end": 4226,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4182,
											"end": 4226,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4182,
											"end": 4226,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4182,
											"end": 4226,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4182,
											"end": 4226,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 3
										},
										{
											"begin": 4015,
											"end": 4294,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "157"
										},
										{
											"begin": 4015,
											"end": 4294,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4015,
											"end": 4294,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "156"
										},
										{
											"begin": 4015,
											"end": 4294,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4285,
											"end": 4293,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4253,
											"end": 4294,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4253,
											"end": 4294,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4253,
											"end": 4294,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "C632231500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4253,
											"end": 4294,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4253,
											"end": 4294,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4253,
											"end": 4294,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4253,
											"end": 4294,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4253,
											"end": 4294,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "158"
										},
										{
											"begin": 4253,
											"end": 4294,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4253,
											"end": 4294,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4253,
											"end": 4294,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 4253,
											"end": 4294,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4253,
											"end": 4294,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "158"
										},
										{
											"begin": 4253,
											"end": 4294,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4253,
											"end": 4294,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4253,
											"end": 4294,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4253,
											"end": 4294,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4253,
											"end": 4294,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4253,
											"end": 4294,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4253,
											"end": 4294,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4253,
											"end": 4294,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 4015,
											"end": 4294,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "157"
										},
										{
											"begin": 4015,
											"end": 4294,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3928,
											"end": 4302,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3928,
											"end": 4302,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5420,
											"end": 5592,
											"name": "tag",
											"source": 3,
											"value": "49"
										},
										{
											"begin": 5420,
											"end": 5592,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2247,
											"end": 2264,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "160"
										},
										{
											"begin": 2247,
											"end": 2262,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "51"
										},
										{
											"begin": 2247,
											"end": 2264,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2247,
											"end": 2264,
											"name": "tag",
											"source": 3,
											"value": "160"
										},
										{
											"begin": 2247,
											"end": 2264,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2264,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2233,
											"end": 2264,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2243,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2264,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2233,
											"end": 2264,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2264,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2286,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2286,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2286,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "161"
										},
										{
											"begin": 2233,
											"end": 2286,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2286,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2269,
											"end": 2286,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "162"
										},
										{
											"begin": 2269,
											"end": 2284,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 2269,
											"end": 2286,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2269,
											"end": 2286,
											"name": "tag",
											"source": 3,
											"value": "162"
										},
										{
											"begin": 2269,
											"end": 2286,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2268,
											"end": 2286,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2286,
											"name": "tag",
											"source": 3,
											"value": "161"
										},
										{
											"begin": 2233,
											"end": 2286,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2225,
											"end": 2310,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "163"
										},
										{
											"begin": 2225,
											"end": 2310,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2225,
											"end": 2310,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2225,
											"end": 2310,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2225,
											"end": 2310,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2225,
											"end": 2310,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2225,
											"end": 2310,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2225,
											"end": 2310,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2225,
											"end": 2310,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2225,
											"end": 2310,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "164"
										},
										{
											"begin": 2225,
											"end": 2310,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2225,
											"end": 2310,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "90"
										},
										{
											"begin": 2225,
											"end": 2310,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2225,
											"end": 2310,
											"name": "tag",
											"source": 3,
											"value": "164"
										},
										{
											"begin": 2225,
											"end": 2310,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2225,
											"end": 2310,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2225,
											"end": 2310,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2225,
											"end": 2310,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2225,
											"end": 2310,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2225,
											"end": 2310,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2225,
											"end": 2310,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2225,
											"end": 2310,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2225,
											"end": 2310,
											"name": "tag",
											"source": 3,
											"value": "163"
										},
										{
											"begin": 2225,
											"end": 2310,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5524,
											"end": 5529,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5500,
											"end": 5521,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 5500,
											"end": 5521,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5500,
											"end": 5529,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 5500,
											"end": 5529,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 5500,
											"end": 5529,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5500,
											"end": 5529,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 5500,
											"end": 5529,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5500,
											"end": 5529,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5500,
											"end": 5529,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 5500,
											"end": 5529,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 5500,
											"end": 5529,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5500,
											"end": 5529,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5500,
											"end": 5529,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5500,
											"end": 5529,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5500,
											"end": 5529,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5500,
											"end": 5529,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 5500,
											"end": 5529,
											"modifierDepth": 1,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 5500,
											"end": 5529,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5500,
											"end": 5529,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 5500,
											"end": 5529,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5578,
											"end": 5583,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5547,
											"end": 5584,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5547,
											"end": 5584,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5547,
											"end": 5584,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "FF3CAD3EE28C342AD5F3D7C8FF8559EE4D21EB48494092B82A1652E443B3420B"
										},
										{
											"begin": 5547,
											"end": 5584,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5547,
											"end": 5584,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5547,
											"end": 5584,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5547,
											"end": 5584,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5547,
											"end": 5584,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5547,
											"end": 5584,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5547,
											"end": 5584,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5547,
											"end": 5584,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5547,
											"end": 5584,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 3
										},
										{
											"begin": 5420,
											"end": 5592,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5420,
											"end": 5592,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5207,
											"end": 5308,
											"name": "tag",
											"source": 3,
											"value": "51"
										},
										{
											"begin": 5207,
											"end": 5308,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5255,
											"end": 5262,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5282,
											"end": 5292,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 5282,
											"end": 5300,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5282,
											"end": 5300,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5282,
											"end": 5300,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5282,
											"end": 5300,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5282,
											"end": 5300,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 5282,
											"end": 5300,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5282,
											"end": 5300,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 5282,
											"end": 5300,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 5282,
											"end": 5300,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5282,
											"end": 5300,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 5282,
											"end": 5300,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5282,
											"end": 5300,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5275,
											"end": 5300,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5275,
											"end": 5300,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5207,
											"end": 5308,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5207,
											"end": 5308,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5316,
											"end": 5412,
											"name": "tag",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 5316,
											"end": 5412,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5364,
											"end": 5368,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5388,
											"end": 5398,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 5388,
											"end": 5404,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5388,
											"end": 5404,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5388,
											"end": 5404,
											"name": "PUSH",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 5388,
											"end": 5404,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5388,
											"end": 5404,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 5388,
											"end": 5404,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5388,
											"end": 5404,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 5388,
											"end": 5404,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 5388,
											"end": 5404,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5388,
											"end": 5404,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 5388,
											"end": 5404,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 5388,
											"end": 5404,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5381,
											"end": 5404,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5381,
											"end": 5404,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5316,
											"end": 5412,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5316,
											"end": 5412,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3290,
											"end": 3920,
											"name": "tag",
											"source": 3,
											"value": "59"
										},
										{
											"begin": 3290,
											"end": 3920,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1956,
											"end": 1971,
											"name": "TIMESTAMP",
											"source": 3
										},
										{
											"begin": 1936,
											"end": 1953,
											"name": "PUSHIMMUTABLE",
											"source": 3,
											"value": "3171"
										},
										{
											"begin": 1936,
											"end": 1971,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFF"
										},
										{
											"begin": 1936,
											"end": 1971,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1936,
											"end": 1971,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 1932,
											"end": 2159,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1932,
											"end": 2159,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "169"
										},
										{
											"begin": 1932,
											"end": 2159,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2010,
											"end": 2030,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "170"
										},
										{
											"begin": 2010,
											"end": 2028,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "71"
										},
										{
											"begin": 2010,
											"end": 2030,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2010,
											"end": 2030,
											"name": "tag",
											"source": 3,
											"value": "170"
										},
										{
											"begin": 2010,
											"end": 2030,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1996,
											"end": 2030,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1996,
											"end": 2030,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1996,
											"end": 2006,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 1996,
											"end": 2030,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1996,
											"end": 2030,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1996,
											"end": 2030,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1988,
											"end": 2054,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "171"
										},
										{
											"begin": 1988,
											"end": 2054,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1988,
											"end": 2054,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1988,
											"end": 2054,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1988,
											"end": 2054,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1988,
											"end": 2054,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1988,
											"end": 2054,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1988,
											"end": 2054,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1988,
											"end": 2054,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1988,
											"end": 2054,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "172"
										},
										{
											"begin": 1988,
											"end": 2054,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1988,
											"end": 2054,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "90"
										},
										{
											"begin": 1988,
											"end": 2054,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1988,
											"end": 2054,
											"name": "tag",
											"source": 3,
											"value": "172"
										},
										{
											"begin": 1988,
											"end": 2054,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1988,
											"end": 2054,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1988,
											"end": 2054,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1988,
											"end": 2054,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1988,
											"end": 2054,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1988,
											"end": 2054,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1988,
											"end": 2054,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1988,
											"end": 2054,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1988,
											"end": 2054,
											"name": "tag",
											"source": 3,
											"value": "171"
										},
										{
											"begin": 1988,
											"end": 2054,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1932,
											"end": 2159,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "173"
										},
										{
											"begin": 1932,
											"end": 2159,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1932,
											"end": 2159,
											"name": "tag",
											"source": 3,
											"value": "169"
										},
										{
											"begin": 1932,
											"end": 2159,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2096,
											"end": 2113,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "174"
										},
										{
											"begin": 2096,
											"end": 2111,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "51"
										},
										{
											"begin": 2096,
											"end": 2113,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2096,
											"end": 2113,
											"name": "tag",
											"source": 3,
											"value": "174"
										},
										{
											"begin": 2096,
											"end": 2113,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2082,
											"end": 2113,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2082,
											"end": 2113,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2082,
											"end": 2092,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 2082,
											"end": 2113,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2082,
											"end": 2113,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2082,
											"end": 2113,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 2082,
											"end": 2135,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2082,
											"end": 2135,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2082,
											"end": 2135,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "175"
										},
										{
											"begin": 2082,
											"end": 2135,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2082,
											"end": 2135,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2118,
											"end": 2135,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "176"
										},
										{
											"begin": 2118,
											"end": 2133,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 2118,
											"end": 2135,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2118,
											"end": 2135,
											"name": "tag",
											"source": 3,
											"value": "176"
										},
										{
											"begin": 2118,
											"end": 2135,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2117,
											"end": 2135,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2082,
											"end": 2135,
											"name": "tag",
											"source": 3,
											"value": "175"
										},
										{
											"begin": 2082,
											"end": 2135,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2159,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "177"
										},
										{
											"begin": 2074,
											"end": 2159,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2159,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2074,
											"end": 2159,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2159,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2074,
											"end": 2159,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2159,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2159,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2074,
											"end": 2159,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2159,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "178"
										},
										{
											"begin": 2074,
											"end": 2159,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2159,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "90"
										},
										{
											"begin": 2074,
											"end": 2159,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2159,
											"name": "tag",
											"source": 3,
											"value": "178"
										},
										{
											"begin": 2074,
											"end": 2159,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2159,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2074,
											"end": 2159,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2159,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2159,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2159,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2159,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2159,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2159,
											"name": "tag",
											"source": 3,
											"value": "177"
										},
										{
											"begin": 2074,
											"end": 2159,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1932,
											"end": 2159,
											"name": "tag",
											"source": 3,
											"value": "173"
										},
										{
											"begin": 1932,
											"end": 2159,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3407,
											"end": 3422,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 3
										},
										{
											"begin": 3376,
											"end": 3404,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 3376,
											"end": 3404,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 3376,
											"end": 3404,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3376,
											"end": 3404,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3376,
											"end": 3404,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3376,
											"end": 3404,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 3376,
											"end": 3404,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 3376,
											"end": 3404,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3376,
											"end": 3404,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 3376,
											"end": 3404,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFF"
										},
										{
											"begin": 3376,
											"end": 3404,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3376,
											"end": 3422,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFF"
										},
										{
											"begin": 3376,
											"end": 3422,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3376,
											"end": 3422,
											"modifierDepth": 1,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 3372,
											"end": 3912,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3372,
											"end": 3912,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "180"
										},
										{
											"begin": 3372,
											"end": 3912,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3479,
											"end": 3480,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3447,
											"end": 3475,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 3447,
											"end": 3475,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 3447,
											"end": 3475,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3447,
											"end": 3475,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3447,
											"end": 3475,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3447,
											"end": 3475,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 3447,
											"end": 3475,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 3447,
											"end": 3475,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3447,
											"end": 3475,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 3447,
											"end": 3475,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFF"
										},
										{
											"begin": 3447,
											"end": 3475,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3447,
											"end": 3480,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFF"
										},
										{
											"begin": 3447,
											"end": 3480,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3447,
											"end": 3480,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3439,
											"end": 3506,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "181"
										},
										{
											"begin": 3439,
											"end": 3506,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3439,
											"end": 3506,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3439,
											"end": 3506,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3439,
											"end": 3506,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3439,
											"end": 3506,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3439,
											"end": 3506,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3439,
											"end": 3506,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3439,
											"end": 3506,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3439,
											"end": 3506,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "182"
										},
										{
											"begin": 3439,
											"end": 3506,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3439,
											"end": 3506,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "183"
										},
										{
											"begin": 3439,
											"end": 3506,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3439,
											"end": 3506,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "182"
										},
										{
											"begin": 3439,
											"end": 3506,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3439,
											"end": 3506,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3439,
											"end": 3506,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3439,
											"end": 3506,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3439,
											"end": 3506,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3439,
											"end": 3506,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3439,
											"end": 3506,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3439,
											"end": 3506,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 3439,
											"end": 3506,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "181"
										},
										{
											"begin": 3439,
											"end": 3506,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3559,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3525,
											"end": 3559,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3525,
											"end": 3559,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3525,
											"end": 3547,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3525,
											"end": 3547,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3525,
											"end": 3547,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3525,
											"end": 3547,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3525,
											"end": 3547,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 3525,
											"end": 3547,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 3525,
											"end": 3547,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3525,
											"end": 3547,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 3525,
											"end": 3547,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3525,
											"end": 3547,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3525,
											"end": 3559,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3525,
											"end": 3559,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3525,
											"end": 3559,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3521,
											"end": 3788,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "184"
										},
										{
											"begin": 3521,
											"end": 3788,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3587,
											"end": 3615,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 3587,
											"end": 3615,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 3580,
											"end": 3615,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 3580,
											"end": 3615,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 3580,
											"end": 3615,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3580,
											"end": 3615,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3580,
											"end": 3615,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3580,
											"end": 3615,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFF"
										},
										{
											"begin": 3580,
											"end": 3615,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 3580,
											"end": 3615,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 3580,
											"end": 3615,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3580,
											"end": 3615,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3580,
											"end": 3615,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 3641,
											"end": 3663,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3641,
											"end": 3663,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3634,
											"end": 3663,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 3634,
											"end": 3663,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 3634,
											"end": 3663,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3634,
											"end": 3663,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3634,
											"end": 3663,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3634,
											"end": 3663,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3634,
											"end": 3663,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 3634,
											"end": 3663,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 3634,
											"end": 3663,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3634,
											"end": 3663,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3634,
											"end": 3663,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 3682,
											"end": 3716,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "185"
										},
										{
											"begin": 3707,
											"end": 3715,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3682,
											"end": 3706,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "137"
										},
										{
											"begin": 3682,
											"end": 3716,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3682,
											"end": 3716,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "185"
										},
										{
											"begin": 3682,
											"end": 3716,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3521,
											"end": 3788,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "186"
										},
										{
											"begin": 3521,
											"end": 3788,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3521,
											"end": 3788,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "184"
										},
										{
											"begin": 3521,
											"end": 3788,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3779,
											"end": 3787,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3747,
											"end": 3788,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3747,
											"end": 3788,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3747,
											"end": 3788,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "C632231500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3747,
											"end": 3788,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3747,
											"end": 3788,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3747,
											"end": 3788,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3747,
											"end": 3788,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3747,
											"end": 3788,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "187"
										},
										{
											"begin": 3747,
											"end": 3788,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3747,
											"end": 3788,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3747,
											"end": 3788,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 3747,
											"end": 3788,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3747,
											"end": 3788,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "187"
										},
										{
											"begin": 3747,
											"end": 3788,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3747,
											"end": 3788,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3747,
											"end": 3788,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3747,
											"end": 3788,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3747,
											"end": 3788,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3747,
											"end": 3788,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3747,
											"end": 3788,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3747,
											"end": 3788,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 3521,
											"end": 3788,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "186"
										},
										{
											"begin": 3521,
											"end": 3788,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3372,
											"end": 3912,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "188"
										},
										{
											"begin": 3372,
											"end": 3912,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3372,
											"end": 3912,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "180"
										},
										{
											"begin": 3372,
											"end": 3912,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3895,
											"end": 3910,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 3
										},
										{
											"begin": 3857,
											"end": 3885,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 3857,
											"end": 3885,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 3857,
											"end": 3885,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3857,
											"end": 3885,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3857,
											"end": 3885,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3857,
											"end": 3885,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 3857,
											"end": 3885,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 3857,
											"end": 3885,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3857,
											"end": 3885,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 3857,
											"end": 3885,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFF"
										},
										{
											"begin": 3857,
											"end": 3885,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3857,
											"end": 3911,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "189"
										},
										{
											"begin": 3857,
											"end": 3911,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3857,
											"end": 3911,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3857,
											"end": 3911,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "190"
										},
										{
											"begin": 3857,
											"end": 3911,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3857,
											"end": 3911,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "189"
										},
										{
											"begin": 3857,
											"end": 3911,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3815,
											"end": 3912,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3815,
											"end": 3912,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3815,
											"end": 3912,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "223A6CBB00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3815,
											"end": 3912,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3815,
											"end": 3912,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3815,
											"end": 3912,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3815,
											"end": 3912,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3815,
											"end": 3912,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "191"
										},
										{
											"begin": 3815,
											"end": 3912,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3815,
											"end": 3912,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3815,
											"end": 3912,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "192"
										},
										{
											"begin": 3815,
											"end": 3912,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3815,
											"end": 3912,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "191"
										},
										{
											"begin": 3815,
											"end": 3912,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3815,
											"end": 3912,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3815,
											"end": 3912,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3815,
											"end": 3912,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3815,
											"end": 3912,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3815,
											"end": 3912,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3815,
											"end": 3912,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3815,
											"end": 3912,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 3372,
											"end": 3912,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "188"
										},
										{
											"begin": 3372,
											"end": 3912,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3290,
											"end": 3920,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3290,
											"end": 3920,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6089,
											"end": 6198,
											"name": "tag",
											"source": 3,
											"value": "61"
										},
										{
											"begin": 6089,
											"end": 6198,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6141,
											"end": 6148,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6168,
											"end": 6182,
											"name": "PUSH",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 6168,
											"end": 6190,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6168,
											"end": 6190,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6168,
											"end": 6190,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6168,
											"end": 6190,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6168,
											"end": 6190,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 6168,
											"end": 6190,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6168,
											"end": 6190,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 6168,
											"end": 6190,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 6168,
											"end": 6190,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6168,
											"end": 6190,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 6168,
											"end": 6190,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6168,
											"end": 6190,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6161,
											"end": 6190,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6161,
											"end": 6190,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6089,
											"end": 6198,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6089,
											"end": 6198,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7290,
											"end": 7433,
											"name": "tag",
											"source": 3,
											"value": "65"
										},
										{
											"begin": 7290,
											"end": 7433,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1956,
											"end": 1971,
											"name": "TIMESTAMP",
											"source": 3
										},
										{
											"begin": 1936,
											"end": 1953,
											"name": "PUSHIMMUTABLE",
											"source": 3,
											"value": "3171"
										},
										{
											"begin": 1936,
											"end": 1971,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFF"
										},
										{
											"begin": 1936,
											"end": 1971,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1936,
											"end": 1971,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 1932,
											"end": 2159,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1932,
											"end": 2159,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "195"
										},
										{
											"begin": 1932,
											"end": 2159,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2010,
											"end": 2030,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "196"
										},
										{
											"begin": 2010,
											"end": 2028,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "71"
										},
										{
											"begin": 2010,
											"end": 2030,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2010,
											"end": 2030,
											"name": "tag",
											"source": 3,
											"value": "196"
										},
										{
											"begin": 2010,
											"end": 2030,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1996,
											"end": 2030,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1996,
											"end": 2030,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1996,
											"end": 2006,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 1996,
											"end": 2030,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1996,
											"end": 2030,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1996,
											"end": 2030,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1988,
											"end": 2054,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "197"
										},
										{
											"begin": 1988,
											"end": 2054,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1988,
											"end": 2054,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1988,
											"end": 2054,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1988,
											"end": 2054,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1988,
											"end": 2054,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1988,
											"end": 2054,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1988,
											"end": 2054,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1988,
											"end": 2054,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1988,
											"end": 2054,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "198"
										},
										{
											"begin": 1988,
											"end": 2054,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1988,
											"end": 2054,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "90"
										},
										{
											"begin": 1988,
											"end": 2054,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1988,
											"end": 2054,
											"name": "tag",
											"source": 3,
											"value": "198"
										},
										{
											"begin": 1988,
											"end": 2054,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1988,
											"end": 2054,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1988,
											"end": 2054,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1988,
											"end": 2054,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1988,
											"end": 2054,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1988,
											"end": 2054,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1988,
											"end": 2054,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1988,
											"end": 2054,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1988,
											"end": 2054,
											"name": "tag",
											"source": 3,
											"value": "197"
										},
										{
											"begin": 1988,
											"end": 2054,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1932,
											"end": 2159,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "199"
										},
										{
											"begin": 1932,
											"end": 2159,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1932,
											"end": 2159,
											"name": "tag",
											"source": 3,
											"value": "195"
										},
										{
											"begin": 1932,
											"end": 2159,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2096,
											"end": 2113,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "200"
										},
										{
											"begin": 2096,
											"end": 2111,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "51"
										},
										{
											"begin": 2096,
											"end": 2113,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2096,
											"end": 2113,
											"name": "tag",
											"source": 3,
											"value": "200"
										},
										{
											"begin": 2096,
											"end": 2113,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2082,
											"end": 2113,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2082,
											"end": 2113,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2082,
											"end": 2092,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 2082,
											"end": 2113,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2082,
											"end": 2113,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2082,
											"end": 2113,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 2082,
											"end": 2135,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2082,
											"end": 2135,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2082,
											"end": 2135,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "201"
										},
										{
											"begin": 2082,
											"end": 2135,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2082,
											"end": 2135,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2118,
											"end": 2135,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "202"
										},
										{
											"begin": 2118,
											"end": 2133,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 2118,
											"end": 2135,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2118,
											"end": 2135,
											"name": "tag",
											"source": 3,
											"value": "202"
										},
										{
											"begin": 2118,
											"end": 2135,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2117,
											"end": 2135,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2082,
											"end": 2135,
											"name": "tag",
											"source": 3,
											"value": "201"
										},
										{
											"begin": 2082,
											"end": 2135,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2159,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "203"
										},
										{
											"begin": 2074,
											"end": 2159,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2159,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2074,
											"end": 2159,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2159,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2074,
											"end": 2159,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2159,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2159,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2074,
											"end": 2159,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2159,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "204"
										},
										{
											"begin": 2074,
											"end": 2159,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2159,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "90"
										},
										{
											"begin": 2074,
											"end": 2159,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2159,
											"name": "tag",
											"source": 3,
											"value": "204"
										},
										{
											"begin": 2074,
											"end": 2159,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2159,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2074,
											"end": 2159,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2159,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2159,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2159,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2159,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2159,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2159,
											"name": "tag",
											"source": 3,
											"value": "203"
										},
										{
											"begin": 2074,
											"end": 2159,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1932,
											"end": 2159,
											"name": "tag",
											"source": 3,
											"value": "199"
										},
										{
											"begin": 1932,
											"end": 2159,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7360,
											"end": 7385,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "206"
										},
										{
											"begin": 7379,
											"end": 7384,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7360,
											"end": 7378,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "99"
										},
										{
											"begin": 7360,
											"end": 7385,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7360,
											"end": 7385,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "206"
										},
										{
											"begin": 7360,
											"end": 7385,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7396,
											"end": 7425,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "207"
										},
										{
											"begin": 7419,
											"end": 7424,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7396,
											"end": 7418,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "101"
										},
										{
											"begin": 7396,
											"end": 7425,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7396,
											"end": 7425,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "207"
										},
										{
											"begin": 7396,
											"end": 7425,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7290,
											"end": 7433,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7290,
											"end": 7433,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7178,
											"end": 7282,
											"name": "tag",
											"source": 3,
											"value": "67"
										},
										{
											"begin": 7178,
											"end": 7282,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7231,
											"end": 7237,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7257,
											"end": 7268,
											"name": "PUSH",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 7257,
											"end": 7274,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7257,
											"end": 7274,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7257,
											"end": 7274,
											"name": "PUSH",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 7257,
											"end": 7274,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7257,
											"end": 7274,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 7257,
											"end": 7274,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7257,
											"end": 7274,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 7257,
											"end": 7274,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 7257,
											"end": 7274,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7257,
											"end": 7274,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 7257,
											"end": 7274,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7257,
											"end": 7274,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7250,
											"end": 7274,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7250,
											"end": 7274,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7178,
											"end": 7282,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7178,
											"end": 7282,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4310,
											"end": 4424,
											"name": "tag",
											"source": 3,
											"value": "71"
										},
										{
											"begin": 4310,
											"end": 4424,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4361,
											"end": 4371,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4395,
											"end": 4404,
											"name": "PUSH",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 4395,
											"end": 4412,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4395,
											"end": 4412,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4395,
											"end": 4412,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4395,
											"end": 4412,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4395,
											"end": 4412,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 4395,
											"end": 4412,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4395,
											"end": 4412,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 4395,
											"end": 4412,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 4395,
											"end": 4412,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4395,
											"end": 4412,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 4395,
											"end": 4412,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4395,
											"end": 4412,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4388,
											"end": 4412,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4388,
											"end": 4412,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4310,
											"end": 4424,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4310,
											"end": 4424,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6320,
											"end": 6635,
											"name": "tag",
											"source": 3,
											"value": "75"
										},
										{
											"begin": 6320,
											"end": 6635,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1956,
											"end": 1971,
											"name": "TIMESTAMP",
											"source": 3
										},
										{
											"begin": 1936,
											"end": 1953,
											"name": "PUSHIMMUTABLE",
											"source": 3,
											"value": "3171"
										},
										{
											"begin": 1936,
											"end": 1971,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFF"
										},
										{
											"begin": 1936,
											"end": 1971,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1936,
											"end": 1971,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 1932,
											"end": 2159,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1932,
											"end": 2159,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "211"
										},
										{
											"begin": 1932,
											"end": 2159,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2010,
											"end": 2030,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "212"
										},
										{
											"begin": 2010,
											"end": 2028,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "71"
										},
										{
											"begin": 2010,
											"end": 2030,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2010,
											"end": 2030,
											"name": "tag",
											"source": 3,
											"value": "212"
										},
										{
											"begin": 2010,
											"end": 2030,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1996,
											"end": 2030,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1996,
											"end": 2030,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1996,
											"end": 2006,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 1996,
											"end": 2030,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1996,
											"end": 2030,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1996,
											"end": 2030,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1988,
											"end": 2054,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "213"
										},
										{
											"begin": 1988,
											"end": 2054,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1988,
											"end": 2054,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1988,
											"end": 2054,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1988,
											"end": 2054,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1988,
											"end": 2054,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1988,
											"end": 2054,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1988,
											"end": 2054,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1988,
											"end": 2054,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1988,
											"end": 2054,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "214"
										},
										{
											"begin": 1988,
											"end": 2054,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1988,
											"end": 2054,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "90"
										},
										{
											"begin": 1988,
											"end": 2054,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1988,
											"end": 2054,
											"name": "tag",
											"source": 3,
											"value": "214"
										},
										{
											"begin": 1988,
											"end": 2054,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1988,
											"end": 2054,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1988,
											"end": 2054,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1988,
											"end": 2054,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1988,
											"end": 2054,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1988,
											"end": 2054,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1988,
											"end": 2054,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1988,
											"end": 2054,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1988,
											"end": 2054,
											"name": "tag",
											"source": 3,
											"value": "213"
										},
										{
											"begin": 1988,
											"end": 2054,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1932,
											"end": 2159,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "215"
										},
										{
											"begin": 1932,
											"end": 2159,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1932,
											"end": 2159,
											"name": "tag",
											"source": 3,
											"value": "211"
										},
										{
											"begin": 1932,
											"end": 2159,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2096,
											"end": 2113,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "216"
										},
										{
											"begin": 2096,
											"end": 2111,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "51"
										},
										{
											"begin": 2096,
											"end": 2113,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2096,
											"end": 2113,
											"name": "tag",
											"source": 3,
											"value": "216"
										},
										{
											"begin": 2096,
											"end": 2113,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2082,
											"end": 2113,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2082,
											"end": 2113,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2082,
											"end": 2092,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 2082,
											"end": 2113,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2082,
											"end": 2113,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2082,
											"end": 2113,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 2082,
											"end": 2135,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2082,
											"end": 2135,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2082,
											"end": 2135,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "217"
										},
										{
											"begin": 2082,
											"end": 2135,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2082,
											"end": 2135,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2118,
											"end": 2135,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "218"
										},
										{
											"begin": 2118,
											"end": 2133,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 2118,
											"end": 2135,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2118,
											"end": 2135,
											"name": "tag",
											"source": 3,
											"value": "218"
										},
										{
											"begin": 2118,
											"end": 2135,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2117,
											"end": 2135,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2082,
											"end": 2135,
											"name": "tag",
											"source": 3,
											"value": "217"
										},
										{
											"begin": 2082,
											"end": 2135,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2159,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "219"
										},
										{
											"begin": 2074,
											"end": 2159,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2159,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2074,
											"end": 2159,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2159,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2074,
											"end": 2159,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2159,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2159,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2074,
											"end": 2159,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2159,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "220"
										},
										{
											"begin": 2074,
											"end": 2159,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2159,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "90"
										},
										{
											"begin": 2074,
											"end": 2159,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2159,
											"name": "tag",
											"source": 3,
											"value": "220"
										},
										{
											"begin": 2074,
											"end": 2159,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2159,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2074,
											"end": 2159,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2159,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2159,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2159,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2159,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2159,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2159,
											"name": "tag",
											"source": 3,
											"value": "219"
										},
										{
											"begin": 2074,
											"end": 2159,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1932,
											"end": 2159,
											"name": "tag",
											"source": 3,
											"value": "215"
										},
										{
											"begin": 1932,
											"end": 2159,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6449,
											"end": 6450,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6422,
											"end": 6434,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6422,
											"end": 6446,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6422,
											"end": 6446,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6422,
											"end": 6446,
											"modifierDepth": 1,
											"name": "EXTCODESIZE",
											"source": 3
										},
										{
											"begin": 6422,
											"end": 6450,
											"modifierDepth": 1,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 6418,
											"end": 6625,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 6418,
											"end": 6625,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "222"
										},
										{
											"begin": 6418,
											"end": 6625,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6487,
											"end": 6499,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6467,
											"end": 6484,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 6467,
											"end": 6484,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6467,
											"end": 6499,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 6467,
											"end": 6499,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 6467,
											"end": 6499,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6467,
											"end": 6499,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 6467,
											"end": 6499,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6467,
											"end": 6499,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6467,
											"end": 6499,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 6467,
											"end": 6499,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 6467,
											"end": 6499,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6467,
											"end": 6499,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6467,
											"end": 6499,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6467,
											"end": 6499,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6467,
											"end": 6499,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6467,
											"end": 6499,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 6467,
											"end": 6499,
											"modifierDepth": 1,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 6467,
											"end": 6499,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6467,
											"end": 6499,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 6467,
											"end": 6499,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6546,
											"end": 6558,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6519,
											"end": 6559,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6519,
											"end": 6559,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6519,
											"end": 6559,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "E8D8E3C7C3EBEC0C177D0FE22D223F8B5071DB39155104808D45027E368BA77A"
										},
										{
											"begin": 6519,
											"end": 6559,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6519,
											"end": 6559,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6519,
											"end": 6559,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6519,
											"end": 6559,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6519,
											"end": 6559,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6519,
											"end": 6559,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6519,
											"end": 6559,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6519,
											"end": 6559,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6519,
											"end": 6559,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 3
										},
										{
											"begin": 6418,
											"end": 6625,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "223"
										},
										{
											"begin": 6418,
											"end": 6625,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6418,
											"end": 6625,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "222"
										},
										{
											"begin": 6418,
											"end": 6625,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6612,
											"end": 6624,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6586,
											"end": 6625,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6586,
											"end": 6625,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6586,
											"end": 6625,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "84DBC6CB00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6586,
											"end": 6625,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6586,
											"end": 6625,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6586,
											"end": 6625,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 6586,
											"end": 6625,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6586,
											"end": 6625,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "224"
										},
										{
											"begin": 6586,
											"end": 6625,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6586,
											"end": 6625,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6586,
											"end": 6625,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 6586,
											"end": 6625,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6586,
											"end": 6625,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "224"
										},
										{
											"begin": 6586,
											"end": 6625,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6586,
											"end": 6625,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6586,
											"end": 6625,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6586,
											"end": 6625,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6586,
											"end": 6625,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6586,
											"end": 6625,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6586,
											"end": 6625,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6586,
											"end": 6625,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 6418,
											"end": 6625,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "223"
										},
										{
											"begin": 6418,
											"end": 6625,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6320,
											"end": 6635,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6320,
											"end": 6635,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4436,
											"end": 4545,
											"name": "tag",
											"source": 3,
											"value": "77"
										},
										{
											"begin": 4436,
											"end": 4545,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4488,
											"end": 4495,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4528,
											"end": 4532,
											"name": "ADDRESS",
											"source": 3
										},
										{
											"begin": 4512,
											"end": 4533,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4512,
											"end": 4533,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4436,
											"end": 4545,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4436,
											"end": 4545,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6206,
											"end": 6310,
											"name": "tag",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 6206,
											"end": 6310,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6258,
											"end": 6262,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6282,
											"end": 6296,
											"name": "PUSH",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 6282,
											"end": 6302,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6282,
											"end": 6302,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6282,
											"end": 6302,
											"name": "PUSH",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 6282,
											"end": 6302,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6282,
											"end": 6302,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 6282,
											"end": 6302,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6282,
											"end": 6302,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 6282,
											"end": 6302,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 6282,
											"end": 6302,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6282,
											"end": 6302,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 6282,
											"end": 6302,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 6282,
											"end": 6302,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6275,
											"end": 6302,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6275,
											"end": 6302,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6206,
											"end": 6310,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6206,
											"end": 6310,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6643,
											"end": 7062,
											"name": "tag",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 6643,
											"end": 7062,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2247,
											"end": 2264,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "228"
										},
										{
											"begin": 2247,
											"end": 2262,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "51"
										},
										{
											"begin": 2247,
											"end": 2264,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2247,
											"end": 2264,
											"name": "tag",
											"source": 3,
											"value": "228"
										},
										{
											"begin": 2247,
											"end": 2264,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2264,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2233,
											"end": 2264,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2243,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2264,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2233,
											"end": 2264,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2264,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2286,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2286,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2286,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "229"
										},
										{
											"begin": 2233,
											"end": 2286,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2286,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2269,
											"end": 2286,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "230"
										},
										{
											"begin": 2269,
											"end": 2284,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 2269,
											"end": 2286,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2269,
											"end": 2286,
											"name": "tag",
											"source": 3,
											"value": "230"
										},
										{
											"begin": 2269,
											"end": 2286,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2268,
											"end": 2286,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2286,
											"name": "tag",
											"source": 3,
											"value": "229"
										},
										{
											"begin": 2233,
											"end": 2286,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2225,
											"end": 2310,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "231"
										},
										{
											"begin": 2225,
											"end": 2310,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2225,
											"end": 2310,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2225,
											"end": 2310,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2225,
											"end": 2310,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2225,
											"end": 2310,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2225,
											"end": 2310,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2225,
											"end": 2310,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2225,
											"end": 2310,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2225,
											"end": 2310,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "232"
										},
										{
											"begin": 2225,
											"end": 2310,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2225,
											"end": 2310,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "90"
										},
										{
											"begin": 2225,
											"end": 2310,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2225,
											"end": 2310,
											"name": "tag",
											"source": 3,
											"value": "232"
										},
										{
											"begin": 2225,
											"end": 2310,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2225,
											"end": 2310,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2225,
											"end": 2310,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2225,
											"end": 2310,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2225,
											"end": 2310,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2225,
											"end": 2310,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2225,
											"end": 2310,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2225,
											"end": 2310,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2225,
											"end": 2310,
											"name": "tag",
											"source": 3,
											"value": "231"
										},
										{
											"begin": 2225,
											"end": 2310,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6765,
											"end": 6777,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6744,
											"end": 6777,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6744,
											"end": 6777,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6744,
											"end": 6761,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 6744,
											"end": 6761,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6744,
											"end": 6761,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6744,
											"end": 6761,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 6744,
											"end": 6761,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6744,
											"end": 6761,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 6744,
											"end": 6761,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 6744,
											"end": 6761,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6744,
											"end": 6761,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 6744,
											"end": 6761,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6744,
											"end": 6761,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6744,
											"end": 6777,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6744,
											"end": 6777,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6744,
											"end": 6777,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6740,
											"end": 7054,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "234"
										},
										{
											"begin": 6740,
											"end": 7054,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6801,
											"end": 6818,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 6801,
											"end": 6818,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6794,
											"end": 6818,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 6794,
											"end": 6818,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 6794,
											"end": 6818,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6794,
											"end": 6818,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 6794,
											"end": 6818,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6794,
											"end": 6818,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6794,
											"end": 6818,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 6794,
											"end": 6818,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 6794,
											"end": 6818,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6794,
											"end": 6818,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6794,
											"end": 6818,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 6855,
											"end": 6867,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6833,
											"end": 6844,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 6833,
											"end": 6852,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6833,
											"end": 6852,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6833,
											"end": 6852,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6833,
											"end": 6867,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 6833,
											"end": 6867,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 6833,
											"end": 6867,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6833,
											"end": 6867,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 6833,
											"end": 6867,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6833,
											"end": 6867,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6833,
											"end": 6867,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 6833,
											"end": 6867,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 6833,
											"end": 6867,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6833,
											"end": 6867,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6833,
											"end": 6867,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6833,
											"end": 6867,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6833,
											"end": 6867,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6833,
											"end": 6867,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 6833,
											"end": 6867,
											"modifierDepth": 1,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 6833,
											"end": 6867,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6833,
											"end": 6867,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 6833,
											"end": 6867,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6882,
											"end": 6893,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 6882,
											"end": 6899,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6882,
											"end": 6899,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6882,
											"end": 6899,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 6882,
											"end": 6901,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6882,
											"end": 6901,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6882,
											"end": 6901,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6882,
											"end": 6901,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 6882,
											"end": 6901,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6882,
											"end": 6901,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 6882,
											"end": 6901,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 6882,
											"end": 6901,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6882,
											"end": 6901,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 6882,
											"end": 6901,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6882,
											"end": 6901,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6882,
											"end": 6901,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6882,
											"end": 6901,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6882,
											"end": 6901,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6882,
											"end": 6901,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6882,
											"end": 6901,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "235"
										},
										{
											"begin": 6882,
											"end": 6901,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6882,
											"end": 6901,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "113"
										},
										{
											"begin": 6882,
											"end": 6901,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6882,
											"end": 6901,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "235"
										},
										{
											"begin": 6882,
											"end": 6901,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6882,
											"end": 6901,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6882,
											"end": 6901,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6882,
											"end": 6901,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 6882,
											"end": 6901,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 6882,
											"end": 6901,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6882,
											"end": 6901,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 6882,
											"end": 6901,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6882,
											"end": 6901,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6882,
											"end": 6901,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 6882,
											"end": 6901,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 6882,
											"end": 6901,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6882,
											"end": 6901,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6882,
											"end": 6901,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6882,
											"end": 6901,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6882,
											"end": 6901,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6882,
											"end": 6901,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 6882,
											"end": 6901,
											"modifierDepth": 1,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 6882,
											"end": 6901,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6882,
											"end": 6901,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 6882,
											"end": 6901,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6882,
											"end": 6901,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6970,
											"end": 6981,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 6970,
											"end": 6987,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6970,
											"end": 6987,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6970,
											"end": 6987,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 6970,
											"end": 6987,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6970,
											"end": 6987,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 6970,
											"end": 6987,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6970,
											"end": 6987,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 6970,
											"end": 6987,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 6970,
											"end": 6987,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6970,
											"end": 6987,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 6970,
											"end": 6987,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6970,
											"end": 6987,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6921,
											"end": 6988,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6921,
											"end": 6988,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6949,
											"end": 6960,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 6949,
											"end": 6968,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6949,
											"end": 6968,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6949,
											"end": 6968,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6949,
											"end": 6968,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6949,
											"end": 6968,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 6949,
											"end": 6968,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6949,
											"end": 6968,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 6949,
											"end": 6968,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 6949,
											"end": 6968,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6949,
											"end": 6968,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 6949,
											"end": 6968,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6949,
											"end": 6968,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6921,
											"end": 6988,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6921,
											"end": 6988,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6921,
											"end": 6988,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "5E86008A8467D1EFCCFE6CB6BD49BA7278D6AF2745A1E6994E443322A4237093"
										},
										{
											"begin": 6921,
											"end": 6988,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6921,
											"end": 6988,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6921,
											"end": 6988,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6921,
											"end": 6988,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6921,
											"end": 6988,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6921,
											"end": 6988,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6921,
											"end": 6988,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6921,
											"end": 6988,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6921,
											"end": 6988,
											"modifierDepth": 1,
											"name": "LOG3",
											"source": 3
										},
										{
											"begin": 6740,
											"end": 7054,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "236"
										},
										{
											"begin": 6740,
											"end": 7054,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6740,
											"end": 7054,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "234"
										},
										{
											"begin": 6740,
											"end": 7054,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7041,
											"end": 7053,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7015,
											"end": 7054,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7015,
											"end": 7054,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7015,
											"end": 7054,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "84DBC6CB00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7015,
											"end": 7054,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7015,
											"end": 7054,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7015,
											"end": 7054,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 7015,
											"end": 7054,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7015,
											"end": 7054,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "237"
										},
										{
											"begin": 7015,
											"end": 7054,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7015,
											"end": 7054,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7015,
											"end": 7054,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 7015,
											"end": 7054,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7015,
											"end": 7054,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "237"
										},
										{
											"begin": 7015,
											"end": 7054,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7015,
											"end": 7054,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7015,
											"end": 7054,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7015,
											"end": 7054,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7015,
											"end": 7054,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7015,
											"end": 7054,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7015,
											"end": 7054,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7015,
											"end": 7054,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 6740,
											"end": 7054,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "236"
										},
										{
											"begin": 6740,
											"end": 7054,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6643,
											"end": 7062,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6643,
											"end": 7062,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7788,
											"end": 7879,
											"name": "tag",
											"source": 3,
											"value": "99"
										},
										{
											"begin": 7788,
											"end": 7879,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7866,
											"end": 7871,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7847,
											"end": 7857,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 7847,
											"end": 7863,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7847,
											"end": 7863,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7847,
											"end": 7863,
											"name": "PUSH",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 7847,
											"end": 7871,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 7847,
											"end": 7871,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 7847,
											"end": 7871,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7847,
											"end": 7871,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 7847,
											"end": 7871,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7847,
											"end": 7871,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 7847,
											"end": 7871,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 7847,
											"end": 7871,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 7847,
											"end": 7871,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7847,
											"end": 7871,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7847,
											"end": 7871,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7847,
											"end": 7871,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 7847,
											"end": 7871,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 7847,
											"end": 7871,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 7847,
											"end": 7871,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 7847,
											"end": 7871,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7847,
											"end": 7871,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 7847,
											"end": 7871,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7788,
											"end": 7879,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7788,
											"end": 7879,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7887,
											"end": 7986,
											"name": "tag",
											"source": 3,
											"value": "101"
										},
										{
											"begin": 7887,
											"end": 7986,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7973,
											"end": 7978,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7950,
											"end": 7964,
											"name": "PUSH",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 7950,
											"end": 7970,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7950,
											"end": 7970,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7950,
											"end": 7970,
											"name": "PUSH",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 7950,
											"end": 7978,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 7950,
											"end": 7978,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 7950,
											"end": 7978,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7950,
											"end": 7978,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 7950,
											"end": 7978,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7950,
											"end": 7978,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 7950,
											"end": 7978,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 7950,
											"end": 7978,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 7950,
											"end": 7978,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7950,
											"end": 7978,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7950,
											"end": 7978,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7950,
											"end": 7978,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 7950,
											"end": 7978,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 7950,
											"end": 7978,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 7950,
											"end": 7978,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 7950,
											"end": 7978,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7950,
											"end": 7978,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 7950,
											"end": 7978,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7887,
											"end": 7986,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7887,
											"end": 7986,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7560,
											"end": 7780,
											"name": "tag",
											"source": 3,
											"value": "137"
										},
										{
											"begin": 7560,
											"end": 7780,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7651,
											"end": 7659,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7631,
											"end": 7640,
											"name": "PUSH",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 7631,
											"end": 7648,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7631,
											"end": 7648,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7631,
											"end": 7648,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7631,
											"end": 7659,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 7631,
											"end": 7659,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 7631,
											"end": 7659,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7631,
											"end": 7659,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 7631,
											"end": 7659,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7631,
											"end": 7659,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7631,
											"end": 7659,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 7631,
											"end": 7659,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 7631,
											"end": 7659,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7631,
											"end": 7659,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7631,
											"end": 7659,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7631,
											"end": 7659,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7631,
											"end": 7659,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7631,
											"end": 7659,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 7631,
											"end": 7659,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 7631,
											"end": 7659,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7631,
											"end": 7659,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 7631,
											"end": 7659,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7670,
											"end": 7679,
											"name": "PUSH",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 7670,
											"end": 7685,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7670,
											"end": 7685,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7670,
											"end": 7685,
											"name": "PUSH",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 7670,
											"end": 7687,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7670,
											"end": 7687,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7670,
											"end": 7687,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7670,
											"end": 7687,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 7670,
											"end": 7687,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7670,
											"end": 7687,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 7670,
											"end": 7687,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 7670,
											"end": 7687,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7670,
											"end": 7687,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 7670,
											"end": 7687,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7670,
											"end": 7687,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7670,
											"end": 7687,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7670,
											"end": 7687,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 7670,
											"end": 7687,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7670,
											"end": 7687,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7670,
											"end": 7687,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "241"
										},
										{
											"begin": 7670,
											"end": 7687,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7670,
											"end": 7687,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "113"
										},
										{
											"begin": 7670,
											"end": 7687,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7670,
											"end": 7687,
											"name": "tag",
											"source": 3,
											"value": "241"
										},
										{
											"begin": 7670,
											"end": 7687,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7670,
											"end": 7687,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7670,
											"end": 7687,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7670,
											"end": 7687,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 7670,
											"end": 7687,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 7670,
											"end": 7687,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7670,
											"end": 7687,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 7670,
											"end": 7687,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7670,
											"end": 7687,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7670,
											"end": 7687,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 7670,
											"end": 7687,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 7670,
											"end": 7687,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7670,
											"end": 7687,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7670,
											"end": 7687,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7670,
											"end": 7687,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7670,
											"end": 7687,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7670,
											"end": 7687,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 7670,
											"end": 7687,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 7670,
											"end": 7687,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7670,
											"end": 7687,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 7670,
											"end": 7687,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7670,
											"end": 7687,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7756,
											"end": 7765,
											"name": "PUSH",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 7756,
											"end": 7771,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7756,
											"end": 7771,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7756,
											"end": 7771,
											"name": "PUSH",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 7756,
											"end": 7771,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7756,
											"end": 7771,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 7756,
											"end": 7771,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7756,
											"end": 7771,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 7756,
											"end": 7771,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 7756,
											"end": 7771,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7756,
											"end": 7771,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 7756,
											"end": 7771,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7756,
											"end": 7771,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7703,
											"end": 7772,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7703,
											"end": 7772,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7737,
											"end": 7746,
											"name": "PUSH",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 7737,
											"end": 7754,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7737,
											"end": 7754,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7737,
											"end": 7754,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7737,
											"end": 7754,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7737,
											"end": 7754,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 7737,
											"end": 7754,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7737,
											"end": 7754,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 7737,
											"end": 7754,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 7737,
											"end": 7754,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7737,
											"end": 7754,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 7737,
											"end": 7754,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7737,
											"end": 7754,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7703,
											"end": 7772,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7703,
											"end": 7772,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7703,
											"end": 7772,
											"name": "PUSH",
											"source": 3,
											"value": "F7F7C26682668C39FD8C6DBCA125BD9466E743B9E38ACC3240867C139CD93C30"
										},
										{
											"begin": 7703,
											"end": 7772,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7703,
											"end": 7772,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7703,
											"end": 7772,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7703,
											"end": 7772,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7703,
											"end": 7772,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7703,
											"end": 7772,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7703,
											"end": 7772,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7703,
											"end": 7772,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7703,
											"end": 7772,
											"name": "LOG3",
											"source": 3
										},
										{
											"begin": 7560,
											"end": 7780,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7560,
											"end": 7780,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 5,
											"value": "243"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 334,
											"end": 460,
											"name": "tag",
											"source": 5,
											"value": "245"
										},
										{
											"begin": 334,
											"end": 460,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 453,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 404,
											"end": 409,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 400,
											"end": 454,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 389,
											"end": 454,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 389,
											"end": 454,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 334,
											"end": 460,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 334,
											"end": 460,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 466,
											"end": 562,
											"name": "tag",
											"source": 5,
											"value": "246"
										},
										{
											"begin": 466,
											"end": 562,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 503,
											"end": 510,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "271"
										},
										{
											"begin": 550,
											"end": 555,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "245"
										},
										{
											"begin": 532,
											"end": 556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 532,
											"end": 556,
											"name": "tag",
											"source": 5,
											"value": "271"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 521,
											"end": 556,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 521,
											"end": 556,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 466,
											"end": 562,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 466,
											"end": 562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 568,
											"end": 690,
											"name": "tag",
											"source": 5,
											"value": "247"
										},
										{
											"begin": 568,
											"end": 690,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "273"
										},
										{
											"begin": 659,
											"end": 664,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "246"
										},
										{
											"begin": 641,
											"end": 665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 641,
											"end": 665,
											"name": "tag",
											"source": 5,
											"value": "273"
										},
										{
											"begin": 641,
											"end": 665,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 634,
											"end": 639,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 631,
											"end": 666,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 621,
											"end": 684,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "274"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 680,
											"end": 681,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 677,
											"end": 678,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 670,
											"end": 682,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 621,
											"end": 684,
											"name": "tag",
											"source": 5,
											"value": "274"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 568,
											"end": 690,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 568,
											"end": 690,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 696,
											"end": 835,
											"name": "tag",
											"source": 5,
											"value": "248"
										},
										{
											"begin": 696,
											"end": 835,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 742,
											"end": 747,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 780,
											"end": 786,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 767,
											"end": 787,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 758,
											"end": 787,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 758,
											"end": 787,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "276"
										},
										{
											"begin": 823,
											"end": 828,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "247"
										},
										{
											"begin": 796,
											"end": 829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 796,
											"end": 829,
											"name": "tag",
											"source": 5,
											"value": "276"
										},
										{
											"begin": 796,
											"end": 829,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 696,
											"end": 835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "tag",
											"source": 5,
											"value": "27"
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 900,
											"end": 906,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 949,
											"end": 951,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 937,
											"end": 946,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 928,
											"end": 935,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 924,
											"end": 947,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 920,
											"end": 952,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "278"
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "279"
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "243"
										},
										{
											"begin": 955,
											"end": 1034,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "tag",
											"source": 5,
											"value": "279"
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "tag",
											"source": 5,
											"value": "278"
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1075,
											"end": 1076,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "280"
										},
										{
											"begin": 1145,
											"end": 1152,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1125,
											"end": 1134,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1121,
											"end": 1143,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "248"
										},
										{
											"begin": 1100,
											"end": 1153,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "tag",
											"source": 5,
											"value": "280"
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1090,
											"end": 1153,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1090,
											"end": 1153,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1046,
											"end": 1163,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 841,
											"end": 1170,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1176,
											"end": 1266,
											"name": "tag",
											"source": 5,
											"value": "249"
										},
										{
											"begin": 1176,
											"end": 1266,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1210,
											"end": 1217,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1253,
											"end": 1258,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1246,
											"end": 1259,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1239,
											"end": 1260,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1228,
											"end": 1260,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1228,
											"end": 1260,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1176,
											"end": 1266,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1176,
											"end": 1266,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1176,
											"end": 1266,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1176,
											"end": 1266,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1272,
											"end": 1388,
											"name": "tag",
											"source": 5,
											"value": "250"
										},
										{
											"begin": 1272,
											"end": 1388,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1342,
											"end": 1363,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "283"
										},
										{
											"begin": 1357,
											"end": 1362,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1342,
											"end": 1363,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "249"
										},
										{
											"begin": 1342,
											"end": 1363,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1342,
											"end": 1363,
											"name": "tag",
											"source": 5,
											"value": "283"
										},
										{
											"begin": 1342,
											"end": 1363,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1335,
											"end": 1340,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1332,
											"end": 1364,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1322,
											"end": 1382,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "284"
										},
										{
											"begin": 1322,
											"end": 1382,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1378,
											"end": 1379,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1375,
											"end": 1376,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1368,
											"end": 1380,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1322,
											"end": 1382,
											"name": "tag",
											"source": 5,
											"value": "284"
										},
										{
											"begin": 1322,
											"end": 1382,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1272,
											"end": 1388,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1272,
											"end": 1388,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1394,
											"end": 1527,
											"name": "tag",
											"source": 5,
											"value": "251"
										},
										{
											"begin": 1394,
											"end": 1527,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1437,
											"end": 1442,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1475,
											"end": 1481,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1462,
											"end": 1482,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 1453,
											"end": 1482,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1453,
											"end": 1482,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1491,
											"end": 1521,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "286"
										},
										{
											"begin": 1515,
											"end": 1520,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1491,
											"end": 1521,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "250"
										},
										{
											"begin": 1491,
											"end": 1521,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1491,
											"end": 1521,
											"name": "tag",
											"source": 5,
											"value": "286"
										},
										{
											"begin": 1491,
											"end": 1521,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1394,
											"end": 1527,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1394,
											"end": 1527,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1394,
											"end": 1527,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1394,
											"end": 1527,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1394,
											"end": 1527,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1533,
											"end": 1856,
											"name": "tag",
											"source": 5,
											"value": "31"
										},
										{
											"begin": 1533,
											"end": 1856,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1589,
											"end": 1595,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1638,
											"end": 1640,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1626,
											"end": 1635,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1617,
											"end": 1624,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1613,
											"end": 1636,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1609,
											"end": 1641,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 1606,
											"end": 1725,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1606,
											"end": 1725,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "288"
										},
										{
											"begin": 1606,
											"end": 1725,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1644,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "289"
										},
										{
											"begin": 1644,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "243"
										},
										{
											"begin": 1644,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1644,
											"end": 1723,
											"name": "tag",
											"source": 5,
											"value": "289"
										},
										{
											"begin": 1644,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1606,
											"end": 1725,
											"name": "tag",
											"source": 5,
											"value": "288"
										},
										{
											"begin": 1606,
											"end": 1725,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1764,
											"end": 1765,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1789,
											"end": 1839,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "290"
										},
										{
											"begin": 1831,
											"end": 1838,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1822,
											"end": 1828,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1811,
											"end": 1820,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1807,
											"end": 1829,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1789,
											"end": 1839,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "251"
										},
										{
											"begin": 1789,
											"end": 1839,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1789,
											"end": 1839,
											"name": "tag",
											"source": 5,
											"value": "290"
										},
										{
											"begin": 1789,
											"end": 1839,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1779,
											"end": 1839,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1779,
											"end": 1839,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1735,
											"end": 1849,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1533,
											"end": 1856,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1533,
											"end": 1856,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1533,
											"end": 1856,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1533,
											"end": 1856,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1533,
											"end": 1856,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1862,
											"end": 1980,
											"name": "tag",
											"source": 5,
											"value": "252"
										},
										{
											"begin": 1862,
											"end": 1980,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1949,
											"end": 1973,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "292"
										},
										{
											"begin": 1967,
											"end": 1972,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1949,
											"end": 1973,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "246"
										},
										{
											"begin": 1949,
											"end": 1973,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1949,
											"end": 1973,
											"name": "tag",
											"source": 5,
											"value": "292"
										},
										{
											"begin": 1949,
											"end": 1973,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1944,
											"end": 1947,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1937,
											"end": 1974,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1862,
											"end": 1980,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1862,
											"end": 1980,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1862,
											"end": 1980,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1986,
											"end": 2208,
											"name": "tag",
											"source": 5,
											"value": "43"
										},
										{
											"begin": 1986,
											"end": 2208,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2079,
											"end": 2083,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2117,
											"end": 2119,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2106,
											"end": 2115,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2102,
											"end": 2120,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2094,
											"end": 2120,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2094,
											"end": 2120,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2130,
											"end": 2201,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "294"
										},
										{
											"begin": 2198,
											"end": 2199,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2187,
											"end": 2196,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2183,
											"end": 2200,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2174,
											"end": 2180,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2130,
											"end": 2201,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "252"
										},
										{
											"begin": 2130,
											"end": 2201,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2130,
											"end": 2201,
											"name": "tag",
											"source": 5,
											"value": "294"
										},
										{
											"begin": 2130,
											"end": 2201,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1986,
											"end": 2208,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1986,
											"end": 2208,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1986,
											"end": 2208,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1986,
											"end": 2208,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1986,
											"end": 2208,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2214,
											"end": 2323,
											"name": "tag",
											"source": 5,
											"value": "253"
										},
										{
											"begin": 2214,
											"end": 2323,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2295,
											"end": 2316,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "296"
										},
										{
											"begin": 2310,
											"end": 2315,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2295,
											"end": 2316,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "249"
										},
										{
											"begin": 2295,
											"end": 2316,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2295,
											"end": 2316,
											"name": "tag",
											"source": 5,
											"value": "296"
										},
										{
											"begin": 2295,
											"end": 2316,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2290,
											"end": 2293,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2283,
											"end": 2317,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2214,
											"end": 2323,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2214,
											"end": 2323,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2214,
											"end": 2323,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2329,
											"end": 2539,
											"name": "tag",
											"source": 5,
											"value": "56"
										},
										{
											"begin": 2329,
											"end": 2539,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2416,
											"end": 2420,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2454,
											"end": 2456,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2443,
											"end": 2452,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2439,
											"end": 2457,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2431,
											"end": 2457,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2431,
											"end": 2457,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2467,
											"end": 2532,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "298"
										},
										{
											"begin": 2529,
											"end": 2530,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2518,
											"end": 2527,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2514,
											"end": 2531,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2505,
											"end": 2511,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2467,
											"end": 2532,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "253"
										},
										{
											"begin": 2467,
											"end": 2532,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2467,
											"end": 2532,
											"name": "tag",
											"source": 5,
											"value": "298"
										},
										{
											"begin": 2467,
											"end": 2532,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2329,
											"end": 2539,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2329,
											"end": 2539,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2329,
											"end": 2539,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2329,
											"end": 2539,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2329,
											"end": 2539,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2545,
											"end": 2638,
											"name": "tag",
											"source": 5,
											"value": "254"
										},
										{
											"begin": 2545,
											"end": 2638,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2581,
											"end": 2588,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2621,
											"end": 2631,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2614,
											"end": 2619,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2610,
											"end": 2632,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2599,
											"end": 2632,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2599,
											"end": 2632,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2545,
											"end": 2638,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2545,
											"end": 2638,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2545,
											"end": 2638,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2545,
											"end": 2638,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2644,
											"end": 2759,
											"name": "tag",
											"source": 5,
											"value": "255"
										},
										{
											"begin": 2644,
											"end": 2759,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2729,
											"end": 2752,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "301"
										},
										{
											"begin": 2746,
											"end": 2751,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2729,
											"end": 2752,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "254"
										},
										{
											"begin": 2729,
											"end": 2752,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2729,
											"end": 2752,
											"name": "tag",
											"source": 5,
											"value": "301"
										},
										{
											"begin": 2729,
											"end": 2752,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2724,
											"end": 2727,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2717,
											"end": 2753,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2644,
											"end": 2759,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2644,
											"end": 2759,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2644,
											"end": 2759,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2765,
											"end": 2983,
											"name": "tag",
											"source": 5,
											"value": "69"
										},
										{
											"begin": 2765,
											"end": 2983,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2856,
											"end": 2860,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2894,
											"end": 2896,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2883,
											"end": 2892,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2879,
											"end": 2897,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2871,
											"end": 2897,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2871,
											"end": 2897,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2907,
											"end": 2976,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "303"
										},
										{
											"begin": 2973,
											"end": 2974,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2962,
											"end": 2971,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2958,
											"end": 2975,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2949,
											"end": 2955,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2907,
											"end": 2976,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "255"
										},
										{
											"begin": 2907,
											"end": 2976,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2907,
											"end": 2976,
											"name": "tag",
											"source": 5,
											"value": "303"
										},
										{
											"begin": 2907,
											"end": 2976,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2765,
											"end": 2983,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2765,
											"end": 2983,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2765,
											"end": 2983,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2765,
											"end": 2983,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2765,
											"end": 2983,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2989,
											"end": 3158,
											"name": "tag",
											"source": 5,
											"value": "256"
										},
										{
											"begin": 2989,
											"end": 3158,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3073,
											"end": 3084,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3107,
											"end": 3113,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3102,
											"end": 3105,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3095,
											"end": 3114,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3147,
											"end": 3151,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3142,
											"end": 3145,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3138,
											"end": 3152,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3123,
											"end": 3152,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3123,
											"end": 3152,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2989,
											"end": 3158,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2989,
											"end": 3158,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2989,
											"end": 3158,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2989,
											"end": 3158,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2989,
											"end": 3158,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3164,
											"end": 3333,
											"name": "tag",
											"source": 5,
											"value": "257"
										},
										{
											"begin": 3164,
											"end": 3333,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3304,
											"end": 3325,
											"name": "PUSH",
											"source": 5,
											"value": "416363657373206973206E6F742076616C696400000000000000000000000000"
										},
										{
											"begin": 3300,
											"end": 3301,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3292,
											"end": 3298,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3288,
											"end": 3302,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3281,
											"end": 3326,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3164,
											"end": 3333,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3164,
											"end": 3333,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3339,
											"end": 3705,
											"name": "tag",
											"source": 5,
											"value": "258"
										},
										{
											"begin": 3339,
											"end": 3705,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3481,
											"end": 3484,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3502,
											"end": 3569,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "307"
										},
										{
											"begin": 3566,
											"end": 3568,
											"name": "PUSH",
											"source": 5,
											"value": "13"
										},
										{
											"begin": 3561,
											"end": 3564,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3502,
											"end": 3569,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "256"
										},
										{
											"begin": 3502,
											"end": 3569,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3502,
											"end": 3569,
											"name": "tag",
											"source": 5,
											"value": "307"
										},
										{
											"begin": 3502,
											"end": 3569,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3495,
											"end": 3569,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3495,
											"end": 3569,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3578,
											"end": 3671,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "308"
										},
										{
											"begin": 3667,
											"end": 3670,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3578,
											"end": 3671,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "257"
										},
										{
											"begin": 3578,
											"end": 3671,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3578,
											"end": 3671,
											"name": "tag",
											"source": 5,
											"value": "308"
										},
										{
											"begin": 3578,
											"end": 3671,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3696,
											"end": 3698,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3691,
											"end": 3694,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3687,
											"end": 3699,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3680,
											"end": 3699,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3680,
											"end": 3699,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3339,
											"end": 3705,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3339,
											"end": 3705,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3339,
											"end": 3705,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3339,
											"end": 3705,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3711,
											"end": 4130,
											"name": "tag",
											"source": 5,
											"value": "90"
										},
										{
											"begin": 3711,
											"end": 4130,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3877,
											"end": 3881,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3915,
											"end": 3917,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3904,
											"end": 3913,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3900,
											"end": 3918,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3892,
											"end": 3918,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3892,
											"end": 3918,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3964,
											"end": 3973,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3958,
											"end": 3962,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3954,
											"end": 3974,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3950,
											"end": 3951,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3939,
											"end": 3948,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3935,
											"end": 3952,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3928,
											"end": 3975,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3992,
											"end": 4123,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "310"
										},
										{
											"begin": 4118,
											"end": 4122,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3992,
											"end": 4123,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "258"
										},
										{
											"begin": 3992,
											"end": 4123,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3992,
											"end": 4123,
											"name": "tag",
											"source": 5,
											"value": "310"
										},
										{
											"begin": 3992,
											"end": 4123,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3984,
											"end": 4123,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3984,
											"end": 4123,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3711,
											"end": 4130,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3711,
											"end": 4130,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3711,
											"end": 4130,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3711,
											"end": 4130,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4136,
											"end": 4316,
											"name": "tag",
											"source": 5,
											"value": "259"
										},
										{
											"begin": 4136,
											"end": 4316,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4184,
											"end": 4261,
											"name": "PUSH",
											"source": 5,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4181,
											"end": 4182,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4174,
											"end": 4262,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4281,
											"end": 4285,
											"name": "PUSH",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 4278,
											"end": 4279,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 4271,
											"end": 4286,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4305,
											"end": 4309,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 4302,
											"end": 4303,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4295,
											"end": 4310,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 4322,
											"end": 4497,
											"name": "tag",
											"source": 5,
											"value": "113"
										},
										{
											"begin": 4322,
											"end": 4497,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4360,
											"end": 4363,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4383,
											"end": 4406,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "313"
										},
										{
											"begin": 4400,
											"end": 4405,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4383,
											"end": 4406,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "254"
										},
										{
											"begin": 4383,
											"end": 4406,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4383,
											"end": 4406,
											"name": "tag",
											"source": 5,
											"value": "313"
										},
										{
											"begin": 4383,
											"end": 4406,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4374,
											"end": 4406,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4374,
											"end": 4406,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4428,
											"end": 4438,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4421,
											"end": 4426,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4418,
											"end": 4439,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4415,
											"end": 4462,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "314"
										},
										{
											"begin": 4415,
											"end": 4462,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4442,
											"end": 4460,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "315"
										},
										{
											"begin": 4442,
											"end": 4460,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "259"
										},
										{
											"begin": 4442,
											"end": 4460,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4442,
											"end": 4460,
											"name": "tag",
											"source": 5,
											"value": "315"
										},
										{
											"begin": 4442,
											"end": 4460,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4415,
											"end": 4462,
											"name": "tag",
											"source": 5,
											"value": "314"
										},
										{
											"begin": 4415,
											"end": 4462,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4489,
											"end": 4490,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 4482,
											"end": 4487,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4478,
											"end": 4491,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4471,
											"end": 4491,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4471,
											"end": 4491,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4322,
											"end": 4497,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4322,
											"end": 4497,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4322,
											"end": 4497,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4322,
											"end": 4497,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4503,
											"end": 4580,
											"name": "tag",
											"source": 5,
											"value": "260"
										},
										{
											"begin": 4503,
											"end": 4580,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4540,
											"end": 4547,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4569,
											"end": 4574,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4558,
											"end": 4574,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4558,
											"end": 4574,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4503,
											"end": 4580,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4503,
											"end": 4580,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4503,
											"end": 4580,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4503,
											"end": 4580,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4586,
											"end": 4777,
											"name": "tag",
											"source": 5,
											"value": "140"
										},
										{
											"begin": 4586,
											"end": 4777,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4626,
											"end": 4629,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4645,
											"end": 4665,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "318"
										},
										{
											"begin": 4663,
											"end": 4664,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4645,
											"end": 4665,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "260"
										},
										{
											"begin": 4645,
											"end": 4665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4645,
											"end": 4665,
											"name": "tag",
											"source": 5,
											"value": "318"
										},
										{
											"begin": 4645,
											"end": 4665,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4640,
											"end": 4665,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4640,
											"end": 4665,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4679,
											"end": 4699,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "319"
										},
										{
											"begin": 4697,
											"end": 4698,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4679,
											"end": 4699,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "260"
										},
										{
											"begin": 4679,
											"end": 4699,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4679,
											"end": 4699,
											"name": "tag",
											"source": 5,
											"value": "319"
										},
										{
											"begin": 4679,
											"end": 4699,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4674,
											"end": 4699,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 4674,
											"end": 4699,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4722,
											"end": 4723,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4719,
											"end": 4720,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4715,
											"end": 4724,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4708,
											"end": 4724,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4708,
											"end": 4724,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4743,
											"end": 4746,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4740,
											"end": 4741,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4737,
											"end": 4747,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 4734,
											"end": 4770,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4734,
											"end": 4770,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "320"
										},
										{
											"begin": 4734,
											"end": 4770,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4750,
											"end": 4768,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "321"
										},
										{
											"begin": 4750,
											"end": 4768,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "259"
										},
										{
											"begin": 4750,
											"end": 4768,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4750,
											"end": 4768,
											"name": "tag",
											"source": 5,
											"value": "321"
										},
										{
											"begin": 4750,
											"end": 4768,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4734,
											"end": 4770,
											"name": "tag",
											"source": 5,
											"value": "320"
										},
										{
											"begin": 4734,
											"end": 4770,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4586,
											"end": 4777,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 4586,
											"end": 4777,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4586,
											"end": 4777,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4586,
											"end": 4777,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4586,
											"end": 4777,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4783,
											"end": 4955,
											"name": "tag",
											"source": 5,
											"value": "261"
										},
										{
											"begin": 4783,
											"end": 4955,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4923,
											"end": 4947,
											"name": "PUSH",
											"source": 5,
											"value": "546865207265717565737420697320696E76616C696400000000000000000000"
										},
										{
											"begin": 4919,
											"end": 4920,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4911,
											"end": 4917,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4907,
											"end": 4921,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4900,
											"end": 4948,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4783,
											"end": 4955,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4783,
											"end": 4955,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4961,
											"end": 5327,
											"name": "tag",
											"source": 5,
											"value": "262"
										},
										{
											"begin": 4961,
											"end": 5327,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5103,
											"end": 5106,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5124,
											"end": 5191,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "324"
										},
										{
											"begin": 5188,
											"end": 5190,
											"name": "PUSH",
											"source": 5,
											"value": "16"
										},
										{
											"begin": 5183,
											"end": 5186,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5124,
											"end": 5191,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "256"
										},
										{
											"begin": 5124,
											"end": 5191,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5124,
											"end": 5191,
											"name": "tag",
											"source": 5,
											"value": "324"
										},
										{
											"begin": 5124,
											"end": 5191,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5117,
											"end": 5191,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5117,
											"end": 5191,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5200,
											"end": 5293,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "325"
										},
										{
											"begin": 5289,
											"end": 5292,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5200,
											"end": 5293,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "261"
										},
										{
											"begin": 5200,
											"end": 5293,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5200,
											"end": 5293,
											"name": "tag",
											"source": 5,
											"value": "325"
										},
										{
											"begin": 5200,
											"end": 5293,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5318,
											"end": 5320,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5313,
											"end": 5316,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5309,
											"end": 5321,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5302,
											"end": 5321,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5302,
											"end": 5321,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4961,
											"end": 5327,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4961,
											"end": 5327,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4961,
											"end": 5327,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4961,
											"end": 5327,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5333,
											"end": 5752,
											"name": "tag",
											"source": 5,
											"value": "183"
										},
										{
											"begin": 5333,
											"end": 5752,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5499,
											"end": 5503,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5537,
											"end": 5539,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5526,
											"end": 5535,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5522,
											"end": 5540,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5514,
											"end": 5540,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5514,
											"end": 5540,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5586,
											"end": 5595,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5580,
											"end": 5584,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5576,
											"end": 5596,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 5572,
											"end": 5573,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5561,
											"end": 5570,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5557,
											"end": 5574,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5550,
											"end": 5597,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5614,
											"end": 5745,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "327"
										},
										{
											"begin": 5740,
											"end": 5744,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5614,
											"end": 5745,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "262"
										},
										{
											"begin": 5614,
											"end": 5745,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5614,
											"end": 5745,
											"name": "tag",
											"source": 5,
											"value": "327"
										},
										{
											"begin": 5614,
											"end": 5745,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5606,
											"end": 5745,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5606,
											"end": 5745,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5333,
											"end": 5752,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5333,
											"end": 5752,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5333,
											"end": 5752,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5333,
											"end": 5752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5758,
											"end": 5855,
											"name": "tag",
											"source": 5,
											"value": "263"
										},
										{
											"begin": 5758,
											"end": 5855,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5794,
											"end": 5801,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5834,
											"end": 5848,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFF"
										},
										{
											"begin": 5827,
											"end": 5832,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5823,
											"end": 5849,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5812,
											"end": 5849,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5812,
											"end": 5849,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5758,
											"end": 5855,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5758,
											"end": 5855,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5758,
											"end": 5855,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5758,
											"end": 5855,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5861,
											"end": 6065,
											"name": "tag",
											"source": 5,
											"value": "190"
										},
										{
											"begin": 5861,
											"end": 6065,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5900,
											"end": 5904,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5920,
											"end": 5939,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "330"
										},
										{
											"begin": 5937,
											"end": 5938,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5920,
											"end": 5939,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "263"
										},
										{
											"begin": 5920,
											"end": 5939,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5920,
											"end": 5939,
											"name": "tag",
											"source": 5,
											"value": "330"
										},
										{
											"begin": 5920,
											"end": 5939,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5915,
											"end": 5939,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5915,
											"end": 5939,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5953,
											"end": 5972,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "331"
										},
										{
											"begin": 5970,
											"end": 5971,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5953,
											"end": 5972,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "263"
										},
										{
											"begin": 5953,
											"end": 5972,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5953,
											"end": 5972,
											"name": "tag",
											"source": 5,
											"value": "331"
										},
										{
											"begin": 5953,
											"end": 5972,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5948,
											"end": 5972,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 5948,
											"end": 5972,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5996,
											"end": 5997,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5993,
											"end": 5994,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5989,
											"end": 5998,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 5981,
											"end": 5998,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5981,
											"end": 5998,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6020,
											"end": 6034,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFF"
										},
										{
											"begin": 6014,
											"end": 6018,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6011,
											"end": 6035,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 6008,
											"end": 6058,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 6008,
											"end": 6058,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "332"
										},
										{
											"begin": 6008,
											"end": 6058,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 6038,
											"end": 6056,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "333"
										},
										{
											"begin": 6038,
											"end": 6056,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "259"
										},
										{
											"begin": 6038,
											"end": 6056,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6038,
											"end": 6056,
											"name": "tag",
											"source": 5,
											"value": "333"
										},
										{
											"begin": 6038,
											"end": 6056,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6008,
											"end": 6058,
											"name": "tag",
											"source": 5,
											"value": "332"
										},
										{
											"begin": 6008,
											"end": 6058,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5861,
											"end": 6065,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 5861,
											"end": 6065,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5861,
											"end": 6065,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5861,
											"end": 6065,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5861,
											"end": 6065,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6071,
											"end": 6186,
											"name": "tag",
											"source": 5,
											"value": "264"
										},
										{
											"begin": 6071,
											"end": 6186,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6156,
											"end": 6179,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "335"
										},
										{
											"begin": 6173,
											"end": 6178,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6156,
											"end": 6179,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "263"
										},
										{
											"begin": 6156,
											"end": 6179,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6156,
											"end": 6179,
											"name": "tag",
											"source": 5,
											"value": "335"
										},
										{
											"begin": 6156,
											"end": 6179,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6151,
											"end": 6154,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6144,
											"end": 6180,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6071,
											"end": 6186,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6071,
											"end": 6186,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6071,
											"end": 6186,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6192,
											"end": 6410,
											"name": "tag",
											"source": 5,
											"value": "192"
										},
										{
											"begin": 6192,
											"end": 6410,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6283,
											"end": 6287,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6321,
											"end": 6323,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6310,
											"end": 6319,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6306,
											"end": 6324,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6298,
											"end": 6324,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6298,
											"end": 6324,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6334,
											"end": 6403,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "337"
										},
										{
											"begin": 6400,
											"end": 6401,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6389,
											"end": 6398,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6385,
											"end": 6402,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6376,
											"end": 6382,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 6334,
											"end": 6403,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "264"
										},
										{
											"begin": 6334,
											"end": 6403,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6334,
											"end": 6403,
											"name": "tag",
											"source": 5,
											"value": "337"
										},
										{
											"begin": 6334,
											"end": 6403,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6192,
											"end": 6410,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 6192,
											"end": 6410,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6192,
											"end": 6410,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6192,
											"end": 6410,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6192,
											"end": 6410,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SafeCast.sol",
								"@openzeppelin/contracts/utils/types/Time.sol",
								"contracts/authority.sol",
								"contracts/faykGovernance.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"cancelPendingRepublicAddress(address)": "52e305de",
							"getAuthorityAddress()": "e47a9d46",
							"getGovernance()": "289b3c0d",
							"getPresidentAdd()": "66410997",
							"getPresidentBan()": "6cf106d7",
							"getPrimeMinisterAdd()": "a53da00b",
							"getPrimeMinisterBan()": "e4f3e947",
							"getRepublicAddress()": "c5a1c5c1",
							"getgovernanceVersion()": "c387b49c",
							"setPendigPresident(address)": "054203bd",
							"setPendingGovernanceContractAddress(address)": "ca4cce68",
							"setPendingPrimeMinister(address)": "544fa93e",
							"setPendingRepublicAddress(address)": "1f72783a",
							"setPresidentBaned(bool)": "b5c09c68",
							"setPrimeMinister(bool)": "06e99d93",
							"transferGovernanceContractAddress(address)": "ee7126c3",
							"transferPresident()": "0df4c390",
							"transferPrimeMinister()": "18074eee",
							"transferRepublicAddress(address)": "9c20fe71"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AccessOnlyForThePendig\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint48\",\"name\":\"reminingTime\",\"type\":\"uint48\"}],\"name\":\"RemainingTimeUntilTheConfirmationDeadline\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"NewGCAddress\",\"type\":\"address\"}],\"name\":\"TheAddressIsNotValidForGC\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newRAddress\",\"type\":\"address\"}],\"name\":\"TheAddressIsNotValidForRAddress\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"GCAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint32\",\"name\":\"version\",\"type\":\"uint32\"}],\"name\":\"TheNewGCAddressWasConfirmed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"presidentAdd\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint32\",\"name\":\"nonce\",\"type\":\"uint32\"}],\"name\":\"TheNewPresidentWasConfirmed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"primeMinisterAdd\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint32\",\"name\":\"nonce\",\"type\":\"uint32\"}],\"name\":\"TheNewPrimeMinisterWasConfirmed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"RepublicAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint32\",\"name\":\"version\",\"type\":\"uint32\"}],\"name\":\"TheNewRepublicAddressWasConfirmed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newGCAddress\",\"type\":\"address\"}],\"name\":\"TheNextGCAddressWasElected\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newPresidentAdd\",\"type\":\"address\"}],\"name\":\"TheNextPresidentWasElected\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newPrimeMinister\",\"type\":\"address\"}],\"name\":\"TheNextPrimeMinisterWasElected\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"PRAddress\",\"type\":\"address\"}],\"name\":\"TheNextRepublicAddressWasCancelled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newRepublicAddress\",\"type\":\"address\"}],\"name\":\"TheNextRepublicAddressWasElected\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bool\",\"name\":\"baned\",\"type\":\"bool\"},{\"indexed\":true,\"internalType\":\"bool\",\"name\":\"done\",\"type\":\"bool\"}],\"name\":\"TheStatusOfBanningAllActivitiesAndDone\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"PRAdress\",\"type\":\"address\"}],\"name\":\"cancelPendingRepublicAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAuthorityAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getGovernance\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPresidentAdd\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPresidentBan\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPrimeMinisterAdd\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPrimeMinisterBan\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRepublicAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"RG\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getgovernanceVersion\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newPresident\",\"type\":\"address\"}],\"name\":\"setPendigPresident\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newGCAddress\",\"type\":\"address\"}],\"name\":\"setPendingGovernanceContractAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newPM\",\"type\":\"address\"}],\"name\":\"setPendingPrimeMinister\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newRAddress\",\"type\":\"address\"}],\"name\":\"setPendingRepublicAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"baned\",\"type\":\"bool\"}],\"name\":\"setPresidentBaned\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"baned\",\"type\":\"bool\"}],\"name\":\"setPrimeMinister\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pendingGCAdd\",\"type\":\"address\"}],\"name\":\"transferGovernanceContractAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"transferPresident\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"transferPrimeMinister\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"RAddress\",\"type\":\"address\"}],\"name\":\"transferRepublicAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/authority.sol\":\"Authority\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/authority.sol\":{\"keccak256\":\"0xcff68988eef9095e2433d2202925430367d085c7272fdfc7b84ff5d21ba6112e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d66df4b68587f7dd7c9c8e467fc4bd34448b0959dbccb6f0104628ea544de044\",\"dweb:/ipfs/QmVLueVfVntP8dvtMYizC6DgMgCaAXoEuKUr8F7wFqngm8\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 3163,
								"contract": "contracts/authority.sol:Authority",
								"label": "_pendigRepublicAddress",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 3165,
								"contract": "contracts/authority.sol:Authority",
								"label": "_pendingGCAddress",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							},
							{
								"astId": 3167,
								"contract": "contracts/authority.sol:Authority",
								"label": "_pendigPresident",
								"offset": 0,
								"slot": "2",
								"type": "t_address"
							},
							{
								"astId": 3169,
								"contract": "contracts/authority.sol:Authority",
								"label": "_pendingPrimeMinister",
								"offset": 0,
								"slot": "3",
								"type": "t_address"
							},
							{
								"astId": 3173,
								"contract": "contracts/authority.sol:Authority",
								"label": "_delayConfirmRepublicAddress",
								"offset": 20,
								"slot": "3",
								"type": "t_uint48"
							},
							{
								"astId": 3183,
								"contract": "contracts/authority.sol:Authority",
								"label": "_president",
								"offset": 0,
								"slot": "4",
								"type": "t_struct(access)3180_storage"
							},
							{
								"astId": 3186,
								"contract": "contracts/authority.sol:Authority",
								"label": "_primeMinister",
								"offset": 0,
								"slot": "5",
								"type": "t_struct(access)3180_storage"
							},
							{
								"astId": 3189,
								"contract": "contracts/authority.sol:Authority",
								"label": "_governance",
								"offset": 0,
								"slot": "6",
								"type": "t_struct(access)3180_storage"
							},
							{
								"astId": 3192,
								"contract": "contracts/authority.sol:Authority",
								"label": "_Republic",
								"offset": 0,
								"slot": "7",
								"type": "t_struct(access)3180_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_struct(access)3180_storage": {
								"encoding": "inplace",
								"label": "struct Authority.access",
								"members": [
									{
										"astId": 3175,
										"contract": "contracts/authority.sol:Authority",
										"label": "roleAdd",
										"offset": 0,
										"slot": "0",
										"type": "t_address"
									},
									{
										"astId": 3177,
										"contract": "contracts/authority.sol:Authority",
										"label": "baned",
										"offset": 20,
										"slot": "0",
										"type": "t_bool"
									},
									{
										"astId": 3179,
										"contract": "contracts/authority.sol:Authority",
										"label": "nonce",
										"offset": 21,
										"slot": "0",
										"type": "t_uint32"
									}
								],
								"numberOfBytes": "32"
							},
							"t_uint32": {
								"encoding": "inplace",
								"label": "uint32",
								"numberOfBytes": "4"
							},
							"t_uint48": {
								"encoding": "inplace",
								"label": "uint48",
								"numberOfBytes": "6"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Igovernance_set": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "caller",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								},
								{
									"internalType": "bytes4",
									"name": "Fselector",
									"type": "bytes4"
								}
							],
							"name": "AccessControl",
							"outputs": [
								{
									"internalType": "bool",
									"name": "accessed",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"AccessControl(address,address,bytes4)": "e35b31b7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes4\",\"name\":\"Fselector\",\"type\":\"bytes4\"}],\"name\":\"AccessControl\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"accessed\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/authority.sol\":\"Igovernance_set\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/authority.sol\":{\"keccak256\":\"0xcff68988eef9095e2433d2202925430367d085c7272fdfc7b84ff5d21ba6112e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d66df4b68587f7dd7c9c8e467fc4bd34448b0959dbccb6f0104628ea544de044\",\"dweb:/ipfs/QmVLueVfVntP8dvtMYizC6DgMgCaAXoEuKUr8F7wFqngm8\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/faykGovernance.sol": {
				"faykGovernance": {
					"abi": [
						{
							"inputs": [],
							"name": "AccessOnlyForThePendig",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint48",
									"name": "reminingTime",
									"type": "uint48"
								}
							],
							"name": "RemainingTimeUntilTheConfirmationDeadline",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "NewGCAddress",
									"type": "address"
								}
							],
							"name": "TheAddressIsNotValidForGC",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newRAddress",
									"type": "address"
								}
							],
							"name": "TheAddressIsNotValidForRAddress",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "newCaller",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "peopleName_satrap",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "uint32",
									"name": "roleId",
									"type": "uint32"
								}
							],
							"name": "AnOfficialWasConfirmed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "newCaller",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "peopleName_satrap",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "uint32",
									"name": "roleId",
									"type": "uint32"
								}
							],
							"name": "AnOfficialWasElected",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "GCAddress",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint32",
									"name": "version",
									"type": "uint32"
								}
							],
							"name": "TheNewGCAddressWasConfirmed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "presidentAdd",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint32",
									"name": "nonce",
									"type": "uint32"
								}
							],
							"name": "TheNewPresidentWasConfirmed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "primeMinisterAdd",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint32",
									"name": "nonce",
									"type": "uint32"
								}
							],
							"name": "TheNewPrimeMinisterWasConfirmed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "RepublicAddress",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint32",
									"name": "version",
									"type": "uint32"
								}
							],
							"name": "TheNewRepublicAddressWasConfirmed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "newGCAddress",
									"type": "address"
								}
							],
							"name": "TheNextGCAddressWasElected",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "newPresidentAdd",
									"type": "address"
								}
							],
							"name": "TheNextPresidentWasElected",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "newPrimeMinister",
									"type": "address"
								}
							],
							"name": "TheNextPrimeMinisterWasElected",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "PRAddress",
									"type": "address"
								}
							],
							"name": "TheNextRepublicAddressWasCancelled",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "newRepublicAddress",
									"type": "address"
								}
							],
							"name": "TheNextRepublicAddressWasElected",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bool",
									"name": "baned",
									"type": "bool"
								},
								{
									"indexed": true,
									"internalType": "bool",
									"name": "done",
									"type": "bool"
								}
							],
							"name": "TheStatusOfBanningAllActivitiesAndDone",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "PRAdress",
									"type": "address"
								}
							],
							"name": "cancelPendingRepublicAddress",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getAuthorityAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getGovernance",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getPresidentAdd",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getPresidentBan",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getPrimeMinisterAdd",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getPrimeMinisterBan",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getRepublicAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "RG",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getgovernanceVersion",
							"outputs": [
								{
									"internalType": "uint32",
									"name": "",
									"type": "uint32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "oldCaller",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "newCaller",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "peopleName_satrap",
									"type": "bytes32"
								},
								{
									"internalType": "uint32",
									"name": "roleId",
									"type": "uint32"
								},
								{
									"internalType": "uint48",
									"name": "delay",
									"type": "uint48"
								}
							],
							"name": "setCallerInfo",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newPresident",
									"type": "address"
								}
							],
							"name": "setPendigPresident",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newGCAddress",
									"type": "address"
								}
							],
							"name": "setPendingGovernanceContractAddress",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newPM",
									"type": "address"
								}
							],
							"name": "setPendingPrimeMinister",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newRAddress",
									"type": "address"
								}
							],
							"name": "setPendingRepublicAddress",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bool",
									"name": "baned",
									"type": "bool"
								}
							],
							"name": "setPresidentBaned",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bool",
									"name": "baned",
									"type": "bool"
								}
							],
							"name": "setPrimeMinister",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "transferCallerInfo",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "pendingGCAdd",
									"type": "address"
								}
							],
							"name": "transferGovernanceContractAddress",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "transferPresident",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "transferPrimeMinister",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "RAddress",
									"type": "address"
								}
							],
							"name": "transferRepublicAddress",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/faykGovernance.sol\":181:2972  contract faykGovernance is Authority {... */\n  mstore(0x40, 0xa0)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"contracts/authority.sol\":2629:2638  4400 days */\n  0x16a8c800\n    /* \"contracts/authority.sol\":2611:2626  block.timestamp */\n  timestamp\n    /* \"contracts/authority.sol\":2611:2638  block.timestamp + 4400 days */\n  tag_4\n  swap2\n  swap1\n  tag_5\n  jump\t// in\ntag_4:\n    /* \"contracts/authority.sol\":2584:2639  TimeFirstElection = uint48(block.timestamp + 4400 days) */\n  0xffffffffffff\n  and\n  0x80\n  dup2\n  0xffffffffffff\n  and\n  dup2\n  mstore\n  pop\n  pop\n    /* \"contracts/authority.sol\":2671:2681  msg.sender */\n  caller\n    /* \"contracts/authority.sol\":2650:2660  _president */\n  0x04\n    /* \"contracts/authority.sol\":2650:2668  _president.roleAdd */\n  0x00\n  add\n  0x00\n    /* \"contracts/authority.sol\":2650:2681  _president.roleAdd = msg.sender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/authority.sol\":2692:2702  _president */\n  0x04\n    /* \"contracts/authority.sol\":2692:2708  _president.nonce */\n  0x00\n  add\n  0x15\n    /* \"contracts/authority.sol\":2692:2710  _president.nonce++ */\n  dup2\n  dup2\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffff\n  and\n  dup1\n  swap3\n  swap2\n  swap1\n  tag_6\n  swap1\n  tag_7\n  jump\t// in\ntag_6:\n  swap2\n  swap1\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n  pop\n    /* \"contracts/faykGovernance.sol\":181:2972  contract faykGovernance is Authority {... */\n  jump(tag_8)\n    /* \"#utility.yul\":7:84   */\ntag_9:\n    /* \"#utility.yul\":44:51   */\n  0x00\n    /* \"#utility.yul\":73:78   */\n  dup2\n    /* \"#utility.yul\":62:78   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:84   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":90:270   */\ntag_10:\n    /* \"#utility.yul\":138:215   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":135:136   */\n  0x00\n    /* \"#utility.yul\":128:216   */\n  mstore\n    /* \"#utility.yul\":235:239   */\n  0x11\n    /* \"#utility.yul\":232:233   */\n  0x04\n    /* \"#utility.yul\":225:240   */\n  mstore\n    /* \"#utility.yul\":259:263   */\n  0x24\n    /* \"#utility.yul\":256:257   */\n  0x00\n    /* \"#utility.yul\":249:264   */\n  revert\n    /* \"#utility.yul\":276:467   */\ntag_5:\n    /* \"#utility.yul\":316:319   */\n  0x00\n    /* \"#utility.yul\":335:355   */\n  tag_16\n    /* \"#utility.yul\":353:354   */\n  dup3\n    /* \"#utility.yul\":335:355   */\n  tag_9\n  jump\t// in\ntag_16:\n    /* \"#utility.yul\":330:355   */\n  swap2\n  pop\n    /* \"#utility.yul\":369:389   */\n  tag_17\n    /* \"#utility.yul\":387:388   */\n  dup4\n    /* \"#utility.yul\":369:389   */\n  tag_9\n  jump\t// in\ntag_17:\n    /* \"#utility.yul\":364:389   */\n  swap3\n  pop\n    /* \"#utility.yul\":412:413   */\n  dup3\n    /* \"#utility.yul\":409:410   */\n  dup3\n    /* \"#utility.yul\":405:414   */\n  add\n    /* \"#utility.yul\":398:414   */\n  swap1\n  pop\n    /* \"#utility.yul\":433:436   */\n  dup1\n    /* \"#utility.yul\":430:431   */\n  dup3\n    /* \"#utility.yul\":427:437   */\n  gt\n    /* \"#utility.yul\":424:460   */\n  iszero\n  tag_18\n  jumpi\n    /* \"#utility.yul\":440:458   */\n  tag_19\n  tag_10\n  jump\t// in\ntag_19:\n    /* \"#utility.yul\":424:460   */\ntag_18:\n    /* \"#utility.yul\":276:467   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":473:566   */\ntag_11:\n    /* \"#utility.yul\":509:516   */\n  0x00\n    /* \"#utility.yul\":549:559   */\n  0xffffffff\n    /* \"#utility.yul\":542:547   */\n  dup3\n    /* \"#utility.yul\":538:560   */\n  and\n    /* \"#utility.yul\":527:560   */\n  swap1\n  pop\n    /* \"#utility.yul\":473:566   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":572:747   */\ntag_7:\n    /* \"#utility.yul\":610:613   */\n  0x00\n    /* \"#utility.yul\":633:656   */\n  tag_22\n    /* \"#utility.yul\":650:655   */\n  dup3\n    /* \"#utility.yul\":633:656   */\n  tag_11\n  jump\t// in\ntag_22:\n    /* \"#utility.yul\":624:656   */\n  swap2\n  pop\n    /* \"#utility.yul\":678:688   */\n  0xffffffff\n    /* \"#utility.yul\":671:676   */\n  dup3\n    /* \"#utility.yul\":668:689   */\n  sub\n    /* \"#utility.yul\":665:712   */\n  tag_23\n  jumpi\n    /* \"#utility.yul\":692:710   */\n  tag_24\n  tag_10\n  jump\t// in\ntag_24:\n    /* \"#utility.yul\":665:712   */\ntag_23:\n    /* \"#utility.yul\":739:740   */\n  0x01\n    /* \"#utility.yul\":732:737   */\n  dup3\n    /* \"#utility.yul\":728:741   */\n  add\n    /* \"#utility.yul\":721:741   */\n  swap1\n  pop\n    /* \"#utility.yul\":572:747   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"contracts/faykGovernance.sol\":181:2972  contract faykGovernance is Authority {... */\ntag_8:\n  mload(0x80)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0x243d3ba375e91e040b8b9e2bbbb1688b2b311eacea842eebda952071560e7854\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"contracts/faykGovernance.sol\":181:2972  contract faykGovernance is Authority {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x6cf106d7\n      gt\n      tag_24\n      jumpi\n      dup1\n      0xc5a1c5c1\n      gt\n      tag_25\n      jumpi\n      dup1\n      0xc5a1c5c1\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xca4cce68\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xcd01cc28\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xe47a9d46\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xe4f3e947\n      eq\n      tag_22\n      jumpi\n      dup1\n      0xee7126c3\n      eq\n      tag_23\n      jumpi\n      jump(tag_2)\n    tag_25:\n      dup1\n      0x6cf106d7\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x9c20fe71\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xa53da00b\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xb5c09c68\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xc387b49c\n      eq\n      tag_17\n      jumpi\n      jump(tag_2)\n    tag_24:\n      dup1\n      0x1f72783a\n      gt\n      tag_26\n      jumpi\n      dup1\n      0x1f72783a\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x289b3c0d\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x52e305de\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x544fa93e\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x66410997\n      eq\n      tag_12\n      jumpi\n      jump(tag_2)\n    tag_26:\n      dup1\n      0x054203bd\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x06e99d93\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x0df4c390\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x14c58b51\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x18074eee\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/authority.sol\":4553:4805  function setPendigPresident(address newPresident) public onlyRepublic {... */\n    tag_3:\n      tag_27\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_28\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_28:\n      tag_30\n      jump\t// in\n    tag_27:\n      stop\n        /* \"contracts/authority.sol\":7441:7548  function setPrimeMinister(bool baned) public onlyPresident {... */\n    tag_4:\n      tag_31\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_32\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_32:\n      tag_34\n      jump\t// in\n    tag_31:\n      stop\n        /* \"contracts/authority.sol\":4813:5199  function transferPresident() public {... */\n    tag_5:\n      tag_35\n      tag_36\n      jump\t// in\n    tag_35:\n      stop\n        /* \"contracts/faykGovernance.sol\":1952:2608  function setCallerInfo(address oldCaller, address newCaller, bytes32 peopleName_satrap, uint32 roleId, uint48 delay) public onlyPrimeRepublic {... */\n    tag_6:\n      tag_37\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_38\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_38:\n      tag_40\n      jump\t// in\n    tag_37:\n      stop\n        /* \"contracts/authority.sol\":5600:6081  function transferPrimeMinister() public {... */\n    tag_7:\n      tag_41\n      tag_42\n      jump\t// in\n    tag_41:\n      stop\n        /* \"contracts/authority.sol\":2726:3282  function setPendingRepublicAddress(address newRAddress) public onlyRepublic {... */\n    tag_8:\n      tag_43\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_44\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_44:\n      tag_45\n      jump\t// in\n    tag_43:\n      stop\n        /* \"contracts/authority.sol\":7070:7170  function getGovernance() public view returns (address) {... */\n    tag_9:\n      tag_46\n      tag_47\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      tag_48\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/authority.sol\":3928:4302  function cancelPendingRepublicAddress(address PRAdress) public onlyRepublic {... */\n    tag_10:\n      tag_50\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_51\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_51:\n      tag_52\n      jump\t// in\n    tag_50:\n      stop\n        /* \"contracts/authority.sol\":5420:5592  function setPendingPrimeMinister(address newPM) public onlyPresident {... */\n    tag_11:\n      tag_53\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_54\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_54:\n      tag_55\n      jump\t// in\n    tag_53:\n      stop\n        /* \"contracts/authority.sol\":5207:5308  function getPresidentAdd() public view returns (address) {... */\n    tag_12:\n      tag_56\n      tag_57\n      jump\t// in\n    tag_56:\n      mload(0x40)\n      tag_58\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_58:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/authority.sol\":5316:5412  function getPresidentBan() public view returns (bool) {... */\n    tag_13:\n      tag_59\n      tag_60\n      jump\t// in\n    tag_59:\n      mload(0x40)\n      tag_61\n      swap2\n      swap1\n      tag_62\n      jump\t// in\n    tag_61:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/authority.sol\":3290:3920  function transferRepublicAddress(address RAddress) public onlyRepublic {... */\n    tag_14:\n      tag_63\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_64\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_64:\n      tag_65\n      jump\t// in\n    tag_63:\n      stop\n        /* \"contracts/authority.sol\":6089:6198  function getPrimeMinisterAdd() public view returns (address) {... */\n    tag_15:\n      tag_66\n      tag_67\n      jump\t// in\n    tag_66:\n      mload(0x40)\n      tag_68\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_68:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/authority.sol\":7290:7433  function setPresidentBaned(bool baned) public onlyRepublic {... */\n    tag_16:\n      tag_69\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_70\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_70:\n      tag_71\n      jump\t// in\n    tag_69:\n      stop\n        /* \"contracts/authority.sol\":7178:7282  function getgovernanceVersion() public view returns (uint32) {... */\n    tag_17:\n      tag_72\n      tag_73\n      jump\t// in\n    tag_72:\n      mload(0x40)\n      tag_74\n      swap2\n      swap1\n      tag_75\n      jump\t// in\n    tag_74:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/authority.sol\":4310:4424  function getRepublicAddress() public view returns (address RG) {... */\n    tag_18:\n      tag_76\n      tag_77\n      jump\t// in\n    tag_76:\n      mload(0x40)\n      tag_78\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_78:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/authority.sol\":6320:6635  function setPendingGovernanceContractAddress(address newGCAddress) public onlyRepublic {... */\n    tag_19:\n      tag_79\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_80\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_80:\n      tag_81\n      jump\t// in\n    tag_79:\n      stop\n        /* \"contracts/faykGovernance.sol\":2620:2964  function transferCallerInfo() public {... */\n    tag_20:\n      tag_82\n      tag_83\n      jump\t// in\n    tag_82:\n      stop\n        /* \"contracts/authority.sol\":4436:4545  function getAuthorityAddress() public view returns (address) {... */\n    tag_21:\n      tag_84\n      tag_85\n      jump\t// in\n    tag_84:\n      mload(0x40)\n      tag_86\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_86:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/authority.sol\":6206:6310  function getPrimeMinisterBan() public view returns (bool) {... */\n    tag_22:\n      tag_87\n      tag_88\n      jump\t// in\n    tag_87:\n      mload(0x40)\n      tag_89\n      swap2\n      swap1\n      tag_62\n      jump\t// in\n    tag_89:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/authority.sol\":6643:7062  function transferGovernanceContractAddress(address pendingGCAdd) public onlyPresident {... */\n    tag_23:\n      tag_90\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_91\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_91:\n      tag_92\n      jump\t// in\n    tag_90:\n      stop\n        /* \"contracts/authority.sol\":4553:4805  function setPendigPresident(address newPresident) public onlyRepublic {... */\n    tag_30:\n        /* \"contracts/authority.sol\":1956:1971  block.timestamp */\n      timestamp\n        /* \"contracts/authority.sol\":1936:1953  TimeFirstElection */\n      immutable(\"0x243d3ba375e91e040b8b9e2bbbb1688b2b311eacea842eebda952071560e7854\")\n        /* \"contracts/authority.sol\":1936:1971  TimeFirstElection < block.timestamp */\n      0xffffffffffff\n      and\n      lt\n        /* \"contracts/authority.sol\":1932:2159  if (TimeFirstElection < block.timestamp) {... */\n      iszero\n      tag_94\n      jumpi\n        /* \"contracts/authority.sol\":2010:2030  getRepublicAddress() */\n      tag_95\n        /* \"contracts/authority.sol\":2010:2028  getRepublicAddress */\n      tag_77\n        /* \"contracts/authority.sol\":2010:2030  getRepublicAddress() */\n      jump\t// in\n    tag_95:\n        /* \"contracts/authority.sol\":1996:2030  msg.sender == getRepublicAddress() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/authority.sol\":1996:2006  msg.sender */\n      caller\n        /* \"contracts/authority.sol\":1996:2030  msg.sender == getRepublicAddress() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/authority.sol\":1988:2054  require(msg.sender == getRepublicAddress(), \"Access is not valid\") */\n      tag_96\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_97\n      swap1\n      tag_98\n      jump\t// in\n    tag_97:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_96:\n        /* \"contracts/authority.sol\":1932:2159  if (TimeFirstElection < block.timestamp) {... */\n      jump(tag_99)\n    tag_94:\n        /* \"contracts/authority.sol\":2096:2113  getPresidentAdd() */\n      tag_100\n        /* \"contracts/authority.sol\":2096:2111  getPresidentAdd */\n      tag_57\n        /* \"contracts/authority.sol\":2096:2113  getPresidentAdd() */\n      jump\t// in\n    tag_100:\n        /* \"contracts/authority.sol\":2082:2113  msg.sender == getPresidentAdd() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/authority.sol\":2082:2092  msg.sender */\n      caller\n        /* \"contracts/authority.sol\":2082:2113  msg.sender == getPresidentAdd() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/authority.sol\":2082:2135  msg.sender == getPresidentAdd() && !getPresidentBan() */\n      dup1\n      iszero\n      tag_101\n      jumpi\n      pop\n        /* \"contracts/authority.sol\":2118:2135  getPresidentBan() */\n      tag_102\n        /* \"contracts/authority.sol\":2118:2133  getPresidentBan */\n      tag_60\n        /* \"contracts/authority.sol\":2118:2135  getPresidentBan() */\n      jump\t// in\n    tag_102:\n        /* \"contracts/authority.sol\":2117:2135  !getPresidentBan() */\n      iszero\n        /* \"contracts/authority.sol\":2082:2135  msg.sender == getPresidentAdd() && !getPresidentBan() */\n    tag_101:\n        /* \"contracts/authority.sol\":2074:2159  require(msg.sender == getPresidentAdd() && !getPresidentBan(), \"Access is not valid\") */\n      tag_103\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_104\n      swap1\n      tag_98\n      jump\t// in\n    tag_104:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_103:\n        /* \"contracts/authority.sol\":1932:2159  if (TimeFirstElection < block.timestamp) {... */\n    tag_99:\n        /* \"contracts/authority.sol\":4653:4665  newPresident */\n      dup1\n        /* \"contracts/authority.sol\":4634:4650  _pendigPresident */\n      0x02\n      0x00\n        /* \"contracts/authority.sol\":4634:4665  _pendigPresident = newPresident */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/authority.sol\":4676:4700  _setPresidentBaned(true) */\n      tag_106\n        /* \"contracts/authority.sol\":4695:4699  true */\n      0x01\n        /* \"contracts/authority.sol\":4676:4694  _setPresidentBaned */\n      tag_107\n        /* \"contracts/authority.sol\":4676:4700  _setPresidentBaned(true) */\n      jump\t// in\n    tag_106:\n        /* \"contracts/authority.sol\":4711:4739  _setPrimeMinisterBaned(true) */\n      tag_108\n        /* \"contracts/authority.sol\":4734:4738  true */\n      0x01\n        /* \"contracts/authority.sol\":4711:4733  _setPrimeMinisterBaned */\n      tag_109\n        /* \"contracts/authority.sol\":4711:4739  _setPrimeMinisterBaned(true) */\n      jump\t// in\n    tag_108:\n        /* \"contracts/authority.sol\":4784:4796  newPresident */\n      dup1\n        /* \"contracts/authority.sol\":4757:4797  TheNextPresidentWasElected(newPresident) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x3553f1f7ef0242113266a8d183b621bb87468c99237f36b1150b6ab3d688b686\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/authority.sol\":4553:4805  function setPendigPresident(address newPresident) public onlyRepublic {... */\n      pop\n      jump\t// out\n        /* \"contracts/authority.sol\":7441:7548  function setPrimeMinister(bool baned) public onlyPresident {... */\n    tag_34:\n        /* \"contracts/authority.sol\":2247:2264  getPresidentAdd() */\n      tag_111\n        /* \"contracts/authority.sol\":2247:2262  getPresidentAdd */\n      tag_57\n        /* \"contracts/authority.sol\":2247:2264  getPresidentAdd() */\n      jump\t// in\n    tag_111:\n        /* \"contracts/authority.sol\":2233:2264  msg.sender == getPresidentAdd() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/authority.sol\":2233:2243  msg.sender */\n      caller\n        /* \"contracts/authority.sol\":2233:2264  msg.sender == getPresidentAdd() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/authority.sol\":2233:2286  msg.sender == getPresidentAdd() && !getPresidentBan() */\n      dup1\n      iszero\n      tag_112\n      jumpi\n      pop\n        /* \"contracts/authority.sol\":2269:2286  getPresidentBan() */\n      tag_113\n        /* \"contracts/authority.sol\":2269:2284  getPresidentBan */\n      tag_60\n        /* \"contracts/authority.sol\":2269:2286  getPresidentBan() */\n      jump\t// in\n    tag_113:\n        /* \"contracts/authority.sol\":2268:2286  !getPresidentBan() */\n      iszero\n        /* \"contracts/authority.sol\":2233:2286  msg.sender == getPresidentAdd() && !getPresidentBan() */\n    tag_112:\n        /* \"contracts/authority.sol\":2225:2310  require(msg.sender == getPresidentAdd() && !getPresidentBan(), \"Access is not valid\") */\n      tag_114\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_115\n      swap1\n      tag_98\n      jump\t// in\n    tag_115:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_114:\n        /* \"contracts/authority.sol\":7511:7540  _setPrimeMinisterBaned(baned) */\n      tag_117\n        /* \"contracts/authority.sol\":7534:7539  baned */\n      dup2\n        /* \"contracts/authority.sol\":7511:7533  _setPrimeMinisterBaned */\n      tag_109\n        /* \"contracts/authority.sol\":7511:7540  _setPrimeMinisterBaned(baned) */\n      jump\t// in\n    tag_117:\n        /* \"contracts/authority.sol\":7441:7548  function setPrimeMinister(bool baned) public onlyPresident {... */\n      pop\n      jump\t// out\n        /* \"contracts/authority.sol\":4813:5199  function transferPresident() public {... */\n    tag_36:\n        /* \"contracts/authority.sol\":4884:4894  msg.sender */\n      caller\n        /* \"contracts/authority.sol\":4864:4894  _pendigPresident == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/authority.sol\":4864:4880  _pendigPresident */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/authority.sol\":4864:4894  _pendigPresident == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/authority.sol\":4860:5191  if (_pendigPresident == msg.sender) {... */\n      tag_119\n      jumpi\n        /* \"contracts/authority.sol\":4918:4934  _pendigPresident */\n      0x02\n      0x00\n        /* \"contracts/authority.sol\":4911:4934  delete _pendigPresident */\n      0x0100\n      exp\n      dup2\n      sload\n      swap1\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      sstore\n        /* \"contracts/authority.sol\":4970:4980  msg.sender */\n      caller\n        /* \"contracts/authority.sol\":4949:4959  _president */\n      0x04\n        /* \"contracts/authority.sol\":4949:4967  _president.roleAdd */\n      0x00\n      add\n      0x00\n        /* \"contracts/authority.sol\":4949:4980  _president.roleAdd = msg.sender */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/authority.sol\":4995:5005  _president */\n      0x04\n        /* \"contracts/authority.sol\":4995:5011  _president.nonce */\n      0x00\n      add\n      0x15\n        /* \"contracts/authority.sol\":4995:5013  _president.nonce++ */\n      dup2\n      dup2\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffff\n      and\n      dup1\n      swap3\n      swap2\n      swap1\n      tag_120\n      swap1\n      tag_121\n      jump\t// in\n    tag_120:\n      swap2\n      swap1\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      pop\n        /* \"contracts/authority.sol\":5028:5053  _setPresidentBaned(false) */\n      tag_122\n        /* \"contracts/authority.sol\":5047:5052  false */\n      0x00\n        /* \"contracts/authority.sol\":5028:5046  _setPresidentBaned */\n      tag_107\n        /* \"contracts/authority.sol\":5028:5053  _setPresidentBaned(false) */\n      jump\t// in\n    tag_122:\n        /* \"contracts/authority.sol\":5123:5133  _president */\n      0x04\n        /* \"contracts/authority.sol\":5123:5139  _president.nonce */\n      0x00\n      add\n      0x15\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffff\n      and\n        /* \"contracts/authority.sol\":5075:5140  TheNewPresidentWasConfirmed(_president.roleAdd, _president.nonce) */\n      0xffffffff\n      and\n        /* \"contracts/authority.sol\":5103:5113  _president */\n      0x04\n        /* \"contracts/authority.sol\":5103:5121  _president.roleAdd */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/authority.sol\":5075:5140  TheNewPresidentWasConfirmed(_president.roleAdd, _president.nonce) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x05ad9b3688012cd825c1bfb941e4f5afb2558af6af3deaddf01dbb5e85abdaf9\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/authority.sol\":4860:5191  if (_pendigPresident == msg.sender) {... */\n      jump(tag_123)\n    tag_119:\n        /* \"contracts/authority.sol\":5167:5191  AccessOnlyForThePendig() */\n      mload(0x40)\n      0x6c4360f000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/authority.sol\":4860:5191  if (_pendigPresident == msg.sender) {... */\n    tag_123:\n        /* \"contracts/authority.sol\":4813:5199  function transferPresident() public {... */\n      jump\t// out\n        /* \"contracts/faykGovernance.sol\":1952:2608  function setCallerInfo(address oldCaller, address newCaller, bytes32 peopleName_satrap, uint32 roleId, uint48 delay) public onlyPrimeRepublic {... */\n    tag_40:\n        /* \"contracts/faykGovernance.sol\":1711:1726  block.timestamp */\n      timestamp\n        /* \"contracts/faykGovernance.sol\":1691:1708  TimeFirstElection */\n      immutable(\"0x243d3ba375e91e040b8b9e2bbbb1688b2b311eacea842eebda952071560e7854\")\n        /* \"contracts/faykGovernance.sol\":1691:1726  TimeFirstElection < block.timestamp */\n      0xffffffffffff\n      and\n      lt\n        /* \"contracts/faykGovernance.sol\":1687:1922  if (TimeFirstElection < block.timestamp) {... */\n      iszero\n      tag_125\n      jumpi\n        /* \"contracts/faykGovernance.sol\":1765:1785  getRepublicAddress() */\n      tag_126\n        /* \"contracts/faykGovernance.sol\":1765:1783  getRepublicAddress */\n      tag_77\n        /* \"contracts/faykGovernance.sol\":1765:1785  getRepublicAddress() */\n      jump\t// in\n    tag_126:\n        /* \"contracts/faykGovernance.sol\":1751:1785  msg.sender == getRepublicAddress() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/faykGovernance.sol\":1751:1761  msg.sender */\n      caller\n        /* \"contracts/faykGovernance.sol\":1751:1785  msg.sender == getRepublicAddress() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/faykGovernance.sol\":1743:1809  require(msg.sender == getRepublicAddress(), \"Access is not valid\") */\n      tag_127\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_128\n      swap1\n      tag_98\n      jump\t// in\n    tag_128:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_127:\n        /* \"contracts/faykGovernance.sol\":1687:1922  if (TimeFirstElection < block.timestamp) {... */\n      jump(tag_129)\n    tag_125:\n        /* \"contracts/faykGovernance.sol\":1851:1872  getPrimeMinisterAdd() */\n      tag_130\n        /* \"contracts/faykGovernance.sol\":1851:1870  getPrimeMinisterAdd */\n      tag_67\n        /* \"contracts/faykGovernance.sol\":1851:1872  getPrimeMinisterAdd() */\n      jump\t// in\n    tag_130:\n        /* \"contracts/faykGovernance.sol\":1837:1872  msg.sender == getPrimeMinisterAdd() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/faykGovernance.sol\":1837:1847  msg.sender */\n      caller\n        /* \"contracts/faykGovernance.sol\":1837:1872  msg.sender == getPrimeMinisterAdd() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/faykGovernance.sol\":1837:1898  msg.sender == getPrimeMinisterAdd() && !getPrimeMinisterBan() */\n      dup1\n      iszero\n      tag_131\n      jumpi\n      pop\n        /* \"contracts/faykGovernance.sol\":1877:1898  getPrimeMinisterBan() */\n      tag_132\n        /* \"contracts/faykGovernance.sol\":1877:1896  getPrimeMinisterBan */\n      tag_88\n        /* \"contracts/faykGovernance.sol\":1877:1898  getPrimeMinisterBan() */\n      jump\t// in\n    tag_132:\n        /* \"contracts/faykGovernance.sol\":1876:1898  !getPrimeMinisterBan() */\n      iszero\n        /* \"contracts/faykGovernance.sol\":1837:1898  msg.sender == getPrimeMinisterAdd() && !getPrimeMinisterBan() */\n    tag_131:\n        /* \"contracts/faykGovernance.sol\":1829:1922  require(msg.sender == getPrimeMinisterAdd() && !getPrimeMinisterBan(), \"Access is not valid\") */\n      tag_133\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_134\n      swap1\n      tag_98\n      jump\t// in\n    tag_134:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_133:\n        /* \"contracts/faykGovernance.sol\":1687:1922  if (TimeFirstElection < block.timestamp) {... */\n    tag_129:\n        /* \"contracts/faykGovernance.sol\":2130:2131  0 */\n      0x00\n        /* \"contracts/faykGovernance.sol\":2109:2132  oldCaller != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/faykGovernance.sol\":2109:2118  oldCaller */\n      dup6\n        /* \"contracts/faykGovernance.sol\":2109:2132  oldCaller != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/faykGovernance.sol\":2105:2190  if (oldCaller != address(0)) {... */\n      tag_136\n      jumpi\n        /* \"contracts/faykGovernance.sol\":2156:2167  _callerInfo */\n      0x08\n        /* \"contracts/faykGovernance.sol\":2156:2178  _callerInfo[oldCaller] */\n      0x00\n        /* \"contracts/faykGovernance.sol\":2168:2177  oldCaller */\n      dup7\n        /* \"contracts/faykGovernance.sol\":2156:2178  _callerInfo[oldCaller] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/faykGovernance.sol\":2149:2178  delete _callerInfo[oldCaller] */\n      dup1\n      dup3\n      add\n      0x00\n      swap1\n      sstore\n      0x01\n      dup3\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      swap1\n      0xffffffff\n      mul\n      not\n      and\n      swap1\n      sstore\n      0x01\n      dup3\n      add\n      exp(0x0100, 0x04)\n      dup2\n      sload\n      swap1\n      0xffffffffffff\n      mul\n      not\n      and\n      swap1\n      sstore\n      0x01\n      dup3\n      add\n      exp(0x0100, 0x0a)\n      dup2\n      sload\n      swap1\n      0xffffffffffff\n      mul\n      not\n      and\n      swap1\n      sstore\n      0x01\n      dup3\n      add\n      exp(0x0100, 0x10)\n      dup2\n      sload\n      swap1\n      0xffffffffffff\n      mul\n      not\n      and\n      swap1\n      sstore\n      pop\n      pop\n        /* \"contracts/faykGovernance.sol\":2105:2190  if (oldCaller != address(0)) {... */\n    tag_136:\n        /* \"contracts/faykGovernance.sol\":2249:2266  peopleName_satrap */\n      dup3\n        /* \"contracts/faykGovernance.sol\":2205:2216  _callerInfo */\n      0x08\n        /* \"contracts/faykGovernance.sol\":2205:2227  _callerInfo[newCaller] */\n      0x00\n        /* \"contracts/faykGovernance.sol\":2217:2226  newCaller */\n      dup7\n        /* \"contracts/faykGovernance.sol\":2205:2227  _callerInfo[newCaller] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/faykGovernance.sol\":2205:2245  _callerInfo[newCaller].peopleName_satrap */\n      0x00\n      add\n      sload\n        /* \"contracts/faykGovernance.sol\":2205:2266  _callerInfo[newCaller].peopleName_satrap != peopleName_satrap */\n      eq\n      iszero\n        /* \"contracts/faykGovernance.sol\":2205:2309  _callerInfo[newCaller].peopleName_satrap != peopleName_satrap && _callerInfo[newCaller].roleId != roleId */\n      dup1\n      iszero\n      tag_137\n      jumpi\n      pop\n        /* \"contracts/faykGovernance.sol\":2303:2309  roleId */\n      dup2\n        /* \"contracts/faykGovernance.sol\":2270:2309  _callerInfo[newCaller].roleId != roleId */\n      0xffffffff\n      and\n        /* \"contracts/faykGovernance.sol\":2270:2281  _callerInfo */\n      0x08\n        /* \"contracts/faykGovernance.sol\":2270:2292  _callerInfo[newCaller] */\n      0x00\n        /* \"contracts/faykGovernance.sol\":2282:2291  newCaller */\n      dup7\n        /* \"contracts/faykGovernance.sol\":2270:2292  _callerInfo[newCaller] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/faykGovernance.sol\":2270:2299  _callerInfo[newCaller].roleId */\n      0x01\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffff\n      and\n        /* \"contracts/faykGovernance.sol\":2270:2309  _callerInfo[newCaller].roleId != roleId */\n      0xffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/faykGovernance.sol\":2205:2309  _callerInfo[newCaller].peopleName_satrap != peopleName_satrap && _callerInfo[newCaller].roleId != roleId */\n    tag_137:\n        /* \"contracts/faykGovernance.sol\":2201:2601  if (_callerInfo[newCaller].peopleName_satrap != peopleName_satrap && _callerInfo[newCaller].roleId != roleId) {... */\n      iszero\n      tag_138\n      jumpi\n        /* \"contracts/faykGovernance.sol\":2371:2388  peopleName_satrap */\n      dup3\n        /* \"contracts/faykGovernance.sol\":2328:2339  _callerInfo */\n      0x08\n        /* \"contracts/faykGovernance.sol\":2328:2350  _callerInfo[newCaller] */\n      0x00\n        /* \"contracts/faykGovernance.sol\":2340:2349  newCaller */\n      dup7\n        /* \"contracts/faykGovernance.sol\":2328:2350  _callerInfo[newCaller] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/faykGovernance.sol\":2328:2368  _callerInfo[newCaller].peopleName_satrap */\n      0x00\n      add\n        /* \"contracts/faykGovernance.sol\":2328:2388  _callerInfo[newCaller].peopleName_satrap = peopleName_satrap */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/faykGovernance.sol\":2435:2441  roleId */\n      dup2\n        /* \"contracts/faykGovernance.sol\":2403:2414  _callerInfo */\n      0x08\n        /* \"contracts/faykGovernance.sol\":2403:2425  _callerInfo[newCaller] */\n      0x00\n        /* \"contracts/faykGovernance.sol\":2415:2424  newCaller */\n      dup7\n        /* \"contracts/faykGovernance.sol\":2403:2425  _callerInfo[newCaller] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/faykGovernance.sol\":2403:2432  _callerInfo[newCaller].roleId */\n      0x01\n      add\n      0x00\n        /* \"contracts/faykGovernance.sol\":2403:2441  _callerInfo[newCaller].roleId = roleId */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/faykGovernance.sol\":2494:2499  delay */\n      dup1\n        /* \"contracts/faykGovernance.sol\":2456:2467  _callerInfo */\n      0x08\n        /* \"contracts/faykGovernance.sol\":2456:2478  _callerInfo[newCaller] */\n      0x00\n        /* \"contracts/faykGovernance.sol\":2468:2477  newCaller */\n      dup7\n        /* \"contracts/faykGovernance.sol\":2456:2478  _callerInfo[newCaller] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/faykGovernance.sol\":2456:2491  _callerInfo[newCaller].executeDelay */\n      0x01\n      add\n      0x10\n        /* \"contracts/faykGovernance.sol\":2456:2499  _callerInfo[newCaller].executeDelay = delay */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/faykGovernance.sol\":2572:2578  roleId */\n      dup2\n        /* \"contracts/faykGovernance.sol\":2521:2579  AnOfficialWasElected(newCaller, peopleName_satrap, roleId) */\n      0xffffffff\n      and\n        /* \"contracts/faykGovernance.sol\":2553:2570  peopleName_satrap */\n      dup4\n        /* \"contracts/faykGovernance.sol\":2542:2551  newCaller */\n      dup6\n        /* \"contracts/faykGovernance.sol\":2521:2579  AnOfficialWasElected(newCaller, peopleName_satrap, roleId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x5c43a67d451cacaddc8309af64192a4ebee009b9cab5eeb59ec1fb77dd3abcbc\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"contracts/faykGovernance.sol\":2201:2601  if (_callerInfo[newCaller].peopleName_satrap != peopleName_satrap && _callerInfo[newCaller].roleId != roleId) {... */\n      jump(tag_139)\n    tag_138:\n    tag_139:\n        /* \"contracts/faykGovernance.sol\":1952:2608  function setCallerInfo(address oldCaller, address newCaller, bytes32 peopleName_satrap, uint32 roleId, uint48 delay) public onlyPrimeRepublic {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/authority.sol\":5600:6081  function transferPrimeMinister() public {... */\n    tag_42:\n        /* \"contracts/authority.sol\":5680:5690  msg.sender */\n      caller\n        /* \"contracts/authority.sol\":5655:5690  _pendingPrimeMinister == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/authority.sol\":5655:5676  _pendingPrimeMinister */\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/authority.sol\":5655:5690  _pendingPrimeMinister == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/authority.sol\":5651:6073  if (_pendingPrimeMinister == msg.sender) {... */\n      tag_141\n      jumpi\n        /* \"contracts/authority.sol\":5714:5735  _pendingPrimeMinister */\n      0x03\n      0x00\n        /* \"contracts/authority.sol\":5707:5735  delete _pendingPrimeMinister */\n      0x0100\n      exp\n      dup2\n      sload\n      swap1\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      sstore\n        /* \"contracts/authority.sol\":5775:5785  msg.sender */\n      caller\n        /* \"contracts/authority.sol\":5750:5764  _primeMinister */\n      0x05\n        /* \"contracts/authority.sol\":5750:5772  _primeMinister.roleAdd */\n      0x00\n      add\n      0x00\n        /* \"contracts/authority.sol\":5750:5785  _primeMinister.roleAdd = msg.sender */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/authority.sol\":5800:5814  _primeMinister */\n      0x05\n        /* \"contracts/authority.sol\":5800:5820  _primeMinister.nonce */\n      0x00\n      add\n      0x15\n        /* \"contracts/authority.sol\":5800:5822  _primeMinister.nonce++ */\n      dup2\n      dup2\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffff\n      and\n      dup1\n      swap3\n      swap2\n      swap1\n      tag_142\n      swap1\n      tag_121\n      jump\t// in\n    tag_142:\n      swap2\n      swap1\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      pop\n        /* \"contracts/authority.sol\":5841:5855  _primeMinister */\n      0x05\n        /* \"contracts/authority.sol\":5841:5861  _primeMinister.baned */\n      0x00\n      add\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/authority.sol\":5837:5926  if (_primeMinister.baned){... */\n      iszero\n      tag_143\n      jumpi\n        /* \"contracts/authority.sol\":5881:5910  _setPrimeMinisterBaned(false) */\n      tag_144\n        /* \"contracts/authority.sol\":5904:5909  false */\n      0x00\n        /* \"contracts/authority.sol\":5881:5903  _setPrimeMinisterBaned */\n      tag_109\n        /* \"contracts/authority.sol\":5881:5910  _setPrimeMinisterBaned(false) */\n      jump\t// in\n    tag_144:\n        /* \"contracts/authority.sol\":5837:5926  if (_primeMinister.baned){... */\n    tag_143:\n        /* \"contracts/authority.sol\":6001:6015  _primeMinister */\n      0x05\n        /* \"contracts/authority.sol\":6001:6021  _primeMinister.nonce */\n      0x00\n      add\n      0x15\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffff\n      and\n        /* \"contracts/authority.sol\":5945:6022  TheNewPrimeMinisterWasConfirmed(_primeMinister.roleAdd, _primeMinister.nonce) */\n      0xffffffff\n      and\n        /* \"contracts/authority.sol\":5977:5991  _primeMinister */\n      0x05\n        /* \"contracts/authority.sol\":5977:5999  _primeMinister.roleAdd */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/authority.sol\":5945:6022  TheNewPrimeMinisterWasConfirmed(_primeMinister.roleAdd, _primeMinister.nonce) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x11e1b985c07e1bf3fec9bfd0bdb8c4a8e870ba2b26aa89fe50a6a19132ca10fd\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/authority.sol\":5651:6073  if (_pendingPrimeMinister == msg.sender) {... */\n      jump(tag_145)\n    tag_141:\n        /* \"contracts/authority.sol\":6049:6073  AccessOnlyForThePendig() */\n      mload(0x40)\n      0x6c4360f000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/authority.sol\":5651:6073  if (_pendingPrimeMinister == msg.sender) {... */\n    tag_145:\n        /* \"contracts/authority.sol\":5600:6081  function transferPrimeMinister() public {... */\n      jump\t// out\n        /* \"contracts/authority.sol\":2726:3282  function setPendingRepublicAddress(address newRAddress) public onlyRepublic {... */\n    tag_45:\n        /* \"contracts/authority.sol\":1956:1971  block.timestamp */\n      timestamp\n        /* \"contracts/authority.sol\":1936:1953  TimeFirstElection */\n      immutable(\"0x243d3ba375e91e040b8b9e2bbbb1688b2b311eacea842eebda952071560e7854\")\n        /* \"contracts/authority.sol\":1936:1971  TimeFirstElection < block.timestamp */\n      0xffffffffffff\n      and\n      lt\n        /* \"contracts/authority.sol\":1932:2159  if (TimeFirstElection < block.timestamp) {... */\n      iszero\n      tag_147\n      jumpi\n        /* \"contracts/authority.sol\":2010:2030  getRepublicAddress() */\n      tag_148\n        /* \"contracts/authority.sol\":2010:2028  getRepublicAddress */\n      tag_77\n        /* \"contracts/authority.sol\":2010:2030  getRepublicAddress() */\n      jump\t// in\n    tag_148:\n        /* \"contracts/authority.sol\":1996:2030  msg.sender == getRepublicAddress() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/authority.sol\":1996:2006  msg.sender */\n      caller\n        /* \"contracts/authority.sol\":1996:2030  msg.sender == getRepublicAddress() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/authority.sol\":1988:2054  require(msg.sender == getRepublicAddress(), \"Access is not valid\") */\n      tag_149\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_150\n      swap1\n      tag_98\n      jump\t// in\n    tag_150:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_149:\n        /* \"contracts/authority.sol\":1932:2159  if (TimeFirstElection < block.timestamp) {... */\n      jump(tag_151)\n    tag_147:\n        /* \"contracts/authority.sol\":2096:2113  getPresidentAdd() */\n      tag_152\n        /* \"contracts/authority.sol\":2096:2111  getPresidentAdd */\n      tag_57\n        /* \"contracts/authority.sol\":2096:2113  getPresidentAdd() */\n      jump\t// in\n    tag_152:\n        /* \"contracts/authority.sol\":2082:2113  msg.sender == getPresidentAdd() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/authority.sol\":2082:2092  msg.sender */\n      caller\n        /* \"contracts/authority.sol\":2082:2113  msg.sender == getPresidentAdd() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/authority.sol\":2082:2135  msg.sender == getPresidentAdd() && !getPresidentBan() */\n      dup1\n      iszero\n      tag_153\n      jumpi\n      pop\n        /* \"contracts/authority.sol\":2118:2135  getPresidentBan() */\n      tag_154\n        /* \"contracts/authority.sol\":2118:2133  getPresidentBan */\n      tag_60\n        /* \"contracts/authority.sol\":2118:2135  getPresidentBan() */\n      jump\t// in\n    tag_154:\n        /* \"contracts/authority.sol\":2117:2135  !getPresidentBan() */\n      iszero\n        /* \"contracts/authority.sol\":2082:2135  msg.sender == getPresidentAdd() && !getPresidentBan() */\n    tag_153:\n        /* \"contracts/authority.sol\":2074:2159  require(msg.sender == getPresidentAdd() && !getPresidentBan(), \"Access is not valid\") */\n      tag_155\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_156\n      swap1\n      tag_98\n      jump\t// in\n    tag_156:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_155:\n        /* \"contracts/authority.sol\":1932:2159  if (TimeFirstElection < block.timestamp) {... */\n    tag_151:\n        /* \"contracts/authority.sol\":2843:2844  0 */\n      0x00\n        /* \"contracts/authority.sol\":2817:2828  newRAddress */\n      dup2\n        /* \"contracts/authority.sol\":2817:2840  newRAddress.code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"contracts/authority.sol\":2817:2844  newRAddress.code.length > 0 */\n      gt\n        /* \"contracts/authority.sol\":2813:3272  if (newRAddress.code.length > 0) {... */\n      iszero\n      tag_158\n      jumpi\n        /* \"contracts/authority.sol\":2887:2897  msg.sender */\n      caller\n        /* \"contracts/authority.sol\":2865:2897  _president.roleAdd == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/authority.sol\":2865:2875  _president */\n      0x04\n        /* \"contracts/authority.sol\":2865:2883  _president.roleAdd */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/authority.sol\":2865:2897  _president.roleAdd == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/authority.sol\":2861:3202  if (_president.roleAdd == msg.sender) {... */\n      tag_159\n      jumpi\n        /* \"contracts/authority.sol\":2918:2955  _transferRepublicAddress(newRAddress) */\n      tag_160\n        /* \"contracts/authority.sol\":2943:2954  newRAddress */\n      dup2\n        /* \"contracts/authority.sol\":2918:2942  _transferRepublicAddress */\n      tag_161\n        /* \"contracts/authority.sol\":2918:2955  _transferRepublicAddress(newRAddress) */\n      jump\t// in\n    tag_160:\n        /* \"contracts/authority.sol\":2861:3202  if (_president.roleAdd == msg.sender) {... */\n      jump(tag_162)\n    tag_159:\n        /* \"contracts/authority.sol\":3054:3061  15 days */\n      0x13c680\n        /* \"contracts/authority.sol\":3036:3051  block.timestamp */\n      timestamp\n        /* \"contracts/authority.sol\":3036:3061  block.timestamp + 15 days */\n      tag_163\n      swap2\n      swap1\n      tag_164\n      jump\t// in\n    tag_163:\n        /* \"contracts/authority.sol\":2998:3026  _delayConfirmRepublicAddress */\n      0x03\n      0x14\n        /* \"contracts/authority.sol\":2998:3062  _delayConfirmRepublicAddress = uint48(block.timestamp + 15 days) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/authority.sol\":3106:3117  newRAddress */\n      dup1\n        /* \"contracts/authority.sol\":3081:3103  _pendigRepublicAddress */\n      0x00\n      dup1\n        /* \"contracts/authority.sol\":3081:3117  _pendigRepublicAddress = newRAddress */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/authority.sol\":3174:3185  newRAddress */\n      dup1\n        /* \"contracts/authority.sol\":3141:3186  TheNextRepublicAddressWasElected(newRAddress) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x675b770e821ba4aad20be77c58f912d689226272e805637f42f838a6035eed86\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/authority.sol\":2861:3202  if (_president.roleAdd == msg.sender) {... */\n    tag_162:\n        /* \"contracts/authority.sol\":2813:3272  if (newRAddress.code.length > 0) {... */\n      jump(tag_165)\n    tag_158:\n        /* \"contracts/authority.sol\":3260:3271  newRAddress */\n      dup1\n        /* \"contracts/authority.sol\":3228:3272  TheAddressIsNotValidForRAddress(newRAddress) */\n      mload(0x40)\n      0xc632231500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_166\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_166:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/authority.sol\":2813:3272  if (newRAddress.code.length > 0) {... */\n    tag_165:\n        /* \"contracts/authority.sol\":2726:3282  function setPendingRepublicAddress(address newRAddress) public onlyRepublic {... */\n      pop\n      jump\t// out\n        /* \"contracts/authority.sol\":7070:7170  function getGovernance() public view returns (address) {... */\n    tag_47:\n        /* \"contracts/authority.sol\":7116:7123  address */\n      0x00\n        /* \"contracts/authority.sol\":7143:7154  _governance */\n      0x06\n        /* \"contracts/authority.sol\":7143:7162  _governance.roleAdd */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/authority.sol\":7136:7162  return _governance.roleAdd */\n      swap1\n      pop\n        /* \"contracts/authority.sol\":7070:7170  function getGovernance() public view returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/authority.sol\":3928:4302  function cancelPendingRepublicAddress(address PRAdress) public onlyRepublic {... */\n    tag_52:\n        /* \"contracts/authority.sol\":1956:1971  block.timestamp */\n      timestamp\n        /* \"contracts/authority.sol\":1936:1953  TimeFirstElection */\n      immutable(\"0x243d3ba375e91e040b8b9e2bbbb1688b2b311eacea842eebda952071560e7854\")\n        /* \"contracts/authority.sol\":1936:1971  TimeFirstElection < block.timestamp */\n      0xffffffffffff\n      and\n      lt\n        /* \"contracts/authority.sol\":1932:2159  if (TimeFirstElection < block.timestamp) {... */\n      iszero\n      tag_169\n      jumpi\n        /* \"contracts/authority.sol\":2010:2030  getRepublicAddress() */\n      tag_170\n        /* \"contracts/authority.sol\":2010:2028  getRepublicAddress */\n      tag_77\n        /* \"contracts/authority.sol\":2010:2030  getRepublicAddress() */\n      jump\t// in\n    tag_170:\n        /* \"contracts/authority.sol\":1996:2030  msg.sender == getRepublicAddress() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/authority.sol\":1996:2006  msg.sender */\n      caller\n        /* \"contracts/authority.sol\":1996:2030  msg.sender == getRepublicAddress() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/authority.sol\":1988:2054  require(msg.sender == getRepublicAddress(), \"Access is not valid\") */\n      tag_171\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_172\n      swap1\n      tag_98\n      jump\t// in\n    tag_172:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_171:\n        /* \"contracts/authority.sol\":1932:2159  if (TimeFirstElection < block.timestamp) {... */\n      jump(tag_173)\n    tag_169:\n        /* \"contracts/authority.sol\":2096:2113  getPresidentAdd() */\n      tag_174\n        /* \"contracts/authority.sol\":2096:2111  getPresidentAdd */\n      tag_57\n        /* \"contracts/authority.sol\":2096:2113  getPresidentAdd() */\n      jump\t// in\n    tag_174:\n        /* \"contracts/authority.sol\":2082:2113  msg.sender == getPresidentAdd() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/authority.sol\":2082:2092  msg.sender */\n      caller\n        /* \"contracts/authority.sol\":2082:2113  msg.sender == getPresidentAdd() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/authority.sol\":2082:2135  msg.sender == getPresidentAdd() && !getPresidentBan() */\n      dup1\n      iszero\n      tag_175\n      jumpi\n      pop\n        /* \"contracts/authority.sol\":2118:2135  getPresidentBan() */\n      tag_176\n        /* \"contracts/authority.sol\":2118:2133  getPresidentBan */\n      tag_60\n        /* \"contracts/authority.sol\":2118:2135  getPresidentBan() */\n      jump\t// in\n    tag_176:\n        /* \"contracts/authority.sol\":2117:2135  !getPresidentBan() */\n      iszero\n        /* \"contracts/authority.sol\":2082:2135  msg.sender == getPresidentAdd() && !getPresidentBan() */\n    tag_175:\n        /* \"contracts/authority.sol\":2074:2159  require(msg.sender == getPresidentAdd() && !getPresidentBan(), \"Access is not valid\") */\n      tag_177\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_178\n      swap1\n      tag_98\n      jump\t// in\n    tag_178:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_177:\n        /* \"contracts/authority.sol\":1932:2159  if (TimeFirstElection < block.timestamp) {... */\n    tag_173:\n        /* \"contracts/authority.sol\":4045:4053  PRAdress */\n      dup1\n        /* \"contracts/authority.sol\":4019:4053  _pendigRepublicAddress == PRAdress */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/authority.sol\":4019:4041  _pendigRepublicAddress */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/authority.sol\":4019:4053  _pendigRepublicAddress == PRAdress */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/authority.sol\":4015:4294  if (_pendigRepublicAddress == PRAdress) {... */\n      tag_180\n      jumpi\n        /* \"contracts/authority.sol\":4081:4109  _delayConfirmRepublicAddress */\n      0x03\n      0x14\n        /* \"contracts/authority.sol\":4074:4109  delete _delayConfirmRepublicAddress */\n      0x0100\n      exp\n      dup2\n      sload\n      swap1\n      0xffffffffffff\n      mul\n      not\n      and\n      swap1\n      sstore\n        /* \"contracts/authority.sol\":4135:4157  _pendigRepublicAddress */\n      0x00\n      dup1\n        /* \"contracts/authority.sol\":4128:4157  delete _pendigRepublicAddress */\n      0x0100\n      exp\n      dup2\n      sload\n      swap1\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      sstore\n        /* \"contracts/authority.sol\":4217:4225  PRAdress */\n      dup1\n        /* \"contracts/authority.sol\":4182:4226  TheNextRepublicAddressWasCancelled(PRAdress) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xf299f61c7e493f99b20cb36c587ca903d085d5206bfe4452d295711e372da029\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/authority.sol\":4015:4294  if (_pendigRepublicAddress == PRAdress) {... */\n      jump(tag_181)\n    tag_180:\n        /* \"contracts/authority.sol\":4285:4293  PRAdress */\n      dup1\n        /* \"contracts/authority.sol\":4253:4294  TheAddressIsNotValidForRAddress(PRAdress) */\n      mload(0x40)\n      0xc632231500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_182\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_182:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/authority.sol\":4015:4294  if (_pendigRepublicAddress == PRAdress) {... */\n    tag_181:\n        /* \"contracts/authority.sol\":3928:4302  function cancelPendingRepublicAddress(address PRAdress) public onlyRepublic {... */\n      pop\n      jump\t// out\n        /* \"contracts/authority.sol\":5420:5592  function setPendingPrimeMinister(address newPM) public onlyPresident {... */\n    tag_55:\n        /* \"contracts/authority.sol\":2247:2264  getPresidentAdd() */\n      tag_184\n        /* \"contracts/authority.sol\":2247:2262  getPresidentAdd */\n      tag_57\n        /* \"contracts/authority.sol\":2247:2264  getPresidentAdd() */\n      jump\t// in\n    tag_184:\n        /* \"contracts/authority.sol\":2233:2264  msg.sender == getPresidentAdd() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/authority.sol\":2233:2243  msg.sender */\n      caller\n        /* \"contracts/authority.sol\":2233:2264  msg.sender == getPresidentAdd() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/authority.sol\":2233:2286  msg.sender == getPresidentAdd() && !getPresidentBan() */\n      dup1\n      iszero\n      tag_185\n      jumpi\n      pop\n        /* \"contracts/authority.sol\":2269:2286  getPresidentBan() */\n      tag_186\n        /* \"contracts/authority.sol\":2269:2284  getPresidentBan */\n      tag_60\n        /* \"contracts/authority.sol\":2269:2286  getPresidentBan() */\n      jump\t// in\n    tag_186:\n        /* \"contracts/authority.sol\":2268:2286  !getPresidentBan() */\n      iszero\n        /* \"contracts/authority.sol\":2233:2286  msg.sender == getPresidentAdd() && !getPresidentBan() */\n    tag_185:\n        /* \"contracts/authority.sol\":2225:2310  require(msg.sender == getPresidentAdd() && !getPresidentBan(), \"Access is not valid\") */\n      tag_187\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_188\n      swap1\n      tag_98\n      jump\t// in\n    tag_188:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_187:\n        /* \"contracts/authority.sol\":5524:5529  newPM */\n      dup1\n        /* \"contracts/authority.sol\":5500:5521  _pendingPrimeMinister */\n      0x03\n      0x00\n        /* \"contracts/authority.sol\":5500:5529  _pendingPrimeMinister = newPM */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/authority.sol\":5578:5583  newPM */\n      dup1\n        /* \"contracts/authority.sol\":5547:5584  TheNextPrimeMinisterWasElected(newPM) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xff3cad3ee28c342ad5f3d7c8ff8559ee4d21eb48494092b82a1652e443b3420b\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/authority.sol\":5420:5592  function setPendingPrimeMinister(address newPM) public onlyPresident {... */\n      pop\n      jump\t// out\n        /* \"contracts/authority.sol\":5207:5308  function getPresidentAdd() public view returns (address) {... */\n    tag_57:\n        /* \"contracts/authority.sol\":5255:5262  address */\n      0x00\n        /* \"contracts/authority.sol\":5282:5292  _president */\n      0x04\n        /* \"contracts/authority.sol\":5282:5300  _president.roleAdd */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/authority.sol\":5275:5300  return _president.roleAdd */\n      swap1\n      pop\n        /* \"contracts/authority.sol\":5207:5308  function getPresidentAdd() public view returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/authority.sol\":5316:5412  function getPresidentBan() public view returns (bool) {... */\n    tag_60:\n        /* \"contracts/authority.sol\":5364:5368  bool */\n      0x00\n        /* \"contracts/authority.sol\":5388:5398  _president */\n      0x04\n        /* \"contracts/authority.sol\":5388:5404  _president.baned */\n      0x00\n      add\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/authority.sol\":5381:5404  return _president.baned */\n      swap1\n      pop\n        /* \"contracts/authority.sol\":5316:5412  function getPresidentBan() public view returns (bool) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/authority.sol\":3290:3920  function transferRepublicAddress(address RAddress) public onlyRepublic {... */\n    tag_65:\n        /* \"contracts/authority.sol\":1956:1971  block.timestamp */\n      timestamp\n        /* \"contracts/authority.sol\":1936:1953  TimeFirstElection */\n      immutable(\"0x243d3ba375e91e040b8b9e2bbbb1688b2b311eacea842eebda952071560e7854\")\n        /* \"contracts/authority.sol\":1936:1971  TimeFirstElection < block.timestamp */\n      0xffffffffffff\n      and\n      lt\n        /* \"contracts/authority.sol\":1932:2159  if (TimeFirstElection < block.timestamp) {... */\n      iszero\n      tag_193\n      jumpi\n        /* \"contracts/authority.sol\":2010:2030  getRepublicAddress() */\n      tag_194\n        /* \"contracts/authority.sol\":2010:2028  getRepublicAddress */\n      tag_77\n        /* \"contracts/authority.sol\":2010:2030  getRepublicAddress() */\n      jump\t// in\n    tag_194:\n        /* \"contracts/authority.sol\":1996:2030  msg.sender == getRepublicAddress() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/authority.sol\":1996:2006  msg.sender */\n      caller\n        /* \"contracts/authority.sol\":1996:2030  msg.sender == getRepublicAddress() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/authority.sol\":1988:2054  require(msg.sender == getRepublicAddress(), \"Access is not valid\") */\n      tag_195\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_196\n      swap1\n      tag_98\n      jump\t// in\n    tag_196:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_195:\n        /* \"contracts/authority.sol\":1932:2159  if (TimeFirstElection < block.timestamp) {... */\n      jump(tag_197)\n    tag_193:\n        /* \"contracts/authority.sol\":2096:2113  getPresidentAdd() */\n      tag_198\n        /* \"contracts/authority.sol\":2096:2111  getPresidentAdd */\n      tag_57\n        /* \"contracts/authority.sol\":2096:2113  getPresidentAdd() */\n      jump\t// in\n    tag_198:\n        /* \"contracts/authority.sol\":2082:2113  msg.sender == getPresidentAdd() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/authority.sol\":2082:2092  msg.sender */\n      caller\n        /* \"contracts/authority.sol\":2082:2113  msg.sender == getPresidentAdd() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/authority.sol\":2082:2135  msg.sender == getPresidentAdd() && !getPresidentBan() */\n      dup1\n      iszero\n      tag_199\n      jumpi\n      pop\n        /* \"contracts/authority.sol\":2118:2135  getPresidentBan() */\n      tag_200\n        /* \"contracts/authority.sol\":2118:2133  getPresidentBan */\n      tag_60\n        /* \"contracts/authority.sol\":2118:2135  getPresidentBan() */\n      jump\t// in\n    tag_200:\n        /* \"contracts/authority.sol\":2117:2135  !getPresidentBan() */\n      iszero\n        /* \"contracts/authority.sol\":2082:2135  msg.sender == getPresidentAdd() && !getPresidentBan() */\n    tag_199:\n        /* \"contracts/authority.sol\":2074:2159  require(msg.sender == getPresidentAdd() && !getPresidentBan(), \"Access is not valid\") */\n      tag_201\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_202\n      swap1\n      tag_98\n      jump\t// in\n    tag_202:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_201:\n        /* \"contracts/authority.sol\":1932:2159  if (TimeFirstElection < block.timestamp) {... */\n    tag_197:\n        /* \"contracts/authority.sol\":3407:3422  block.timestamp */\n      timestamp\n        /* \"contracts/authority.sol\":3376:3404  _delayConfirmRepublicAddress */\n      0x03\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffff\n      and\n        /* \"contracts/authority.sol\":3376:3422  _delayConfirmRepublicAddress < block.timestamp */\n      0xffffffffffff\n      and\n      lt\n        /* \"contracts/authority.sol\":3372:3912  if (_delayConfirmRepublicAddress < block.timestamp) {... */\n      iszero\n      tag_204\n      jumpi\n        /* \"contracts/authority.sol\":3479:3480  0 */\n      0x00\n        /* \"contracts/authority.sol\":3447:3475  _delayConfirmRepublicAddress */\n      0x03\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffff\n      and\n        /* \"contracts/authority.sol\":3447:3480  _delayConfirmRepublicAddress != 0 */\n      0xffffffffffff\n      and\n      sub\n        /* \"contracts/authority.sol\":3439:3506  require(_delayConfirmRepublicAddress != 0,\"The request is invalid\") */\n      tag_205\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_206\n      swap1\n      tag_207\n      jump\t// in\n    tag_206:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_205:\n        /* \"contracts/authority.sol\":3551:3559  RAddress */\n      dup1\n        /* \"contracts/authority.sol\":3525:3559  _pendigRepublicAddress == RAddress */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/authority.sol\":3525:3547  _pendigRepublicAddress */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/authority.sol\":3525:3559  _pendigRepublicAddress == RAddress */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/authority.sol\":3521:3788  if (_pendigRepublicAddress == RAddress) {... */\n      tag_208\n      jumpi\n        /* \"contracts/authority.sol\":3587:3615  _delayConfirmRepublicAddress */\n      0x03\n      0x14\n        /* \"contracts/authority.sol\":3580:3615  delete _delayConfirmRepublicAddress */\n      0x0100\n      exp\n      dup2\n      sload\n      swap1\n      0xffffffffffff\n      mul\n      not\n      and\n      swap1\n      sstore\n        /* \"contracts/authority.sol\":3641:3663  _pendigRepublicAddress */\n      0x00\n      dup1\n        /* \"contracts/authority.sol\":3634:3663  delete _pendigRepublicAddress */\n      0x0100\n      exp\n      dup2\n      sload\n      swap1\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      sstore\n        /* \"contracts/authority.sol\":3682:3716  _transferRepublicAddress(RAddress) */\n      tag_209\n        /* \"contracts/authority.sol\":3707:3715  RAddress */\n      dup2\n        /* \"contracts/authority.sol\":3682:3706  _transferRepublicAddress */\n      tag_161\n        /* \"contracts/authority.sol\":3682:3716  _transferRepublicAddress(RAddress) */\n      jump\t// in\n    tag_209:\n        /* \"contracts/authority.sol\":3521:3788  if (_pendigRepublicAddress == RAddress) {... */\n      jump(tag_210)\n    tag_208:\n        /* \"contracts/authority.sol\":3779:3787  RAddress */\n      dup1\n        /* \"contracts/authority.sol\":3747:3788  TheAddressIsNotValidForRAddress(RAddress) */\n      mload(0x40)\n      0xc632231500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_211\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_211:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/authority.sol\":3521:3788  if (_pendigRepublicAddress == RAddress) {... */\n    tag_210:\n        /* \"contracts/authority.sol\":3372:3912  if (_delayConfirmRepublicAddress < block.timestamp) {... */\n      jump(tag_212)\n    tag_204:\n        /* \"contracts/authority.sol\":3895:3910  block.timestamp */\n      timestamp\n        /* \"contracts/authority.sol\":3857:3885  _delayConfirmRepublicAddress */\n      0x03\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffff\n      and\n        /* \"contracts/authority.sol\":3857:3911  _delayConfirmRepublicAddress - uint48(block.timestamp) */\n      tag_213\n      swap2\n      swap1\n      tag_214\n      jump\t// in\n    tag_213:\n        /* \"contracts/authority.sol\":3815:3912  RemainingTimeUntilTheConfirmationDeadline(_delayConfirmRepublicAddress - uint48(block.timestamp)) */\n      mload(0x40)\n      0x223a6cbb00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_215\n      swap2\n      swap1\n      tag_216\n      jump\t// in\n    tag_215:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/authority.sol\":3372:3912  if (_delayConfirmRepublicAddress < block.timestamp) {... */\n    tag_212:\n        /* \"contracts/authority.sol\":3290:3920  function transferRepublicAddress(address RAddress) public onlyRepublic {... */\n      pop\n      jump\t// out\n        /* \"contracts/authority.sol\":6089:6198  function getPrimeMinisterAdd() public view returns (address) {... */\n    tag_67:\n        /* \"contracts/authority.sol\":6141:6148  address */\n      0x00\n        /* \"contracts/authority.sol\":6168:6182  _primeMinister */\n      0x05\n        /* \"contracts/authority.sol\":6168:6190  _primeMinister.roleAdd */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/authority.sol\":6161:6190  return _primeMinister.roleAdd */\n      swap1\n      pop\n        /* \"contracts/authority.sol\":6089:6198  function getPrimeMinisterAdd() public view returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/authority.sol\":7290:7433  function setPresidentBaned(bool baned) public onlyRepublic {... */\n    tag_71:\n        /* \"contracts/authority.sol\":1956:1971  block.timestamp */\n      timestamp\n        /* \"contracts/authority.sol\":1936:1953  TimeFirstElection */\n      immutable(\"0x243d3ba375e91e040b8b9e2bbbb1688b2b311eacea842eebda952071560e7854\")\n        /* \"contracts/authority.sol\":1936:1971  TimeFirstElection < block.timestamp */\n      0xffffffffffff\n      and\n      lt\n        /* \"contracts/authority.sol\":1932:2159  if (TimeFirstElection < block.timestamp) {... */\n      iszero\n      tag_219\n      jumpi\n        /* \"contracts/authority.sol\":2010:2030  getRepublicAddress() */\n      tag_220\n        /* \"contracts/authority.sol\":2010:2028  getRepublicAddress */\n      tag_77\n        /* \"contracts/authority.sol\":2010:2030  getRepublicAddress() */\n      jump\t// in\n    tag_220:\n        /* \"contracts/authority.sol\":1996:2030  msg.sender == getRepublicAddress() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/authority.sol\":1996:2006  msg.sender */\n      caller\n        /* \"contracts/authority.sol\":1996:2030  msg.sender == getRepublicAddress() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/authority.sol\":1988:2054  require(msg.sender == getRepublicAddress(), \"Access is not valid\") */\n      tag_221\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_222\n      swap1\n      tag_98\n      jump\t// in\n    tag_222:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_221:\n        /* \"contracts/authority.sol\":1932:2159  if (TimeFirstElection < block.timestamp) {... */\n      jump(tag_223)\n    tag_219:\n        /* \"contracts/authority.sol\":2096:2113  getPresidentAdd() */\n      tag_224\n        /* \"contracts/authority.sol\":2096:2111  getPresidentAdd */\n      tag_57\n        /* \"contracts/authority.sol\":2096:2113  getPresidentAdd() */\n      jump\t// in\n    tag_224:\n        /* \"contracts/authority.sol\":2082:2113  msg.sender == getPresidentAdd() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/authority.sol\":2082:2092  msg.sender */\n      caller\n        /* \"contracts/authority.sol\":2082:2113  msg.sender == getPresidentAdd() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/authority.sol\":2082:2135  msg.sender == getPresidentAdd() && !getPresidentBan() */\n      dup1\n      iszero\n      tag_225\n      jumpi\n      pop\n        /* \"contracts/authority.sol\":2118:2135  getPresidentBan() */\n      tag_226\n        /* \"contracts/authority.sol\":2118:2133  getPresidentBan */\n      tag_60\n        /* \"contracts/authority.sol\":2118:2135  getPresidentBan() */\n      jump\t// in\n    tag_226:\n        /* \"contracts/authority.sol\":2117:2135  !getPresidentBan() */\n      iszero\n        /* \"contracts/authority.sol\":2082:2135  msg.sender == getPresidentAdd() && !getPresidentBan() */\n    tag_225:\n        /* \"contracts/authority.sol\":2074:2159  require(msg.sender == getPresidentAdd() && !getPresidentBan(), \"Access is not valid\") */\n      tag_227\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_228\n      swap1\n      tag_98\n      jump\t// in\n    tag_228:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_227:\n        /* \"contracts/authority.sol\":1932:2159  if (TimeFirstElection < block.timestamp) {... */\n    tag_223:\n        /* \"contracts/authority.sol\":7360:7385  _setPresidentBaned(baned) */\n      tag_230\n        /* \"contracts/authority.sol\":7379:7384  baned */\n      dup2\n        /* \"contracts/authority.sol\":7360:7378  _setPresidentBaned */\n      tag_107\n        /* \"contracts/authority.sol\":7360:7385  _setPresidentBaned(baned) */\n      jump\t// in\n    tag_230:\n        /* \"contracts/authority.sol\":7396:7425  _setPrimeMinisterBaned(baned) */\n      tag_231\n        /* \"contracts/authority.sol\":7419:7424  baned */\n      dup2\n        /* \"contracts/authority.sol\":7396:7418  _setPrimeMinisterBaned */\n      tag_109\n        /* \"contracts/authority.sol\":7396:7425  _setPrimeMinisterBaned(baned) */\n      jump\t// in\n    tag_231:\n        /* \"contracts/authority.sol\":7290:7433  function setPresidentBaned(bool baned) public onlyRepublic {... */\n      pop\n      jump\t// out\n        /* \"contracts/authority.sol\":7178:7282  function getgovernanceVersion() public view returns (uint32) {... */\n    tag_73:\n        /* \"contracts/authority.sol\":7231:7237  uint32 */\n      0x00\n        /* \"contracts/authority.sol\":7257:7268  _governance */\n      0x06\n        /* \"contracts/authority.sol\":7257:7274  _governance.nonce */\n      0x00\n      add\n      0x15\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffff\n      and\n        /* \"contracts/authority.sol\":7250:7274  return _governance.nonce */\n      swap1\n      pop\n        /* \"contracts/authority.sol\":7178:7282  function getgovernanceVersion() public view returns (uint32) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/authority.sol\":4310:4424  function getRepublicAddress() public view returns (address RG) {... */\n    tag_77:\n        /* \"contracts/authority.sol\":4361:4371  address RG */\n      0x00\n        /* \"contracts/authority.sol\":4395:4404  _Republic */\n      0x07\n        /* \"contracts/authority.sol\":4395:4412  _Republic.roleAdd */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/authority.sol\":4388:4412  return _Republic.roleAdd */\n      swap1\n      pop\n        /* \"contracts/authority.sol\":4310:4424  function getRepublicAddress() public view returns (address RG) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/authority.sol\":6320:6635  function setPendingGovernanceContractAddress(address newGCAddress) public onlyRepublic {... */\n    tag_81:\n        /* \"contracts/authority.sol\":1956:1971  block.timestamp */\n      timestamp\n        /* \"contracts/authority.sol\":1936:1953  TimeFirstElection */\n      immutable(\"0x243d3ba375e91e040b8b9e2bbbb1688b2b311eacea842eebda952071560e7854\")\n        /* \"contracts/authority.sol\":1936:1971  TimeFirstElection < block.timestamp */\n      0xffffffffffff\n      and\n      lt\n        /* \"contracts/authority.sol\":1932:2159  if (TimeFirstElection < block.timestamp) {... */\n      iszero\n      tag_235\n      jumpi\n        /* \"contracts/authority.sol\":2010:2030  getRepublicAddress() */\n      tag_236\n        /* \"contracts/authority.sol\":2010:2028  getRepublicAddress */\n      tag_77\n        /* \"contracts/authority.sol\":2010:2030  getRepublicAddress() */\n      jump\t// in\n    tag_236:\n        /* \"contracts/authority.sol\":1996:2030  msg.sender == getRepublicAddress() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/authority.sol\":1996:2006  msg.sender */\n      caller\n        /* \"contracts/authority.sol\":1996:2030  msg.sender == getRepublicAddress() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/authority.sol\":1988:2054  require(msg.sender == getRepublicAddress(), \"Access is not valid\") */\n      tag_237\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_238\n      swap1\n      tag_98\n      jump\t// in\n    tag_238:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_237:\n        /* \"contracts/authority.sol\":1932:2159  if (TimeFirstElection < block.timestamp) {... */\n      jump(tag_239)\n    tag_235:\n        /* \"contracts/authority.sol\":2096:2113  getPresidentAdd() */\n      tag_240\n        /* \"contracts/authority.sol\":2096:2111  getPresidentAdd */\n      tag_57\n        /* \"contracts/authority.sol\":2096:2113  getPresidentAdd() */\n      jump\t// in\n    tag_240:\n        /* \"contracts/authority.sol\":2082:2113  msg.sender == getPresidentAdd() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/authority.sol\":2082:2092  msg.sender */\n      caller\n        /* \"contracts/authority.sol\":2082:2113  msg.sender == getPresidentAdd() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/authority.sol\":2082:2135  msg.sender == getPresidentAdd() && !getPresidentBan() */\n      dup1\n      iszero\n      tag_241\n      jumpi\n      pop\n        /* \"contracts/authority.sol\":2118:2135  getPresidentBan() */\n      tag_242\n        /* \"contracts/authority.sol\":2118:2133  getPresidentBan */\n      tag_60\n        /* \"contracts/authority.sol\":2118:2135  getPresidentBan() */\n      jump\t// in\n    tag_242:\n        /* \"contracts/authority.sol\":2117:2135  !getPresidentBan() */\n      iszero\n        /* \"contracts/authority.sol\":2082:2135  msg.sender == getPresidentAdd() && !getPresidentBan() */\n    tag_241:\n        /* \"contracts/authority.sol\":2074:2159  require(msg.sender == getPresidentAdd() && !getPresidentBan(), \"Access is not valid\") */\n      tag_243\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_244\n      swap1\n      tag_98\n      jump\t// in\n    tag_244:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_243:\n        /* \"contracts/authority.sol\":1932:2159  if (TimeFirstElection < block.timestamp) {... */\n    tag_239:\n        /* \"contracts/authority.sol\":6449:6450  0 */\n      0x00\n        /* \"contracts/authority.sol\":6422:6434  newGCAddress */\n      dup2\n        /* \"contracts/authority.sol\":6422:6446  newGCAddress.code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"contracts/authority.sol\":6422:6450  newGCAddress.code.length > 0 */\n      gt\n        /* \"contracts/authority.sol\":6418:6625  if (newGCAddress.code.length > 0) {... */\n      iszero\n      tag_246\n      jumpi\n        /* \"contracts/authority.sol\":6487:6499  newGCAddress */\n      dup1\n        /* \"contracts/authority.sol\":6467:6484  _pendingGCAddress */\n      0x01\n      0x00\n        /* \"contracts/authority.sol\":6467:6499  _pendingGCAddress = newGCAddress */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/authority.sol\":6546:6558  newGCAddress */\n      dup1\n        /* \"contracts/authority.sol\":6519:6559  TheNextGCAddressWasElected(newGCAddress) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xe8d8e3c7c3ebec0c177d0fe22d223f8b5071db39155104808d45027e368ba77a\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/authority.sol\":6418:6625  if (newGCAddress.code.length > 0) {... */\n      jump(tag_247)\n    tag_246:\n        /* \"contracts/authority.sol\":6612:6624  newGCAddress */\n      dup1\n        /* \"contracts/authority.sol\":6586:6625  TheAddressIsNotValidForGC(newGCAddress) */\n      mload(0x40)\n      0x84dbc6cb00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_248\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_248:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/authority.sol\":6418:6625  if (newGCAddress.code.length > 0) {... */\n    tag_247:\n        /* \"contracts/authority.sol\":6320:6635  function setPendingGovernanceContractAddress(address newGCAddress) public onlyRepublic {... */\n      pop\n      jump\t// out\n        /* \"contracts/faykGovernance.sol\":2620:2964  function transferCallerInfo() public {... */\n    tag_83:\n        /* \"contracts/faykGovernance.sol\":2704:2705  0 */\n      0x00\n        /* \"contracts/faykGovernance.sol\":2671:2682  _callerInfo */\n      0x08\n        /* \"contracts/faykGovernance.sol\":2671:2694  _callerInfo[msg.sender] */\n      0x00\n        /* \"contracts/faykGovernance.sol\":2683:2693  msg.sender */\n      caller\n        /* \"contracts/faykGovernance.sol\":2671:2694  _callerInfo[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/faykGovernance.sol\":2671:2701  _callerInfo[msg.sender].roleId */\n      0x01\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffff\n      and\n        /* \"contracts/faykGovernance.sol\":2671:2705  _callerInfo[msg.sender].roleId > 0 */\n      0xffffffff\n      and\n      gt\n        /* \"contracts/faykGovernance.sol\":2671:2743  _callerInfo[msg.sender].roleId > 0 && _callerInfo[msg.sender].since == 0 */\n      dup1\n      iszero\n      tag_250\n      jumpi\n      pop\n        /* \"contracts/faykGovernance.sol\":2742:2743  0 */\n      0x00\n        /* \"contracts/faykGovernance.sol\":2709:2720  _callerInfo */\n      0x08\n        /* \"contracts/faykGovernance.sol\":2709:2732  _callerInfo[msg.sender] */\n      0x00\n        /* \"contracts/faykGovernance.sol\":2721:2731  msg.sender */\n      caller\n        /* \"contracts/faykGovernance.sol\":2709:2732  _callerInfo[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/faykGovernance.sol\":2709:2738  _callerInfo[msg.sender].since */\n      0x01\n      add\n      0x04\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffff\n      and\n        /* \"contracts/faykGovernance.sol\":2709:2743  _callerInfo[msg.sender].since == 0 */\n      0xffffffffffff\n      and\n      eq\n        /* \"contracts/faykGovernance.sol\":2671:2743  _callerInfo[msg.sender].roleId > 0 && _callerInfo[msg.sender].since == 0 */\n    tag_250:\n        /* \"contracts/faykGovernance.sol\":2667:2956  if (_callerInfo[msg.sender].roleId > 0 && _callerInfo[msg.sender].since == 0) {... */\n      iszero\n      tag_251\n      jumpi\n        /* \"contracts/faykGovernance.sol\":2756:2767  _callerInfo */\n      0x08\n        /* \"contracts/faykGovernance.sol\":2756:2779  _callerInfo[msg.sender] */\n      0x00\n        /* \"contracts/faykGovernance.sol\":2768:2778  msg.sender */\n      caller\n        /* \"contracts/faykGovernance.sol\":2756:2779  _callerInfo[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      pop\n        /* \"contracts/faykGovernance.sol\":2875:2886  _callerInfo */\n      0x08\n        /* \"contracts/faykGovernance.sol\":2875:2898  _callerInfo[msg.sender] */\n      0x00\n        /* \"contracts/faykGovernance.sol\":2887:2897  msg.sender */\n      caller\n        /* \"contracts/faykGovernance.sol\":2875:2898  _callerInfo[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/faykGovernance.sol\":2875:2905  _callerInfo[msg.sender].roleId */\n      0x01\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffff\n      and\n        /* \"contracts/faykGovernance.sol\":2797:2906  AnOfficialWasConfirmed(msg.sender, _callerInfo[msg.sender].peopleName_satrap, _callerInfo[msg.sender].roleId) */\n      0xffffffff\n      and\n        /* \"contracts/faykGovernance.sol\":2832:2843  _callerInfo */\n      0x08\n        /* \"contracts/faykGovernance.sol\":2832:2855  _callerInfo[msg.sender] */\n      0x00\n        /* \"contracts/faykGovernance.sol\":2844:2854  msg.sender */\n      caller\n        /* \"contracts/faykGovernance.sol\":2832:2855  _callerInfo[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/faykGovernance.sol\":2832:2873  _callerInfo[msg.sender].peopleName_satrap */\n      0x00\n      add\n      sload\n        /* \"contracts/faykGovernance.sol\":2820:2830  msg.sender */\n      caller\n        /* \"contracts/faykGovernance.sol\":2797:2906  AnOfficialWasConfirmed(msg.sender, _callerInfo[msg.sender].peopleName_satrap, _callerInfo[msg.sender].roleId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x04a5552f2d245eb6039b03d3a4f2aeeae275c3d6dc08931b837b5715fbbe5199\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"contracts/faykGovernance.sol\":2667:2956  if (_callerInfo[msg.sender].roleId > 0 && _callerInfo[msg.sender].since == 0) {... */\n      jump(tag_252)\n    tag_251:\n        /* \"contracts/faykGovernance.sol\":2932:2956  AccessOnlyForThePendig() */\n      mload(0x40)\n      0x6c4360f000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/faykGovernance.sol\":2667:2956  if (_callerInfo[msg.sender].roleId > 0 && _callerInfo[msg.sender].since == 0) {... */\n    tag_252:\n        /* \"contracts/faykGovernance.sol\":2620:2964  function transferCallerInfo() public {... */\n      jump\t// out\n        /* \"contracts/authority.sol\":4436:4545  function getAuthorityAddress() public view returns (address) {... */\n    tag_85:\n        /* \"contracts/authority.sol\":4488:4495  address */\n      0x00\n        /* \"contracts/authority.sol\":4528:4532  this */\n      address\n        /* \"contracts/authority.sol\":4512:4533  return  address(this) */\n      swap1\n      pop\n        /* \"contracts/authority.sol\":4436:4545  function getAuthorityAddress() public view returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/authority.sol\":6206:6310  function getPrimeMinisterBan() public view returns (bool) {... */\n    tag_88:\n        /* \"contracts/authority.sol\":6258:6262  bool */\n      0x00\n        /* \"contracts/authority.sol\":6282:6296  _primeMinister */\n      0x05\n        /* \"contracts/authority.sol\":6282:6302  _primeMinister.baned */\n      0x00\n      add\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/authority.sol\":6275:6302  return _primeMinister.baned */\n      swap1\n      pop\n        /* \"contracts/authority.sol\":6206:6310  function getPrimeMinisterBan() public view returns (bool) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/authority.sol\":6643:7062  function transferGovernanceContractAddress(address pendingGCAdd) public onlyPresident {... */\n    tag_92:\n        /* \"contracts/authority.sol\":2247:2264  getPresidentAdd() */\n      tag_256\n        /* \"contracts/authority.sol\":2247:2262  getPresidentAdd */\n      tag_57\n        /* \"contracts/authority.sol\":2247:2264  getPresidentAdd() */\n      jump\t// in\n    tag_256:\n        /* \"contracts/authority.sol\":2233:2264  msg.sender == getPresidentAdd() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/authority.sol\":2233:2243  msg.sender */\n      caller\n        /* \"contracts/authority.sol\":2233:2264  msg.sender == getPresidentAdd() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/authority.sol\":2233:2286  msg.sender == getPresidentAdd() && !getPresidentBan() */\n      dup1\n      iszero\n      tag_257\n      jumpi\n      pop\n        /* \"contracts/authority.sol\":2269:2286  getPresidentBan() */\n      tag_258\n        /* \"contracts/authority.sol\":2269:2284  getPresidentBan */\n      tag_60\n        /* \"contracts/authority.sol\":2269:2286  getPresidentBan() */\n      jump\t// in\n    tag_258:\n        /* \"contracts/authority.sol\":2268:2286  !getPresidentBan() */\n      iszero\n        /* \"contracts/authority.sol\":2233:2286  msg.sender == getPresidentAdd() && !getPresidentBan() */\n    tag_257:\n        /* \"contracts/authority.sol\":2225:2310  require(msg.sender == getPresidentAdd() && !getPresidentBan(), \"Access is not valid\") */\n      tag_259\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_260\n      swap1\n      tag_98\n      jump\t// in\n    tag_260:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_259:\n        /* \"contracts/authority.sol\":6765:6777  pendingGCAdd */\n      dup1\n        /* \"contracts/authority.sol\":6744:6777  _pendingGCAddress == pendingGCAdd */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/authority.sol\":6744:6761  _pendingGCAddress */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/authority.sol\":6744:6777  _pendingGCAddress == pendingGCAdd */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/authority.sol\":6740:7054  if (_pendingGCAddress == pendingGCAdd) {... */\n      tag_262\n      jumpi\n        /* \"contracts/authority.sol\":6801:6818  _pendingGCAddress */\n      0x01\n      0x00\n        /* \"contracts/authority.sol\":6794:6818  delete _pendingGCAddress */\n      0x0100\n      exp\n      dup2\n      sload\n      swap1\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      sstore\n        /* \"contracts/authority.sol\":6855:6867  pendingGCAdd */\n      dup1\n        /* \"contracts/authority.sol\":6833:6844  _governance */\n      0x06\n        /* \"contracts/authority.sol\":6833:6852  _governance.roleAdd */\n      0x00\n      add\n      0x00\n        /* \"contracts/authority.sol\":6833:6867  _governance.roleAdd = pendingGCAdd */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/authority.sol\":6882:6893  _governance */\n      0x06\n        /* \"contracts/authority.sol\":6882:6899  _governance.nonce */\n      0x00\n      add\n      0x15\n        /* \"contracts/authority.sol\":6882:6901  _governance.nonce++ */\n      dup2\n      dup2\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffff\n      and\n      dup1\n      swap3\n      swap2\n      swap1\n      tag_263\n      swap1\n      tag_121\n      jump\t// in\n    tag_263:\n      swap2\n      swap1\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      pop\n        /* \"contracts/authority.sol\":6970:6981  _governance */\n      0x06\n        /* \"contracts/authority.sol\":6970:6987  _governance.nonce */\n      0x00\n      add\n      0x15\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffff\n      and\n        /* \"contracts/authority.sol\":6921:6988  TheNewGCAddressWasConfirmed(_governance.roleAdd, _governance.nonce) */\n      0xffffffff\n      and\n        /* \"contracts/authority.sol\":6949:6960  _governance */\n      0x06\n        /* \"contracts/authority.sol\":6949:6968  _governance.roleAdd */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/authority.sol\":6921:6988  TheNewGCAddressWasConfirmed(_governance.roleAdd, _governance.nonce) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x5e86008a8467d1efccfe6cb6bd49ba7278d6af2745a1e6994e443322a4237093\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/authority.sol\":6740:7054  if (_pendingGCAddress == pendingGCAdd) {... */\n      jump(tag_264)\n    tag_262:\n        /* \"contracts/authority.sol\":7041:7053  pendingGCAdd */\n      dup1\n        /* \"contracts/authority.sol\":7015:7054  TheAddressIsNotValidForGC(pendingGCAdd) */\n      mload(0x40)\n      0x84dbc6cb00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_265\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_265:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/authority.sol\":6740:7054  if (_pendingGCAddress == pendingGCAdd) {... */\n    tag_264:\n        /* \"contracts/authority.sol\":6643:7062  function transferGovernanceContractAddress(address pendingGCAdd) public onlyPresident {... */\n      pop\n      jump\t// out\n        /* \"contracts/authority.sol\":7788:7879  function _setPresidentBaned(bool baned) private {... */\n    tag_107:\n        /* \"contracts/authority.sol\":7866:7871  baned */\n      dup1\n        /* \"contracts/authority.sol\":7847:7857  _president */\n      0x04\n        /* \"contracts/authority.sol\":7847:7863  _president.baned */\n      0x00\n      add\n      0x14\n        /* \"contracts/authority.sol\":7847:7871  _president.baned = baned */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/authority.sol\":7788:7879  function _setPresidentBaned(bool baned) private {... */\n      pop\n      jump\t// out\n        /* \"contracts/authority.sol\":7887:7986  function _setPrimeMinisterBaned(bool baned) private {... */\n    tag_109:\n        /* \"contracts/authority.sol\":7973:7978  baned */\n      dup1\n        /* \"contracts/authority.sol\":7950:7964  _primeMinister */\n      0x05\n        /* \"contracts/authority.sol\":7950:7970  _primeMinister.baned */\n      0x00\n      add\n      0x14\n        /* \"contracts/authority.sol\":7950:7978  _primeMinister.baned = baned */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/authority.sol\":7887:7986  function _setPrimeMinisterBaned(bool baned) private {... */\n      pop\n      jump\t// out\n        /* \"contracts/authority.sol\":7560:7780  function _transferRepublicAddress(address RAddress) private {... */\n    tag_161:\n        /* \"contracts/authority.sol\":7651:7659  RAddress */\n      dup1\n        /* \"contracts/authority.sol\":7631:7640  _Republic */\n      0x07\n        /* \"contracts/authority.sol\":7631:7648  _Republic.roleAdd */\n      0x00\n      add\n      0x00\n        /* \"contracts/authority.sol\":7631:7659  _Republic.roleAdd = RAddress */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/authority.sol\":7670:7679  _Republic */\n      0x07\n        /* \"contracts/authority.sol\":7670:7685  _Republic.nonce */\n      0x00\n      add\n      0x15\n        /* \"contracts/authority.sol\":7670:7687  _Republic.nonce++ */\n      dup2\n      dup2\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffff\n      and\n      dup1\n      swap3\n      swap2\n      swap1\n      tag_269\n      swap1\n      tag_121\n      jump\t// in\n    tag_269:\n      swap2\n      swap1\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      pop\n        /* \"contracts/authority.sol\":7756:7765  _Republic */\n      0x07\n        /* \"contracts/authority.sol\":7756:7771  _Republic.nonce */\n      0x00\n      add\n      0x15\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffff\n      and\n        /* \"contracts/authority.sol\":7703:7772  TheNewRepublicAddressWasConfirmed(_Republic.roleAdd, _Republic.nonce) */\n      0xffffffff\n      and\n        /* \"contracts/authority.sol\":7737:7746  _Republic */\n      0x07\n        /* \"contracts/authority.sol\":7737:7754  _Republic.roleAdd */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/authority.sol\":7703:7772  TheNewRepublicAddressWasConfirmed(_Republic.roleAdd, _Republic.nonce) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xf7f7c26682668c39fd8c6dbca125bd9466e743b9e38acc3240867c139cd93c30\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/authority.sol\":7560:7780  function _transferRepublicAddress(address RAddress) private {... */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_271:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:460   */\n    tag_273:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":411:453   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":404:409   */\n      dup3\n        /* \"#utility.yul\":400:454   */\n      and\n        /* \"#utility.yul\":389:454   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:460   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":466:562   */\n    tag_274:\n        /* \"#utility.yul\":503:510   */\n      0x00\n        /* \"#utility.yul\":532:556   */\n      tag_306\n        /* \"#utility.yul\":550:555   */\n      dup3\n        /* \"#utility.yul\":532:556   */\n      tag_273\n      jump\t// in\n    tag_306:\n        /* \"#utility.yul\":521:556   */\n      swap1\n      pop\n        /* \"#utility.yul\":466:562   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":568:690   */\n    tag_275:\n        /* \"#utility.yul\":641:665   */\n      tag_308\n        /* \"#utility.yul\":659:664   */\n      dup2\n        /* \"#utility.yul\":641:665   */\n      tag_274\n      jump\t// in\n    tag_308:\n        /* \"#utility.yul\":634:639   */\n      dup2\n        /* \"#utility.yul\":631:666   */\n      eq\n        /* \"#utility.yul\":621:684   */\n      tag_309\n      jumpi\n        /* \"#utility.yul\":680:681   */\n      0x00\n        /* \"#utility.yul\":677:678   */\n      dup1\n        /* \"#utility.yul\":670:682   */\n      revert\n        /* \"#utility.yul\":621:684   */\n    tag_309:\n        /* \"#utility.yul\":568:690   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":696:835   */\n    tag_276:\n        /* \"#utility.yul\":742:747   */\n      0x00\n        /* \"#utility.yul\":780:786   */\n      dup2\n        /* \"#utility.yul\":767:787   */\n      calldataload\n        /* \"#utility.yul\":758:787   */\n      swap1\n      pop\n        /* \"#utility.yul\":796:829   */\n      tag_311\n        /* \"#utility.yul\":823:828   */\n      dup2\n        /* \"#utility.yul\":796:829   */\n      tag_275\n      jump\t// in\n    tag_311:\n        /* \"#utility.yul\":696:835   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":841:1170   */\n    tag_29:\n        /* \"#utility.yul\":900:906   */\n      0x00\n        /* \"#utility.yul\":949:951   */\n      0x20\n        /* \"#utility.yul\":937:946   */\n      dup3\n        /* \"#utility.yul\":928:935   */\n      dup5\n        /* \"#utility.yul\":924:947   */\n      sub\n        /* \"#utility.yul\":920:952   */\n      slt\n        /* \"#utility.yul\":917:1036   */\n      iszero\n      tag_313\n      jumpi\n        /* \"#utility.yul\":955:1034   */\n      tag_314\n      tag_271\n      jump\t// in\n    tag_314:\n        /* \"#utility.yul\":917:1036   */\n    tag_313:\n        /* \"#utility.yul\":1075:1076   */\n      0x00\n        /* \"#utility.yul\":1100:1153   */\n      tag_315\n        /* \"#utility.yul\":1145:1152   */\n      dup5\n        /* \"#utility.yul\":1136:1142   */\n      dup3\n        /* \"#utility.yul\":1125:1134   */\n      dup6\n        /* \"#utility.yul\":1121:1143   */\n      add\n        /* \"#utility.yul\":1100:1153   */\n      tag_276\n      jump\t// in\n    tag_315:\n        /* \"#utility.yul\":1090:1153   */\n      swap2\n      pop\n        /* \"#utility.yul\":1046:1163   */\n      pop\n        /* \"#utility.yul\":841:1170   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1176:1266   */\n    tag_277:\n        /* \"#utility.yul\":1210:1217   */\n      0x00\n        /* \"#utility.yul\":1253:1258   */\n      dup2\n        /* \"#utility.yul\":1246:1259   */\n      iszero\n        /* \"#utility.yul\":1239:1260   */\n      iszero\n        /* \"#utility.yul\":1228:1260   */\n      swap1\n      pop\n        /* \"#utility.yul\":1176:1266   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1272:1388   */\n    tag_278:\n        /* \"#utility.yul\":1342:1363   */\n      tag_318\n        /* \"#utility.yul\":1357:1362   */\n      dup2\n        /* \"#utility.yul\":1342:1363   */\n      tag_277\n      jump\t// in\n    tag_318:\n        /* \"#utility.yul\":1335:1340   */\n      dup2\n        /* \"#utility.yul\":1332:1364   */\n      eq\n        /* \"#utility.yul\":1322:1382   */\n      tag_319\n      jumpi\n        /* \"#utility.yul\":1378:1379   */\n      0x00\n        /* \"#utility.yul\":1375:1376   */\n      dup1\n        /* \"#utility.yul\":1368:1380   */\n      revert\n        /* \"#utility.yul\":1322:1382   */\n    tag_319:\n        /* \"#utility.yul\":1272:1388   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1394:1527   */\n    tag_279:\n        /* \"#utility.yul\":1437:1442   */\n      0x00\n        /* \"#utility.yul\":1475:1481   */\n      dup2\n        /* \"#utility.yul\":1462:1482   */\n      calldataload\n        /* \"#utility.yul\":1453:1482   */\n      swap1\n      pop\n        /* \"#utility.yul\":1491:1521   */\n      tag_321\n        /* \"#utility.yul\":1515:1520   */\n      dup2\n        /* \"#utility.yul\":1491:1521   */\n      tag_278\n      jump\t// in\n    tag_321:\n        /* \"#utility.yul\":1394:1527   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1533:1856   */\n    tag_33:\n        /* \"#utility.yul\":1589:1595   */\n      0x00\n        /* \"#utility.yul\":1638:1640   */\n      0x20\n        /* \"#utility.yul\":1626:1635   */\n      dup3\n        /* \"#utility.yul\":1617:1624   */\n      dup5\n        /* \"#utility.yul\":1613:1636   */\n      sub\n        /* \"#utility.yul\":1609:1641   */\n      slt\n        /* \"#utility.yul\":1606:1725   */\n      iszero\n      tag_323\n      jumpi\n        /* \"#utility.yul\":1644:1723   */\n      tag_324\n      tag_271\n      jump\t// in\n    tag_324:\n        /* \"#utility.yul\":1606:1725   */\n    tag_323:\n        /* \"#utility.yul\":1764:1765   */\n      0x00\n        /* \"#utility.yul\":1789:1839   */\n      tag_325\n        /* \"#utility.yul\":1831:1838   */\n      dup5\n        /* \"#utility.yul\":1822:1828   */\n      dup3\n        /* \"#utility.yul\":1811:1820   */\n      dup6\n        /* \"#utility.yul\":1807:1829   */\n      add\n        /* \"#utility.yul\":1789:1839   */\n      tag_279\n      jump\t// in\n    tag_325:\n        /* \"#utility.yul\":1779:1839   */\n      swap2\n      pop\n        /* \"#utility.yul\":1735:1849   */\n      pop\n        /* \"#utility.yul\":1533:1856   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1862:1939   */\n    tag_280:\n        /* \"#utility.yul\":1899:1906   */\n      0x00\n        /* \"#utility.yul\":1928:1933   */\n      dup2\n        /* \"#utility.yul\":1917:1933   */\n      swap1\n      pop\n        /* \"#utility.yul\":1862:1939   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1945:2067   */\n    tag_281:\n        /* \"#utility.yul\":2018:2042   */\n      tag_328\n        /* \"#utility.yul\":2036:2041   */\n      dup2\n        /* \"#utility.yul\":2018:2042   */\n      tag_280\n      jump\t// in\n    tag_328:\n        /* \"#utility.yul\":2011:2016   */\n      dup2\n        /* \"#utility.yul\":2008:2043   */\n      eq\n        /* \"#utility.yul\":1998:2061   */\n      tag_329\n      jumpi\n        /* \"#utility.yul\":2057:2058   */\n      0x00\n        /* \"#utility.yul\":2054:2055   */\n      dup1\n        /* \"#utility.yul\":2047:2059   */\n      revert\n        /* \"#utility.yul\":1998:2061   */\n    tag_329:\n        /* \"#utility.yul\":1945:2067   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2073:2212   */\n    tag_282:\n        /* \"#utility.yul\":2119:2124   */\n      0x00\n        /* \"#utility.yul\":2157:2163   */\n      dup2\n        /* \"#utility.yul\":2144:2164   */\n      calldataload\n        /* \"#utility.yul\":2135:2164   */\n      swap1\n      pop\n        /* \"#utility.yul\":2173:2206   */\n      tag_331\n        /* \"#utility.yul\":2200:2205   */\n      dup2\n        /* \"#utility.yul\":2173:2206   */\n      tag_281\n      jump\t// in\n    tag_331:\n        /* \"#utility.yul\":2073:2212   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2218:2311   */\n    tag_283:\n        /* \"#utility.yul\":2254:2261   */\n      0x00\n        /* \"#utility.yul\":2294:2304   */\n      0xffffffff\n        /* \"#utility.yul\":2287:2292   */\n      dup3\n        /* \"#utility.yul\":2283:2305   */\n      and\n        /* \"#utility.yul\":2272:2305   */\n      swap1\n      pop\n        /* \"#utility.yul\":2218:2311   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2317:2437   */\n    tag_284:\n        /* \"#utility.yul\":2389:2412   */\n      tag_334\n        /* \"#utility.yul\":2406:2411   */\n      dup2\n        /* \"#utility.yul\":2389:2412   */\n      tag_283\n      jump\t// in\n    tag_334:\n        /* \"#utility.yul\":2382:2387   */\n      dup2\n        /* \"#utility.yul\":2379:2413   */\n      eq\n        /* \"#utility.yul\":2369:2431   */\n      tag_335\n      jumpi\n        /* \"#utility.yul\":2427:2428   */\n      0x00\n        /* \"#utility.yul\":2424:2425   */\n      dup1\n        /* \"#utility.yul\":2417:2429   */\n      revert\n        /* \"#utility.yul\":2369:2431   */\n    tag_335:\n        /* \"#utility.yul\":2317:2437   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2443:2580   */\n    tag_285:\n        /* \"#utility.yul\":2488:2493   */\n      0x00\n        /* \"#utility.yul\":2526:2532   */\n      dup2\n        /* \"#utility.yul\":2513:2533   */\n      calldataload\n        /* \"#utility.yul\":2504:2533   */\n      swap1\n      pop\n        /* \"#utility.yul\":2542:2574   */\n      tag_337\n        /* \"#utility.yul\":2568:2573   */\n      dup2\n        /* \"#utility.yul\":2542:2574   */\n      tag_284\n      jump\t// in\n    tag_337:\n        /* \"#utility.yul\":2443:2580   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2586:2683   */\n    tag_286:\n        /* \"#utility.yul\":2622:2629   */\n      0x00\n        /* \"#utility.yul\":2662:2676   */\n      0xffffffffffff\n        /* \"#utility.yul\":2655:2660   */\n      dup3\n        /* \"#utility.yul\":2651:2677   */\n      and\n        /* \"#utility.yul\":2640:2677   */\n      swap1\n      pop\n        /* \"#utility.yul\":2586:2683   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2689:2809   */\n    tag_287:\n        /* \"#utility.yul\":2761:2784   */\n      tag_340\n        /* \"#utility.yul\":2778:2783   */\n      dup2\n        /* \"#utility.yul\":2761:2784   */\n      tag_286\n      jump\t// in\n    tag_340:\n        /* \"#utility.yul\":2754:2759   */\n      dup2\n        /* \"#utility.yul\":2751:2785   */\n      eq\n        /* \"#utility.yul\":2741:2803   */\n      tag_341\n      jumpi\n        /* \"#utility.yul\":2799:2800   */\n      0x00\n        /* \"#utility.yul\":2796:2797   */\n      dup1\n        /* \"#utility.yul\":2789:2801   */\n      revert\n        /* \"#utility.yul\":2741:2803   */\n    tag_341:\n        /* \"#utility.yul\":2689:2809   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2815:2952   */\n    tag_288:\n        /* \"#utility.yul\":2860:2865   */\n      0x00\n        /* \"#utility.yul\":2898:2904   */\n      dup2\n        /* \"#utility.yul\":2885:2905   */\n      calldataload\n        /* \"#utility.yul\":2876:2905   */\n      swap1\n      pop\n        /* \"#utility.yul\":2914:2946   */\n      tag_343\n        /* \"#utility.yul\":2940:2945   */\n      dup2\n        /* \"#utility.yul\":2914:2946   */\n      tag_287\n      jump\t// in\n    tag_343:\n        /* \"#utility.yul\":2815:2952   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2958:3865   */\n    tag_39:\n        /* \"#utility.yul\":3051:3057   */\n      0x00\n        /* \"#utility.yul\":3059:3065   */\n      dup1\n        /* \"#utility.yul\":3067:3073   */\n      0x00\n        /* \"#utility.yul\":3075:3081   */\n      dup1\n        /* \"#utility.yul\":3083:3089   */\n      0x00\n        /* \"#utility.yul\":3132:3135   */\n      0xa0\n        /* \"#utility.yul\":3120:3129   */\n      dup7\n        /* \"#utility.yul\":3111:3118   */\n      dup9\n        /* \"#utility.yul\":3107:3130   */\n      sub\n        /* \"#utility.yul\":3103:3136   */\n      slt\n        /* \"#utility.yul\":3100:3220   */\n      iszero\n      tag_345\n      jumpi\n        /* \"#utility.yul\":3139:3218   */\n      tag_346\n      tag_271\n      jump\t// in\n    tag_346:\n        /* \"#utility.yul\":3100:3220   */\n    tag_345:\n        /* \"#utility.yul\":3259:3260   */\n      0x00\n        /* \"#utility.yul\":3284:3337   */\n      tag_347\n        /* \"#utility.yul\":3329:3336   */\n      dup9\n        /* \"#utility.yul\":3320:3326   */\n      dup3\n        /* \"#utility.yul\":3309:3318   */\n      dup10\n        /* \"#utility.yul\":3305:3327   */\n      add\n        /* \"#utility.yul\":3284:3337   */\n      tag_276\n      jump\t// in\n    tag_347:\n        /* \"#utility.yul\":3274:3337   */\n      swap6\n      pop\n        /* \"#utility.yul\":3230:3347   */\n      pop\n        /* \"#utility.yul\":3386:3388   */\n      0x20\n        /* \"#utility.yul\":3412:3465   */\n      tag_348\n        /* \"#utility.yul\":3457:3464   */\n      dup9\n        /* \"#utility.yul\":3448:3454   */\n      dup3\n        /* \"#utility.yul\":3437:3446   */\n      dup10\n        /* \"#utility.yul\":3433:3455   */\n      add\n        /* \"#utility.yul\":3412:3465   */\n      tag_276\n      jump\t// in\n    tag_348:\n        /* \"#utility.yul\":3402:3465   */\n      swap5\n      pop\n        /* \"#utility.yul\":3357:3475   */\n      pop\n        /* \"#utility.yul\":3514:3516   */\n      0x40\n        /* \"#utility.yul\":3540:3593   */\n      tag_349\n        /* \"#utility.yul\":3585:3592   */\n      dup9\n        /* \"#utility.yul\":3576:3582   */\n      dup3\n        /* \"#utility.yul\":3565:3574   */\n      dup10\n        /* \"#utility.yul\":3561:3583   */\n      add\n        /* \"#utility.yul\":3540:3593   */\n      tag_282\n      jump\t// in\n    tag_349:\n        /* \"#utility.yul\":3530:3593   */\n      swap4\n      pop\n        /* \"#utility.yul\":3485:3603   */\n      pop\n        /* \"#utility.yul\":3642:3644   */\n      0x60\n        /* \"#utility.yul\":3668:3720   */\n      tag_350\n        /* \"#utility.yul\":3712:3719   */\n      dup9\n        /* \"#utility.yul\":3703:3709   */\n      dup3\n        /* \"#utility.yul\":3692:3701   */\n      dup10\n        /* \"#utility.yul\":3688:3710   */\n      add\n        /* \"#utility.yul\":3668:3720   */\n      tag_285\n      jump\t// in\n    tag_350:\n        /* \"#utility.yul\":3658:3720   */\n      swap3\n      pop\n        /* \"#utility.yul\":3613:3730   */\n      pop\n        /* \"#utility.yul\":3769:3772   */\n      0x80\n        /* \"#utility.yul\":3796:3848   */\n      tag_351\n        /* \"#utility.yul\":3840:3847   */\n      dup9\n        /* \"#utility.yul\":3831:3837   */\n      dup3\n        /* \"#utility.yul\":3820:3829   */\n      dup10\n        /* \"#utility.yul\":3816:3838   */\n      add\n        /* \"#utility.yul\":3796:3848   */\n      tag_288\n      jump\t// in\n    tag_351:\n        /* \"#utility.yul\":3786:3848   */\n      swap2\n      pop\n        /* \"#utility.yul\":3740:3858   */\n      pop\n        /* \"#utility.yul\":2958:3865   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      swap1\n      swap4\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3871:3989   */\n    tag_289:\n        /* \"#utility.yul\":3958:3982   */\n      tag_353\n        /* \"#utility.yul\":3976:3981   */\n      dup2\n        /* \"#utility.yul\":3958:3982   */\n      tag_274\n      jump\t// in\n    tag_353:\n        /* \"#utility.yul\":3953:3956   */\n      dup3\n        /* \"#utility.yul\":3946:3983   */\n      mstore\n        /* \"#utility.yul\":3871:3989   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3995:4217   */\n    tag_49:\n        /* \"#utility.yul\":4088:4092   */\n      0x00\n        /* \"#utility.yul\":4126:4128   */\n      0x20\n        /* \"#utility.yul\":4115:4124   */\n      dup3\n        /* \"#utility.yul\":4111:4129   */\n      add\n        /* \"#utility.yul\":4103:4129   */\n      swap1\n      pop\n        /* \"#utility.yul\":4139:4210   */\n      tag_355\n        /* \"#utility.yul\":4207:4208   */\n      0x00\n        /* \"#utility.yul\":4196:4205   */\n      dup4\n        /* \"#utility.yul\":4192:4209   */\n      add\n        /* \"#utility.yul\":4183:4189   */\n      dup5\n        /* \"#utility.yul\":4139:4210   */\n      tag_289\n      jump\t// in\n    tag_355:\n        /* \"#utility.yul\":3995:4217   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4223:4332   */\n    tag_290:\n        /* \"#utility.yul\":4304:4325   */\n      tag_357\n        /* \"#utility.yul\":4319:4324   */\n      dup2\n        /* \"#utility.yul\":4304:4325   */\n      tag_277\n      jump\t// in\n    tag_357:\n        /* \"#utility.yul\":4299:4302   */\n      dup3\n        /* \"#utility.yul\":4292:4326   */\n      mstore\n        /* \"#utility.yul\":4223:4332   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4338:4548   */\n    tag_62:\n        /* \"#utility.yul\":4425:4429   */\n      0x00\n        /* \"#utility.yul\":4463:4465   */\n      0x20\n        /* \"#utility.yul\":4452:4461   */\n      dup3\n        /* \"#utility.yul\":4448:4466   */\n      add\n        /* \"#utility.yul\":4440:4466   */\n      swap1\n      pop\n        /* \"#utility.yul\":4476:4541   */\n      tag_359\n        /* \"#utility.yul\":4538:4539   */\n      0x00\n        /* \"#utility.yul\":4527:4536   */\n      dup4\n        /* \"#utility.yul\":4523:4540   */\n      add\n        /* \"#utility.yul\":4514:4520   */\n      dup5\n        /* \"#utility.yul\":4476:4541   */\n      tag_290\n      jump\t// in\n    tag_359:\n        /* \"#utility.yul\":4338:4548   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4554:4669   */\n    tag_291:\n        /* \"#utility.yul\":4639:4662   */\n      tag_361\n        /* \"#utility.yul\":4656:4661   */\n      dup2\n        /* \"#utility.yul\":4639:4662   */\n      tag_283\n      jump\t// in\n    tag_361:\n        /* \"#utility.yul\":4634:4637   */\n      dup3\n        /* \"#utility.yul\":4627:4663   */\n      mstore\n        /* \"#utility.yul\":4554:4669   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4675:4893   */\n    tag_75:\n        /* \"#utility.yul\":4766:4770   */\n      0x00\n        /* \"#utility.yul\":4804:4806   */\n      0x20\n        /* \"#utility.yul\":4793:4802   */\n      dup3\n        /* \"#utility.yul\":4789:4807   */\n      add\n        /* \"#utility.yul\":4781:4807   */\n      swap1\n      pop\n        /* \"#utility.yul\":4817:4886   */\n      tag_363\n        /* \"#utility.yul\":4883:4884   */\n      0x00\n        /* \"#utility.yul\":4872:4881   */\n      dup4\n        /* \"#utility.yul\":4868:4885   */\n      add\n        /* \"#utility.yul\":4859:4865   */\n      dup5\n        /* \"#utility.yul\":4817:4886   */\n      tag_291\n      jump\t// in\n    tag_363:\n        /* \"#utility.yul\":4675:4893   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4899:5068   */\n    tag_292:\n        /* \"#utility.yul\":4983:4994   */\n      0x00\n        /* \"#utility.yul\":5017:5023   */\n      dup3\n        /* \"#utility.yul\":5012:5015   */\n      dup3\n        /* \"#utility.yul\":5005:5024   */\n      mstore\n        /* \"#utility.yul\":5057:5061   */\n      0x20\n        /* \"#utility.yul\":5052:5055   */\n      dup3\n        /* \"#utility.yul\":5048:5062   */\n      add\n        /* \"#utility.yul\":5033:5062   */\n      swap1\n      pop\n        /* \"#utility.yul\":4899:5068   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5074:5243   */\n    tag_293:\n        /* \"#utility.yul\":5214:5235   */\n      0x416363657373206973206e6f742076616c696400000000000000000000000000\n        /* \"#utility.yul\":5210:5211   */\n      0x00\n        /* \"#utility.yul\":5202:5208   */\n      dup3\n        /* \"#utility.yul\":5198:5212   */\n      add\n        /* \"#utility.yul\":5191:5236   */\n      mstore\n        /* \"#utility.yul\":5074:5243   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5249:5615   */\n    tag_294:\n        /* \"#utility.yul\":5391:5394   */\n      0x00\n        /* \"#utility.yul\":5412:5479   */\n      tag_367\n        /* \"#utility.yul\":5476:5478   */\n      0x13\n        /* \"#utility.yul\":5471:5474   */\n      dup4\n        /* \"#utility.yul\":5412:5479   */\n      tag_292\n      jump\t// in\n    tag_367:\n        /* \"#utility.yul\":5405:5479   */\n      swap2\n      pop\n        /* \"#utility.yul\":5488:5581   */\n      tag_368\n        /* \"#utility.yul\":5577:5580   */\n      dup3\n        /* \"#utility.yul\":5488:5581   */\n      tag_293\n      jump\t// in\n    tag_368:\n        /* \"#utility.yul\":5606:5608   */\n      0x20\n        /* \"#utility.yul\":5601:5604   */\n      dup3\n        /* \"#utility.yul\":5597:5609   */\n      add\n        /* \"#utility.yul\":5590:5609   */\n      swap1\n      pop\n        /* \"#utility.yul\":5249:5615   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5621:6040   */\n    tag_98:\n        /* \"#utility.yul\":5787:5791   */\n      0x00\n        /* \"#utility.yul\":5825:5827   */\n      0x20\n        /* \"#utility.yul\":5814:5823   */\n      dup3\n        /* \"#utility.yul\":5810:5828   */\n      add\n        /* \"#utility.yul\":5802:5828   */\n      swap1\n      pop\n        /* \"#utility.yul\":5874:5883   */\n      dup2\n        /* \"#utility.yul\":5868:5872   */\n      dup2\n        /* \"#utility.yul\":5864:5884   */\n      sub\n        /* \"#utility.yul\":5860:5861   */\n      0x00\n        /* \"#utility.yul\":5849:5858   */\n      dup4\n        /* \"#utility.yul\":5845:5862   */\n      add\n        /* \"#utility.yul\":5838:5885   */\n      mstore\n        /* \"#utility.yul\":5902:6033   */\n      tag_370\n        /* \"#utility.yul\":6028:6032   */\n      dup2\n        /* \"#utility.yul\":5902:6033   */\n      tag_294\n      jump\t// in\n    tag_370:\n        /* \"#utility.yul\":5894:6033   */\n      swap1\n      pop\n        /* \"#utility.yul\":5621:6040   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6046:6226   */\n    tag_295:\n        /* \"#utility.yul\":6094:6171   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6091:6092   */\n      0x00\n        /* \"#utility.yul\":6084:6172   */\n      mstore\n        /* \"#utility.yul\":6191:6195   */\n      0x11\n        /* \"#utility.yul\":6188:6189   */\n      0x04\n        /* \"#utility.yul\":6181:6196   */\n      mstore\n        /* \"#utility.yul\":6215:6219   */\n      0x24\n        /* \"#utility.yul\":6212:6213   */\n      0x00\n        /* \"#utility.yul\":6205:6220   */\n      revert\n        /* \"#utility.yul\":6232:6407   */\n    tag_121:\n        /* \"#utility.yul\":6270:6273   */\n      0x00\n        /* \"#utility.yul\":6293:6316   */\n      tag_373\n        /* \"#utility.yul\":6310:6315   */\n      dup3\n        /* \"#utility.yul\":6293:6316   */\n      tag_283\n      jump\t// in\n    tag_373:\n        /* \"#utility.yul\":6284:6316   */\n      swap2\n      pop\n        /* \"#utility.yul\":6338:6348   */\n      0xffffffff\n        /* \"#utility.yul\":6331:6336   */\n      dup3\n        /* \"#utility.yul\":6328:6349   */\n      sub\n        /* \"#utility.yul\":6325:6372   */\n      tag_374\n      jumpi\n        /* \"#utility.yul\":6352:6370   */\n      tag_375\n      tag_295\n      jump\t// in\n    tag_375:\n        /* \"#utility.yul\":6325:6372   */\n    tag_374:\n        /* \"#utility.yul\":6399:6400   */\n      0x01\n        /* \"#utility.yul\":6392:6397   */\n      dup3\n        /* \"#utility.yul\":6388:6401   */\n      add\n        /* \"#utility.yul\":6381:6401   */\n      swap1\n      pop\n        /* \"#utility.yul\":6232:6407   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6413:6490   */\n    tag_296:\n        /* \"#utility.yul\":6450:6457   */\n      0x00\n        /* \"#utility.yul\":6479:6484   */\n      dup2\n        /* \"#utility.yul\":6468:6484   */\n      swap1\n      pop\n        /* \"#utility.yul\":6413:6490   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6496:6687   */\n    tag_164:\n        /* \"#utility.yul\":6536:6539   */\n      0x00\n        /* \"#utility.yul\":6555:6575   */\n      tag_378\n        /* \"#utility.yul\":6573:6574   */\n      dup3\n        /* \"#utility.yul\":6555:6575   */\n      tag_296\n      jump\t// in\n    tag_378:\n        /* \"#utility.yul\":6550:6575   */\n      swap2\n      pop\n        /* \"#utility.yul\":6589:6609   */\n      tag_379\n        /* \"#utility.yul\":6607:6608   */\n      dup4\n        /* \"#utility.yul\":6589:6609   */\n      tag_296\n      jump\t// in\n    tag_379:\n        /* \"#utility.yul\":6584:6609   */\n      swap3\n      pop\n        /* \"#utility.yul\":6632:6633   */\n      dup3\n        /* \"#utility.yul\":6629:6630   */\n      dup3\n        /* \"#utility.yul\":6625:6634   */\n      add\n        /* \"#utility.yul\":6618:6634   */\n      swap1\n      pop\n        /* \"#utility.yul\":6653:6656   */\n      dup1\n        /* \"#utility.yul\":6650:6651   */\n      dup3\n        /* \"#utility.yul\":6647:6657   */\n      gt\n        /* \"#utility.yul\":6644:6680   */\n      iszero\n      tag_380\n      jumpi\n        /* \"#utility.yul\":6660:6678   */\n      tag_381\n      tag_295\n      jump\t// in\n    tag_381:\n        /* \"#utility.yul\":6644:6680   */\n    tag_380:\n        /* \"#utility.yul\":6496:6687   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6693:6865   */\n    tag_297:\n        /* \"#utility.yul\":6833:6857   */\n      0x546865207265717565737420697320696e76616c696400000000000000000000\n        /* \"#utility.yul\":6829:6830   */\n      0x00\n        /* \"#utility.yul\":6821:6827   */\n      dup3\n        /* \"#utility.yul\":6817:6831   */\n      add\n        /* \"#utility.yul\":6810:6858   */\n      mstore\n        /* \"#utility.yul\":6693:6865   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6871:7237   */\n    tag_298:\n        /* \"#utility.yul\":7013:7016   */\n      0x00\n        /* \"#utility.yul\":7034:7101   */\n      tag_384\n        /* \"#utility.yul\":7098:7100   */\n      0x16\n        /* \"#utility.yul\":7093:7096   */\n      dup4\n        /* \"#utility.yul\":7034:7101   */\n      tag_292\n      jump\t// in\n    tag_384:\n        /* \"#utility.yul\":7027:7101   */\n      swap2\n      pop\n        /* \"#utility.yul\":7110:7203   */\n      tag_385\n        /* \"#utility.yul\":7199:7202   */\n      dup3\n        /* \"#utility.yul\":7110:7203   */\n      tag_297\n      jump\t// in\n    tag_385:\n        /* \"#utility.yul\":7228:7230   */\n      0x20\n        /* \"#utility.yul\":7223:7226   */\n      dup3\n        /* \"#utility.yul\":7219:7231   */\n      add\n        /* \"#utility.yul\":7212:7231   */\n      swap1\n      pop\n        /* \"#utility.yul\":6871:7237   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7243:7662   */\n    tag_207:\n        /* \"#utility.yul\":7409:7413   */\n      0x00\n        /* \"#utility.yul\":7447:7449   */\n      0x20\n        /* \"#utility.yul\":7436:7445   */\n      dup3\n        /* \"#utility.yul\":7432:7450   */\n      add\n        /* \"#utility.yul\":7424:7450   */\n      swap1\n      pop\n        /* \"#utility.yul\":7496:7505   */\n      dup2\n        /* \"#utility.yul\":7490:7494   */\n      dup2\n        /* \"#utility.yul\":7486:7506   */\n      sub\n        /* \"#utility.yul\":7482:7483   */\n      0x00\n        /* \"#utility.yul\":7471:7480   */\n      dup4\n        /* \"#utility.yul\":7467:7484   */\n      add\n        /* \"#utility.yul\":7460:7507   */\n      mstore\n        /* \"#utility.yul\":7524:7655   */\n      tag_387\n        /* \"#utility.yul\":7650:7654   */\n      dup2\n        /* \"#utility.yul\":7524:7655   */\n      tag_298\n      jump\t// in\n    tag_387:\n        /* \"#utility.yul\":7516:7655   */\n      swap1\n      pop\n        /* \"#utility.yul\":7243:7662   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7668:7872   */\n    tag_214:\n        /* \"#utility.yul\":7707:7711   */\n      0x00\n        /* \"#utility.yul\":7727:7746   */\n      tag_389\n        /* \"#utility.yul\":7744:7745   */\n      dup3\n        /* \"#utility.yul\":7727:7746   */\n      tag_286\n      jump\t// in\n    tag_389:\n        /* \"#utility.yul\":7722:7746   */\n      swap2\n      pop\n        /* \"#utility.yul\":7760:7779   */\n      tag_390\n        /* \"#utility.yul\":7777:7778   */\n      dup4\n        /* \"#utility.yul\":7760:7779   */\n      tag_286\n      jump\t// in\n    tag_390:\n        /* \"#utility.yul\":7755:7779   */\n      swap3\n      pop\n        /* \"#utility.yul\":7803:7804   */\n      dup3\n        /* \"#utility.yul\":7800:7801   */\n      dup3\n        /* \"#utility.yul\":7796:7805   */\n      sub\n        /* \"#utility.yul\":7788:7805   */\n      swap1\n      pop\n        /* \"#utility.yul\":7827:7841   */\n      0xffffffffffff\n        /* \"#utility.yul\":7821:7825   */\n      dup2\n        /* \"#utility.yul\":7818:7842   */\n      gt\n        /* \"#utility.yul\":7815:7865   */\n      iszero\n      tag_391\n      jumpi\n        /* \"#utility.yul\":7845:7863   */\n      tag_392\n      tag_295\n      jump\t// in\n    tag_392:\n        /* \"#utility.yul\":7815:7865   */\n    tag_391:\n        /* \"#utility.yul\":7668:7872   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7878:7993   */\n    tag_299:\n        /* \"#utility.yul\":7963:7986   */\n      tag_394\n        /* \"#utility.yul\":7980:7985   */\n      dup2\n        /* \"#utility.yul\":7963:7986   */\n      tag_286\n      jump\t// in\n    tag_394:\n        /* \"#utility.yul\":7958:7961   */\n      dup3\n        /* \"#utility.yul\":7951:7987   */\n      mstore\n        /* \"#utility.yul\":7878:7993   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7999:8217   */\n    tag_216:\n        /* \"#utility.yul\":8090:8094   */\n      0x00\n        /* \"#utility.yul\":8128:8130   */\n      0x20\n        /* \"#utility.yul\":8117:8126   */\n      dup3\n        /* \"#utility.yul\":8113:8131   */\n      add\n        /* \"#utility.yul\":8105:8131   */\n      swap1\n      pop\n        /* \"#utility.yul\":8141:8210   */\n      tag_396\n        /* \"#utility.yul\":8207:8208   */\n      0x00\n        /* \"#utility.yul\":8196:8205   */\n      dup4\n        /* \"#utility.yul\":8192:8209   */\n      add\n        /* \"#utility.yul\":8183:8189   */\n      dup5\n        /* \"#utility.yul\":8141:8210   */\n      tag_299\n      jump\t// in\n    tag_396:\n        /* \"#utility.yul\":7999:8217   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220df3fc02980fe8842fb4ebb052a2071a101a4d19b2ea7e4a013015f4a6a8d29dd64736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_3292": {
									"entryPoint": null,
									"id": 3292,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"checked_add_t_uint256": {
									"entryPoint": 253,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 199,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint32": {
									"entryPoint": 311,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"increment_t_uint32": {
									"entryPoint": 326,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 208,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:750:5",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "52:32:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "62:16:5",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "73:5:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "34:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "44:7:5",
														"type": ""
													}
												],
												"src": "7:77:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "118:152:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "135:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "138:77:5",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "128:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "128:88:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "128:88:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "232:1:5",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "235:4:5",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "225:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "225:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "225:15:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "256:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "259:4:5",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "249:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "249:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "249:15:5"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "90:180:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "320:147:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "330:25:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "353:1:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "335:17:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "335:20:5"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "330:1:5"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "364:25:5",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "387:1:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "369:17:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "369:20:5"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "364:1:5"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "398:16:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "409:1:5"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "412:1:5"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "405:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "405:9:5"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "398:3:5"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "438:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "440:16:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "440:18:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "440:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "430:1:5"
																	},
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "433:3:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "427:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "427:10:5"
															},
															"nodeType": "YulIf",
															"src": "424:36:5"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "307:1:5",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "310:1:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "316:3:5",
														"type": ""
													}
												],
												"src": "276:191:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "517:49:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "527:33:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "542:5:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "549:10:5",
																		"type": "",
																		"value": "0xffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "538:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "538:22:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "527:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "499:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "509:7:5",
														"type": ""
													}
												],
												"src": "473:93:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "614:133:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "624:32:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "650:5:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint32",
																	"nodeType": "YulIdentifier",
																	"src": "633:16:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "633:23:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "624:5:5"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "690:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "692:16:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "692:18:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "692:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "671:5:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "678:10:5",
																		"type": "",
																		"value": "0xffffffff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "668:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "668:21:5"
															},
															"nodeType": "YulIf",
															"src": "665:47:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "721:20:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "732:5:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "739:1:5",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "728:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "728:13:5"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "721:3:5"
																}
															]
														}
													]
												},
												"name": "increment_t_uint32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "600:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "610:3:5",
														"type": ""
													}
												],
												"src": "572:175:5"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function cleanup_t_uint32(value) -> cleaned {\n        cleaned := and(value, 0xffffffff)\n    }\n\n    function increment_t_uint32(value) -> ret {\n        value := cleanup_t_uint32(value)\n        if eq(value, 0xffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n}\n",
									"id": 5,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60a060405234801562000010575f80fd5b506316a8c80042620000239190620000fd565b65ffffffffffff1660808165ffffffffffff16815250503360045f015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060045f01601581819054906101000a900463ffffffff1680929190620000a29062000146565b91906101000a81548163ffffffff021916908363ffffffff1602179055505062000176565b5f819050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6200010982620000c7565b91506200011683620000c7565b9250828201905080821115620001315762000130620000d0565b5b92915050565b5f63ffffffff82169050919050565b5f620001528262000137565b915063ffffffff82036200016b576200016a620000d0565b5b600182019050919050565b6080516124de620001b95f395f81816103620152818161077f01528181610d6f01528181611048015281816113db015281816116f3015261187e01526124de5ff3fe608060405234801561000f575f80fd5b5060043610610135575f3560e01c80636cf106d7116100b6578063c5a1c5c11161007a578063c5a1c5c1146102c3578063ca4cce68146102e1578063cd01cc28146102fd578063e47a9d4614610307578063e4f3e94714610325578063ee7126c31461034357610135565b80636cf106d7146102315780639c20fe711461024f578063a53da00b1461026b578063b5c09c6814610289578063c387b49c146102a557610135565b80631f72783a116100fd5780631f72783a146101a1578063289b3c0d146101bd57806352e305de146101db578063544fa93e146101f7578063664109971461021357610135565b8063054203bd1461013957806306e99d93146101555780630df4c3901461017157806314c58b511461017b57806318074eee14610197575b5f80fd5b610153600480360381019061014e91906120b2565b61035f565b005b61016f600480360381019061016a9190612112565b61052a565b005b6101796105bc565b005b610195600480360381019061019091906121e4565b61077c565b005b61019f610b94565b005b6101bb60048036038101906101b691906120b2565b610d6c565b005b6101c561101b565b6040516101d2919061226a565b60405180910390f35b6101f560048036038101906101f091906120b2565b611045565b005b610211600480360381019061020c91906120b2565b61128a565b005b61021b611396565b604051610228919061226a565b60405180910390f35b6102396113c0565b6040516102469190612292565b60405180910390f35b610269600480360381019061026491906120b2565b6113d8565b005b6102736116c6565b604051610280919061226a565b60405180910390f35b6102a3600480360381019061029e9190612112565b6116f0565b005b6102ad611836565b6040516102ba91906122ba565b60405180910390f35b6102cb611851565b6040516102d8919061226a565b60405180910390f35b6102fb60048036038101906102f691906120b2565b61187b565b005b610305611a93565b005b61030f611ca5565b60405161031c919061226a565b60405180910390f35b61032d611cac565b60405161033a9190612292565b60405180910390f35b61035d600480360381019061035891906120b2565b611cc4565b005b427f000000000000000000000000000000000000000000000000000000000000000065ffffffffffff16101561040957610397611851565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610404576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103fb9061232d565b60405180910390fd5b610490565b610411611396565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16148015610450575061044e6113c0565b155b61048f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104869061232d565b60405180910390fd5b5b8060025f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506104da6001611f0d565b6104e46001611f2c565b8073ffffffffffffffffffffffffffffffffffffffff167f3553f1f7ef0242113266a8d183b621bb87468c99237f36b1150b6ab3d688b68660405160405180910390a250565b610532611396565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16148015610571575061056f6113c0565b155b6105b0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105a79061232d565b60405180910390fd5b6105b981611f2c565b50565b3373ffffffffffffffffffffffffffffffffffffffff1660025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16036107485760025f6101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690553360045f015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060045f01601581819054906101000a900463ffffffff168092919061069a90612378565b91906101000a81548163ffffffff021916908363ffffffff160217905550506106c25f611f0d565b60045f0160159054906101000a900463ffffffff1663ffffffff1660045f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f05ad9b3688012cd825c1bfb941e4f5afb2558af6af3deaddf01dbb5e85abdaf960405160405180910390a361077a565b6040517f6c4360f000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b427f000000000000000000000000000000000000000000000000000000000000000065ffffffffffff161015610826576107b4611851565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610821576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108189061232d565b60405180910390fd5b6108ad565b61082e6116c6565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614801561086d575061086b611cac565b155b6108ac576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108a39061232d565b60405180910390fd5b5b5f73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff16146109885760085f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8082015f9055600182015f6101000a81549063ffffffff02191690556001820160046101000a81549065ffffffffffff021916905560018201600a6101000a81549065ffffffffffff02191690556001820160106101000a81549065ffffffffffff021916905550505b8260085f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f015414158015610a3257508163ffffffff1660085f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f206001015f9054906101000a900463ffffffff1663ffffffff1614155b15610b8c578260085f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f01819055508160085f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f206001015f6101000a81548163ffffffff021916908363ffffffff1602179055508060085f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2060010160106101000a81548165ffffffffffff021916908365ffffffffffff1602179055508163ffffffff16838573ffffffffffffffffffffffffffffffffffffffff167f5c43a67d451cacaddc8309af64192a4ebee009b9cab5eeb59ec1fb77dd3abcbc60405160405180910390a4610b8d565b5b5050505050565b3373ffffffffffffffffffffffffffffffffffffffff1660035f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603610d385760035f6101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690553360055f015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060055f01601581819054906101000a900463ffffffff1680929190610c7290612378565b91906101000a81548163ffffffff021916908363ffffffff1602179055505060055f0160149054906101000a900460ff1615610cb257610cb15f611f2c565b5b60055f0160159054906101000a900463ffffffff1663ffffffff1660055f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f11e1b985c07e1bf3fec9bfd0bdb8c4a8e870ba2b26aa89fe50a6a19132ca10fd60405160405180910390a3610d6a565b6040517f6c4360f000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b427f000000000000000000000000000000000000000000000000000000000000000065ffffffffffff161015610e1657610da4611851565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610e11576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e089061232d565b60405180910390fd5b610e9d565b610e1e611396565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16148015610e5d5750610e5b6113c0565b155b610e9c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e939061232d565b60405180910390fd5b5b5f8173ffffffffffffffffffffffffffffffffffffffff163b1115610fdb573373ffffffffffffffffffffffffffffffffffffffff1660045f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603610f2057610f1b81611f4b565b610fd6565b6213c68042610f2f91906123ac565b600360146101000a81548165ffffffffffff021916908365ffffffffffff160217905550805f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff167f675b770e821ba4aad20be77c58f912d689226272e805637f42f838a6035eed8660405160405180910390a25b611018565b806040517fc632231500000000000000000000000000000000000000000000000000000000815260040161100f919061226a565b60405180910390fd5b50565b5f60065f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b427f000000000000000000000000000000000000000000000000000000000000000065ffffffffffff1610156110ef5761107d611851565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146110ea576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110e19061232d565b60405180910390fd5b611176565b6110f7611396565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614801561113657506111346113c0565b155b611175576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161116c9061232d565b60405180910390fd5b5b8073ffffffffffffffffffffffffffffffffffffffff165f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff160361124a57600360146101000a81549065ffffffffffff02191690555f806101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690558073ffffffffffffffffffffffffffffffffffffffff167ff299f61c7e493f99b20cb36c587ca903d085d5206bfe4452d295711e372da02960405160405180910390a2611287565b806040517fc632231500000000000000000000000000000000000000000000000000000000815260040161127e919061226a565b60405180910390fd5b50565b611292611396565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480156112d157506112cf6113c0565b155b611310576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113079061232d565b60405180910390fd5b8060035f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff167fff3cad3ee28c342ad5f3d7c8ff8559ee4d21eb48494092b82a1652e443b3420b60405160405180910390a250565b5f60045f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b5f60045f0160149054906101000a900460ff16905090565b427f000000000000000000000000000000000000000000000000000000000000000065ffffffffffff16101561148257611410611851565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461147d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114749061232d565b60405180910390fd5b611509565b61148a611396565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480156114c957506114c76113c0565b155b611508576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114ff9061232d565b60405180910390fd5b5b42600360149054906101000a900465ffffffffffff1665ffffffffffff161015611667575f600360149054906101000a900465ffffffffffff1665ffffffffffff160361158b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161158290612429565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff165f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff160361162557600360146101000a81549065ffffffffffff02191690555f806101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905561162081611f4b565b611662565b806040517fc6322315000000000000000000000000000000000000000000000000000000008152600401611659919061226a565b60405180910390fd5b6116c3565b42600360149054906101000a900465ffffffffffff166116879190612447565b6040517f223a6cbb0000000000000000000000000000000000000000000000000000000081526004016116ba919061248f565b60405180910390fd5b50565b5f60055f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b427f000000000000000000000000000000000000000000000000000000000000000065ffffffffffff16101561179a57611728611851565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611795576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161178c9061232d565b60405180910390fd5b611821565b6117a2611396565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480156117e157506117df6113c0565b155b611820576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016118179061232d565b60405180910390fd5b5b61182a81611f0d565b61183381611f2c565b50565b5f60065f0160159054906101000a900463ffffffff16905090565b5f60075f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b427f000000000000000000000000000000000000000000000000000000000000000065ffffffffffff161015611925576118b3611851565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611920576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016119179061232d565b60405180910390fd5b6119ac565b61192d611396565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614801561196c575061196a6113c0565b155b6119ab576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016119a29061232d565b60405180910390fd5b5b5f8173ffffffffffffffffffffffffffffffffffffffff163b1115611a53578060015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff167fe8d8e3c7c3ebec0c177d0fe22d223f8b5071db39155104808d45027e368ba77a60405160405180910390a2611a90565b806040517f84dbc6cb000000000000000000000000000000000000000000000000000000008152600401611a87919061226a565b60405180910390fd5b50565b5f60085f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f206001015f9054906101000a900463ffffffff1663ffffffff16118015611b5057505f60085f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2060010160049054906101000a900465ffffffffffff1665ffffffffffff16145b15611c715760085f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205060085f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f206001015f9054906101000a900463ffffffff1663ffffffff1660085f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f01543373ffffffffffffffffffffffffffffffffffffffff167f04a5552f2d245eb6039b03d3a4f2aeeae275c3d6dc08931b837b5715fbbe519960405160405180910390a4611ca3565b6040517f6c4360f000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b5f30905090565b5f60055f0160149054906101000a900460ff16905090565b611ccc611396565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16148015611d0b5750611d096113c0565b155b611d4a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611d419061232d565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1660015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603611ecd5760015f6101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690558060065f015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060065f01601581819054906101000a900463ffffffff1680929190611e2890612378565b91906101000a81548163ffffffff021916908363ffffffff1602179055505060065f0160159054906101000a900463ffffffff1663ffffffff1660065f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f5e86008a8467d1efccfe6cb6bd49ba7278d6af2745a1e6994e443322a423709360405160405180910390a3611f0a565b806040517f84dbc6cb000000000000000000000000000000000000000000000000000000008152600401611f01919061226a565b60405180910390fd5b50565b8060045f0160146101000a81548160ff02191690831515021790555050565b8060055f0160146101000a81548160ff02191690831515021790555050565b8060075f015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060075f01601581819054906101000a900463ffffffff1680929190611fb190612378565b91906101000a81548163ffffffff021916908363ffffffff1602179055505060075f0160159054906101000a900463ffffffff1663ffffffff1660075f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167ff7f7c26682668c39fd8c6dbca125bd9466e743b9e38acc3240867c139cd93c3060405160405180910390a350565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61208182612058565b9050919050565b61209181612077565b811461209b575f80fd5b50565b5f813590506120ac81612088565b92915050565b5f602082840312156120c7576120c6612054565b5b5f6120d48482850161209e565b91505092915050565b5f8115159050919050565b6120f1816120dd565b81146120fb575f80fd5b50565b5f8135905061210c816120e8565b92915050565b5f6020828403121561212757612126612054565b5b5f612134848285016120fe565b91505092915050565b5f819050919050565b61214f8161213d565b8114612159575f80fd5b50565b5f8135905061216a81612146565b92915050565b5f63ffffffff82169050919050565b61218881612170565b8114612192575f80fd5b50565b5f813590506121a38161217f565b92915050565b5f65ffffffffffff82169050919050565b6121c3816121a9565b81146121cd575f80fd5b50565b5f813590506121de816121ba565b92915050565b5f805f805f60a086880312156121fd576121fc612054565b5b5f61220a8882890161209e565b955050602061221b8882890161209e565b945050604061222c8882890161215c565b935050606061223d88828901612195565b925050608061224e888289016121d0565b9150509295509295909350565b61226481612077565b82525050565b5f60208201905061227d5f83018461225b565b92915050565b61228c816120dd565b82525050565b5f6020820190506122a55f830184612283565b92915050565b6122b481612170565b82525050565b5f6020820190506122cd5f8301846122ab565b92915050565b5f82825260208201905092915050565b7f416363657373206973206e6f742076616c6964000000000000000000000000005f82015250565b5f6123176013836122d3565b9150612322826122e3565b602082019050919050565b5f6020820190508181035f8301526123448161230b565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61238282612170565b915063ffffffff82036123985761239761234b565b5b600182019050919050565b5f819050919050565b5f6123b6826123a3565b91506123c1836123a3565b92508282019050808211156123d9576123d861234b565b5b92915050565b7f546865207265717565737420697320696e76616c6964000000000000000000005f82015250565b5f6124136016836122d3565b915061241e826123df565b602082019050919050565b5f6020820190508181035f83015261244081612407565b9050919050565b5f612451826121a9565b915061245c836121a9565b9250828203905065ffffffffffff81111561247a5761247961234b565b5b92915050565b612489816121a9565b82525050565b5f6020820190506124a25f830184612480565b9291505056fea2646970667358221220df3fc02980fe8842fb4ebb052a2071a101a4d19b2ea7e4a013015f4a6a8d29dd64736f6c63430008140033",
							"opcodes": "PUSH1 0xA0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x10 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH4 0x16A8C800 TIMESTAMP PUSH3 0x23 SWAP2 SWAP1 PUSH3 0xFD JUMP JUMPDEST PUSH6 0xFFFFFFFFFFFF AND PUSH1 0x80 DUP2 PUSH6 0xFFFFFFFFFFFF AND DUP2 MSTORE POP POP CALLER PUSH1 0x4 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x4 PUSH0 ADD PUSH1 0x15 DUP2 DUP2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP1 SWAP3 SWAP2 SWAP1 PUSH3 0xA2 SWAP1 PUSH3 0x146 JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP PUSH3 0x176 JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH3 0x109 DUP3 PUSH3 0xC7 JUMP JUMPDEST SWAP2 POP PUSH3 0x116 DUP4 PUSH3 0xC7 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH3 0x131 JUMPI PUSH3 0x130 PUSH3 0xD0 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH4 0xFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0x152 DUP3 PUSH3 0x137 JUMP JUMPDEST SWAP2 POP PUSH4 0xFFFFFFFF DUP3 SUB PUSH3 0x16B JUMPI PUSH3 0x16A PUSH3 0xD0 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH2 0x24DE PUSH3 0x1B9 PUSH0 CODECOPY PUSH0 DUP2 DUP2 PUSH2 0x362 ADD MSTORE DUP2 DUP2 PUSH2 0x77F ADD MSTORE DUP2 DUP2 PUSH2 0xD6F ADD MSTORE DUP2 DUP2 PUSH2 0x1048 ADD MSTORE DUP2 DUP2 PUSH2 0x13DB ADD MSTORE DUP2 DUP2 PUSH2 0x16F3 ADD MSTORE PUSH2 0x187E ADD MSTORE PUSH2 0x24DE PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x135 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6CF106D7 GT PUSH2 0xB6 JUMPI DUP1 PUSH4 0xC5A1C5C1 GT PUSH2 0x7A JUMPI DUP1 PUSH4 0xC5A1C5C1 EQ PUSH2 0x2C3 JUMPI DUP1 PUSH4 0xCA4CCE68 EQ PUSH2 0x2E1 JUMPI DUP1 PUSH4 0xCD01CC28 EQ PUSH2 0x2FD JUMPI DUP1 PUSH4 0xE47A9D46 EQ PUSH2 0x307 JUMPI DUP1 PUSH4 0xE4F3E947 EQ PUSH2 0x325 JUMPI DUP1 PUSH4 0xEE7126C3 EQ PUSH2 0x343 JUMPI PUSH2 0x135 JUMP JUMPDEST DUP1 PUSH4 0x6CF106D7 EQ PUSH2 0x231 JUMPI DUP1 PUSH4 0x9C20FE71 EQ PUSH2 0x24F JUMPI DUP1 PUSH4 0xA53DA00B EQ PUSH2 0x26B JUMPI DUP1 PUSH4 0xB5C09C68 EQ PUSH2 0x289 JUMPI DUP1 PUSH4 0xC387B49C EQ PUSH2 0x2A5 JUMPI PUSH2 0x135 JUMP JUMPDEST DUP1 PUSH4 0x1F72783A GT PUSH2 0xFD JUMPI DUP1 PUSH4 0x1F72783A EQ PUSH2 0x1A1 JUMPI DUP1 PUSH4 0x289B3C0D EQ PUSH2 0x1BD JUMPI DUP1 PUSH4 0x52E305DE EQ PUSH2 0x1DB JUMPI DUP1 PUSH4 0x544FA93E EQ PUSH2 0x1F7 JUMPI DUP1 PUSH4 0x66410997 EQ PUSH2 0x213 JUMPI PUSH2 0x135 JUMP JUMPDEST DUP1 PUSH4 0x54203BD EQ PUSH2 0x139 JUMPI DUP1 PUSH4 0x6E99D93 EQ PUSH2 0x155 JUMPI DUP1 PUSH4 0xDF4C390 EQ PUSH2 0x171 JUMPI DUP1 PUSH4 0x14C58B51 EQ PUSH2 0x17B JUMPI DUP1 PUSH4 0x18074EEE EQ PUSH2 0x197 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x153 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x14E SWAP2 SWAP1 PUSH2 0x20B2 JUMP JUMPDEST PUSH2 0x35F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x16F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x16A SWAP2 SWAP1 PUSH2 0x2112 JUMP JUMPDEST PUSH2 0x52A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x179 PUSH2 0x5BC JUMP JUMPDEST STOP JUMPDEST PUSH2 0x195 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x190 SWAP2 SWAP1 PUSH2 0x21E4 JUMP JUMPDEST PUSH2 0x77C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x19F PUSH2 0xB94 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1BB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B6 SWAP2 SWAP1 PUSH2 0x20B2 JUMP JUMPDEST PUSH2 0xD6C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1C5 PUSH2 0x101B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D2 SWAP2 SWAP1 PUSH2 0x226A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1F0 SWAP2 SWAP1 PUSH2 0x20B2 JUMP JUMPDEST PUSH2 0x1045 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x211 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x20C SWAP2 SWAP1 PUSH2 0x20B2 JUMP JUMPDEST PUSH2 0x128A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x21B PUSH2 0x1396 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x228 SWAP2 SWAP1 PUSH2 0x226A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x239 PUSH2 0x13C0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x246 SWAP2 SWAP1 PUSH2 0x2292 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x269 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x264 SWAP2 SWAP1 PUSH2 0x20B2 JUMP JUMPDEST PUSH2 0x13D8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x273 PUSH2 0x16C6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x280 SWAP2 SWAP1 PUSH2 0x226A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x29E SWAP2 SWAP1 PUSH2 0x2112 JUMP JUMPDEST PUSH2 0x16F0 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2AD PUSH2 0x1836 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2BA SWAP2 SWAP1 PUSH2 0x22BA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2CB PUSH2 0x1851 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2D8 SWAP2 SWAP1 PUSH2 0x226A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2FB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2F6 SWAP2 SWAP1 PUSH2 0x20B2 JUMP JUMPDEST PUSH2 0x187B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x305 PUSH2 0x1A93 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x30F PUSH2 0x1CA5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x31C SWAP2 SWAP1 PUSH2 0x226A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x32D PUSH2 0x1CAC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x33A SWAP2 SWAP1 PUSH2 0x2292 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x35D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x358 SWAP2 SWAP1 PUSH2 0x20B2 JUMP JUMPDEST PUSH2 0x1CC4 JUMP JUMPDEST STOP JUMPDEST TIMESTAMP PUSH32 0x0 PUSH6 0xFFFFFFFFFFFF AND LT ISZERO PUSH2 0x409 JUMPI PUSH2 0x397 PUSH2 0x1851 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x404 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3FB SWAP1 PUSH2 0x232D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x490 JUMP JUMPDEST PUSH2 0x411 PUSH2 0x1396 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x450 JUMPI POP PUSH2 0x44E PUSH2 0x13C0 JUMP JUMPDEST ISZERO JUMPDEST PUSH2 0x48F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x486 SWAP1 PUSH2 0x232D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST DUP1 PUSH1 0x2 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x4DA PUSH1 0x1 PUSH2 0x1F0D JUMP JUMPDEST PUSH2 0x4E4 PUSH1 0x1 PUSH2 0x1F2C JUMP JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x3553F1F7EF0242113266A8D183B621BB87468C99237F36B1150B6AB3D688B686 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH2 0x532 PUSH2 0x1396 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x571 JUMPI POP PUSH2 0x56F PUSH2 0x13C0 JUMP JUMPDEST ISZERO JUMPDEST PUSH2 0x5B0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5A7 SWAP1 PUSH2 0x232D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x5B9 DUP2 PUSH2 0x1F2C JUMP JUMPDEST POP JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x748 JUMPI PUSH1 0x2 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE CALLER PUSH1 0x4 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x4 PUSH0 ADD PUSH1 0x15 DUP2 DUP2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x69A SWAP1 PUSH2 0x2378 JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP PUSH2 0x6C2 PUSH0 PUSH2 0x1F0D JUMP JUMPDEST PUSH1 0x4 PUSH0 ADD PUSH1 0x15 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND PUSH1 0x4 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x5AD9B3688012CD825C1BFB941E4F5AFB2558AF6AF3DEADDF01DBB5E85ABDAF9 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x77A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x6C4360F000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST TIMESTAMP PUSH32 0x0 PUSH6 0xFFFFFFFFFFFF AND LT ISZERO PUSH2 0x826 JUMPI PUSH2 0x7B4 PUSH2 0x1851 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x821 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x818 SWAP1 PUSH2 0x232D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x8AD JUMP JUMPDEST PUSH2 0x82E PUSH2 0x16C6 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x86D JUMPI POP PUSH2 0x86B PUSH2 0x1CAC JUMP JUMPDEST ISZERO JUMPDEST PUSH2 0x8AC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8A3 SWAP1 PUSH2 0x232D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x988 JUMPI PUSH1 0x8 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP1 DUP3 ADD PUSH0 SWAP1 SSTORE PUSH1 0x1 DUP3 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x4 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH6 0xFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0xA PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH6 0xFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x10 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH6 0xFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE POP POP JUMPDEST DUP3 PUSH1 0x8 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD SLOAD EQ ISZERO DUP1 ISZERO PUSH2 0xA32 JUMPI POP DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0x8 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0xB8C JUMPI DUP3 PUSH1 0x8 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x8 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x8 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x10 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH6 0xFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH6 0xFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH4 0xFFFFFFFF AND DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x5C43A67D451CACADDC8309AF64192A4EBEE009B9CAB5EEB59EC1FB77DD3ABCBC PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0xB8D JUMP JUMPDEST JUMPDEST POP POP POP POP POP JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x3 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xD38 JUMPI PUSH1 0x3 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE CALLER PUSH1 0x5 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x5 PUSH0 ADD PUSH1 0x15 DUP2 DUP2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0xC72 SWAP1 PUSH2 0x2378 JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP PUSH1 0x5 PUSH0 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xCB2 JUMPI PUSH2 0xCB1 PUSH0 PUSH2 0x1F2C JUMP JUMPDEST JUMPDEST PUSH1 0x5 PUSH0 ADD PUSH1 0x15 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND PUSH1 0x5 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x11E1B985C07E1BF3FEC9BFD0BDB8C4A8E870BA2B26AA89FE50A6A19132CA10FD PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0xD6A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x6C4360F000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST TIMESTAMP PUSH32 0x0 PUSH6 0xFFFFFFFFFFFF AND LT ISZERO PUSH2 0xE16 JUMPI PUSH2 0xDA4 PUSH2 0x1851 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xE11 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE08 SWAP1 PUSH2 0x232D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xE9D JUMP JUMPDEST PUSH2 0xE1E PUSH2 0x1396 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0xE5D JUMPI POP PUSH2 0xE5B PUSH2 0x13C0 JUMP JUMPDEST ISZERO JUMPDEST PUSH2 0xE9C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE93 SWAP1 PUSH2 0x232D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST PUSH0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT ISZERO PUSH2 0xFDB JUMPI CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x4 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xF20 JUMPI PUSH2 0xF1B DUP2 PUSH2 0x1F4B JUMP JUMPDEST PUSH2 0xFD6 JUMP JUMPDEST PUSH3 0x13C680 TIMESTAMP PUSH2 0xF2F SWAP2 SWAP1 PUSH2 0x23AC JUMP JUMPDEST PUSH1 0x3 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH6 0xFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH6 0xFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x675B770E821BA4AAD20BE77C58F912D689226272E805637F42F838A6035EED86 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMPDEST PUSH2 0x1018 JUMP JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH32 0xC632231500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x100F SWAP2 SWAP1 PUSH2 0x226A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH1 0x6 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST TIMESTAMP PUSH32 0x0 PUSH6 0xFFFFFFFFFFFF AND LT ISZERO PUSH2 0x10EF JUMPI PUSH2 0x107D PUSH2 0x1851 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x10EA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10E1 SWAP1 PUSH2 0x232D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1176 JUMP JUMPDEST PUSH2 0x10F7 PUSH2 0x1396 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x1136 JUMPI POP PUSH2 0x1134 PUSH2 0x13C0 JUMP JUMPDEST ISZERO JUMPDEST PUSH2 0x1175 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x116C SWAP1 PUSH2 0x232D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x124A JUMPI PUSH1 0x3 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH6 0xFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xF299F61C7E493F99B20CB36C587CA903D085D5206BFE4452D295711E372DA029 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH2 0x1287 JUMP JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH32 0xC632231500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x127E SWAP2 SWAP1 PUSH2 0x226A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x1292 PUSH2 0x1396 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x12D1 JUMPI POP PUSH2 0x12CF PUSH2 0x13C0 JUMP JUMPDEST ISZERO JUMPDEST PUSH2 0x1310 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1307 SWAP1 PUSH2 0x232D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x3 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xFF3CAD3EE28C342AD5F3D7C8FF8559EE4D21EB48494092B82A1652E443B3420B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH0 PUSH1 0x4 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x4 PUSH0 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST TIMESTAMP PUSH32 0x0 PUSH6 0xFFFFFFFFFFFF AND LT ISZERO PUSH2 0x1482 JUMPI PUSH2 0x1410 PUSH2 0x1851 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x147D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1474 SWAP1 PUSH2 0x232D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1509 JUMP JUMPDEST PUSH2 0x148A PUSH2 0x1396 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x14C9 JUMPI POP PUSH2 0x14C7 PUSH2 0x13C0 JUMP JUMPDEST ISZERO JUMPDEST PUSH2 0x1508 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14FF SWAP1 PUSH2 0x232D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST TIMESTAMP PUSH1 0x3 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH6 0xFFFFFFFFFFFF AND PUSH6 0xFFFFFFFFFFFF AND LT ISZERO PUSH2 0x1667 JUMPI PUSH0 PUSH1 0x3 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH6 0xFFFFFFFFFFFF AND PUSH6 0xFFFFFFFFFFFF AND SUB PUSH2 0x158B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1582 SWAP1 PUSH2 0x2429 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1625 JUMPI PUSH1 0x3 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH6 0xFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH2 0x1620 DUP2 PUSH2 0x1F4B JUMP JUMPDEST PUSH2 0x1662 JUMP JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH32 0xC632231500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1659 SWAP2 SWAP1 PUSH2 0x226A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x16C3 JUMP JUMPDEST TIMESTAMP PUSH1 0x3 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH6 0xFFFFFFFFFFFF AND PUSH2 0x1687 SWAP2 SWAP1 PUSH2 0x2447 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x223A6CBB00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16BA SWAP2 SWAP1 PUSH2 0x248F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST TIMESTAMP PUSH32 0x0 PUSH6 0xFFFFFFFFFFFF AND LT ISZERO PUSH2 0x179A JUMPI PUSH2 0x1728 PUSH2 0x1851 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1795 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x178C SWAP1 PUSH2 0x232D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1821 JUMP JUMPDEST PUSH2 0x17A2 PUSH2 0x1396 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x17E1 JUMPI POP PUSH2 0x17DF PUSH2 0x13C0 JUMP JUMPDEST ISZERO JUMPDEST PUSH2 0x1820 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1817 SWAP1 PUSH2 0x232D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST PUSH2 0x182A DUP2 PUSH2 0x1F0D JUMP JUMPDEST PUSH2 0x1833 DUP2 PUSH2 0x1F2C JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH1 0x6 PUSH0 ADD PUSH1 0x15 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x7 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST TIMESTAMP PUSH32 0x0 PUSH6 0xFFFFFFFFFFFF AND LT ISZERO PUSH2 0x1925 JUMPI PUSH2 0x18B3 PUSH2 0x1851 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1920 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1917 SWAP1 PUSH2 0x232D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x19AC JUMP JUMPDEST PUSH2 0x192D PUSH2 0x1396 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x196C JUMPI POP PUSH2 0x196A PUSH2 0x13C0 JUMP JUMPDEST ISZERO JUMPDEST PUSH2 0x19AB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x19A2 SWAP1 PUSH2 0x232D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST PUSH0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT ISZERO PUSH2 0x1A53 JUMPI DUP1 PUSH1 0x1 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xE8D8E3C7C3EBEC0C177D0FE22D223F8B5071DB39155104808D45027E368BA77A PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH2 0x1A90 JUMP JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH32 0x84DBC6CB00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A87 SWAP2 SWAP1 PUSH2 0x226A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH1 0x8 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND GT DUP1 ISZERO PUSH2 0x1B50 JUMPI POP PUSH0 PUSH1 0x8 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x4 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH6 0xFFFFFFFFFFFF AND PUSH6 0xFFFFFFFFFFFF AND EQ JUMPDEST ISZERO PUSH2 0x1C71 JUMPI PUSH1 0x8 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 POP PUSH1 0x8 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND PUSH1 0x8 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD SLOAD CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x4A5552F2D245EB6039B03D3A4F2AEEAE275C3D6DC08931B837B5715FBBE5199 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x1CA3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x6C4360F000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 ADDRESS SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1CCC PUSH2 0x1396 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x1D0B JUMPI POP PUSH2 0x1D09 PUSH2 0x13C0 JUMP JUMPDEST ISZERO JUMPDEST PUSH2 0x1D4A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D41 SWAP1 PUSH2 0x232D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1ECD JUMPI PUSH1 0x1 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE DUP1 PUSH1 0x6 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x6 PUSH0 ADD PUSH1 0x15 DUP2 DUP2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x1E28 SWAP1 PUSH2 0x2378 JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP PUSH1 0x6 PUSH0 ADD PUSH1 0x15 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND PUSH1 0x6 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x5E86008A8467D1EFCCFE6CB6BD49BA7278D6AF2745A1E6994E443322A4237093 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x1F0A JUMP JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH32 0x84DBC6CB00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F01 SWAP2 SWAP1 PUSH2 0x226A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMP JUMPDEST DUP1 PUSH1 0x4 PUSH0 ADD PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST DUP1 PUSH1 0x5 PUSH0 ADD PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST DUP1 PUSH1 0x7 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x7 PUSH0 ADD PUSH1 0x15 DUP2 DUP2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x1FB1 SWAP1 PUSH2 0x2378 JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP PUSH1 0x7 PUSH0 ADD PUSH1 0x15 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND PUSH1 0x7 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xF7F7C26682668C39FD8C6DBCA125BD9466E743B9E38ACC3240867C139CD93C30 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2081 DUP3 PUSH2 0x2058 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2091 DUP2 PUSH2 0x2077 JUMP JUMPDEST DUP2 EQ PUSH2 0x209B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x20AC DUP2 PUSH2 0x2088 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x20C7 JUMPI PUSH2 0x20C6 PUSH2 0x2054 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x20D4 DUP5 DUP3 DUP6 ADD PUSH2 0x209E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x20F1 DUP2 PUSH2 0x20DD JUMP JUMPDEST DUP2 EQ PUSH2 0x20FB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x210C DUP2 PUSH2 0x20E8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2127 JUMPI PUSH2 0x2126 PUSH2 0x2054 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2134 DUP5 DUP3 DUP6 ADD PUSH2 0x20FE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x214F DUP2 PUSH2 0x213D JUMP JUMPDEST DUP2 EQ PUSH2 0x2159 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x216A DUP2 PUSH2 0x2146 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH4 0xFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2188 DUP2 PUSH2 0x2170 JUMP JUMPDEST DUP2 EQ PUSH2 0x2192 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x21A3 DUP2 PUSH2 0x217F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH6 0xFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x21C3 DUP2 PUSH2 0x21A9 JUMP JUMPDEST DUP2 EQ PUSH2 0x21CD JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x21DE DUP2 PUSH2 0x21BA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x21FD JUMPI PUSH2 0x21FC PUSH2 0x2054 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x220A DUP9 DUP3 DUP10 ADD PUSH2 0x209E JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x221B DUP9 DUP3 DUP10 ADD PUSH2 0x209E JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x222C DUP9 DUP3 DUP10 ADD PUSH2 0x215C JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x223D DUP9 DUP3 DUP10 ADD PUSH2 0x2195 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 PUSH2 0x224E DUP9 DUP3 DUP10 ADD PUSH2 0x21D0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH2 0x2264 DUP2 PUSH2 0x2077 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x227D PUSH0 DUP4 ADD DUP5 PUSH2 0x225B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x228C DUP2 PUSH2 0x20DD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x22A5 PUSH0 DUP4 ADD DUP5 PUSH2 0x2283 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x22B4 DUP2 PUSH2 0x2170 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x22CD PUSH0 DUP4 ADD DUP5 PUSH2 0x22AB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x416363657373206973206E6F742076616C696400000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2317 PUSH1 0x13 DUP4 PUSH2 0x22D3 JUMP JUMPDEST SWAP2 POP PUSH2 0x2322 DUP3 PUSH2 0x22E3 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2344 DUP2 PUSH2 0x230B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x2382 DUP3 PUSH2 0x2170 JUMP JUMPDEST SWAP2 POP PUSH4 0xFFFFFFFF DUP3 SUB PUSH2 0x2398 JUMPI PUSH2 0x2397 PUSH2 0x234B JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x23B6 DUP3 PUSH2 0x23A3 JUMP JUMPDEST SWAP2 POP PUSH2 0x23C1 DUP4 PUSH2 0x23A3 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x23D9 JUMPI PUSH2 0x23D8 PUSH2 0x234B JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x546865207265717565737420697320696E76616C696400000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2413 PUSH1 0x16 DUP4 PUSH2 0x22D3 JUMP JUMPDEST SWAP2 POP PUSH2 0x241E DUP3 PUSH2 0x23DF JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2440 DUP2 PUSH2 0x2407 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2451 DUP3 PUSH2 0x21A9 JUMP JUMPDEST SWAP2 POP PUSH2 0x245C DUP4 PUSH2 0x21A9 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP PUSH6 0xFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x247A JUMPI PUSH2 0x2479 PUSH2 0x234B JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2489 DUP2 PUSH2 0x21A9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x24A2 PUSH0 DUP4 ADD DUP5 PUSH2 0x2480 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDF EXTCODEHASH 0xC0 0x29 DUP1 INVALID DUP9 TIMESTAMP 0xFB 0x4E 0xBB SDIV 0x2A KECCAK256 PUSH18 0xA101A4D19B2EA7E4A013015F4A6A8D29DD64 PUSH20 0x6F6C634300081400330000000000000000000000 ",
							"sourceMap": "181:2791:4:-:0;;;;;;;;;;;;;2629:9:3;2611:15;:27;;;;:::i;:::-;2584:55;;;;;;;;;;2671:10;2650;:18;;;:31;;;;;;;;;;;;;;;;;;2692:10;:16;;;:18;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;181:2791:4;;7:77:5;44:7;73:5;62:16;;7:77;;;:::o;90:180::-;138:77;135:1;128:88;235:4;232:1;225:15;259:4;256:1;249:15;276:191;316:3;335:20;353:1;335:20;:::i;:::-;330:25;;369:20;387:1;369:20;:::i;:::-;364:25;;412:1;409;405:9;398:16;;433:3;430:1;427:10;424:36;;;440:18;;:::i;:::-;424:36;276:191;;;;:::o;473:93::-;509:7;549:10;542:5;538:22;527:33;;473:93;;;:::o;572:175::-;610:3;633:23;650:5;633:23;:::i;:::-;624:32;;678:10;671:5;668:21;665:47;;692:18;;:::i;:::-;665:47;739:1;732:5;728:13;721:20;;572:175;;;:::o;181:2791:4:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_setPresidentBaned_3743": {
									"entryPoint": 7949,
									"id": 3743,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_setPrimeMinisterBaned_3755": {
									"entryPoint": 7980,
									"id": 3755,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferRepublicAddress_3731": {
									"entryPoint": 8011,
									"id": 3731,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@cancelPendingRepublicAddress_3418": {
									"entryPoint": 4165,
									"id": 3418,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@getAuthorityAddress_3438": {
									"entryPoint": 7333,
									"id": 3438,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getGovernance_3670": {
									"entryPoint": 4123,
									"id": 3670,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getPresidentAdd_3510": {
									"entryPoint": 5014,
									"id": 3510,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getPresidentBan_3519": {
									"entryPoint": 5056,
									"id": 3519,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getPrimeMinisterAdd_3587": {
									"entryPoint": 5830,
									"id": 3587,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getPrimeMinisterBan_3596": {
									"entryPoint": 7340,
									"id": 3596,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getRepublicAddress_3427": {
									"entryPoint": 6225,
									"id": 3427,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getgovernanceVersion_3679": {
									"entryPoint": 6198,
									"id": 3679,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@setCallerInfo_3954": {
									"entryPoint": 1916,
									"id": 3954,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@setPendigPresident_3462": {
									"entryPoint": 863,
									"id": 3462,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setPendingGovernanceContractAddress_3623": {
									"entryPoint": 6267,
									"id": 3623,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setPendingPrimeMinister_3535": {
									"entryPoint": 4746,
									"id": 3535,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setPendingRepublicAddress_3341": {
									"entryPoint": 3436,
									"id": 3341,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setPresidentBaned_3695": {
									"entryPoint": 5872,
									"id": 3695,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setPrimeMinister_3707": {
									"entryPoint": 1322,
									"id": 3707,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transferCallerInfo_3998": {
									"entryPoint": 6803,
									"id": 3998,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferGovernanceContractAddress_3661": {
									"entryPoint": 7364,
									"id": 3661,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transferPresident_3501": {
									"entryPoint": 1468,
									"id": 3501,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferPrimeMinister_3578": {
									"entryPoint": 2964,
									"id": 3578,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferRepublicAddress_3391": {
									"entryPoint": 5080,
									"id": 3391,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 8350,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool": {
									"entryPoint": 8446,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes32": {
									"entryPoint": 8540,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint32": {
									"entryPoint": 8597,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint48": {
									"entryPoint": 8656,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 8370,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_addresst_bytes32t_uint32t_uint48": {
									"entryPoint": 8676,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_decode_tuple_t_bool": {
									"entryPoint": 8466,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 8795,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 8835,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_7ee2f33aca8781826955961850ee0290e9bc9194955de2a97e17ec13b6234440_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8971,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_a294dcfb639c285c6de7811fdf356d91d46d9194d0c816554844d12bbf160772_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9223,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint32_to_t_uint32_fromStack": {
									"entryPoint": 8875,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint48_to_t_uint48_fromStack": {
									"entryPoint": 9344,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 8810,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 8850,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_7ee2f33aca8781826955961850ee0290e9bc9194955de2a97e17ec13b6234440__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9005,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_a294dcfb639c285c6de7811fdf356d91d46d9194d0c816554844d12bbf160772__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9257,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint32__to_t_uint32__fromStack_reversed": {
									"entryPoint": 8890,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint48__to_t_uint48__fromStack_reversed": {
									"entryPoint": 9359,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 8915,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 9132,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint48": {
									"entryPoint": 9287,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 8311,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 8413,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes32": {
									"entryPoint": 8509,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 8280,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 9123,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint32": {
									"entryPoint": 8560,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint48": {
									"entryPoint": 8617,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"increment_t_uint32": {
									"entryPoint": 9080,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 9035,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 8276,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_7ee2f33aca8781826955961850ee0290e9bc9194955de2a97e17ec13b6234440": {
									"entryPoint": 8931,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_a294dcfb639c285c6de7811fdf356d91d46d9194d0c816554844d12bbf160772": {
									"entryPoint": 9183,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 8328,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 8424,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes32": {
									"entryPoint": 8518,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint32": {
									"entryPoint": 8575,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint48": {
									"entryPoint": 8634,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:8220:5",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:5"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:5"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:5",
														"type": ""
													}
												],
												"src": "7:75:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:5"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:5"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:81:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:65:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "411:42:5",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "400:54:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:5",
														"type": ""
													}
												],
												"src": "334:126:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "511:51:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "521:35:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "532:24:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "493:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "503:7:5",
														"type": ""
													}
												],
												"src": "466:96:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "611:79:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "668:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "677:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "680:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "624:43:5"
															},
															"nodeType": "YulIf",
															"src": "621:63:5"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "604:5:5",
														"type": ""
													}
												],
												"src": "568:122:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "748:87:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "758:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "780:6:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "767:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "767:20:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "758:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "823:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "796:26:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "796:33:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "796:33:5"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "726:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "734:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "742:5:5",
														"type": ""
													}
												],
												"src": "696:139:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "907:263:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "953:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "955:77:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "955:79:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "955:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "928:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "937:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "924:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "924:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "949:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "920:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "920:32:5"
															},
															"nodeType": "YulIf",
															"src": "917:119:5"
														},
														{
															"nodeType": "YulBlock",
															"src": "1046:117:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1061:15:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1075:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1065:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1090:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1125:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1136:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1121:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1121:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1145:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1100:20:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1100:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1090:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "877:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "888:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "900:6:5",
														"type": ""
													}
												],
												"src": "841:329:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1218:48:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1228:32:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1253:5:5"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1246:6:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1246:13:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1239:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1239:21:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1228:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1200:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1210:7:5",
														"type": ""
													}
												],
												"src": "1176:90:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1312:76:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1366:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1375:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1378:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1368:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1368:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1368:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1335:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1357:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "1342:14:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1342:21:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1332:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1332:32:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1325:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1325:40:5"
															},
															"nodeType": "YulIf",
															"src": "1322:60:5"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1305:5:5",
														"type": ""
													}
												],
												"src": "1272:116:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1443:84:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1453:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1475:6:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1462:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1462:20:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1453:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1515:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "1491:23:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1491:30:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1491:30:5"
														}
													]
												},
												"name": "abi_decode_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1421:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1429:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1437:5:5",
														"type": ""
													}
												],
												"src": "1394:133:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1596:260:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1642:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1644:77:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1644:79:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1644:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1617:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1626:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1613:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1613:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1638:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1609:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1609:32:5"
															},
															"nodeType": "YulIf",
															"src": "1606:119:5"
														},
														{
															"nodeType": "YulBlock",
															"src": "1735:114:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1750:15:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1764:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1754:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1779:60:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1811:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1822:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1807:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1807:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1831:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "1789:17:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1789:50:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1779:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1566:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1577:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1589:6:5",
														"type": ""
													}
												],
												"src": "1533:323:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1907:32:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1917:16:5",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1928:5:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1917:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1889:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1899:7:5",
														"type": ""
													}
												],
												"src": "1862:77:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1988:79:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2045:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2054:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2057:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2047:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2047:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2047:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2011:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2036:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes32",
																					"nodeType": "YulIdentifier",
																					"src": "2018:17:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2018:24:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2008:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2008:35:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2001:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2001:43:5"
															},
															"nodeType": "YulIf",
															"src": "1998:63:5"
														}
													]
												},
												"name": "validator_revert_t_bytes32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1981:5:5",
														"type": ""
													}
												],
												"src": "1945:122:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2125:87:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2135:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2157:6:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2144:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2144:20:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2135:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2200:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes32",
																	"nodeType": "YulIdentifier",
																	"src": "2173:26:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2173:33:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2173:33:5"
														}
													]
												},
												"name": "abi_decode_t_bytes32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2103:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2111:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2119:5:5",
														"type": ""
													}
												],
												"src": "2073:139:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2262:49:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2272:33:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2287:5:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2294:10:5",
																		"type": "",
																		"value": "0xffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2283:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2283:22:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2272:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2244:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2254:7:5",
														"type": ""
													}
												],
												"src": "2218:93:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2359:78:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2415:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2424:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2427:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2417:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2417:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2417:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2382:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2406:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint32",
																					"nodeType": "YulIdentifier",
																					"src": "2389:16:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2389:23:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2379:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2379:34:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2372:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2372:42:5"
															},
															"nodeType": "YulIf",
															"src": "2369:62:5"
														}
													]
												},
												"name": "validator_revert_t_uint32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2352:5:5",
														"type": ""
													}
												],
												"src": "2317:120:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2494:86:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2504:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2526:6:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2513:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2513:20:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2504:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2568:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint32",
																	"nodeType": "YulIdentifier",
																	"src": "2542:25:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2542:32:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2542:32:5"
														}
													]
												},
												"name": "abi_decode_t_uint32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2472:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2480:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2488:5:5",
														"type": ""
													}
												],
												"src": "2443:137:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2630:53:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2640:37:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2655:5:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2662:14:5",
																		"type": "",
																		"value": "0xffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2651:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2651:26:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2640:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint48",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2612:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2622:7:5",
														"type": ""
													}
												],
												"src": "2586:97:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2731:78:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2787:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2796:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2799:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2789:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2789:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2789:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2754:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2778:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint48",
																					"nodeType": "YulIdentifier",
																					"src": "2761:16:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2761:23:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2751:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2751:34:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2744:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2744:42:5"
															},
															"nodeType": "YulIf",
															"src": "2741:62:5"
														}
													]
												},
												"name": "validator_revert_t_uint48",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2724:5:5",
														"type": ""
													}
												],
												"src": "2689:120:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2866:86:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2876:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2898:6:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2885:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2885:20:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2876:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2940:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint48",
																	"nodeType": "YulIdentifier",
																	"src": "2914:25:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2914:32:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2914:32:5"
														}
													]
												},
												"name": "abi_decode_t_uint48",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2844:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2852:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2860:5:5",
														"type": ""
													}
												],
												"src": "2815:137:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3090:775:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3137:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "3139:77:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3139:79:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3139:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3111:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3120:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3107:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3107:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3132:3:5",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3103:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3103:33:5"
															},
															"nodeType": "YulIf",
															"src": "3100:120:5"
														},
														{
															"nodeType": "YulBlock",
															"src": "3230:117:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3245:15:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3259:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3249:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3274:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3309:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3320:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3305:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3305:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3329:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "3284:20:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3284:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3274:6:5"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3357:118:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3372:16:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3386:2:5",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3376:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3402:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3437:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3448:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3433:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3433:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3457:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "3412:20:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3412:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "3402:6:5"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3485:118:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3500:16:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3514:2:5",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3504:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3530:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3565:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3576:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3561:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3561:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3585:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes32",
																			"nodeType": "YulIdentifier",
																			"src": "3540:20:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3540:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "3530:6:5"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3613:117:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3628:16:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3642:2:5",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3632:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3658:62:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3692:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3703:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3688:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3688:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3712:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint32",
																			"nodeType": "YulIdentifier",
																			"src": "3668:19:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3668:52:5"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nodeType": "YulIdentifier",
																			"src": "3658:6:5"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3740:118:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3755:17:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3769:3:5",
																		"type": "",
																		"value": "128"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3759:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3786:62:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3820:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3831:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3816:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3816:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3840:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint48",
																			"nodeType": "YulIdentifier",
																			"src": "3796:19:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3796:52:5"
																	},
																	"variableNames": [
																		{
																			"name": "value4",
																			"nodeType": "YulIdentifier",
																			"src": "3786:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_bytes32t_uint32t_uint48",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3028:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3039:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3051:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3059:6:5",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "3067:6:5",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "3075:6:5",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "3083:6:5",
														"type": ""
													}
												],
												"src": "2958:907:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3936:53:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3953:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3976:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "3958:17:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3958:24:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3946:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3946:37:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3946:37:5"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3924:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3931:3:5",
														"type": ""
													}
												],
												"src": "3871:118:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4093:124:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4103:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4115:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4126:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4111:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4111:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4103:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4183:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4196:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4207:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4192:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4192:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4139:43:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4139:71:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4139:71:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4065:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4077:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4088:4:5",
														"type": ""
													}
												],
												"src": "3995:222:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4282:50:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4299:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4319:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "4304:14:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4304:21:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4292:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4292:34:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4292:34:5"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4270:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4277:3:5",
														"type": ""
													}
												],
												"src": "4223:109:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4430:118:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4440:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4452:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4463:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4448:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4448:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4440:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4514:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4527:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4538:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4523:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4523:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4476:37:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4476:65:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4476:65:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4402:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4414:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4425:4:5",
														"type": ""
													}
												],
												"src": "4338:210:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4617:52:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4634:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4656:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint32",
																			"nodeType": "YulIdentifier",
																			"src": "4639:16:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4639:23:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4627:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4627:36:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4627:36:5"
														}
													]
												},
												"name": "abi_encode_t_uint32_to_t_uint32_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4605:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4612:3:5",
														"type": ""
													}
												],
												"src": "4554:115:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4771:122:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4781:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4793:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4804:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4789:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4789:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4781:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4859:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4872:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4883:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4868:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4868:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint32_to_t_uint32_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4817:41:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4817:69:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4817:69:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint32__to_t_uint32__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4743:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4755:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4766:4:5",
														"type": ""
													}
												],
												"src": "4675:218:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4995:73:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5012:3:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "5017:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5005:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5005:19:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5005:19:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5033:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5052:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5057:4:5",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5048:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5048:14:5"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "5033:11:5"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4967:3:5",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "4972:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "4983:11:5",
														"type": ""
													}
												],
												"src": "4899:169:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5180:63:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "5202:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5210:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5198:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5198:14:5"
																	},
																	{
																		"hexValue": "416363657373206973206e6f742076616c6964",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5214:21:5",
																		"type": "",
																		"value": "Access is not valid"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5191:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5191:45:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5191:45:5"
														}
													]
												},
												"name": "store_literal_in_memory_7ee2f33aca8781826955961850ee0290e9bc9194955de2a97e17ec13b6234440",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "5172:6:5",
														"type": ""
													}
												],
												"src": "5074:169:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5395:220:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5405:74:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5471:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5476:2:5",
																		"type": "",
																		"value": "19"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5412:58:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5412:67:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "5405:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5577:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_7ee2f33aca8781826955961850ee0290e9bc9194955de2a97e17ec13b6234440",
																	"nodeType": "YulIdentifier",
																	"src": "5488:88:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5488:93:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5488:93:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5590:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5601:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5606:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5597:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5597:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "5590:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_7ee2f33aca8781826955961850ee0290e9bc9194955de2a97e17ec13b6234440_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5383:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5391:3:5",
														"type": ""
													}
												],
												"src": "5249:366:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5792:248:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5802:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5814:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5825:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5810:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5810:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5802:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5849:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5860:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5845:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5845:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "5868:4:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5874:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5864:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5864:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5838:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5838:47:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5838:47:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5894:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "6028:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_7ee2f33aca8781826955961850ee0290e9bc9194955de2a97e17ec13b6234440_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5902:124:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5902:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5894:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_7ee2f33aca8781826955961850ee0290e9bc9194955de2a97e17ec13b6234440__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5772:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5787:4:5",
														"type": ""
													}
												],
												"src": "5621:419:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6074:152:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6091:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6094:77:5",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6084:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6084:88:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6084:88:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6188:1:5",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6191:4:5",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6181:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6181:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6181:15:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6212:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6215:4:5",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "6205:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6205:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6205:15:5"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "6046:180:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6274:133:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6284:32:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6310:5:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint32",
																	"nodeType": "YulIdentifier",
																	"src": "6293:16:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6293:23:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "6284:5:5"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6350:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "6352:16:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6352:18:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6352:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6331:5:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6338:10:5",
																		"type": "",
																		"value": "0xffffffff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "6328:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6328:21:5"
															},
															"nodeType": "YulIf",
															"src": "6325:47:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6381:20:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6392:5:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6399:1:5",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6388:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6388:13:5"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "6381:3:5"
																}
															]
														}
													]
												},
												"name": "increment_t_uint32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6260:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "6270:3:5",
														"type": ""
													}
												],
												"src": "6232:175:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6458:32:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6468:16:5",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "6479:5:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "6468:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6440:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "6450:7:5",
														"type": ""
													}
												],
												"src": "6413:77:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6540:147:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6550:25:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6573:1:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "6555:17:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6555:20:5"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "6550:1:5"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6584:25:5",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "6607:1:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "6589:17:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6589:20:5"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "6584:1:5"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6618:16:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6629:1:5"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "6632:1:5"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6625:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6625:9:5"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "6618:3:5"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6658:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "6660:16:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6660:18:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6660:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6650:1:5"
																	},
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "6653:3:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "6647:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6647:10:5"
															},
															"nodeType": "YulIf",
															"src": "6644:36:5"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "6527:1:5",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "6530:1:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "6536:3:5",
														"type": ""
													}
												],
												"src": "6496:191:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6799:66:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "6821:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6829:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6817:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6817:14:5"
																	},
																	{
																		"hexValue": "546865207265717565737420697320696e76616c6964",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6833:24:5",
																		"type": "",
																		"value": "The request is invalid"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6810:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6810:48:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6810:48:5"
														}
													]
												},
												"name": "store_literal_in_memory_a294dcfb639c285c6de7811fdf356d91d46d9194d0c816554844d12bbf160772",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "6791:6:5",
														"type": ""
													}
												],
												"src": "6693:172:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7017:220:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7027:74:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7093:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7098:2:5",
																		"type": "",
																		"value": "22"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7034:58:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7034:67:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "7027:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7199:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_a294dcfb639c285c6de7811fdf356d91d46d9194d0c816554844d12bbf160772",
																	"nodeType": "YulIdentifier",
																	"src": "7110:88:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7110:93:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7110:93:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7212:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7223:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7228:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7219:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7219:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "7212:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_a294dcfb639c285c6de7811fdf356d91d46d9194d0c816554844d12bbf160772_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7005:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "7013:3:5",
														"type": ""
													}
												],
												"src": "6871:366:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7414:248:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7424:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7436:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7447:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7432:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7432:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7424:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7471:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7482:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7467:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7467:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "7490:4:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7496:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7486:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7486:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7460:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7460:47:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7460:47:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7516:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "7650:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_a294dcfb639c285c6de7811fdf356d91d46d9194d0c816554844d12bbf160772_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7524:124:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7524:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7516:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_a294dcfb639c285c6de7811fdf356d91d46d9194d0c816554844d12bbf160772__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7394:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7409:4:5",
														"type": ""
													}
												],
												"src": "7243:419:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7712:160:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7722:24:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "7744:1:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint48",
																	"nodeType": "YulIdentifier",
																	"src": "7727:16:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7727:19:5"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "7722:1:5"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7755:24:5",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "7777:1:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint48",
																	"nodeType": "YulIdentifier",
																	"src": "7760:16:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7760:19:5"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "7755:1:5"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7788:17:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "7800:1:5"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "7803:1:5"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "7796:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7796:9:5"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "7788:4:5"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7843:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "7845:16:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7845:18:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7845:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nodeType": "YulIdentifier",
																		"src": "7821:4:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7827:14:5",
																		"type": "",
																		"value": "0xffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "7818:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7818:24:5"
															},
															"nodeType": "YulIf",
															"src": "7815:50:5"
														}
													]
												},
												"name": "checked_sub_t_uint48",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "7698:1:5",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "7701:1:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "7707:4:5",
														"type": ""
													}
												],
												"src": "7668:204:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7941:52:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7958:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "7980:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint48",
																			"nodeType": "YulIdentifier",
																			"src": "7963:16:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7963:23:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7951:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7951:36:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7951:36:5"
														}
													]
												},
												"name": "abi_encode_t_uint48_to_t_uint48_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7929:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7936:3:5",
														"type": ""
													}
												],
												"src": "7878:115:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8095:122:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8105:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8117:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8128:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8113:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8113:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8105:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "8183:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8196:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8207:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8192:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8192:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint48_to_t_uint48_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8141:41:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8141:69:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8141:69:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint48__to_t_uint48__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8067:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8079:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8090:4:5",
														"type": ""
													}
												],
												"src": "7999:218:5"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function cleanup_t_uint32(value) -> cleaned {\n        cleaned := and(value, 0xffffffff)\n    }\n\n    function validator_revert_t_uint32(value) {\n        if iszero(eq(value, cleanup_t_uint32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint32(value)\n    }\n\n    function cleanup_t_uint48(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffff)\n    }\n\n    function validator_revert_t_uint48(value) {\n        if iszero(eq(value, cleanup_t_uint48(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint48(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint48(value)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_bytes32t_uint32t_uint48(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_uint48(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint32_to_t_uint32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint32(value))\n    }\n\n    function abi_encode_tuple_t_uint32__to_t_uint32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint32_to_t_uint32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_7ee2f33aca8781826955961850ee0290e9bc9194955de2a97e17ec13b6234440(memPtr) {\n\n        mstore(add(memPtr, 0), \"Access is not valid\")\n\n    }\n\n    function abi_encode_t_stringliteral_7ee2f33aca8781826955961850ee0290e9bc9194955de2a97e17ec13b6234440_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 19)\n        store_literal_in_memory_7ee2f33aca8781826955961850ee0290e9bc9194955de2a97e17ec13b6234440(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_7ee2f33aca8781826955961850ee0290e9bc9194955de2a97e17ec13b6234440__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_7ee2f33aca8781826955961850ee0290e9bc9194955de2a97e17ec13b6234440_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function increment_t_uint32(value) -> ret {\n        value := cleanup_t_uint32(value)\n        if eq(value, 0xffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_a294dcfb639c285c6de7811fdf356d91d46d9194d0c816554844d12bbf160772(memPtr) {\n\n        mstore(add(memPtr, 0), \"The request is invalid\")\n\n    }\n\n    function abi_encode_t_stringliteral_a294dcfb639c285c6de7811fdf356d91d46d9194d0c816554844d12bbf160772_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 22)\n        store_literal_in_memory_a294dcfb639c285c6de7811fdf356d91d46d9194d0c816554844d12bbf160772(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_a294dcfb639c285c6de7811fdf356d91d46d9194d0c816554844d12bbf160772__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_a294dcfb639c285c6de7811fdf356d91d46d9194d0c816554844d12bbf160772_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_sub_t_uint48(x, y) -> diff {\n        x := cleanup_t_uint48(x)\n        y := cleanup_t_uint48(y)\n        diff := sub(x, y)\n\n        if gt(diff, 0xffffffffffff) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_t_uint48_to_t_uint48_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint48(value))\n    }\n\n    function abi_encode_tuple_t_uint48__to_t_uint48__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint48_to_t_uint48_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 5,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"3171": [
									{
										"length": 32,
										"start": 866
									},
									{
										"length": 32,
										"start": 1919
									},
									{
										"length": 32,
										"start": 3439
									},
									{
										"length": 32,
										"start": 4168
									},
									{
										"length": 32,
										"start": 5083
									},
									{
										"length": 32,
										"start": 5875
									},
									{
										"length": 32,
										"start": 6270
									}
								]
							},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b5060043610610135575f3560e01c80636cf106d7116100b6578063c5a1c5c11161007a578063c5a1c5c1146102c3578063ca4cce68146102e1578063cd01cc28146102fd578063e47a9d4614610307578063e4f3e94714610325578063ee7126c31461034357610135565b80636cf106d7146102315780639c20fe711461024f578063a53da00b1461026b578063b5c09c6814610289578063c387b49c146102a557610135565b80631f72783a116100fd5780631f72783a146101a1578063289b3c0d146101bd57806352e305de146101db578063544fa93e146101f7578063664109971461021357610135565b8063054203bd1461013957806306e99d93146101555780630df4c3901461017157806314c58b511461017b57806318074eee14610197575b5f80fd5b610153600480360381019061014e91906120b2565b61035f565b005b61016f600480360381019061016a9190612112565b61052a565b005b6101796105bc565b005b610195600480360381019061019091906121e4565b61077c565b005b61019f610b94565b005b6101bb60048036038101906101b691906120b2565b610d6c565b005b6101c561101b565b6040516101d2919061226a565b60405180910390f35b6101f560048036038101906101f091906120b2565b611045565b005b610211600480360381019061020c91906120b2565b61128a565b005b61021b611396565b604051610228919061226a565b60405180910390f35b6102396113c0565b6040516102469190612292565b60405180910390f35b610269600480360381019061026491906120b2565b6113d8565b005b6102736116c6565b604051610280919061226a565b60405180910390f35b6102a3600480360381019061029e9190612112565b6116f0565b005b6102ad611836565b6040516102ba91906122ba565b60405180910390f35b6102cb611851565b6040516102d8919061226a565b60405180910390f35b6102fb60048036038101906102f691906120b2565b61187b565b005b610305611a93565b005b61030f611ca5565b60405161031c919061226a565b60405180910390f35b61032d611cac565b60405161033a9190612292565b60405180910390f35b61035d600480360381019061035891906120b2565b611cc4565b005b427f000000000000000000000000000000000000000000000000000000000000000065ffffffffffff16101561040957610397611851565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610404576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103fb9061232d565b60405180910390fd5b610490565b610411611396565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16148015610450575061044e6113c0565b155b61048f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104869061232d565b60405180910390fd5b5b8060025f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506104da6001611f0d565b6104e46001611f2c565b8073ffffffffffffffffffffffffffffffffffffffff167f3553f1f7ef0242113266a8d183b621bb87468c99237f36b1150b6ab3d688b68660405160405180910390a250565b610532611396565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16148015610571575061056f6113c0565b155b6105b0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105a79061232d565b60405180910390fd5b6105b981611f2c565b50565b3373ffffffffffffffffffffffffffffffffffffffff1660025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16036107485760025f6101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690553360045f015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060045f01601581819054906101000a900463ffffffff168092919061069a90612378565b91906101000a81548163ffffffff021916908363ffffffff160217905550506106c25f611f0d565b60045f0160159054906101000a900463ffffffff1663ffffffff1660045f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f05ad9b3688012cd825c1bfb941e4f5afb2558af6af3deaddf01dbb5e85abdaf960405160405180910390a361077a565b6040517f6c4360f000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b427f000000000000000000000000000000000000000000000000000000000000000065ffffffffffff161015610826576107b4611851565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610821576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108189061232d565b60405180910390fd5b6108ad565b61082e6116c6565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614801561086d575061086b611cac565b155b6108ac576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108a39061232d565b60405180910390fd5b5b5f73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff16146109885760085f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8082015f9055600182015f6101000a81549063ffffffff02191690556001820160046101000a81549065ffffffffffff021916905560018201600a6101000a81549065ffffffffffff02191690556001820160106101000a81549065ffffffffffff021916905550505b8260085f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f015414158015610a3257508163ffffffff1660085f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f206001015f9054906101000a900463ffffffff1663ffffffff1614155b15610b8c578260085f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f01819055508160085f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f206001015f6101000a81548163ffffffff021916908363ffffffff1602179055508060085f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2060010160106101000a81548165ffffffffffff021916908365ffffffffffff1602179055508163ffffffff16838573ffffffffffffffffffffffffffffffffffffffff167f5c43a67d451cacaddc8309af64192a4ebee009b9cab5eeb59ec1fb77dd3abcbc60405160405180910390a4610b8d565b5b5050505050565b3373ffffffffffffffffffffffffffffffffffffffff1660035f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603610d385760035f6101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690553360055f015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060055f01601581819054906101000a900463ffffffff1680929190610c7290612378565b91906101000a81548163ffffffff021916908363ffffffff1602179055505060055f0160149054906101000a900460ff1615610cb257610cb15f611f2c565b5b60055f0160159054906101000a900463ffffffff1663ffffffff1660055f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f11e1b985c07e1bf3fec9bfd0bdb8c4a8e870ba2b26aa89fe50a6a19132ca10fd60405160405180910390a3610d6a565b6040517f6c4360f000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b427f000000000000000000000000000000000000000000000000000000000000000065ffffffffffff161015610e1657610da4611851565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610e11576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e089061232d565b60405180910390fd5b610e9d565b610e1e611396565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16148015610e5d5750610e5b6113c0565b155b610e9c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e939061232d565b60405180910390fd5b5b5f8173ffffffffffffffffffffffffffffffffffffffff163b1115610fdb573373ffffffffffffffffffffffffffffffffffffffff1660045f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603610f2057610f1b81611f4b565b610fd6565b6213c68042610f2f91906123ac565b600360146101000a81548165ffffffffffff021916908365ffffffffffff160217905550805f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff167f675b770e821ba4aad20be77c58f912d689226272e805637f42f838a6035eed8660405160405180910390a25b611018565b806040517fc632231500000000000000000000000000000000000000000000000000000000815260040161100f919061226a565b60405180910390fd5b50565b5f60065f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b427f000000000000000000000000000000000000000000000000000000000000000065ffffffffffff1610156110ef5761107d611851565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146110ea576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110e19061232d565b60405180910390fd5b611176565b6110f7611396565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614801561113657506111346113c0565b155b611175576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161116c9061232d565b60405180910390fd5b5b8073ffffffffffffffffffffffffffffffffffffffff165f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff160361124a57600360146101000a81549065ffffffffffff02191690555f806101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690558073ffffffffffffffffffffffffffffffffffffffff167ff299f61c7e493f99b20cb36c587ca903d085d5206bfe4452d295711e372da02960405160405180910390a2611287565b806040517fc632231500000000000000000000000000000000000000000000000000000000815260040161127e919061226a565b60405180910390fd5b50565b611292611396565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480156112d157506112cf6113c0565b155b611310576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113079061232d565b60405180910390fd5b8060035f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff167fff3cad3ee28c342ad5f3d7c8ff8559ee4d21eb48494092b82a1652e443b3420b60405160405180910390a250565b5f60045f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b5f60045f0160149054906101000a900460ff16905090565b427f000000000000000000000000000000000000000000000000000000000000000065ffffffffffff16101561148257611410611851565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461147d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114749061232d565b60405180910390fd5b611509565b61148a611396565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480156114c957506114c76113c0565b155b611508576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114ff9061232d565b60405180910390fd5b5b42600360149054906101000a900465ffffffffffff1665ffffffffffff161015611667575f600360149054906101000a900465ffffffffffff1665ffffffffffff160361158b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161158290612429565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff165f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff160361162557600360146101000a81549065ffffffffffff02191690555f806101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905561162081611f4b565b611662565b806040517fc6322315000000000000000000000000000000000000000000000000000000008152600401611659919061226a565b60405180910390fd5b6116c3565b42600360149054906101000a900465ffffffffffff166116879190612447565b6040517f223a6cbb0000000000000000000000000000000000000000000000000000000081526004016116ba919061248f565b60405180910390fd5b50565b5f60055f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b427f000000000000000000000000000000000000000000000000000000000000000065ffffffffffff16101561179a57611728611851565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611795576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161178c9061232d565b60405180910390fd5b611821565b6117a2611396565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480156117e157506117df6113c0565b155b611820576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016118179061232d565b60405180910390fd5b5b61182a81611f0d565b61183381611f2c565b50565b5f60065f0160159054906101000a900463ffffffff16905090565b5f60075f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b427f000000000000000000000000000000000000000000000000000000000000000065ffffffffffff161015611925576118b3611851565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611920576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016119179061232d565b60405180910390fd5b6119ac565b61192d611396565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614801561196c575061196a6113c0565b155b6119ab576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016119a29061232d565b60405180910390fd5b5b5f8173ffffffffffffffffffffffffffffffffffffffff163b1115611a53578060015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff167fe8d8e3c7c3ebec0c177d0fe22d223f8b5071db39155104808d45027e368ba77a60405160405180910390a2611a90565b806040517f84dbc6cb000000000000000000000000000000000000000000000000000000008152600401611a87919061226a565b60405180910390fd5b50565b5f60085f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f206001015f9054906101000a900463ffffffff1663ffffffff16118015611b5057505f60085f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2060010160049054906101000a900465ffffffffffff1665ffffffffffff16145b15611c715760085f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205060085f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f206001015f9054906101000a900463ffffffff1663ffffffff1660085f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f01543373ffffffffffffffffffffffffffffffffffffffff167f04a5552f2d245eb6039b03d3a4f2aeeae275c3d6dc08931b837b5715fbbe519960405160405180910390a4611ca3565b6040517f6c4360f000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b5f30905090565b5f60055f0160149054906101000a900460ff16905090565b611ccc611396565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16148015611d0b5750611d096113c0565b155b611d4a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611d419061232d565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1660015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603611ecd5760015f6101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690558060065f015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060065f01601581819054906101000a900463ffffffff1680929190611e2890612378565b91906101000a81548163ffffffff021916908363ffffffff1602179055505060065f0160159054906101000a900463ffffffff1663ffffffff1660065f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f5e86008a8467d1efccfe6cb6bd49ba7278d6af2745a1e6994e443322a423709360405160405180910390a3611f0a565b806040517f84dbc6cb000000000000000000000000000000000000000000000000000000008152600401611f01919061226a565b60405180910390fd5b50565b8060045f0160146101000a81548160ff02191690831515021790555050565b8060055f0160146101000a81548160ff02191690831515021790555050565b8060075f015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060075f01601581819054906101000a900463ffffffff1680929190611fb190612378565b91906101000a81548163ffffffff021916908363ffffffff1602179055505060075f0160159054906101000a900463ffffffff1663ffffffff1660075f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167ff7f7c26682668c39fd8c6dbca125bd9466e743b9e38acc3240867c139cd93c3060405160405180910390a350565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61208182612058565b9050919050565b61209181612077565b811461209b575f80fd5b50565b5f813590506120ac81612088565b92915050565b5f602082840312156120c7576120c6612054565b5b5f6120d48482850161209e565b91505092915050565b5f8115159050919050565b6120f1816120dd565b81146120fb575f80fd5b50565b5f8135905061210c816120e8565b92915050565b5f6020828403121561212757612126612054565b5b5f612134848285016120fe565b91505092915050565b5f819050919050565b61214f8161213d565b8114612159575f80fd5b50565b5f8135905061216a81612146565b92915050565b5f63ffffffff82169050919050565b61218881612170565b8114612192575f80fd5b50565b5f813590506121a38161217f565b92915050565b5f65ffffffffffff82169050919050565b6121c3816121a9565b81146121cd575f80fd5b50565b5f813590506121de816121ba565b92915050565b5f805f805f60a086880312156121fd576121fc612054565b5b5f61220a8882890161209e565b955050602061221b8882890161209e565b945050604061222c8882890161215c565b935050606061223d88828901612195565b925050608061224e888289016121d0565b9150509295509295909350565b61226481612077565b82525050565b5f60208201905061227d5f83018461225b565b92915050565b61228c816120dd565b82525050565b5f6020820190506122a55f830184612283565b92915050565b6122b481612170565b82525050565b5f6020820190506122cd5f8301846122ab565b92915050565b5f82825260208201905092915050565b7f416363657373206973206e6f742076616c6964000000000000000000000000005f82015250565b5f6123176013836122d3565b9150612322826122e3565b602082019050919050565b5f6020820190508181035f8301526123448161230b565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61238282612170565b915063ffffffff82036123985761239761234b565b5b600182019050919050565b5f819050919050565b5f6123b6826123a3565b91506123c1836123a3565b92508282019050808211156123d9576123d861234b565b5b92915050565b7f546865207265717565737420697320696e76616c6964000000000000000000005f82015250565b5f6124136016836122d3565b915061241e826123df565b602082019050919050565b5f6020820190508181035f83015261244081612407565b9050919050565b5f612451826121a9565b915061245c836121a9565b9250828203905065ffffffffffff81111561247a5761247961234b565b5b92915050565b612489816121a9565b82525050565b5f6020820190506124a25f830184612480565b9291505056fea2646970667358221220df3fc02980fe8842fb4ebb052a2071a101a4d19b2ea7e4a013015f4a6a8d29dd64736f6c63430008140033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x135 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6CF106D7 GT PUSH2 0xB6 JUMPI DUP1 PUSH4 0xC5A1C5C1 GT PUSH2 0x7A JUMPI DUP1 PUSH4 0xC5A1C5C1 EQ PUSH2 0x2C3 JUMPI DUP1 PUSH4 0xCA4CCE68 EQ PUSH2 0x2E1 JUMPI DUP1 PUSH4 0xCD01CC28 EQ PUSH2 0x2FD JUMPI DUP1 PUSH4 0xE47A9D46 EQ PUSH2 0x307 JUMPI DUP1 PUSH4 0xE4F3E947 EQ PUSH2 0x325 JUMPI DUP1 PUSH4 0xEE7126C3 EQ PUSH2 0x343 JUMPI PUSH2 0x135 JUMP JUMPDEST DUP1 PUSH4 0x6CF106D7 EQ PUSH2 0x231 JUMPI DUP1 PUSH4 0x9C20FE71 EQ PUSH2 0x24F JUMPI DUP1 PUSH4 0xA53DA00B EQ PUSH2 0x26B JUMPI DUP1 PUSH4 0xB5C09C68 EQ PUSH2 0x289 JUMPI DUP1 PUSH4 0xC387B49C EQ PUSH2 0x2A5 JUMPI PUSH2 0x135 JUMP JUMPDEST DUP1 PUSH4 0x1F72783A GT PUSH2 0xFD JUMPI DUP1 PUSH4 0x1F72783A EQ PUSH2 0x1A1 JUMPI DUP1 PUSH4 0x289B3C0D EQ PUSH2 0x1BD JUMPI DUP1 PUSH4 0x52E305DE EQ PUSH2 0x1DB JUMPI DUP1 PUSH4 0x544FA93E EQ PUSH2 0x1F7 JUMPI DUP1 PUSH4 0x66410997 EQ PUSH2 0x213 JUMPI PUSH2 0x135 JUMP JUMPDEST DUP1 PUSH4 0x54203BD EQ PUSH2 0x139 JUMPI DUP1 PUSH4 0x6E99D93 EQ PUSH2 0x155 JUMPI DUP1 PUSH4 0xDF4C390 EQ PUSH2 0x171 JUMPI DUP1 PUSH4 0x14C58B51 EQ PUSH2 0x17B JUMPI DUP1 PUSH4 0x18074EEE EQ PUSH2 0x197 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x153 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x14E SWAP2 SWAP1 PUSH2 0x20B2 JUMP JUMPDEST PUSH2 0x35F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x16F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x16A SWAP2 SWAP1 PUSH2 0x2112 JUMP JUMPDEST PUSH2 0x52A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x179 PUSH2 0x5BC JUMP JUMPDEST STOP JUMPDEST PUSH2 0x195 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x190 SWAP2 SWAP1 PUSH2 0x21E4 JUMP JUMPDEST PUSH2 0x77C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x19F PUSH2 0xB94 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1BB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B6 SWAP2 SWAP1 PUSH2 0x20B2 JUMP JUMPDEST PUSH2 0xD6C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1C5 PUSH2 0x101B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D2 SWAP2 SWAP1 PUSH2 0x226A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1F0 SWAP2 SWAP1 PUSH2 0x20B2 JUMP JUMPDEST PUSH2 0x1045 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x211 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x20C SWAP2 SWAP1 PUSH2 0x20B2 JUMP JUMPDEST PUSH2 0x128A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x21B PUSH2 0x1396 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x228 SWAP2 SWAP1 PUSH2 0x226A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x239 PUSH2 0x13C0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x246 SWAP2 SWAP1 PUSH2 0x2292 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x269 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x264 SWAP2 SWAP1 PUSH2 0x20B2 JUMP JUMPDEST PUSH2 0x13D8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x273 PUSH2 0x16C6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x280 SWAP2 SWAP1 PUSH2 0x226A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x29E SWAP2 SWAP1 PUSH2 0x2112 JUMP JUMPDEST PUSH2 0x16F0 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2AD PUSH2 0x1836 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2BA SWAP2 SWAP1 PUSH2 0x22BA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2CB PUSH2 0x1851 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2D8 SWAP2 SWAP1 PUSH2 0x226A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2FB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2F6 SWAP2 SWAP1 PUSH2 0x20B2 JUMP JUMPDEST PUSH2 0x187B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x305 PUSH2 0x1A93 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x30F PUSH2 0x1CA5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x31C SWAP2 SWAP1 PUSH2 0x226A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x32D PUSH2 0x1CAC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x33A SWAP2 SWAP1 PUSH2 0x2292 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x35D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x358 SWAP2 SWAP1 PUSH2 0x20B2 JUMP JUMPDEST PUSH2 0x1CC4 JUMP JUMPDEST STOP JUMPDEST TIMESTAMP PUSH32 0x0 PUSH6 0xFFFFFFFFFFFF AND LT ISZERO PUSH2 0x409 JUMPI PUSH2 0x397 PUSH2 0x1851 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x404 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3FB SWAP1 PUSH2 0x232D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x490 JUMP JUMPDEST PUSH2 0x411 PUSH2 0x1396 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x450 JUMPI POP PUSH2 0x44E PUSH2 0x13C0 JUMP JUMPDEST ISZERO JUMPDEST PUSH2 0x48F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x486 SWAP1 PUSH2 0x232D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST DUP1 PUSH1 0x2 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x4DA PUSH1 0x1 PUSH2 0x1F0D JUMP JUMPDEST PUSH2 0x4E4 PUSH1 0x1 PUSH2 0x1F2C JUMP JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x3553F1F7EF0242113266A8D183B621BB87468C99237F36B1150B6AB3D688B686 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH2 0x532 PUSH2 0x1396 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x571 JUMPI POP PUSH2 0x56F PUSH2 0x13C0 JUMP JUMPDEST ISZERO JUMPDEST PUSH2 0x5B0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5A7 SWAP1 PUSH2 0x232D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x5B9 DUP2 PUSH2 0x1F2C JUMP JUMPDEST POP JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x748 JUMPI PUSH1 0x2 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE CALLER PUSH1 0x4 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x4 PUSH0 ADD PUSH1 0x15 DUP2 DUP2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x69A SWAP1 PUSH2 0x2378 JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP PUSH2 0x6C2 PUSH0 PUSH2 0x1F0D JUMP JUMPDEST PUSH1 0x4 PUSH0 ADD PUSH1 0x15 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND PUSH1 0x4 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x5AD9B3688012CD825C1BFB941E4F5AFB2558AF6AF3DEADDF01DBB5E85ABDAF9 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x77A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x6C4360F000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST TIMESTAMP PUSH32 0x0 PUSH6 0xFFFFFFFFFFFF AND LT ISZERO PUSH2 0x826 JUMPI PUSH2 0x7B4 PUSH2 0x1851 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x821 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x818 SWAP1 PUSH2 0x232D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x8AD JUMP JUMPDEST PUSH2 0x82E PUSH2 0x16C6 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x86D JUMPI POP PUSH2 0x86B PUSH2 0x1CAC JUMP JUMPDEST ISZERO JUMPDEST PUSH2 0x8AC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8A3 SWAP1 PUSH2 0x232D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x988 JUMPI PUSH1 0x8 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP1 DUP3 ADD PUSH0 SWAP1 SSTORE PUSH1 0x1 DUP3 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x4 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH6 0xFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0xA PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH6 0xFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x10 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH6 0xFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE POP POP JUMPDEST DUP3 PUSH1 0x8 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD SLOAD EQ ISZERO DUP1 ISZERO PUSH2 0xA32 JUMPI POP DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0x8 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0xB8C JUMPI DUP3 PUSH1 0x8 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x8 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x8 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x10 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH6 0xFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH6 0xFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH4 0xFFFFFFFF AND DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x5C43A67D451CACADDC8309AF64192A4EBEE009B9CAB5EEB59EC1FB77DD3ABCBC PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0xB8D JUMP JUMPDEST JUMPDEST POP POP POP POP POP JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x3 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xD38 JUMPI PUSH1 0x3 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE CALLER PUSH1 0x5 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x5 PUSH0 ADD PUSH1 0x15 DUP2 DUP2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0xC72 SWAP1 PUSH2 0x2378 JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP PUSH1 0x5 PUSH0 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xCB2 JUMPI PUSH2 0xCB1 PUSH0 PUSH2 0x1F2C JUMP JUMPDEST JUMPDEST PUSH1 0x5 PUSH0 ADD PUSH1 0x15 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND PUSH1 0x5 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x11E1B985C07E1BF3FEC9BFD0BDB8C4A8E870BA2B26AA89FE50A6A19132CA10FD PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0xD6A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x6C4360F000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST TIMESTAMP PUSH32 0x0 PUSH6 0xFFFFFFFFFFFF AND LT ISZERO PUSH2 0xE16 JUMPI PUSH2 0xDA4 PUSH2 0x1851 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xE11 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE08 SWAP1 PUSH2 0x232D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xE9D JUMP JUMPDEST PUSH2 0xE1E PUSH2 0x1396 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0xE5D JUMPI POP PUSH2 0xE5B PUSH2 0x13C0 JUMP JUMPDEST ISZERO JUMPDEST PUSH2 0xE9C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE93 SWAP1 PUSH2 0x232D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST PUSH0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT ISZERO PUSH2 0xFDB JUMPI CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x4 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xF20 JUMPI PUSH2 0xF1B DUP2 PUSH2 0x1F4B JUMP JUMPDEST PUSH2 0xFD6 JUMP JUMPDEST PUSH3 0x13C680 TIMESTAMP PUSH2 0xF2F SWAP2 SWAP1 PUSH2 0x23AC JUMP JUMPDEST PUSH1 0x3 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH6 0xFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH6 0xFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x675B770E821BA4AAD20BE77C58F912D689226272E805637F42F838A6035EED86 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMPDEST PUSH2 0x1018 JUMP JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH32 0xC632231500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x100F SWAP2 SWAP1 PUSH2 0x226A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH1 0x6 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST TIMESTAMP PUSH32 0x0 PUSH6 0xFFFFFFFFFFFF AND LT ISZERO PUSH2 0x10EF JUMPI PUSH2 0x107D PUSH2 0x1851 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x10EA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10E1 SWAP1 PUSH2 0x232D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1176 JUMP JUMPDEST PUSH2 0x10F7 PUSH2 0x1396 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x1136 JUMPI POP PUSH2 0x1134 PUSH2 0x13C0 JUMP JUMPDEST ISZERO JUMPDEST PUSH2 0x1175 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x116C SWAP1 PUSH2 0x232D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x124A JUMPI PUSH1 0x3 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH6 0xFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xF299F61C7E493F99B20CB36C587CA903D085D5206BFE4452D295711E372DA029 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH2 0x1287 JUMP JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH32 0xC632231500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x127E SWAP2 SWAP1 PUSH2 0x226A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x1292 PUSH2 0x1396 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x12D1 JUMPI POP PUSH2 0x12CF PUSH2 0x13C0 JUMP JUMPDEST ISZERO JUMPDEST PUSH2 0x1310 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1307 SWAP1 PUSH2 0x232D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x3 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xFF3CAD3EE28C342AD5F3D7C8FF8559EE4D21EB48494092B82A1652E443B3420B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH0 PUSH1 0x4 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x4 PUSH0 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST TIMESTAMP PUSH32 0x0 PUSH6 0xFFFFFFFFFFFF AND LT ISZERO PUSH2 0x1482 JUMPI PUSH2 0x1410 PUSH2 0x1851 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x147D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1474 SWAP1 PUSH2 0x232D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1509 JUMP JUMPDEST PUSH2 0x148A PUSH2 0x1396 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x14C9 JUMPI POP PUSH2 0x14C7 PUSH2 0x13C0 JUMP JUMPDEST ISZERO JUMPDEST PUSH2 0x1508 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14FF SWAP1 PUSH2 0x232D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST TIMESTAMP PUSH1 0x3 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH6 0xFFFFFFFFFFFF AND PUSH6 0xFFFFFFFFFFFF AND LT ISZERO PUSH2 0x1667 JUMPI PUSH0 PUSH1 0x3 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH6 0xFFFFFFFFFFFF AND PUSH6 0xFFFFFFFFFFFF AND SUB PUSH2 0x158B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1582 SWAP1 PUSH2 0x2429 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1625 JUMPI PUSH1 0x3 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH6 0xFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH2 0x1620 DUP2 PUSH2 0x1F4B JUMP JUMPDEST PUSH2 0x1662 JUMP JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH32 0xC632231500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1659 SWAP2 SWAP1 PUSH2 0x226A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x16C3 JUMP JUMPDEST TIMESTAMP PUSH1 0x3 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH6 0xFFFFFFFFFFFF AND PUSH2 0x1687 SWAP2 SWAP1 PUSH2 0x2447 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x223A6CBB00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16BA SWAP2 SWAP1 PUSH2 0x248F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST TIMESTAMP PUSH32 0x0 PUSH6 0xFFFFFFFFFFFF AND LT ISZERO PUSH2 0x179A JUMPI PUSH2 0x1728 PUSH2 0x1851 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1795 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x178C SWAP1 PUSH2 0x232D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1821 JUMP JUMPDEST PUSH2 0x17A2 PUSH2 0x1396 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x17E1 JUMPI POP PUSH2 0x17DF PUSH2 0x13C0 JUMP JUMPDEST ISZERO JUMPDEST PUSH2 0x1820 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1817 SWAP1 PUSH2 0x232D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST PUSH2 0x182A DUP2 PUSH2 0x1F0D JUMP JUMPDEST PUSH2 0x1833 DUP2 PUSH2 0x1F2C JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH1 0x6 PUSH0 ADD PUSH1 0x15 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x7 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST TIMESTAMP PUSH32 0x0 PUSH6 0xFFFFFFFFFFFF AND LT ISZERO PUSH2 0x1925 JUMPI PUSH2 0x18B3 PUSH2 0x1851 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1920 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1917 SWAP1 PUSH2 0x232D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x19AC JUMP JUMPDEST PUSH2 0x192D PUSH2 0x1396 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x196C JUMPI POP PUSH2 0x196A PUSH2 0x13C0 JUMP JUMPDEST ISZERO JUMPDEST PUSH2 0x19AB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x19A2 SWAP1 PUSH2 0x232D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST PUSH0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT ISZERO PUSH2 0x1A53 JUMPI DUP1 PUSH1 0x1 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xE8D8E3C7C3EBEC0C177D0FE22D223F8B5071DB39155104808D45027E368BA77A PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH2 0x1A90 JUMP JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH32 0x84DBC6CB00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A87 SWAP2 SWAP1 PUSH2 0x226A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH1 0x8 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND GT DUP1 ISZERO PUSH2 0x1B50 JUMPI POP PUSH0 PUSH1 0x8 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x4 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH6 0xFFFFFFFFFFFF AND PUSH6 0xFFFFFFFFFFFF AND EQ JUMPDEST ISZERO PUSH2 0x1C71 JUMPI PUSH1 0x8 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 POP PUSH1 0x8 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND PUSH1 0x8 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD SLOAD CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x4A5552F2D245EB6039B03D3A4F2AEEAE275C3D6DC08931B837B5715FBBE5199 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x1CA3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x6C4360F000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 ADDRESS SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1CCC PUSH2 0x1396 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x1D0B JUMPI POP PUSH2 0x1D09 PUSH2 0x13C0 JUMP JUMPDEST ISZERO JUMPDEST PUSH2 0x1D4A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D41 SWAP1 PUSH2 0x232D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1ECD JUMPI PUSH1 0x1 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE DUP1 PUSH1 0x6 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x6 PUSH0 ADD PUSH1 0x15 DUP2 DUP2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x1E28 SWAP1 PUSH2 0x2378 JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP PUSH1 0x6 PUSH0 ADD PUSH1 0x15 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND PUSH1 0x6 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x5E86008A8467D1EFCCFE6CB6BD49BA7278D6AF2745A1E6994E443322A4237093 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x1F0A JUMP JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH32 0x84DBC6CB00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F01 SWAP2 SWAP1 PUSH2 0x226A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMP JUMPDEST DUP1 PUSH1 0x4 PUSH0 ADD PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST DUP1 PUSH1 0x5 PUSH0 ADD PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST DUP1 PUSH1 0x7 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x7 PUSH0 ADD PUSH1 0x15 DUP2 DUP2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x1FB1 SWAP1 PUSH2 0x2378 JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP PUSH1 0x7 PUSH0 ADD PUSH1 0x15 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND PUSH1 0x7 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xF7F7C26682668C39FD8C6DBCA125BD9466E743B9E38ACC3240867C139CD93C30 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2081 DUP3 PUSH2 0x2058 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2091 DUP2 PUSH2 0x2077 JUMP JUMPDEST DUP2 EQ PUSH2 0x209B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x20AC DUP2 PUSH2 0x2088 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x20C7 JUMPI PUSH2 0x20C6 PUSH2 0x2054 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x20D4 DUP5 DUP3 DUP6 ADD PUSH2 0x209E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x20F1 DUP2 PUSH2 0x20DD JUMP JUMPDEST DUP2 EQ PUSH2 0x20FB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x210C DUP2 PUSH2 0x20E8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2127 JUMPI PUSH2 0x2126 PUSH2 0x2054 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2134 DUP5 DUP3 DUP6 ADD PUSH2 0x20FE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x214F DUP2 PUSH2 0x213D JUMP JUMPDEST DUP2 EQ PUSH2 0x2159 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x216A DUP2 PUSH2 0x2146 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH4 0xFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2188 DUP2 PUSH2 0x2170 JUMP JUMPDEST DUP2 EQ PUSH2 0x2192 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x21A3 DUP2 PUSH2 0x217F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH6 0xFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x21C3 DUP2 PUSH2 0x21A9 JUMP JUMPDEST DUP2 EQ PUSH2 0x21CD JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x21DE DUP2 PUSH2 0x21BA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x21FD JUMPI PUSH2 0x21FC PUSH2 0x2054 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x220A DUP9 DUP3 DUP10 ADD PUSH2 0x209E JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x221B DUP9 DUP3 DUP10 ADD PUSH2 0x209E JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x222C DUP9 DUP3 DUP10 ADD PUSH2 0x215C JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x223D DUP9 DUP3 DUP10 ADD PUSH2 0x2195 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 PUSH2 0x224E DUP9 DUP3 DUP10 ADD PUSH2 0x21D0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH2 0x2264 DUP2 PUSH2 0x2077 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x227D PUSH0 DUP4 ADD DUP5 PUSH2 0x225B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x228C DUP2 PUSH2 0x20DD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x22A5 PUSH0 DUP4 ADD DUP5 PUSH2 0x2283 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x22B4 DUP2 PUSH2 0x2170 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x22CD PUSH0 DUP4 ADD DUP5 PUSH2 0x22AB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x416363657373206973206E6F742076616C696400000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2317 PUSH1 0x13 DUP4 PUSH2 0x22D3 JUMP JUMPDEST SWAP2 POP PUSH2 0x2322 DUP3 PUSH2 0x22E3 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2344 DUP2 PUSH2 0x230B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x2382 DUP3 PUSH2 0x2170 JUMP JUMPDEST SWAP2 POP PUSH4 0xFFFFFFFF DUP3 SUB PUSH2 0x2398 JUMPI PUSH2 0x2397 PUSH2 0x234B JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x23B6 DUP3 PUSH2 0x23A3 JUMP JUMPDEST SWAP2 POP PUSH2 0x23C1 DUP4 PUSH2 0x23A3 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x23D9 JUMPI PUSH2 0x23D8 PUSH2 0x234B JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x546865207265717565737420697320696E76616C696400000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2413 PUSH1 0x16 DUP4 PUSH2 0x22D3 JUMP JUMPDEST SWAP2 POP PUSH2 0x241E DUP3 PUSH2 0x23DF JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2440 DUP2 PUSH2 0x2407 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2451 DUP3 PUSH2 0x21A9 JUMP JUMPDEST SWAP2 POP PUSH2 0x245C DUP4 PUSH2 0x21A9 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP PUSH6 0xFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x247A JUMPI PUSH2 0x2479 PUSH2 0x234B JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2489 DUP2 PUSH2 0x21A9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x24A2 PUSH0 DUP4 ADD DUP5 PUSH2 0x2480 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDF EXTCODEHASH 0xC0 0x29 DUP1 INVALID DUP9 TIMESTAMP 0xFB 0x4E 0xBB SDIV 0x2A KECCAK256 PUSH18 0xA101A4D19B2EA7E4A013015F4A6A8D29DD64 PUSH20 0x6F6C634300081400330000000000000000000000 ",
							"sourceMap": "181:2791:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4553:252:3;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;7441:107;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4813:386;;;:::i;:::-;;1952:656:4;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5600:481:3;;;:::i;:::-;;2726:556;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;7070:100;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3928:374;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5420:172;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5207:101;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5316:96;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3290:630;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;6089:109;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7290:143;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;7178:104;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4310:114;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6320:315;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2620:344:4;;;:::i;:::-;;4436:109:3;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6206:104;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6643:419;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4553:252;1956:15;1936:17;:35;;;1932:227;;;2010:20;:18;:20::i;:::-;1996:34;;:10;:34;;;1988:66;;;;;;;;;;;;:::i;:::-;;;;;;;;;1932:227;;;2096:17;:15;:17::i;:::-;2082:31;;:10;:31;;;:53;;;;;2118:17;:15;:17::i;:::-;2117:18;2082:53;2074:85;;;;;;;;;;;;:::i;:::-;;;;;;;;;1932:227;4653:12:::1;4634:16;;:31;;;;;;;;;;;;;;;;;;4676:24;4695:4;4676:18;:24::i;:::-;4711:28;4734:4;4711:22;:28::i;:::-;4784:12;4757:40;;;;;;;;;;;;4553:252:::0;:::o;7441:107::-;2247:17;:15;:17::i;:::-;2233:31;;:10;:31;;;:53;;;;;2269:17;:15;:17::i;:::-;2268:18;2233:53;2225:85;;;;;;;;;;;;:::i;:::-;;;;;;;;;7511:29:::1;7534:5;7511:22;:29::i;:::-;7441:107:::0;:::o;4813:386::-;4884:10;4864:30;;:16;;;;;;;;;;;:30;;;4860:331;;4918:16;;4911:23;;;;;;;;;;;4970:10;4949;:18;;;:31;;;;;;;;;;;;;;;;;;4995:10;:16;;;:18;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;5028:25;5047:5;5028:18;:25::i;:::-;5123:10;:16;;;;;;;;;;;;5075:65;;5103:10;:18;;;;;;;;;;;;5075:65;;;;;;;;;;;;4860:331;;;5167:24;;;;;;;;;;;;;;4860:331;4813:386::o;1952:656:4:-;1711:15;1691:17;:35;;;1687:235;;;1765:20;:18;:20::i;:::-;1751:34;;:10;:34;;;1743:66;;;;;;;;;;;;:::i;:::-;;;;;;;;;1687:235;;;1851:21;:19;:21::i;:::-;1837:35;;:10;:35;;;:61;;;;;1877:21;:19;:21::i;:::-;1876:22;1837:61;1829:93;;;;;;;;;;;;:::i;:::-;;;;;;;;;1687:235;2130:1:::1;2109:23;;:9;:23;;;2105:85;;2156:11;:22;2168:9;2156:22;;;;;;;;;;;;;;;;2149:29:::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2105:85;2249:17;2205:11;:22;2217:9;2205:22;;;;;;;;;;;;;;;:40;;;:61;;:104;;;;;2303:6;2270:39;;:11;:22;2282:9;2270:22;;;;;;;;;;;;;;;:29;;;;;;;;;;;;:39;;;;2205:104;2201:400;;;2371:17;2328:11;:22;2340:9;2328:22;;;;;;;;;;;;;;;:40;;:60;;;;2435:6;2403:11;:22;2415:9;2403:22;;;;;;;;;;;;;;;:29;;;:38;;;;;;;;;;;;;;;;;;2494:5;2456:11;:22;2468:9;2456:22;;;;;;;;;;;;;;;:35;;;:43;;;;;;;;;;;;;;;;;;2572:6;2521:58;;2553:17;2542:9;2521:58;;;;;;;;;;;;2201:400;;;;1952:656:::0;;;;;:::o;5600:481:3:-;5680:10;5655:35;;:21;;;;;;;;;;;:35;;;5651:422;;5714:21;;5707:28;;;;;;;;;;;5775:10;5750:14;:22;;;:35;;;;;;;;;;;;;;;;;;5800:14;:20;;;:22;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;5841:14;:20;;;;;;;;;;;;5837:89;;;5881:29;5904:5;5881:22;:29::i;:::-;5837:89;6001:14;:20;;;;;;;;;;;;5945:77;;5977:14;:22;;;;;;;;;;;;5945:77;;;;;;;;;;;;5651:422;;;6049:24;;;;;;;;;;;;;;5651:422;5600:481::o;2726:556::-;1956:15;1936:17;:35;;;1932:227;;;2010:20;:18;:20::i;:::-;1996:34;;:10;:34;;;1988:66;;;;;;;;;;;;:::i;:::-;;;;;;;;;1932:227;;;2096:17;:15;:17::i;:::-;2082:31;;:10;:31;;;:53;;;;;2118:17;:15;:17::i;:::-;2117:18;2082:53;2074:85;;;;;;;;;;;;:::i;:::-;;;;;;;;;1932:227;2843:1:::1;2817:11;:23;;;:27;2813:459;;;2887:10;2865:32;;:10;:18;;;;;;;;;;;;:32;;::::0;2861:341:::1;;2918:37;2943:11;2918:24;:37::i;:::-;2861:341;;;3054:7;3036:15;:25;;;;:::i;:::-;2998:28;;:64;;;;;;;;;;;;;;;;;;3106:11;3081:22;::::0;:36:::1;;;;;;;;;;;;;;;;;;3174:11;3141:45;;;;;;;;;;;;2861:341;2813:459;;;3260:11;3228:44;;;;;;;;;;;:::i;:::-;;;;;;;;2813:459;2726:556:::0;:::o;7070:100::-;7116:7;7143:11;:19;;;;;;;;;;;;7136:26;;7070:100;:::o;3928:374::-;1956:15;1936:17;:35;;;1932:227;;;2010:20;:18;:20::i;:::-;1996:34;;:10;:34;;;1988:66;;;;;;;;;;;;:::i;:::-;;;;;;;;;1932:227;;;2096:17;:15;:17::i;:::-;2082:31;;:10;:31;;;:53;;;;;2118:17;:15;:17::i;:::-;2117:18;2082:53;2074:85;;;;;;;;;;;;:::i;:::-;;;;;;;;;1932:227;4045:8:::1;4019:34;;:22;::::0;::::1;;;;;;;;:34;;::::0;4015:279:::1;;4081:28;;4074:35;;;;;;;;;;;4135:22;::::0;4128:29:::1;;;;;;;;;;;4217:8;4182:44;;;;;;;;;;;;4015:279;;;4285:8;4253:41;;;;;;;;;;;:::i;:::-;;;;;;;;4015:279;3928:374:::0;:::o;5420:172::-;2247:17;:15;:17::i;:::-;2233:31;;:10;:31;;;:53;;;;;2269:17;:15;:17::i;:::-;2268:18;2233:53;2225:85;;;;;;;;;;;;:::i;:::-;;;;;;;;;5524:5:::1;5500:21;;:29;;;;;;;;;;;;;;;;;;5578:5;5547:37;;;;;;;;;;;;5420:172:::0;:::o;5207:101::-;5255:7;5282:10;:18;;;;;;;;;;;;5275:25;;5207:101;:::o;5316:96::-;5364:4;5388:10;:16;;;;;;;;;;;;5381:23;;5316:96;:::o;3290:630::-;1956:15;1936:17;:35;;;1932:227;;;2010:20;:18;:20::i;:::-;1996:34;;:10;:34;;;1988:66;;;;;;;;;;;;:::i;:::-;;;;;;;;;1932:227;;;2096:17;:15;:17::i;:::-;2082:31;;:10;:31;;;:53;;;;;2118:17;:15;:17::i;:::-;2117:18;2082:53;2074:85;;;;;;;;;;;;:::i;:::-;;;;;;;;;1932:227;3407:15:::1;3376:28;;;;;;;;;;;:46;;;3372:540;;;3479:1;3447:28;;;;;;;;;;;:33;;::::0;3439:67:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;3551:8;3525:34;;:22;::::0;::::1;;;;;;;;:34;;::::0;3521:267:::1;;3587:28;;3580:35;;;;;;;;;;;3641:22;::::0;3634:29:::1;;;;;;;;;;;3682:34;3707:8;3682:24;:34::i;:::-;3521:267;;;3779:8;3747:41;;;;;;;;;;;:::i;:::-;;;;;;;;3521:267;3372:540;;;3895:15;3857:28;;;;;;;;;;;:54;;;;:::i;:::-;3815:97;;;;;;;;;;;:::i;:::-;;;;;;;;3372:540;3290:630:::0;:::o;6089:109::-;6141:7;6168:14;:22;;;;;;;;;;;;6161:29;;6089:109;:::o;7290:143::-;1956:15;1936:17;:35;;;1932:227;;;2010:20;:18;:20::i;:::-;1996:34;;:10;:34;;;1988:66;;;;;;;;;;;;:::i;:::-;;;;;;;;;1932:227;;;2096:17;:15;:17::i;:::-;2082:31;;:10;:31;;;:53;;;;;2118:17;:15;:17::i;:::-;2117:18;2082:53;2074:85;;;;;;;;;;;;:::i;:::-;;;;;;;;;1932:227;7360:25:::1;7379:5;7360:18;:25::i;:::-;7396:29;7419:5;7396:22;:29::i;:::-;7290:143:::0;:::o;7178:104::-;7231:6;7257:11;:17;;;;;;;;;;;;7250:24;;7178:104;:::o;4310:114::-;4361:10;4395:9;:17;;;;;;;;;;;;4388:24;;4310:114;:::o;6320:315::-;1956:15;1936:17;:35;;;1932:227;;;2010:20;:18;:20::i;:::-;1996:34;;:10;:34;;;1988:66;;;;;;;;;;;;:::i;:::-;;;;;;;;;1932:227;;;2096:17;:15;:17::i;:::-;2082:31;;:10;:31;;;:53;;;;;2118:17;:15;:17::i;:::-;2117:18;2082:53;2074:85;;;;;;;;;;;;:::i;:::-;;;;;;;;;1932:227;6449:1:::1;6422:12;:24;;;:28;6418:207;;;6487:12;6467:17;;:32;;;;;;;;;;;;;;;;;;6546:12;6519:40;;;;;;;;;;;;6418:207;;;6612:12;6586:39;;;;;;;;;;;:::i;:::-;;;;;;;;6418:207;6320:315:::0;:::o;2620:344:4:-;2704:1;2671:11;:23;2683:10;2671:23;;;;;;;;;;;;;;;:30;;;;;;;;;;;;:34;;;:72;;;;;2742:1;2709:11;:23;2721:10;2709:23;;;;;;;;;;;;;;;:29;;;;;;;;;;;;:34;;;2671:72;2667:289;;;2756:11;:23;2768:10;2756:23;;;;;;;;;;;;;;;;2875:11;:23;2887:10;2875:23;;;;;;;;;;;;;;;:30;;;;;;;;;;;;2797:109;;2832:11;:23;2844:10;2832:23;;;;;;;;;;;;;;;:41;;;2820:10;2797:109;;;;;;;;;;;;2667:289;;;2932:24;;;;;;;;;;;;;;2667:289;2620:344::o;4436:109:3:-;4488:7;4528:4;4512:21;;4436:109;:::o;6206:104::-;6258:4;6282:14;:20;;;;;;;;;;;;6275:27;;6206:104;:::o;6643:419::-;2247:17;:15;:17::i;:::-;2233:31;;:10;:31;;;:53;;;;;2269:17;:15;:17::i;:::-;2268:18;2233:53;2225:85;;;;;;;;;;;;:::i;:::-;;;;;;;;;6765:12:::1;6744:33;;:17;;;;;;;;;;;:33;;::::0;6740:314:::1;;6801:17;;6794:24;;;;;;;;;;;6855:12;6833:11;:19;;;:34;;;;;;;;;;;;;;;;;;6882:11;:17;;;:19;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;6970:11;:17;;;;;;;;;;;;6921:67;;6949:11;:19;;;;;;;;;;;;6921:67;;;;;;;;;;;;6740:314;;;7041:12;7015:39;;;;;;;;;;;:::i;:::-;;;;;;;;6740:314;6643:419:::0;:::o;7788:91::-;7866:5;7847:10;:16;;;:24;;;;;;;;;;;;;;;;;;7788:91;:::o;7887:99::-;7973:5;7950:14;:20;;;:28;;;;;;;;;;;;;;;;;;7887:99;:::o;7560:220::-;7651:8;7631:9;:17;;;:28;;;;;;;;;;;;;;;;;;7670:9;:15;;;:17;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;7756:9;:15;;;;;;;;;;;;7703:69;;7737:9;:17;;;;;;;;;;;;7703:69;;;;;;;;;;;;7560:220;:::o;88:117:5:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:329::-;900:6;949:2;937:9;928:7;924:23;920:32;917:119;;;955:79;;:::i;:::-;917:119;1075:1;1100:53;1145:7;1136:6;1125:9;1121:22;1100:53;:::i;:::-;1090:63;;1046:117;841:329;;;;:::o;1176:90::-;1210:7;1253:5;1246:13;1239:21;1228:32;;1176:90;;;:::o;1272:116::-;1342:21;1357:5;1342:21;:::i;:::-;1335:5;1332:32;1322:60;;1378:1;1375;1368:12;1322:60;1272:116;:::o;1394:133::-;1437:5;1475:6;1462:20;1453:29;;1491:30;1515:5;1491:30;:::i;:::-;1394:133;;;;:::o;1533:323::-;1589:6;1638:2;1626:9;1617:7;1613:23;1609:32;1606:119;;;1644:79;;:::i;:::-;1606:119;1764:1;1789:50;1831:7;1822:6;1811:9;1807:22;1789:50;:::i;:::-;1779:60;;1735:114;1533:323;;;;:::o;1862:77::-;1899:7;1928:5;1917:16;;1862:77;;;:::o;1945:122::-;2018:24;2036:5;2018:24;:::i;:::-;2011:5;2008:35;1998:63;;2057:1;2054;2047:12;1998:63;1945:122;:::o;2073:139::-;2119:5;2157:6;2144:20;2135:29;;2173:33;2200:5;2173:33;:::i;:::-;2073:139;;;;:::o;2218:93::-;2254:7;2294:10;2287:5;2283:22;2272:33;;2218:93;;;:::o;2317:120::-;2389:23;2406:5;2389:23;:::i;:::-;2382:5;2379:34;2369:62;;2427:1;2424;2417:12;2369:62;2317:120;:::o;2443:137::-;2488:5;2526:6;2513:20;2504:29;;2542:32;2568:5;2542:32;:::i;:::-;2443:137;;;;:::o;2586:97::-;2622:7;2662:14;2655:5;2651:26;2640:37;;2586:97;;;:::o;2689:120::-;2761:23;2778:5;2761:23;:::i;:::-;2754:5;2751:34;2741:62;;2799:1;2796;2789:12;2741:62;2689:120;:::o;2815:137::-;2860:5;2898:6;2885:20;2876:29;;2914:32;2940:5;2914:32;:::i;:::-;2815:137;;;;:::o;2958:907::-;3051:6;3059;3067;3075;3083;3132:3;3120:9;3111:7;3107:23;3103:33;3100:120;;;3139:79;;:::i;:::-;3100:120;3259:1;3284:53;3329:7;3320:6;3309:9;3305:22;3284:53;:::i;:::-;3274:63;;3230:117;3386:2;3412:53;3457:7;3448:6;3437:9;3433:22;3412:53;:::i;:::-;3402:63;;3357:118;3514:2;3540:53;3585:7;3576:6;3565:9;3561:22;3540:53;:::i;:::-;3530:63;;3485:118;3642:2;3668:52;3712:7;3703:6;3692:9;3688:22;3668:52;:::i;:::-;3658:62;;3613:117;3769:3;3796:52;3840:7;3831:6;3820:9;3816:22;3796:52;:::i;:::-;3786:62;;3740:118;2958:907;;;;;;;;:::o;3871:118::-;3958:24;3976:5;3958:24;:::i;:::-;3953:3;3946:37;3871:118;;:::o;3995:222::-;4088:4;4126:2;4115:9;4111:18;4103:26;;4139:71;4207:1;4196:9;4192:17;4183:6;4139:71;:::i;:::-;3995:222;;;;:::o;4223:109::-;4304:21;4319:5;4304:21;:::i;:::-;4299:3;4292:34;4223:109;;:::o;4338:210::-;4425:4;4463:2;4452:9;4448:18;4440:26;;4476:65;4538:1;4527:9;4523:17;4514:6;4476:65;:::i;:::-;4338:210;;;;:::o;4554:115::-;4639:23;4656:5;4639:23;:::i;:::-;4634:3;4627:36;4554:115;;:::o;4675:218::-;4766:4;4804:2;4793:9;4789:18;4781:26;;4817:69;4883:1;4872:9;4868:17;4859:6;4817:69;:::i;:::-;4675:218;;;;:::o;4899:169::-;4983:11;5017:6;5012:3;5005:19;5057:4;5052:3;5048:14;5033:29;;4899:169;;;;:::o;5074:::-;5214:21;5210:1;5202:6;5198:14;5191:45;5074:169;:::o;5249:366::-;5391:3;5412:67;5476:2;5471:3;5412:67;:::i;:::-;5405:74;;5488:93;5577:3;5488:93;:::i;:::-;5606:2;5601:3;5597:12;5590:19;;5249:366;;;:::o;5621:419::-;5787:4;5825:2;5814:9;5810:18;5802:26;;5874:9;5868:4;5864:20;5860:1;5849:9;5845:17;5838:47;5902:131;6028:4;5902:131;:::i;:::-;5894:139;;5621:419;;;:::o;6046:180::-;6094:77;6091:1;6084:88;6191:4;6188:1;6181:15;6215:4;6212:1;6205:15;6232:175;6270:3;6293:23;6310:5;6293:23;:::i;:::-;6284:32;;6338:10;6331:5;6328:21;6325:47;;6352:18;;:::i;:::-;6325:47;6399:1;6392:5;6388:13;6381:20;;6232:175;;;:::o;6413:77::-;6450:7;6479:5;6468:16;;6413:77;;;:::o;6496:191::-;6536:3;6555:20;6573:1;6555:20;:::i;:::-;6550:25;;6589:20;6607:1;6589:20;:::i;:::-;6584:25;;6632:1;6629;6625:9;6618:16;;6653:3;6650:1;6647:10;6644:36;;;6660:18;;:::i;:::-;6644:36;6496:191;;;;:::o;6693:172::-;6833:24;6829:1;6821:6;6817:14;6810:48;6693:172;:::o;6871:366::-;7013:3;7034:67;7098:2;7093:3;7034:67;:::i;:::-;7027:74;;7110:93;7199:3;7110:93;:::i;:::-;7228:2;7223:3;7219:12;7212:19;;6871:366;;;:::o;7243:419::-;7409:4;7447:2;7436:9;7432:18;7424:26;;7496:9;7490:4;7486:20;7482:1;7471:9;7467:17;7460:47;7524:131;7650:4;7524:131;:::i;:::-;7516:139;;7243:419;;;:::o;7668:204::-;7707:4;7727:19;7744:1;7727:19;:::i;:::-;7722:24;;7760:19;7777:1;7760:19;:::i;:::-;7755:24;;7803:1;7800;7796:9;7788:17;;7827:14;7821:4;7818:24;7815:50;;;7845:18;;:::i;:::-;7815:50;7668:204;;;;:::o;7878:115::-;7963:23;7980:5;7963:23;:::i;:::-;7958:3;7951:36;7878:115;;:::o;7999:218::-;8090:4;8128:2;8117:9;8113:18;8105:26;;8141:69;8207:1;8196:9;8192:17;8183:6;8141:69;:::i;:::-;7999:218;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1887600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"cancelPendingRepublicAddress(address)": "infinite",
								"getAuthorityAddress()": "467",
								"getGovernance()": "2565",
								"getPresidentAdd()": "2631",
								"getPresidentBan()": "2552",
								"getPrimeMinisterAdd()": "2587",
								"getPrimeMinisterBan()": "2639",
								"getRepublicAddress()": "2542",
								"getgovernanceVersion()": "2640",
								"setCallerInfo(address,address,bytes32,uint32,uint48)": "infinite",
								"setPendigPresident(address)": "infinite",
								"setPendingGovernanceContractAddress(address)": "infinite",
								"setPendingPrimeMinister(address)": "30426",
								"setPendingRepublicAddress(address)": "infinite",
								"setPresidentBaned(bool)": "infinite",
								"setPrimeMinister(bool)": "29265",
								"transferCallerInfo()": "11228",
								"transferGovernanceContractAddress(address)": "infinite",
								"transferPresident()": "107786",
								"transferPrimeMinister()": "110041",
								"transferRepublicAddress(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 181,
									"end": 2972,
									"name": "PUSH",
									"source": 4,
									"value": "A0"
								},
								{
									"begin": 181,
									"end": 2972,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 181,
									"end": 2972,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 181,
									"end": 2972,
									"name": "CALLVALUE",
									"source": 4
								},
								{
									"begin": 181,
									"end": 2972,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 181,
									"end": 2972,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 181,
									"end": 2972,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 181,
									"end": 2972,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 181,
									"end": 2972,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 181,
									"end": 2972,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 181,
									"end": 2972,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 181,
									"end": 2972,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 181,
									"end": 2972,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 181,
									"end": 2972,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2629,
									"end": 2638,
									"name": "PUSH",
									"source": 3,
									"value": "16A8C800"
								},
								{
									"begin": 2611,
									"end": 2626,
									"name": "TIMESTAMP",
									"source": 3
								},
								{
									"begin": 2611,
									"end": 2638,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 2611,
									"end": 2638,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 2611,
									"end": 2638,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 2611,
									"end": 2638,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "5"
								},
								{
									"begin": 2611,
									"end": 2638,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 2611,
									"end": 2638,
									"name": "tag",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 2611,
									"end": 2638,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 2584,
									"end": 2639,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFF"
								},
								{
									"begin": 2584,
									"end": 2639,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 2584,
									"end": 2639,
									"name": "PUSH",
									"source": 3,
									"value": "80"
								},
								{
									"begin": 2584,
									"end": 2639,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 2584,
									"end": 2639,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFF"
								},
								{
									"begin": 2584,
									"end": 2639,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 2584,
									"end": 2639,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 2584,
									"end": 2639,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 2584,
									"end": 2639,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 2584,
									"end": 2639,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 2671,
									"end": 2681,
									"name": "CALLER",
									"source": 3
								},
								{
									"begin": 2650,
									"end": 2660,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 2650,
									"end": 2668,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 2650,
									"end": 2668,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 2650,
									"end": 2668,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 2650,
									"end": 2681,
									"name": "PUSH",
									"source": 3,
									"value": "100"
								},
								{
									"begin": 2650,
									"end": 2681,
									"name": "EXP",
									"source": 3
								},
								{
									"begin": 2650,
									"end": 2681,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 2650,
									"end": 2681,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 2650,
									"end": 2681,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 2650,
									"end": 2681,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2650,
									"end": 2681,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 2650,
									"end": 2681,
									"name": "NOT",
									"source": 3
								},
								{
									"begin": 2650,
									"end": 2681,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 2650,
									"end": 2681,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 2650,
									"end": 2681,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 2650,
									"end": 2681,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2650,
									"end": 2681,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 2650,
									"end": 2681,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 2650,
									"end": 2681,
									"name": "OR",
									"source": 3
								},
								{
									"begin": 2650,
									"end": 2681,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 2650,
									"end": 2681,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 2650,
									"end": 2681,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 2692,
									"end": 2702,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 2692,
									"end": 2708,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 2692,
									"end": 2708,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 2692,
									"end": 2708,
									"name": "PUSH",
									"source": 3,
									"value": "15"
								},
								{
									"begin": 2692,
									"end": 2710,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 2692,
									"end": 2710,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 2692,
									"end": 2710,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 2692,
									"end": 2710,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 2692,
									"end": 2710,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 2692,
									"end": 2710,
									"name": "PUSH",
									"source": 3,
									"value": "100"
								},
								{
									"begin": 2692,
									"end": 2710,
									"name": "EXP",
									"source": 3
								},
								{
									"begin": 2692,
									"end": 2710,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 2692,
									"end": 2710,
									"name": "DIV",
									"source": 3
								},
								{
									"begin": 2692,
									"end": 2710,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFF"
								},
								{
									"begin": 2692,
									"end": 2710,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 2692,
									"end": 2710,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 2692,
									"end": 2710,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 2692,
									"end": 2710,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 2692,
									"end": 2710,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 2692,
									"end": 2710,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "6"
								},
								{
									"begin": 2692,
									"end": 2710,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 2692,
									"end": 2710,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "7"
								},
								{
									"begin": 2692,
									"end": 2710,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 2692,
									"end": 2710,
									"name": "tag",
									"source": 3,
									"value": "6"
								},
								{
									"begin": 2692,
									"end": 2710,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 2692,
									"end": 2710,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 2692,
									"end": 2710,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 2692,
									"end": 2710,
									"name": "PUSH",
									"source": 3,
									"value": "100"
								},
								{
									"begin": 2692,
									"end": 2710,
									"name": "EXP",
									"source": 3
								},
								{
									"begin": 2692,
									"end": 2710,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 2692,
									"end": 2710,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 2692,
									"end": 2710,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 2692,
									"end": 2710,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFF"
								},
								{
									"begin": 2692,
									"end": 2710,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 2692,
									"end": 2710,
									"name": "NOT",
									"source": 3
								},
								{
									"begin": 2692,
									"end": 2710,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 2692,
									"end": 2710,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 2692,
									"end": 2710,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 2692,
									"end": 2710,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFF"
								},
								{
									"begin": 2692,
									"end": 2710,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 2692,
									"end": 2710,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 2692,
									"end": 2710,
									"name": "OR",
									"source": 3
								},
								{
									"begin": 2692,
									"end": 2710,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 2692,
									"end": 2710,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 2692,
									"end": 2710,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 2692,
									"end": 2710,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 181,
									"end": 2972,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "8"
								},
								{
									"begin": 181,
									"end": 2972,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 7,
									"end": 84,
									"name": "tag",
									"source": 5,
									"value": "9"
								},
								{
									"begin": 7,
									"end": 84,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 44,
									"end": 51,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 73,
									"end": 78,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 62,
									"end": 78,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 62,
									"end": 78,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 7,
									"end": 84,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 7,
									"end": 84,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 7,
									"end": 84,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 7,
									"end": 84,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 90,
									"end": 270,
									"name": "tag",
									"source": 5,
									"value": "10"
								},
								{
									"begin": 90,
									"end": 270,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 138,
									"end": 215,
									"name": "PUSH",
									"source": 5,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 135,
									"end": 136,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 128,
									"end": 216,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 235,
									"end": 239,
									"name": "PUSH",
									"source": 5,
									"value": "11"
								},
								{
									"begin": 232,
									"end": 233,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 225,
									"end": 240,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 259,
									"end": 263,
									"name": "PUSH",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 256,
									"end": 257,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 249,
									"end": 264,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 276,
									"end": 467,
									"name": "tag",
									"source": 5,
									"value": "5"
								},
								{
									"begin": 276,
									"end": 467,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 316,
									"end": 319,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 335,
									"end": 355,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "16"
								},
								{
									"begin": 353,
									"end": 354,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 335,
									"end": 355,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "9"
								},
								{
									"begin": 335,
									"end": 355,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 335,
									"end": 355,
									"name": "tag",
									"source": 5,
									"value": "16"
								},
								{
									"begin": 335,
									"end": 355,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 330,
									"end": 355,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 330,
									"end": 355,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 369,
									"end": 389,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "17"
								},
								{
									"begin": 387,
									"end": 388,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 369,
									"end": 389,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "9"
								},
								{
									"begin": 369,
									"end": 389,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 369,
									"end": 389,
									"name": "tag",
									"source": 5,
									"value": "17"
								},
								{
									"begin": 369,
									"end": 389,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 364,
									"end": 389,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 364,
									"end": 389,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 412,
									"end": 413,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 409,
									"end": 410,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 405,
									"end": 414,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 398,
									"end": 414,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 398,
									"end": 414,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 433,
									"end": 436,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 430,
									"end": 431,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 427,
									"end": 437,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 424,
									"end": 460,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 424,
									"end": 460,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "18"
								},
								{
									"begin": 424,
									"end": 460,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 440,
									"end": 458,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "19"
								},
								{
									"begin": 440,
									"end": 458,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "10"
								},
								{
									"begin": 440,
									"end": 458,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 440,
									"end": 458,
									"name": "tag",
									"source": 5,
									"value": "19"
								},
								{
									"begin": 440,
									"end": 458,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 424,
									"end": 460,
									"name": "tag",
									"source": 5,
									"value": "18"
								},
								{
									"begin": 424,
									"end": 460,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 276,
									"end": 467,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 276,
									"end": 467,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 276,
									"end": 467,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 276,
									"end": 467,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 276,
									"end": 467,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 473,
									"end": 566,
									"name": "tag",
									"source": 5,
									"value": "11"
								},
								{
									"begin": 473,
									"end": 566,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 509,
									"end": 516,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 549,
									"end": 559,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFF"
								},
								{
									"begin": 542,
									"end": 547,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 538,
									"end": 560,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 527,
									"end": 560,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 527,
									"end": 560,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 473,
									"end": 566,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 473,
									"end": 566,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 473,
									"end": 566,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 473,
									"end": 566,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 572,
									"end": 747,
									"name": "tag",
									"source": 5,
									"value": "7"
								},
								{
									"begin": 572,
									"end": 747,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 610,
									"end": 613,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 633,
									"end": 656,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "22"
								},
								{
									"begin": 650,
									"end": 655,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 633,
									"end": 656,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "11"
								},
								{
									"begin": 633,
									"end": 656,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 633,
									"end": 656,
									"name": "tag",
									"source": 5,
									"value": "22"
								},
								{
									"begin": 633,
									"end": 656,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 624,
									"end": 656,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 624,
									"end": 656,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 678,
									"end": 688,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFF"
								},
								{
									"begin": 671,
									"end": 676,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 668,
									"end": 689,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 665,
									"end": 712,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "23"
								},
								{
									"begin": 665,
									"end": 712,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 692,
									"end": 710,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 692,
									"end": 710,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "10"
								},
								{
									"begin": 692,
									"end": 710,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 692,
									"end": 710,
									"name": "tag",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 692,
									"end": 710,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 665,
									"end": 712,
									"name": "tag",
									"source": 5,
									"value": "23"
								},
								{
									"begin": 665,
									"end": 712,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 739,
									"end": 740,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 732,
									"end": 737,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 728,
									"end": 741,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 721,
									"end": 741,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 721,
									"end": 741,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 572,
									"end": 747,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 572,
									"end": 747,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 572,
									"end": 747,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 572,
									"end": 747,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 181,
									"end": 2972,
									"name": "tag",
									"source": 4,
									"value": "8"
								},
								{
									"begin": 181,
									"end": 2972,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 181,
									"end": 2972,
									"name": "PUSH",
									"source": 4,
									"value": "80"
								},
								{
									"begin": 181,
									"end": 2972,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 181,
									"end": 2972,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 181,
									"end": 2972,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 181,
									"end": 2972,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 181,
									"end": 2972,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 181,
									"end": 2972,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 181,
									"end": 2972,
									"name": "ASSIGNIMMUTABLE",
									"source": 4,
									"value": "3171"
								},
								{
									"begin": 181,
									"end": 2972,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 181,
									"end": 2972,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 181,
									"end": 2972,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220df3fc02980fe8842fb4ebb052a2071a101a4d19b2ea7e4a013015f4a6a8d29dd64736f6c63430008140033",
									".code": [
										{
											"begin": 181,
											"end": 2972,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 181,
											"end": 2972,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 181,
											"end": 2972,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 181,
											"end": 2972,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 181,
											"end": 2972,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 181,
											"end": 2972,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 181,
											"end": 2972,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 181,
											"end": 2972,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 181,
											"end": 2972,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 181,
											"end": 2972,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 181,
											"end": 2972,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 181,
											"end": 2972,
											"name": "tag",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 181,
											"end": 2972,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 181,
											"end": 2972,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 181,
											"end": 2972,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 181,
											"end": 2972,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 181,
											"end": 2972,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 181,
											"end": 2972,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 181,
											"end": 2972,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 181,
											"end": 2972,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 181,
											"end": 2972,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 181,
											"end": 2972,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 181,
											"end": 2972,
											"name": "SHR",
											"source": 4
										},
										{
											"begin": 181,
											"end": 2972,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 181,
											"end": 2972,
											"name": "PUSH",
											"source": 4,
											"value": "6CF106D7"
										},
										{
											"begin": 181,
											"end": 2972,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 181,
											"end": 2972,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 181,
											"end": 2972,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 181,
											"end": 2972,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 181,
											"end": 2972,
											"name": "PUSH",
											"source": 4,
											"value": "C5A1C5C1"
										},
										{
											"begin": 181,
											"end": 2972,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 181,
											"end": 2972,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 181,
											"end": 2972,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 181,
											"end": 2972,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 181,
											"end": 2972,
											"name": "PUSH",
											"source": 4,
											"value": "C5A1C5C1"
										},
										{
											"begin": 181,
											"end": 2972,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 181,
											"end": 2972,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 181,
											"end": 2972,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 181,
											"end": 2972,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 181,
											"end": 2972,
											"name": "PUSH",
											"source": 4,
											"value": "CA4CCE68"
										},
										{
											"begin": 181,
											"end": 2972,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 181,
											"end": 2972,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 181,
											"end": 2972,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 181,
											"end": 2972,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 181,
											"end": 2972,
											"name": "PUSH",
											"source": 4,
											"value": "CD01CC28"
										},
										{
											"begin": 181,
											"end": 2972,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 181,
											"end": 2972,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 181,
											"end": 2972,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 181,
											"end": 2972,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 181,
											"end": 2972,
											"name": "PUSH",
											"source": 4,
											"value": "E47A9D46"
										},
										{
											"begin": 181,
											"end": 2972,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 181,
											"end": 2972,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 181,
											"end": 2972,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 181,
											"end": 2972,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 181,
											"end": 2972,
											"name": "PUSH",
											"source": 4,
											"value": "E4F3E947"
										},
										{
											"begin": 181,
											"end": 2972,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 181,
											"end": 2972,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 181,
											"end": 2972,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 181,
											"end": 2972,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 181,
											"end": 2972,
											"name": "PUSH",
											"source": 4,
											"value": "EE7126C3"
										},
										{
											"begin": 181,
											"end": 2972,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 181,
											"end": 2972,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 181,
											"end": 2972,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 181,
											"end": 2972,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 181,
											"end": 2972,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 181,
											"end": 2972,
											"name": "tag",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 181,
											"end": 2972,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 181,
											"end": 2972,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 181,
											"end": 2972,
											"name": "PUSH",
											"source": 4,
											"value": "6CF106D7"
										},
										{
											"begin": 181,
											"end": 2972,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 181,
											"end": 2972,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 181,
											"end": 2972,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 181,
											"end": 2972,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 181,
											"end": 2972,
											"name": "PUSH",
											"source": 4,
											"value": "9C20FE71"
										},
										{
											"begin": 181,
											"end": 2972,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 181,
											"end": 2972,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 181,
											"end": 2972,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 181,
											"end": 2972,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 181,
											"end": 2972,
											"name": "PUSH",
											"source": 4,
											"value": "A53DA00B"
										},
										{
											"begin": 181,
											"end": 2972,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 181,
											"end": 2972,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 181,
											"end": 2972,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 181,
											"end": 2972,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 181,
											"end": 2972,
											"name": "PUSH",
											"source": 4,
											"value": "B5C09C68"
										},
										{
											"begin": 181,
											"end": 2972,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 181,
											"end": 2972,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 181,
											"end": 2972,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 181,
											"end": 2972,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 181,
											"end": 2972,
											"name": "PUSH",
											"source": 4,
											"value": "C387B49C"
										},
										{
											"begin": 181,
											"end": 2972,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 181,
											"end": 2972,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 181,
											"end": 2972,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 181,
											"end": 2972,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 181,
											"end": 2972,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 181,
											"end": 2972,
											"name": "tag",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 181,
											"end": 2972,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 181,
											"end": 2972,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 181,
											"end": 2972,
											"name": "PUSH",
											"source": 4,
											"value": "1F72783A"
										},
										{
											"begin": 181,
											"end": 2972,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 181,
											"end": 2972,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 181,
											"end": 2972,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 181,
											"end": 2972,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 181,
											"end": 2972,
											"name": "PUSH",
											"source": 4,
											"value": "1F72783A"
										},
										{
											"begin": 181,
											"end": 2972,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 181,
											"end": 2972,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 181,
											"end": 2972,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 181,
											"end": 2972,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 181,
											"end": 2972,
											"name": "PUSH",
											"source": 4,
											"value": "289B3C0D"
										},
										{
											"begin": 181,
											"end": 2972,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 181,
											"end": 2972,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 181,
											"end": 2972,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 181,
											"end": 2972,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 181,
											"end": 2972,
											"name": "PUSH",
											"source": 4,
											"value": "52E305DE"
										},
										{
											"begin": 181,
											"end": 2972,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 181,
											"end": 2972,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 181,
											"end": 2972,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 181,
											"end": 2972,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 181,
											"end": 2972,
											"name": "PUSH",
											"source": 4,
											"value": "544FA93E"
										},
										{
											"begin": 181,
											"end": 2972,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 181,
											"end": 2972,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 181,
											"end": 2972,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 181,
											"end": 2972,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 181,
											"end": 2972,
											"name": "PUSH",
											"source": 4,
											"value": "66410997"
										},
										{
											"begin": 181,
											"end": 2972,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 181,
											"end": 2972,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 181,
											"end": 2972,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 181,
											"end": 2972,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 181,
											"end": 2972,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 181,
											"end": 2972,
											"name": "tag",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 181,
											"end": 2972,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 181,
											"end": 2972,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 181,
											"end": 2972,
											"name": "PUSH",
											"source": 4,
											"value": "54203BD"
										},
										{
											"begin": 181,
											"end": 2972,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 181,
											"end": 2972,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 181,
											"end": 2972,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 181,
											"end": 2972,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 181,
											"end": 2972,
											"name": "PUSH",
											"source": 4,
											"value": "6E99D93"
										},
										{
											"begin": 181,
											"end": 2972,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 181,
											"end": 2972,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 181,
											"end": 2972,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 181,
											"end": 2972,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 181,
											"end": 2972,
											"name": "PUSH",
											"source": 4,
											"value": "DF4C390"
										},
										{
											"begin": 181,
											"end": 2972,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 181,
											"end": 2972,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 181,
											"end": 2972,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 181,
											"end": 2972,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 181,
											"end": 2972,
											"name": "PUSH",
											"source": 4,
											"value": "14C58B51"
										},
										{
											"begin": 181,
											"end": 2972,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 181,
											"end": 2972,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 181,
											"end": 2972,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 181,
											"end": 2972,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 181,
											"end": 2972,
											"name": "PUSH",
											"source": 4,
											"value": "18074EEE"
										},
										{
											"begin": 181,
											"end": 2972,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 181,
											"end": 2972,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 181,
											"end": 2972,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 181,
											"end": 2972,
											"name": "tag",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 181,
											"end": 2972,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 181,
											"end": 2972,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 181,
											"end": 2972,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 181,
											"end": 2972,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 4553,
											"end": 4805,
											"name": "tag",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 4553,
											"end": 4805,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4553,
											"end": 4805,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "27"
										},
										{
											"begin": 4553,
											"end": 4805,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4553,
											"end": 4805,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4553,
											"end": 4805,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 4553,
											"end": 4805,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4553,
											"end": 4805,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4553,
											"end": 4805,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4553,
											"end": 4805,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4553,
											"end": 4805,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 4553,
											"end": 4805,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4553,
											"end": 4805,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4553,
											"end": 4805,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 4553,
											"end": 4805,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4553,
											"end": 4805,
											"name": "tag",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 4553,
											"end": 4805,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4553,
											"end": 4805,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 4553,
											"end": 4805,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4553,
											"end": 4805,
											"name": "tag",
											"source": 3,
											"value": "27"
										},
										{
											"begin": 4553,
											"end": 4805,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4553,
											"end": 4805,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 7441,
											"end": 7548,
											"name": "tag",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 7441,
											"end": 7548,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7441,
											"end": 7548,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 7441,
											"end": 7548,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 7441,
											"end": 7548,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7441,
											"end": 7548,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 7441,
											"end": 7548,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7441,
											"end": 7548,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7441,
											"end": 7548,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7441,
											"end": 7548,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7441,
											"end": 7548,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 7441,
											"end": 7548,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7441,
											"end": 7548,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7441,
											"end": 7548,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 7441,
											"end": 7548,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7441,
											"end": 7548,
											"name": "tag",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 7441,
											"end": 7548,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7441,
											"end": 7548,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 7441,
											"end": 7548,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7441,
											"end": 7548,
											"name": "tag",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 7441,
											"end": 7548,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7441,
											"end": 7548,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 4813,
											"end": 5199,
											"name": "tag",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 4813,
											"end": 5199,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4813,
											"end": 5199,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "35"
										},
										{
											"begin": 4813,
											"end": 5199,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 4813,
											"end": 5199,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4813,
											"end": 5199,
											"name": "tag",
											"source": 3,
											"value": "35"
										},
										{
											"begin": 4813,
											"end": 5199,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4813,
											"end": 5199,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 1952,
											"end": 2608,
											"name": "tag",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 1952,
											"end": 2608,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1952,
											"end": 2608,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 1952,
											"end": 2608,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1952,
											"end": 2608,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1952,
											"end": 2608,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 1952,
											"end": 2608,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1952,
											"end": 2608,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1952,
											"end": 2608,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1952,
											"end": 2608,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1952,
											"end": 2608,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 1952,
											"end": 2608,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1952,
											"end": 2608,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1952,
											"end": 2608,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "39"
										},
										{
											"begin": 1952,
											"end": 2608,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1952,
											"end": 2608,
											"name": "tag",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 1952,
											"end": 2608,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1952,
											"end": 2608,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1952,
											"end": 2608,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1952,
											"end": 2608,
											"name": "tag",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 1952,
											"end": 2608,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1952,
											"end": 2608,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 5600,
											"end": 6081,
											"name": "tag",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 5600,
											"end": 6081,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5600,
											"end": 6081,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 5600,
											"end": 6081,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 5600,
											"end": 6081,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5600,
											"end": 6081,
											"name": "tag",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 5600,
											"end": 6081,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5600,
											"end": 6081,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 2726,
											"end": 3282,
											"name": "tag",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 2726,
											"end": 3282,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2726,
											"end": 3282,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 2726,
											"end": 3282,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2726,
											"end": 3282,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2726,
											"end": 3282,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 2726,
											"end": 3282,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2726,
											"end": 3282,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2726,
											"end": 3282,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2726,
											"end": 3282,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2726,
											"end": 3282,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 2726,
											"end": 3282,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2726,
											"end": 3282,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2726,
											"end": 3282,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 2726,
											"end": 3282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2726,
											"end": 3282,
											"name": "tag",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 2726,
											"end": 3282,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2726,
											"end": 3282,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "45"
										},
										{
											"begin": 2726,
											"end": 3282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2726,
											"end": 3282,
											"name": "tag",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 2726,
											"end": 3282,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2726,
											"end": 3282,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 7070,
											"end": 7170,
											"name": "tag",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 7070,
											"end": 7170,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7070,
											"end": 7170,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 7070,
											"end": 7170,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "47"
										},
										{
											"begin": 7070,
											"end": 7170,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7070,
											"end": 7170,
											"name": "tag",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 7070,
											"end": 7170,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7070,
											"end": 7170,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7070,
											"end": 7170,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7070,
											"end": 7170,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 7070,
											"end": 7170,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7070,
											"end": 7170,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7070,
											"end": 7170,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "49"
										},
										{
											"begin": 7070,
											"end": 7170,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7070,
											"end": 7170,
											"name": "tag",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 7070,
											"end": 7170,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7070,
											"end": 7170,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7070,
											"end": 7170,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7070,
											"end": 7170,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7070,
											"end": 7170,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7070,
											"end": 7170,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7070,
											"end": 7170,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7070,
											"end": 7170,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 3928,
											"end": 4302,
											"name": "tag",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 3928,
											"end": 4302,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3928,
											"end": 4302,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 3928,
											"end": 4302,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3928,
											"end": 4302,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3928,
											"end": 4302,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 3928,
											"end": 4302,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3928,
											"end": 4302,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3928,
											"end": 4302,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3928,
											"end": 4302,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3928,
											"end": 4302,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "51"
										},
										{
											"begin": 3928,
											"end": 4302,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3928,
											"end": 4302,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3928,
											"end": 4302,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 3928,
											"end": 4302,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3928,
											"end": 4302,
											"name": "tag",
											"source": 3,
											"value": "51"
										},
										{
											"begin": 3928,
											"end": 4302,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3928,
											"end": 4302,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "52"
										},
										{
											"begin": 3928,
											"end": 4302,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3928,
											"end": 4302,
											"name": "tag",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 3928,
											"end": 4302,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3928,
											"end": 4302,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 5420,
											"end": 5592,
											"name": "tag",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 5420,
											"end": 5592,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5420,
											"end": 5592,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "53"
										},
										{
											"begin": 5420,
											"end": 5592,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 5420,
											"end": 5592,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5420,
											"end": 5592,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 5420,
											"end": 5592,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5420,
											"end": 5592,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5420,
											"end": 5592,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5420,
											"end": 5592,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5420,
											"end": 5592,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 5420,
											"end": 5592,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5420,
											"end": 5592,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5420,
											"end": 5592,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 5420,
											"end": 5592,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5420,
											"end": 5592,
											"name": "tag",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 5420,
											"end": 5592,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5420,
											"end": 5592,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "55"
										},
										{
											"begin": 5420,
											"end": 5592,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5420,
											"end": 5592,
											"name": "tag",
											"source": 3,
											"value": "53"
										},
										{
											"begin": 5420,
											"end": 5592,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5420,
											"end": 5592,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 5207,
											"end": 5308,
											"name": "tag",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 5207,
											"end": 5308,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5207,
											"end": 5308,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "56"
										},
										{
											"begin": 5207,
											"end": 5308,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "57"
										},
										{
											"begin": 5207,
											"end": 5308,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5207,
											"end": 5308,
											"name": "tag",
											"source": 3,
											"value": "56"
										},
										{
											"begin": 5207,
											"end": 5308,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5207,
											"end": 5308,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5207,
											"end": 5308,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5207,
											"end": 5308,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "58"
										},
										{
											"begin": 5207,
											"end": 5308,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5207,
											"end": 5308,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5207,
											"end": 5308,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "49"
										},
										{
											"begin": 5207,
											"end": 5308,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5207,
											"end": 5308,
											"name": "tag",
											"source": 3,
											"value": "58"
										},
										{
											"begin": 5207,
											"end": 5308,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5207,
											"end": 5308,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5207,
											"end": 5308,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5207,
											"end": 5308,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5207,
											"end": 5308,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5207,
											"end": 5308,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5207,
											"end": 5308,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5207,
											"end": 5308,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 5316,
											"end": 5412,
											"name": "tag",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 5316,
											"end": 5412,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5316,
											"end": 5412,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "59"
										},
										{
											"begin": 5316,
											"end": 5412,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 5316,
											"end": 5412,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5316,
											"end": 5412,
											"name": "tag",
											"source": 3,
											"value": "59"
										},
										{
											"begin": 5316,
											"end": 5412,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5316,
											"end": 5412,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5316,
											"end": 5412,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5316,
											"end": 5412,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "61"
										},
										{
											"begin": 5316,
											"end": 5412,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5316,
											"end": 5412,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5316,
											"end": 5412,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "62"
										},
										{
											"begin": 5316,
											"end": 5412,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5316,
											"end": 5412,
											"name": "tag",
											"source": 3,
											"value": "61"
										},
										{
											"begin": 5316,
											"end": 5412,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5316,
											"end": 5412,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5316,
											"end": 5412,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5316,
											"end": 5412,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5316,
											"end": 5412,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5316,
											"end": 5412,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5316,
											"end": 5412,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5316,
											"end": 5412,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 3290,
											"end": 3920,
											"name": "tag",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 3290,
											"end": 3920,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3290,
											"end": 3920,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "63"
										},
										{
											"begin": 3290,
											"end": 3920,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3290,
											"end": 3920,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3290,
											"end": 3920,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 3290,
											"end": 3920,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3290,
											"end": 3920,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3290,
											"end": 3920,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3290,
											"end": 3920,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3290,
											"end": 3920,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 3290,
											"end": 3920,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3290,
											"end": 3920,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3290,
											"end": 3920,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 3290,
											"end": 3920,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3290,
											"end": 3920,
											"name": "tag",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 3290,
											"end": 3920,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3290,
											"end": 3920,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "65"
										},
										{
											"begin": 3290,
											"end": 3920,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3290,
											"end": 3920,
											"name": "tag",
											"source": 3,
											"value": "63"
										},
										{
											"begin": 3290,
											"end": 3920,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3290,
											"end": 3920,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 6089,
											"end": 6198,
											"name": "tag",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 6089,
											"end": 6198,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6089,
											"end": 6198,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 6089,
											"end": 6198,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "67"
										},
										{
											"begin": 6089,
											"end": 6198,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6089,
											"end": 6198,
											"name": "tag",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 6089,
											"end": 6198,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6089,
											"end": 6198,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6089,
											"end": 6198,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6089,
											"end": 6198,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "68"
										},
										{
											"begin": 6089,
											"end": 6198,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6089,
											"end": 6198,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6089,
											"end": 6198,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "49"
										},
										{
											"begin": 6089,
											"end": 6198,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6089,
											"end": 6198,
											"name": "tag",
											"source": 3,
											"value": "68"
										},
										{
											"begin": 6089,
											"end": 6198,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6089,
											"end": 6198,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6089,
											"end": 6198,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6089,
											"end": 6198,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6089,
											"end": 6198,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6089,
											"end": 6198,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6089,
											"end": 6198,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6089,
											"end": 6198,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 7290,
											"end": 7433,
											"name": "tag",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 7290,
											"end": 7433,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7290,
											"end": 7433,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "69"
										},
										{
											"begin": 7290,
											"end": 7433,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 7290,
											"end": 7433,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7290,
											"end": 7433,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 7290,
											"end": 7433,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7290,
											"end": 7433,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7290,
											"end": 7433,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7290,
											"end": 7433,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7290,
											"end": 7433,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "70"
										},
										{
											"begin": 7290,
											"end": 7433,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7290,
											"end": 7433,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7290,
											"end": 7433,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 7290,
											"end": 7433,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7290,
											"end": 7433,
											"name": "tag",
											"source": 3,
											"value": "70"
										},
										{
											"begin": 7290,
											"end": 7433,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7290,
											"end": 7433,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "71"
										},
										{
											"begin": 7290,
											"end": 7433,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7290,
											"end": 7433,
											"name": "tag",
											"source": 3,
											"value": "69"
										},
										{
											"begin": 7290,
											"end": 7433,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7290,
											"end": 7433,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 7178,
											"end": 7282,
											"name": "tag",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 7178,
											"end": 7282,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7178,
											"end": 7282,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "72"
										},
										{
											"begin": 7178,
											"end": 7282,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "73"
										},
										{
											"begin": 7178,
											"end": 7282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7178,
											"end": 7282,
											"name": "tag",
											"source": 3,
											"value": "72"
										},
										{
											"begin": 7178,
											"end": 7282,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7178,
											"end": 7282,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7178,
											"end": 7282,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7178,
											"end": 7282,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "74"
										},
										{
											"begin": 7178,
											"end": 7282,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7178,
											"end": 7282,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7178,
											"end": 7282,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "75"
										},
										{
											"begin": 7178,
											"end": 7282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7178,
											"end": 7282,
											"name": "tag",
											"source": 3,
											"value": "74"
										},
										{
											"begin": 7178,
											"end": 7282,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7178,
											"end": 7282,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7178,
											"end": 7282,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7178,
											"end": 7282,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7178,
											"end": 7282,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7178,
											"end": 7282,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7178,
											"end": 7282,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7178,
											"end": 7282,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 4310,
											"end": 4424,
											"name": "tag",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 4310,
											"end": 4424,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4310,
											"end": 4424,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "76"
										},
										{
											"begin": 4310,
											"end": 4424,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "77"
										},
										{
											"begin": 4310,
											"end": 4424,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4310,
											"end": 4424,
											"name": "tag",
											"source": 3,
											"value": "76"
										},
										{
											"begin": 4310,
											"end": 4424,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4310,
											"end": 4424,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4310,
											"end": 4424,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4310,
											"end": 4424,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "78"
										},
										{
											"begin": 4310,
											"end": 4424,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4310,
											"end": 4424,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4310,
											"end": 4424,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "49"
										},
										{
											"begin": 4310,
											"end": 4424,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4310,
											"end": 4424,
											"name": "tag",
											"source": 3,
											"value": "78"
										},
										{
											"begin": 4310,
											"end": 4424,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4310,
											"end": 4424,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4310,
											"end": 4424,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4310,
											"end": 4424,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4310,
											"end": 4424,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4310,
											"end": 4424,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4310,
											"end": 4424,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4310,
											"end": 4424,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 6320,
											"end": 6635,
											"name": "tag",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 6320,
											"end": 6635,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6320,
											"end": 6635,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "79"
										},
										{
											"begin": 6320,
											"end": 6635,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 6320,
											"end": 6635,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6320,
											"end": 6635,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 6320,
											"end": 6635,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6320,
											"end": 6635,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6320,
											"end": 6635,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6320,
											"end": 6635,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6320,
											"end": 6635,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 6320,
											"end": 6635,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6320,
											"end": 6635,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6320,
											"end": 6635,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 6320,
											"end": 6635,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6320,
											"end": 6635,
											"name": "tag",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 6320,
											"end": 6635,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6320,
											"end": 6635,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "81"
										},
										{
											"begin": 6320,
											"end": 6635,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6320,
											"end": 6635,
											"name": "tag",
											"source": 3,
											"value": "79"
										},
										{
											"begin": 6320,
											"end": 6635,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6320,
											"end": 6635,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 2620,
											"end": 2964,
											"name": "tag",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2620,
											"end": 2964,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2620,
											"end": 2964,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "82"
										},
										{
											"begin": 2620,
											"end": 2964,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "83"
										},
										{
											"begin": 2620,
											"end": 2964,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2620,
											"end": 2964,
											"name": "tag",
											"source": 4,
											"value": "82"
										},
										{
											"begin": 2620,
											"end": 2964,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2620,
											"end": 2964,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 4436,
											"end": 4545,
											"name": "tag",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 4436,
											"end": 4545,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4436,
											"end": 4545,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 4436,
											"end": 4545,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "85"
										},
										{
											"begin": 4436,
											"end": 4545,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4436,
											"end": 4545,
											"name": "tag",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 4436,
											"end": 4545,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4436,
											"end": 4545,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4436,
											"end": 4545,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4436,
											"end": 4545,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "86"
										},
										{
											"begin": 4436,
											"end": 4545,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4436,
											"end": 4545,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4436,
											"end": 4545,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "49"
										},
										{
											"begin": 4436,
											"end": 4545,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4436,
											"end": 4545,
											"name": "tag",
											"source": 3,
											"value": "86"
										},
										{
											"begin": 4436,
											"end": 4545,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4436,
											"end": 4545,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4436,
											"end": 4545,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4436,
											"end": 4545,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4436,
											"end": 4545,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4436,
											"end": 4545,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4436,
											"end": 4545,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4436,
											"end": 4545,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 6206,
											"end": 6310,
											"name": "tag",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 6206,
											"end": 6310,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6206,
											"end": 6310,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "87"
										},
										{
											"begin": 6206,
											"end": 6310,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "88"
										},
										{
											"begin": 6206,
											"end": 6310,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6206,
											"end": 6310,
											"name": "tag",
											"source": 3,
											"value": "87"
										},
										{
											"begin": 6206,
											"end": 6310,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6206,
											"end": 6310,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6206,
											"end": 6310,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6206,
											"end": 6310,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "89"
										},
										{
											"begin": 6206,
											"end": 6310,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6206,
											"end": 6310,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6206,
											"end": 6310,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "62"
										},
										{
											"begin": 6206,
											"end": 6310,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6206,
											"end": 6310,
											"name": "tag",
											"source": 3,
											"value": "89"
										},
										{
											"begin": 6206,
											"end": 6310,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6206,
											"end": 6310,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6206,
											"end": 6310,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6206,
											"end": 6310,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6206,
											"end": 6310,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6206,
											"end": 6310,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6206,
											"end": 6310,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6206,
											"end": 6310,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 6643,
											"end": 7062,
											"name": "tag",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 6643,
											"end": 7062,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6643,
											"end": 7062,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "90"
										},
										{
											"begin": 6643,
											"end": 7062,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 6643,
											"end": 7062,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6643,
											"end": 7062,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 6643,
											"end": 7062,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6643,
											"end": 7062,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6643,
											"end": 7062,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6643,
											"end": 7062,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6643,
											"end": 7062,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "91"
										},
										{
											"begin": 6643,
											"end": 7062,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6643,
											"end": 7062,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6643,
											"end": 7062,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 6643,
											"end": 7062,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6643,
											"end": 7062,
											"name": "tag",
											"source": 3,
											"value": "91"
										},
										{
											"begin": 6643,
											"end": 7062,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6643,
											"end": 7062,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "92"
										},
										{
											"begin": 6643,
											"end": 7062,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6643,
											"end": 7062,
											"name": "tag",
											"source": 3,
											"value": "90"
										},
										{
											"begin": 6643,
											"end": 7062,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6643,
											"end": 7062,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 4553,
											"end": 4805,
											"name": "tag",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 4553,
											"end": 4805,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1956,
											"end": 1971,
											"name": "TIMESTAMP",
											"source": 3
										},
										{
											"begin": 1936,
											"end": 1953,
											"name": "PUSHIMMUTABLE",
											"source": 3,
											"value": "3171"
										},
										{
											"begin": 1936,
											"end": 1971,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFF"
										},
										{
											"begin": 1936,
											"end": 1971,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1936,
											"end": 1971,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 1932,
											"end": 2159,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1932,
											"end": 2159,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "94"
										},
										{
											"begin": 1932,
											"end": 2159,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2010,
											"end": 2030,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "95"
										},
										{
											"begin": 2010,
											"end": 2028,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "77"
										},
										{
											"begin": 2010,
											"end": 2030,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2010,
											"end": 2030,
											"name": "tag",
											"source": 3,
											"value": "95"
										},
										{
											"begin": 2010,
											"end": 2030,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1996,
											"end": 2030,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1996,
											"end": 2030,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1996,
											"end": 2006,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 1996,
											"end": 2030,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1996,
											"end": 2030,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1996,
											"end": 2030,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1988,
											"end": 2054,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "96"
										},
										{
											"begin": 1988,
											"end": 2054,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1988,
											"end": 2054,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1988,
											"end": 2054,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1988,
											"end": 2054,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1988,
											"end": 2054,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1988,
											"end": 2054,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1988,
											"end": 2054,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1988,
											"end": 2054,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1988,
											"end": 2054,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 1988,
											"end": 2054,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1988,
											"end": 2054,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "98"
										},
										{
											"begin": 1988,
											"end": 2054,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1988,
											"end": 2054,
											"name": "tag",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 1988,
											"end": 2054,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1988,
											"end": 2054,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1988,
											"end": 2054,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1988,
											"end": 2054,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1988,
											"end": 2054,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1988,
											"end": 2054,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1988,
											"end": 2054,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1988,
											"end": 2054,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1988,
											"end": 2054,
											"name": "tag",
											"source": 3,
											"value": "96"
										},
										{
											"begin": 1988,
											"end": 2054,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1932,
											"end": 2159,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "99"
										},
										{
											"begin": 1932,
											"end": 2159,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1932,
											"end": 2159,
											"name": "tag",
											"source": 3,
											"value": "94"
										},
										{
											"begin": 1932,
											"end": 2159,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2096,
											"end": 2113,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 2096,
											"end": 2111,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "57"
										},
										{
											"begin": 2096,
											"end": 2113,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2096,
											"end": 2113,
											"name": "tag",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 2096,
											"end": 2113,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2082,
											"end": 2113,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2082,
											"end": 2113,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2082,
											"end": 2092,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 2082,
											"end": 2113,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2082,
											"end": 2113,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2082,
											"end": 2113,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 2082,
											"end": 2135,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2082,
											"end": 2135,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2082,
											"end": 2135,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "101"
										},
										{
											"begin": 2082,
											"end": 2135,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2082,
											"end": 2135,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2118,
											"end": 2135,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "102"
										},
										{
											"begin": 2118,
											"end": 2133,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 2118,
											"end": 2135,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2118,
											"end": 2135,
											"name": "tag",
											"source": 3,
											"value": "102"
										},
										{
											"begin": 2118,
											"end": 2135,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2117,
											"end": 2135,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2082,
											"end": 2135,
											"name": "tag",
											"source": 3,
											"value": "101"
										},
										{
											"begin": 2082,
											"end": 2135,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2159,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "103"
										},
										{
											"begin": 2074,
											"end": 2159,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2159,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2074,
											"end": 2159,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2159,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2074,
											"end": 2159,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2159,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2159,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2074,
											"end": 2159,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2159,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "104"
										},
										{
											"begin": 2074,
											"end": 2159,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2159,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "98"
										},
										{
											"begin": 2074,
											"end": 2159,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2159,
											"name": "tag",
											"source": 3,
											"value": "104"
										},
										{
											"begin": 2074,
											"end": 2159,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2159,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2074,
											"end": 2159,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2159,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2159,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2159,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2159,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2159,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2159,
											"name": "tag",
											"source": 3,
											"value": "103"
										},
										{
											"begin": 2074,
											"end": 2159,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1932,
											"end": 2159,
											"name": "tag",
											"source": 3,
											"value": "99"
										},
										{
											"begin": 1932,
											"end": 2159,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4653,
											"end": 4665,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4634,
											"end": 4650,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 4634,
											"end": 4650,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4634,
											"end": 4665,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 4634,
											"end": 4665,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 4634,
											"end": 4665,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4634,
											"end": 4665,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 4634,
											"end": 4665,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4634,
											"end": 4665,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4634,
											"end": 4665,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 4634,
											"end": 4665,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 4634,
											"end": 4665,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4634,
											"end": 4665,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4634,
											"end": 4665,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4634,
											"end": 4665,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4634,
											"end": 4665,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4634,
											"end": 4665,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 4634,
											"end": 4665,
											"modifierDepth": 1,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 4634,
											"end": 4665,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4634,
											"end": 4665,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 4634,
											"end": 4665,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4676,
											"end": 4700,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "106"
										},
										{
											"begin": 4695,
											"end": 4699,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 4676,
											"end": 4694,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "107"
										},
										{
											"begin": 4676,
											"end": 4700,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4676,
											"end": 4700,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "106"
										},
										{
											"begin": 4676,
											"end": 4700,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4711,
											"end": 4739,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "108"
										},
										{
											"begin": 4734,
											"end": 4738,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 4711,
											"end": 4733,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "109"
										},
										{
											"begin": 4711,
											"end": 4739,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4711,
											"end": 4739,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "108"
										},
										{
											"begin": 4711,
											"end": 4739,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4784,
											"end": 4796,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4757,
											"end": 4797,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4757,
											"end": 4797,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4757,
											"end": 4797,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "3553F1F7EF0242113266A8D183B621BB87468C99237F36B1150B6AB3D688B686"
										},
										{
											"begin": 4757,
											"end": 4797,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4757,
											"end": 4797,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4757,
											"end": 4797,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4757,
											"end": 4797,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4757,
											"end": 4797,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4757,
											"end": 4797,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4757,
											"end": 4797,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4757,
											"end": 4797,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4757,
											"end": 4797,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 3
										},
										{
											"begin": 4553,
											"end": 4805,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4553,
											"end": 4805,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7441,
											"end": 7548,
											"name": "tag",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 7441,
											"end": 7548,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2247,
											"end": 2264,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "111"
										},
										{
											"begin": 2247,
											"end": 2262,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "57"
										},
										{
											"begin": 2247,
											"end": 2264,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2247,
											"end": 2264,
											"name": "tag",
											"source": 3,
											"value": "111"
										},
										{
											"begin": 2247,
											"end": 2264,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2264,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2233,
											"end": 2264,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2243,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2264,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2233,
											"end": 2264,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2264,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2286,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2286,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2286,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "112"
										},
										{
											"begin": 2233,
											"end": 2286,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2286,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2269,
											"end": 2286,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "113"
										},
										{
											"begin": 2269,
											"end": 2284,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 2269,
											"end": 2286,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2269,
											"end": 2286,
											"name": "tag",
											"source": 3,
											"value": "113"
										},
										{
											"begin": 2269,
											"end": 2286,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2268,
											"end": 2286,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2286,
											"name": "tag",
											"source": 3,
											"value": "112"
										},
										{
											"begin": 2233,
											"end": 2286,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2225,
											"end": 2310,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "114"
										},
										{
											"begin": 2225,
											"end": 2310,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2225,
											"end": 2310,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2225,
											"end": 2310,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2225,
											"end": 2310,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2225,
											"end": 2310,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2225,
											"end": 2310,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2225,
											"end": 2310,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2225,
											"end": 2310,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2225,
											"end": 2310,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "115"
										},
										{
											"begin": 2225,
											"end": 2310,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2225,
											"end": 2310,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "98"
										},
										{
											"begin": 2225,
											"end": 2310,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2225,
											"end": 2310,
											"name": "tag",
											"source": 3,
											"value": "115"
										},
										{
											"begin": 2225,
											"end": 2310,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2225,
											"end": 2310,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2225,
											"end": 2310,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2225,
											"end": 2310,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2225,
											"end": 2310,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2225,
											"end": 2310,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2225,
											"end": 2310,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2225,
											"end": 2310,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2225,
											"end": 2310,
											"name": "tag",
											"source": 3,
											"value": "114"
										},
										{
											"begin": 2225,
											"end": 2310,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7511,
											"end": 7540,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "117"
										},
										{
											"begin": 7534,
											"end": 7539,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7511,
											"end": 7533,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "109"
										},
										{
											"begin": 7511,
											"end": 7540,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7511,
											"end": 7540,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "117"
										},
										{
											"begin": 7511,
											"end": 7540,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7441,
											"end": 7548,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7441,
											"end": 7548,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4813,
											"end": 5199,
											"name": "tag",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 4813,
											"end": 5199,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4884,
											"end": 4894,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 4864,
											"end": 4894,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4864,
											"end": 4894,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4864,
											"end": 4880,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 4864,
											"end": 4880,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4864,
											"end": 4880,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4864,
											"end": 4880,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 4864,
											"end": 4880,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4864,
											"end": 4880,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 4864,
											"end": 4880,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 4864,
											"end": 4880,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4864,
											"end": 4880,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 4864,
											"end": 4880,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4864,
											"end": 4880,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4864,
											"end": 4894,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4864,
											"end": 4894,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4864,
											"end": 4894,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4860,
											"end": 5191,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "119"
										},
										{
											"begin": 4860,
											"end": 5191,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4918,
											"end": 4934,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 4918,
											"end": 4934,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4911,
											"end": 4934,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 4911,
											"end": 4934,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 4911,
											"end": 4934,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4911,
											"end": 4934,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 4911,
											"end": 4934,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4911,
											"end": 4934,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4911,
											"end": 4934,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 4911,
											"end": 4934,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 4911,
											"end": 4934,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4911,
											"end": 4934,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4911,
											"end": 4934,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 4970,
											"end": 4980,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 4949,
											"end": 4959,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4949,
											"end": 4967,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4949,
											"end": 4967,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4949,
											"end": 4967,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4949,
											"end": 4980,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 4949,
											"end": 4980,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 4949,
											"end": 4980,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4949,
											"end": 4980,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 4949,
											"end": 4980,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4949,
											"end": 4980,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4949,
											"end": 4980,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 4949,
											"end": 4980,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 4949,
											"end": 4980,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4949,
											"end": 4980,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4949,
											"end": 4980,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4949,
											"end": 4980,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4949,
											"end": 4980,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4949,
											"end": 4980,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 4949,
											"end": 4980,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 4949,
											"end": 4980,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4949,
											"end": 4980,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 4949,
											"end": 4980,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4995,
											"end": 5005,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4995,
											"end": 5011,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4995,
											"end": 5011,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4995,
											"end": 5011,
											"name": "PUSH",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 4995,
											"end": 5013,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4995,
											"end": 5013,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4995,
											"end": 5013,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4995,
											"end": 5013,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 4995,
											"end": 5013,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4995,
											"end": 5013,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 4995,
											"end": 5013,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 4995,
											"end": 5013,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4995,
											"end": 5013,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 4995,
											"end": 5013,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4995,
											"end": 5013,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4995,
											"end": 5013,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4995,
											"end": 5013,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4995,
											"end": 5013,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4995,
											"end": 5013,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4995,
											"end": 5013,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "120"
										},
										{
											"begin": 4995,
											"end": 5013,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4995,
											"end": 5013,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "121"
										},
										{
											"begin": 4995,
											"end": 5013,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4995,
											"end": 5013,
											"name": "tag",
											"source": 3,
											"value": "120"
										},
										{
											"begin": 4995,
											"end": 5013,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4995,
											"end": 5013,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4995,
											"end": 5013,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4995,
											"end": 5013,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 4995,
											"end": 5013,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 4995,
											"end": 5013,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4995,
											"end": 5013,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 4995,
											"end": 5013,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4995,
											"end": 5013,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4995,
											"end": 5013,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 4995,
											"end": 5013,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 4995,
											"end": 5013,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4995,
											"end": 5013,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4995,
											"end": 5013,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4995,
											"end": 5013,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4995,
											"end": 5013,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4995,
											"end": 5013,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 4995,
											"end": 5013,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 4995,
											"end": 5013,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4995,
											"end": 5013,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 4995,
											"end": 5013,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4995,
											"end": 5013,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5028,
											"end": 5053,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "122"
										},
										{
											"begin": 5047,
											"end": 5052,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5028,
											"end": 5046,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "107"
										},
										{
											"begin": 5028,
											"end": 5053,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5028,
											"end": 5053,
											"name": "tag",
											"source": 3,
											"value": "122"
										},
										{
											"begin": 5028,
											"end": 5053,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5123,
											"end": 5133,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 5123,
											"end": 5139,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5123,
											"end": 5139,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5123,
											"end": 5139,
											"name": "PUSH",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 5123,
											"end": 5139,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5123,
											"end": 5139,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 5123,
											"end": 5139,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5123,
											"end": 5139,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 5123,
											"end": 5139,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 5123,
											"end": 5139,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5123,
											"end": 5139,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 5123,
											"end": 5139,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5123,
											"end": 5139,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5075,
											"end": 5140,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5075,
											"end": 5140,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5103,
											"end": 5113,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 5103,
											"end": 5121,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5103,
											"end": 5121,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5103,
											"end": 5121,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5103,
											"end": 5121,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5103,
											"end": 5121,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 5103,
											"end": 5121,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5103,
											"end": 5121,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 5103,
											"end": 5121,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 5103,
											"end": 5121,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5103,
											"end": 5121,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 5103,
											"end": 5121,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5103,
											"end": 5121,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5075,
											"end": 5140,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5075,
											"end": 5140,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5075,
											"end": 5140,
											"name": "PUSH",
											"source": 3,
											"value": "5AD9B3688012CD825C1BFB941E4F5AFB2558AF6AF3DEADDF01DBB5E85ABDAF9"
										},
										{
											"begin": 5075,
											"end": 5140,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5075,
											"end": 5140,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5075,
											"end": 5140,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5075,
											"end": 5140,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5075,
											"end": 5140,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5075,
											"end": 5140,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5075,
											"end": 5140,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5075,
											"end": 5140,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5075,
											"end": 5140,
											"name": "LOG3",
											"source": 3
										},
										{
											"begin": 4860,
											"end": 5191,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "123"
										},
										{
											"begin": 4860,
											"end": 5191,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4860,
											"end": 5191,
											"name": "tag",
											"source": 3,
											"value": "119"
										},
										{
											"begin": 4860,
											"end": 5191,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5167,
											"end": 5191,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5167,
											"end": 5191,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5167,
											"end": 5191,
											"name": "PUSH",
											"source": 3,
											"value": "6C4360F000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5167,
											"end": 5191,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5167,
											"end": 5191,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5167,
											"end": 5191,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 5167,
											"end": 5191,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5167,
											"end": 5191,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5167,
											"end": 5191,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5167,
											"end": 5191,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5167,
											"end": 5191,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5167,
											"end": 5191,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5167,
											"end": 5191,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5167,
											"end": 5191,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 4860,
											"end": 5191,
											"name": "tag",
											"source": 3,
											"value": "123"
										},
										{
											"begin": 4860,
											"end": 5191,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4813,
											"end": 5199,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1952,
											"end": 2608,
											"name": "tag",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1952,
											"end": 2608,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1711,
											"end": 1726,
											"name": "TIMESTAMP",
											"source": 4
										},
										{
											"begin": 1691,
											"end": 1708,
											"name": "PUSHIMMUTABLE",
											"source": 4,
											"value": "3171"
										},
										{
											"begin": 1691,
											"end": 1726,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFF"
										},
										{
											"begin": 1691,
											"end": 1726,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1691,
											"end": 1726,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 1687,
											"end": 1922,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1687,
											"end": 1922,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "125"
										},
										{
											"begin": 1687,
											"end": 1922,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1765,
											"end": 1785,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "126"
										},
										{
											"begin": 1765,
											"end": 1783,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "77"
										},
										{
											"begin": 1765,
											"end": 1785,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1765,
											"end": 1785,
											"name": "tag",
											"source": 4,
											"value": "126"
										},
										{
											"begin": 1765,
											"end": 1785,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1751,
											"end": 1785,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1751,
											"end": 1785,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1751,
											"end": 1761,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 1751,
											"end": 1785,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1751,
											"end": 1785,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1751,
											"end": 1785,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1743,
											"end": 1809,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "127"
										},
										{
											"begin": 1743,
											"end": 1809,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1743,
											"end": 1809,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1743,
											"end": 1809,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1743,
											"end": 1809,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1743,
											"end": 1809,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1743,
											"end": 1809,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1743,
											"end": 1809,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1743,
											"end": 1809,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1743,
											"end": 1809,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "128"
										},
										{
											"begin": 1743,
											"end": 1809,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1743,
											"end": 1809,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "98"
										},
										{
											"begin": 1743,
											"end": 1809,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1743,
											"end": 1809,
											"name": "tag",
											"source": 4,
											"value": "128"
										},
										{
											"begin": 1743,
											"end": 1809,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1743,
											"end": 1809,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1743,
											"end": 1809,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1743,
											"end": 1809,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1743,
											"end": 1809,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1743,
											"end": 1809,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1743,
											"end": 1809,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1743,
											"end": 1809,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1743,
											"end": 1809,
											"name": "tag",
											"source": 4,
											"value": "127"
										},
										{
											"begin": 1743,
											"end": 1809,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1687,
											"end": 1922,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "129"
										},
										{
											"begin": 1687,
											"end": 1922,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1687,
											"end": 1922,
											"name": "tag",
											"source": 4,
											"value": "125"
										},
										{
											"begin": 1687,
											"end": 1922,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1851,
											"end": 1872,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "130"
										},
										{
											"begin": 1851,
											"end": 1870,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "67"
										},
										{
											"begin": 1851,
											"end": 1872,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1851,
											"end": 1872,
											"name": "tag",
											"source": 4,
											"value": "130"
										},
										{
											"begin": 1851,
											"end": 1872,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1837,
											"end": 1872,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1837,
											"end": 1872,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1837,
											"end": 1847,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 1837,
											"end": 1872,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1837,
											"end": 1872,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1837,
											"end": 1872,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1837,
											"end": 1898,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1837,
											"end": 1898,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1837,
											"end": 1898,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "131"
										},
										{
											"begin": 1837,
											"end": 1898,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1837,
											"end": 1898,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1877,
											"end": 1898,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "132"
										},
										{
											"begin": 1877,
											"end": 1896,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "88"
										},
										{
											"begin": 1877,
											"end": 1898,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1877,
											"end": 1898,
											"name": "tag",
											"source": 4,
											"value": "132"
										},
										{
											"begin": 1877,
											"end": 1898,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1876,
											"end": 1898,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1837,
											"end": 1898,
											"name": "tag",
											"source": 4,
											"value": "131"
										},
										{
											"begin": 1837,
											"end": 1898,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1829,
											"end": 1922,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "133"
										},
										{
											"begin": 1829,
											"end": 1922,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1829,
											"end": 1922,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1829,
											"end": 1922,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1829,
											"end": 1922,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1829,
											"end": 1922,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1829,
											"end": 1922,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1829,
											"end": 1922,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1829,
											"end": 1922,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1829,
											"end": 1922,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "134"
										},
										{
											"begin": 1829,
											"end": 1922,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1829,
											"end": 1922,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "98"
										},
										{
											"begin": 1829,
											"end": 1922,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1829,
											"end": 1922,
											"name": "tag",
											"source": 4,
											"value": "134"
										},
										{
											"begin": 1829,
											"end": 1922,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1829,
											"end": 1922,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1829,
											"end": 1922,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1829,
											"end": 1922,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1829,
											"end": 1922,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1829,
											"end": 1922,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1829,
											"end": 1922,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1829,
											"end": 1922,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1829,
											"end": 1922,
											"name": "tag",
											"source": 4,
											"value": "133"
										},
										{
											"begin": 1829,
											"end": 1922,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1687,
											"end": 1922,
											"name": "tag",
											"source": 4,
											"value": "129"
										},
										{
											"begin": 1687,
											"end": 1922,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2130,
											"end": 2131,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2109,
											"end": 2132,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2109,
											"end": 2132,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2109,
											"end": 2118,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 2109,
											"end": 2132,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2109,
											"end": 2132,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2109,
											"end": 2132,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 2105,
											"end": 2190,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "136"
										},
										{
											"begin": 2105,
											"end": 2190,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2156,
											"end": 2167,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 2156,
											"end": 2178,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2168,
											"end": 2177,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 2156,
											"end": 2178,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2156,
											"end": 2178,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2156,
											"end": 2178,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2156,
											"end": 2178,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2156,
											"end": 2178,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2156,
											"end": 2178,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2156,
											"end": 2178,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2156,
											"end": 2178,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2156,
											"end": 2178,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2156,
											"end": 2178,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2156,
											"end": 2178,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2156,
											"end": 2178,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2156,
											"end": 2178,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2156,
											"end": 2178,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2156,
											"end": 2178,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 2156,
											"end": 2178,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2149,
											"end": 2178,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2149,
											"end": 2178,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2149,
											"end": 2178,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2149,
											"end": 2178,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2149,
											"end": 2178,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2149,
											"end": 2178,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 2149,
											"end": 2178,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2149,
											"end": 2178,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2149,
											"end": 2178,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2149,
											"end": 2178,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2149,
											"end": 2178,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2149,
											"end": 2178,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 2149,
											"end": 2178,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2149,
											"end": 2178,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2149,
											"end": 2178,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2149,
											"end": 2178,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2149,
											"end": 2178,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2149,
											"end": 2178,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 2149,
											"end": 2178,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2149,
											"end": 2178,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2149,
											"end": 2178,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 2149,
											"end": 2178,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2149,
											"end": 2178,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2149,
											"end": 2178,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2149,
											"end": 2178,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2149,
											"end": 2178,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2149,
											"end": 2178,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 2149,
											"end": 2178,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2149,
											"end": 2178,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2149,
											"end": 2178,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2149,
											"end": 2178,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFF"
										},
										{
											"begin": 2149,
											"end": 2178,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2149,
											"end": 2178,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 2149,
											"end": 2178,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2149,
											"end": 2178,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2149,
											"end": 2178,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 2149,
											"end": 2178,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2149,
											"end": 2178,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2149,
											"end": 2178,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2149,
											"end": 2178,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "A"
										},
										{
											"begin": 2149,
											"end": 2178,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2149,
											"end": 2178,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 2149,
											"end": 2178,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2149,
											"end": 2178,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2149,
											"end": 2178,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2149,
											"end": 2178,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFF"
										},
										{
											"begin": 2149,
											"end": 2178,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2149,
											"end": 2178,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 2149,
											"end": 2178,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2149,
											"end": 2178,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2149,
											"end": 2178,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 2149,
											"end": 2178,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2149,
											"end": 2178,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2149,
											"end": 2178,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2149,
											"end": 2178,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 2149,
											"end": 2178,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2149,
											"end": 2178,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 2149,
											"end": 2178,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2149,
											"end": 2178,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2149,
											"end": 2178,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2149,
											"end": 2178,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFF"
										},
										{
											"begin": 2149,
											"end": 2178,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2149,
											"end": 2178,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 2149,
											"end": 2178,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2149,
											"end": 2178,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2149,
											"end": 2178,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 2149,
											"end": 2178,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2149,
											"end": 2178,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2105,
											"end": 2190,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "136"
										},
										{
											"begin": 2105,
											"end": 2190,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2249,
											"end": 2266,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2205,
											"end": 2216,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 2205,
											"end": 2227,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2217,
											"end": 2226,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 2205,
											"end": 2227,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2205,
											"end": 2227,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2205,
											"end": 2227,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2205,
											"end": 2227,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2205,
											"end": 2227,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2205,
											"end": 2227,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2205,
											"end": 2227,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2205,
											"end": 2227,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2205,
											"end": 2227,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2205,
											"end": 2227,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2205,
											"end": 2227,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2205,
											"end": 2227,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2205,
											"end": 2227,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2205,
											"end": 2227,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2205,
											"end": 2227,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 2205,
											"end": 2245,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2205,
											"end": 2245,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2205,
											"end": 2245,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2205,
											"end": 2266,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 2205,
											"end": 2266,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2205,
											"end": 2309,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2205,
											"end": 2309,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2205,
											"end": 2309,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "137"
										},
										{
											"begin": 2205,
											"end": 2309,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2205,
											"end": 2309,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2303,
											"end": 2309,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2270,
											"end": 2309,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2270,
											"end": 2309,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2270,
											"end": 2281,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 2270,
											"end": 2292,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2282,
											"end": 2291,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 2270,
											"end": 2292,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2270,
											"end": 2292,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2270,
											"end": 2292,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2270,
											"end": 2292,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2270,
											"end": 2292,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2270,
											"end": 2292,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2270,
											"end": 2292,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2270,
											"end": 2292,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2270,
											"end": 2292,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2270,
											"end": 2292,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2270,
											"end": 2292,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2270,
											"end": 2292,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2270,
											"end": 2292,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2270,
											"end": 2292,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2270,
											"end": 2292,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 2270,
											"end": 2299,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2270,
											"end": 2299,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2270,
											"end": 2299,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2270,
											"end": 2299,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2270,
											"end": 2299,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2270,
											"end": 2299,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2270,
											"end": 2299,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2270,
											"end": 2299,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 2270,
											"end": 2299,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2270,
											"end": 2299,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2270,
											"end": 2299,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2270,
											"end": 2299,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2270,
											"end": 2309,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2270,
											"end": 2309,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2270,
											"end": 2309,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 2270,
											"end": 2309,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2205,
											"end": 2309,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "137"
										},
										{
											"begin": 2205,
											"end": 2309,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2201,
											"end": 2601,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2201,
											"end": 2601,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "138"
										},
										{
											"begin": 2201,
											"end": 2601,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2371,
											"end": 2388,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2328,
											"end": 2339,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 2328,
											"end": 2350,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2340,
											"end": 2349,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 2328,
											"end": 2350,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2328,
											"end": 2350,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2328,
											"end": 2350,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2328,
											"end": 2350,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2328,
											"end": 2350,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2328,
											"end": 2350,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2328,
											"end": 2350,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2328,
											"end": 2350,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2328,
											"end": 2350,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2328,
											"end": 2350,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2328,
											"end": 2350,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2328,
											"end": 2350,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2328,
											"end": 2350,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2328,
											"end": 2350,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2328,
											"end": 2350,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 2328,
											"end": 2368,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2328,
											"end": 2368,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2328,
											"end": 2388,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2328,
											"end": 2388,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2328,
											"end": 2388,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 2328,
											"end": 2388,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2441,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2403,
											"end": 2414,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 2403,
											"end": 2425,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2415,
											"end": 2424,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 2403,
											"end": 2425,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2403,
											"end": 2425,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2403,
											"end": 2425,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2403,
											"end": 2425,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2403,
											"end": 2425,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2403,
											"end": 2425,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2403,
											"end": 2425,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2403,
											"end": 2425,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2403,
											"end": 2425,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2403,
											"end": 2425,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2403,
											"end": 2425,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2403,
											"end": 2425,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2403,
											"end": 2425,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2403,
											"end": 2425,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2403,
											"end": 2425,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 2403,
											"end": 2432,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2403,
											"end": 2432,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2403,
											"end": 2432,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2403,
											"end": 2441,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2403,
											"end": 2441,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 2403,
											"end": 2441,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2403,
											"end": 2441,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2403,
											"end": 2441,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2403,
											"end": 2441,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2403,
											"end": 2441,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2403,
											"end": 2441,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 2403,
											"end": 2441,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2403,
											"end": 2441,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2403,
											"end": 2441,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2403,
											"end": 2441,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2403,
											"end": 2441,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2403,
											"end": 2441,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2403,
											"end": 2441,
											"modifierDepth": 1,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 2403,
											"end": 2441,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2403,
											"end": 2441,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 2403,
											"end": 2441,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2494,
											"end": 2499,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2456,
											"end": 2467,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 2456,
											"end": 2478,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2468,
											"end": 2477,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 2456,
											"end": 2478,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2456,
											"end": 2478,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2456,
											"end": 2478,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2456,
											"end": 2478,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2456,
											"end": 2478,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2456,
											"end": 2478,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2456,
											"end": 2478,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2456,
											"end": 2478,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2456,
											"end": 2478,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2456,
											"end": 2478,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2456,
											"end": 2478,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2456,
											"end": 2478,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2456,
											"end": 2478,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2456,
											"end": 2478,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2456,
											"end": 2478,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 2456,
											"end": 2491,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2456,
											"end": 2491,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2456,
											"end": 2491,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 2456,
											"end": 2499,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2456,
											"end": 2499,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 2456,
											"end": 2499,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2456,
											"end": 2499,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2456,
											"end": 2499,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2456,
											"end": 2499,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFF"
										},
										{
											"begin": 2456,
											"end": 2499,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2456,
											"end": 2499,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 2456,
											"end": 2499,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2456,
											"end": 2499,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2456,
											"end": 2499,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2456,
											"end": 2499,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFF"
										},
										{
											"begin": 2456,
											"end": 2499,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2456,
											"end": 2499,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2456,
											"end": 2499,
											"modifierDepth": 1,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 2456,
											"end": 2499,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2456,
											"end": 2499,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 2456,
											"end": 2499,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2572,
											"end": 2578,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2521,
											"end": 2579,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2521,
											"end": 2579,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2553,
											"end": 2570,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2542,
											"end": 2551,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 2521,
											"end": 2579,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2521,
											"end": 2579,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2521,
											"end": 2579,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "5C43A67D451CACADDC8309AF64192A4EBEE009B9CAB5EEB59EC1FB77DD3ABCBC"
										},
										{
											"begin": 2521,
											"end": 2579,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2521,
											"end": 2579,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2521,
											"end": 2579,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2521,
											"end": 2579,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2521,
											"end": 2579,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2521,
											"end": 2579,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2521,
											"end": 2579,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2521,
											"end": 2579,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2521,
											"end": 2579,
											"modifierDepth": 1,
											"name": "LOG4",
											"source": 4
										},
										{
											"begin": 2201,
											"end": 2601,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "139"
										},
										{
											"begin": 2201,
											"end": 2601,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2201,
											"end": 2601,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "138"
										},
										{
											"begin": 2201,
											"end": 2601,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2201,
											"end": 2601,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "139"
										},
										{
											"begin": 2201,
											"end": 2601,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1952,
											"end": 2608,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1952,
											"end": 2608,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1952,
											"end": 2608,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1952,
											"end": 2608,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1952,
											"end": 2608,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1952,
											"end": 2608,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5600,
											"end": 6081,
											"name": "tag",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 5600,
											"end": 6081,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5680,
											"end": 5690,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 5655,
											"end": 5690,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5655,
											"end": 5690,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5655,
											"end": 5676,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 5655,
											"end": 5676,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5655,
											"end": 5676,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5655,
											"end": 5676,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 5655,
											"end": 5676,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5655,
											"end": 5676,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 5655,
											"end": 5676,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 5655,
											"end": 5676,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5655,
											"end": 5676,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 5655,
											"end": 5676,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5655,
											"end": 5676,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5655,
											"end": 5690,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5655,
											"end": 5690,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5655,
											"end": 5690,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5651,
											"end": 6073,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "141"
										},
										{
											"begin": 5651,
											"end": 6073,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5714,
											"end": 5735,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 5714,
											"end": 5735,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5707,
											"end": 5735,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 5707,
											"end": 5735,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 5707,
											"end": 5735,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5707,
											"end": 5735,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 5707,
											"end": 5735,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5707,
											"end": 5735,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5707,
											"end": 5735,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 5707,
											"end": 5735,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 5707,
											"end": 5735,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5707,
											"end": 5735,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5707,
											"end": 5735,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 5775,
											"end": 5785,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 5750,
											"end": 5764,
											"name": "PUSH",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 5750,
											"end": 5772,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5750,
											"end": 5772,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5750,
											"end": 5772,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5750,
											"end": 5785,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 5750,
											"end": 5785,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 5750,
											"end": 5785,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5750,
											"end": 5785,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 5750,
											"end": 5785,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5750,
											"end": 5785,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5750,
											"end": 5785,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 5750,
											"end": 5785,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 5750,
											"end": 5785,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5750,
											"end": 5785,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5750,
											"end": 5785,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5750,
											"end": 5785,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5750,
											"end": 5785,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5750,
											"end": 5785,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 5750,
											"end": 5785,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 5750,
											"end": 5785,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5750,
											"end": 5785,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 5750,
											"end": 5785,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5800,
											"end": 5814,
											"name": "PUSH",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 5800,
											"end": 5820,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5800,
											"end": 5820,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5800,
											"end": 5820,
											"name": "PUSH",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 5800,
											"end": 5822,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5800,
											"end": 5822,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5800,
											"end": 5822,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5800,
											"end": 5822,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 5800,
											"end": 5822,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5800,
											"end": 5822,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 5800,
											"end": 5822,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 5800,
											"end": 5822,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5800,
											"end": 5822,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 5800,
											"end": 5822,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5800,
											"end": 5822,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5800,
											"end": 5822,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5800,
											"end": 5822,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 5800,
											"end": 5822,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5800,
											"end": 5822,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5800,
											"end": 5822,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "142"
										},
										{
											"begin": 5800,
											"end": 5822,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5800,
											"end": 5822,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "121"
										},
										{
											"begin": 5800,
											"end": 5822,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5800,
											"end": 5822,
											"name": "tag",
											"source": 3,
											"value": "142"
										},
										{
											"begin": 5800,
											"end": 5822,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5800,
											"end": 5822,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5800,
											"end": 5822,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5800,
											"end": 5822,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 5800,
											"end": 5822,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 5800,
											"end": 5822,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5800,
											"end": 5822,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 5800,
											"end": 5822,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5800,
											"end": 5822,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5800,
											"end": 5822,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 5800,
											"end": 5822,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 5800,
											"end": 5822,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5800,
											"end": 5822,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5800,
											"end": 5822,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5800,
											"end": 5822,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5800,
											"end": 5822,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5800,
											"end": 5822,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 5800,
											"end": 5822,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 5800,
											"end": 5822,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5800,
											"end": 5822,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 5800,
											"end": 5822,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5800,
											"end": 5822,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5841,
											"end": 5855,
											"name": "PUSH",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 5841,
											"end": 5861,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5841,
											"end": 5861,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5841,
											"end": 5861,
											"name": "PUSH",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 5841,
											"end": 5861,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5841,
											"end": 5861,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 5841,
											"end": 5861,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5841,
											"end": 5861,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 5841,
											"end": 5861,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 5841,
											"end": 5861,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5841,
											"end": 5861,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 5841,
											"end": 5861,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 5841,
											"end": 5861,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5837,
											"end": 5926,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 5837,
											"end": 5926,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "143"
										},
										{
											"begin": 5837,
											"end": 5926,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5881,
											"end": 5910,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "144"
										},
										{
											"begin": 5904,
											"end": 5909,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5881,
											"end": 5903,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "109"
										},
										{
											"begin": 5881,
											"end": 5910,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5881,
											"end": 5910,
											"name": "tag",
											"source": 3,
											"value": "144"
										},
										{
											"begin": 5881,
											"end": 5910,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5837,
											"end": 5926,
											"name": "tag",
											"source": 3,
											"value": "143"
										},
										{
											"begin": 5837,
											"end": 5926,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6001,
											"end": 6015,
											"name": "PUSH",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 6001,
											"end": 6021,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6001,
											"end": 6021,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6001,
											"end": 6021,
											"name": "PUSH",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 6001,
											"end": 6021,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6001,
											"end": 6021,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 6001,
											"end": 6021,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6001,
											"end": 6021,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 6001,
											"end": 6021,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 6001,
											"end": 6021,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6001,
											"end": 6021,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 6001,
											"end": 6021,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6001,
											"end": 6021,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5945,
											"end": 6022,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5945,
											"end": 6022,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5977,
											"end": 5991,
											"name": "PUSH",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 5977,
											"end": 5999,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5977,
											"end": 5999,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5977,
											"end": 5999,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5977,
											"end": 5999,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5977,
											"end": 5999,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 5977,
											"end": 5999,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5977,
											"end": 5999,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 5977,
											"end": 5999,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 5977,
											"end": 5999,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5977,
											"end": 5999,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 5977,
											"end": 5999,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5977,
											"end": 5999,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5945,
											"end": 6022,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5945,
											"end": 6022,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5945,
											"end": 6022,
											"name": "PUSH",
											"source": 3,
											"value": "11E1B985C07E1BF3FEC9BFD0BDB8C4A8E870BA2B26AA89FE50A6A19132CA10FD"
										},
										{
											"begin": 5945,
											"end": 6022,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5945,
											"end": 6022,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5945,
											"end": 6022,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5945,
											"end": 6022,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5945,
											"end": 6022,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5945,
											"end": 6022,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5945,
											"end": 6022,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5945,
											"end": 6022,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5945,
											"end": 6022,
											"name": "LOG3",
											"source": 3
										},
										{
											"begin": 5651,
											"end": 6073,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "145"
										},
										{
											"begin": 5651,
											"end": 6073,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5651,
											"end": 6073,
											"name": "tag",
											"source": 3,
											"value": "141"
										},
										{
											"begin": 5651,
											"end": 6073,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6049,
											"end": 6073,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6049,
											"end": 6073,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6049,
											"end": 6073,
											"name": "PUSH",
											"source": 3,
											"value": "6C4360F000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6049,
											"end": 6073,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6049,
											"end": 6073,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6049,
											"end": 6073,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 6049,
											"end": 6073,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6049,
											"end": 6073,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6049,
											"end": 6073,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6049,
											"end": 6073,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6049,
											"end": 6073,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6049,
											"end": 6073,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6049,
											"end": 6073,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6049,
											"end": 6073,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 5651,
											"end": 6073,
											"name": "tag",
											"source": 3,
											"value": "145"
										},
										{
											"begin": 5651,
											"end": 6073,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5600,
											"end": 6081,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2726,
											"end": 3282,
											"name": "tag",
											"source": 3,
											"value": "45"
										},
										{
											"begin": 2726,
											"end": 3282,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1956,
											"end": 1971,
											"name": "TIMESTAMP",
											"source": 3
										},
										{
											"begin": 1936,
											"end": 1953,
											"name": "PUSHIMMUTABLE",
											"source": 3,
											"value": "3171"
										},
										{
											"begin": 1936,
											"end": 1971,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFF"
										},
										{
											"begin": 1936,
											"end": 1971,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1936,
											"end": 1971,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 1932,
											"end": 2159,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1932,
											"end": 2159,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "147"
										},
										{
											"begin": 1932,
											"end": 2159,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2010,
											"end": 2030,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "148"
										},
										{
											"begin": 2010,
											"end": 2028,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "77"
										},
										{
											"begin": 2010,
											"end": 2030,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2010,
											"end": 2030,
											"name": "tag",
											"source": 3,
											"value": "148"
										},
										{
											"begin": 2010,
											"end": 2030,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1996,
											"end": 2030,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1996,
											"end": 2030,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1996,
											"end": 2006,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 1996,
											"end": 2030,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1996,
											"end": 2030,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1996,
											"end": 2030,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1988,
											"end": 2054,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "149"
										},
										{
											"begin": 1988,
											"end": 2054,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1988,
											"end": 2054,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1988,
											"end": 2054,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1988,
											"end": 2054,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1988,
											"end": 2054,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1988,
											"end": 2054,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1988,
											"end": 2054,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1988,
											"end": 2054,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1988,
											"end": 2054,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "150"
										},
										{
											"begin": 1988,
											"end": 2054,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1988,
											"end": 2054,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "98"
										},
										{
											"begin": 1988,
											"end": 2054,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1988,
											"end": 2054,
											"name": "tag",
											"source": 3,
											"value": "150"
										},
										{
											"begin": 1988,
											"end": 2054,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1988,
											"end": 2054,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1988,
											"end": 2054,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1988,
											"end": 2054,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1988,
											"end": 2054,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1988,
											"end": 2054,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1988,
											"end": 2054,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1988,
											"end": 2054,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1988,
											"end": 2054,
											"name": "tag",
											"source": 3,
											"value": "149"
										},
										{
											"begin": 1988,
											"end": 2054,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1932,
											"end": 2159,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "151"
										},
										{
											"begin": 1932,
											"end": 2159,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1932,
											"end": 2159,
											"name": "tag",
											"source": 3,
											"value": "147"
										},
										{
											"begin": 1932,
											"end": 2159,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2096,
											"end": 2113,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "152"
										},
										{
											"begin": 2096,
											"end": 2111,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "57"
										},
										{
											"begin": 2096,
											"end": 2113,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2096,
											"end": 2113,
											"name": "tag",
											"source": 3,
											"value": "152"
										},
										{
											"begin": 2096,
											"end": 2113,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2082,
											"end": 2113,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2082,
											"end": 2113,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2082,
											"end": 2092,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 2082,
											"end": 2113,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2082,
											"end": 2113,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2082,
											"end": 2113,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 2082,
											"end": 2135,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2082,
											"end": 2135,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2082,
											"end": 2135,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "153"
										},
										{
											"begin": 2082,
											"end": 2135,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2082,
											"end": 2135,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2118,
											"end": 2135,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "154"
										},
										{
											"begin": 2118,
											"end": 2133,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 2118,
											"end": 2135,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2118,
											"end": 2135,
											"name": "tag",
											"source": 3,
											"value": "154"
										},
										{
											"begin": 2118,
											"end": 2135,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2117,
											"end": 2135,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2082,
											"end": 2135,
											"name": "tag",
											"source": 3,
											"value": "153"
										},
										{
											"begin": 2082,
											"end": 2135,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2159,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "155"
										},
										{
											"begin": 2074,
											"end": 2159,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2159,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2074,
											"end": 2159,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2159,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2074,
											"end": 2159,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2159,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2159,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2074,
											"end": 2159,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2159,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "156"
										},
										{
											"begin": 2074,
											"end": 2159,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2159,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "98"
										},
										{
											"begin": 2074,
											"end": 2159,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2159,
											"name": "tag",
											"source": 3,
											"value": "156"
										},
										{
											"begin": 2074,
											"end": 2159,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2159,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2074,
											"end": 2159,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2159,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2159,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2159,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2159,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2159,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2159,
											"name": "tag",
											"source": 3,
											"value": "155"
										},
										{
											"begin": 2074,
											"end": 2159,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1932,
											"end": 2159,
											"name": "tag",
											"source": 3,
											"value": "151"
										},
										{
											"begin": 1932,
											"end": 2159,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2843,
											"end": 2844,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2817,
											"end": 2828,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2817,
											"end": 2840,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2817,
											"end": 2840,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2817,
											"end": 2840,
											"modifierDepth": 1,
											"name": "EXTCODESIZE",
											"source": 3
										},
										{
											"begin": 2817,
											"end": 2844,
											"modifierDepth": 1,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 2813,
											"end": 3272,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2813,
											"end": 3272,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "158"
										},
										{
											"begin": 2813,
											"end": 3272,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2887,
											"end": 2897,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 2865,
											"end": 2897,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2865,
											"end": 2897,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2865,
											"end": 2875,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2865,
											"end": 2883,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2865,
											"end": 2883,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2865,
											"end": 2883,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2865,
											"end": 2883,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2865,
											"end": 2883,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2865,
											"end": 2883,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2865,
											"end": 2883,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 2865,
											"end": 2883,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 2865,
											"end": 2883,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2865,
											"end": 2883,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 2865,
											"end": 2883,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2865,
											"end": 2883,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2865,
											"end": 2897,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2865,
											"end": 2897,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2865,
											"end": 2897,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2861,
											"end": 3202,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "159"
										},
										{
											"begin": 2861,
											"end": 3202,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2918,
											"end": 2955,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "160"
										},
										{
											"begin": 2943,
											"end": 2954,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2918,
											"end": 2942,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "161"
										},
										{
											"begin": 2918,
											"end": 2955,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2918,
											"end": 2955,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "160"
										},
										{
											"begin": 2918,
											"end": 2955,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2861,
											"end": 3202,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "162"
										},
										{
											"begin": 2861,
											"end": 3202,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2861,
											"end": 3202,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "159"
										},
										{
											"begin": 2861,
											"end": 3202,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3054,
											"end": 3061,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "13C680"
										},
										{
											"begin": 3036,
											"end": 3051,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 3
										},
										{
											"begin": 3036,
											"end": 3061,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "163"
										},
										{
											"begin": 3036,
											"end": 3061,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3036,
											"end": 3061,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3036,
											"end": 3061,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "164"
										},
										{
											"begin": 3036,
											"end": 3061,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3036,
											"end": 3061,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "163"
										},
										{
											"begin": 3036,
											"end": 3061,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2998,
											"end": 3026,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 2998,
											"end": 3026,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 2998,
											"end": 3062,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 2998,
											"end": 3062,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 2998,
											"end": 3062,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2998,
											"end": 3062,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2998,
											"end": 3062,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2998,
											"end": 3062,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFF"
										},
										{
											"begin": 2998,
											"end": 3062,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2998,
											"end": 3062,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 2998,
											"end": 3062,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2998,
											"end": 3062,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2998,
											"end": 3062,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2998,
											"end": 3062,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFF"
										},
										{
											"begin": 2998,
											"end": 3062,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2998,
											"end": 3062,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2998,
											"end": 3062,
											"modifierDepth": 1,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 2998,
											"end": 3062,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2998,
											"end": 3062,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 2998,
											"end": 3062,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3106,
											"end": 3117,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3081,
											"end": 3103,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3081,
											"end": 3103,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3081,
											"end": 3117,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 3081,
											"end": 3117,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 3081,
											"end": 3117,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3081,
											"end": 3117,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3081,
											"end": 3117,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3081,
											"end": 3117,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3081,
											"end": 3117,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 3081,
											"end": 3117,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 3081,
											"end": 3117,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3081,
											"end": 3117,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3081,
											"end": 3117,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3081,
											"end": 3117,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3081,
											"end": 3117,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3081,
											"end": 3117,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 3081,
											"end": 3117,
											"modifierDepth": 1,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 3081,
											"end": 3117,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3081,
											"end": 3117,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 3081,
											"end": 3117,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3174,
											"end": 3185,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3141,
											"end": 3186,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3141,
											"end": 3186,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3141,
											"end": 3186,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "675B770E821BA4AAD20BE77C58F912D689226272E805637F42F838A6035EED86"
										},
										{
											"begin": 3141,
											"end": 3186,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3141,
											"end": 3186,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3141,
											"end": 3186,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3141,
											"end": 3186,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3141,
											"end": 3186,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3141,
											"end": 3186,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3141,
											"end": 3186,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3141,
											"end": 3186,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3141,
											"end": 3186,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 3
										},
										{
											"begin": 2861,
											"end": 3202,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "162"
										},
										{
											"begin": 2861,
											"end": 3202,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2813,
											"end": 3272,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "165"
										},
										{
											"begin": 2813,
											"end": 3272,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2813,
											"end": 3272,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "158"
										},
										{
											"begin": 2813,
											"end": 3272,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3260,
											"end": 3271,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3228,
											"end": 3272,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3228,
											"end": 3272,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3228,
											"end": 3272,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "C632231500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3228,
											"end": 3272,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3228,
											"end": 3272,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3228,
											"end": 3272,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3228,
											"end": 3272,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3228,
											"end": 3272,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "166"
										},
										{
											"begin": 3228,
											"end": 3272,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3228,
											"end": 3272,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3228,
											"end": 3272,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "49"
										},
										{
											"begin": 3228,
											"end": 3272,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3228,
											"end": 3272,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "166"
										},
										{
											"begin": 3228,
											"end": 3272,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3228,
											"end": 3272,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3228,
											"end": 3272,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3228,
											"end": 3272,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3228,
											"end": 3272,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3228,
											"end": 3272,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3228,
											"end": 3272,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3228,
											"end": 3272,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2813,
											"end": 3272,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "165"
										},
										{
											"begin": 2813,
											"end": 3272,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2726,
											"end": 3282,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2726,
											"end": 3282,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7070,
											"end": 7170,
											"name": "tag",
											"source": 3,
											"value": "47"
										},
										{
											"begin": 7070,
											"end": 7170,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7116,
											"end": 7123,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7143,
											"end": 7154,
											"name": "PUSH",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 7143,
											"end": 7162,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7143,
											"end": 7162,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7143,
											"end": 7162,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7143,
											"end": 7162,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7143,
											"end": 7162,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 7143,
											"end": 7162,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7143,
											"end": 7162,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 7143,
											"end": 7162,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 7143,
											"end": 7162,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7143,
											"end": 7162,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 7143,
											"end": 7162,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7143,
											"end": 7162,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7136,
											"end": 7162,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7136,
											"end": 7162,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7070,
											"end": 7170,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7070,
											"end": 7170,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3928,
											"end": 4302,
											"name": "tag",
											"source": 3,
											"value": "52"
										},
										{
											"begin": 3928,
											"end": 4302,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1956,
											"end": 1971,
											"name": "TIMESTAMP",
											"source": 3
										},
										{
											"begin": 1936,
											"end": 1953,
											"name": "PUSHIMMUTABLE",
											"source": 3,
											"value": "3171"
										},
										{
											"begin": 1936,
											"end": 1971,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFF"
										},
										{
											"begin": 1936,
											"end": 1971,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1936,
											"end": 1971,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 1932,
											"end": 2159,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1932,
											"end": 2159,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "169"
										},
										{
											"begin": 1932,
											"end": 2159,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2010,
											"end": 2030,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "170"
										},
										{
											"begin": 2010,
											"end": 2028,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "77"
										},
										{
											"begin": 2010,
											"end": 2030,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2010,
											"end": 2030,
											"name": "tag",
											"source": 3,
											"value": "170"
										},
										{
											"begin": 2010,
											"end": 2030,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1996,
											"end": 2030,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1996,
											"end": 2030,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1996,
											"end": 2006,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 1996,
											"end": 2030,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1996,
											"end": 2030,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1996,
											"end": 2030,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1988,
											"end": 2054,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "171"
										},
										{
											"begin": 1988,
											"end": 2054,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1988,
											"end": 2054,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1988,
											"end": 2054,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1988,
											"end": 2054,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1988,
											"end": 2054,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1988,
											"end": 2054,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1988,
											"end": 2054,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1988,
											"end": 2054,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1988,
											"end": 2054,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "172"
										},
										{
											"begin": 1988,
											"end": 2054,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1988,
											"end": 2054,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "98"
										},
										{
											"begin": 1988,
											"end": 2054,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1988,
											"end": 2054,
											"name": "tag",
											"source": 3,
											"value": "172"
										},
										{
											"begin": 1988,
											"end": 2054,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1988,
											"end": 2054,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1988,
											"end": 2054,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1988,
											"end": 2054,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1988,
											"end": 2054,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1988,
											"end": 2054,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1988,
											"end": 2054,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1988,
											"end": 2054,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1988,
											"end": 2054,
											"name": "tag",
											"source": 3,
											"value": "171"
										},
										{
											"begin": 1988,
											"end": 2054,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1932,
											"end": 2159,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "173"
										},
										{
											"begin": 1932,
											"end": 2159,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1932,
											"end": 2159,
											"name": "tag",
											"source": 3,
											"value": "169"
										},
										{
											"begin": 1932,
											"end": 2159,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2096,
											"end": 2113,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "174"
										},
										{
											"begin": 2096,
											"end": 2111,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "57"
										},
										{
											"begin": 2096,
											"end": 2113,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2096,
											"end": 2113,
											"name": "tag",
											"source": 3,
											"value": "174"
										},
										{
											"begin": 2096,
											"end": 2113,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2082,
											"end": 2113,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2082,
											"end": 2113,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2082,
											"end": 2092,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 2082,
											"end": 2113,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2082,
											"end": 2113,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2082,
											"end": 2113,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 2082,
											"end": 2135,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2082,
											"end": 2135,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2082,
											"end": 2135,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "175"
										},
										{
											"begin": 2082,
											"end": 2135,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2082,
											"end": 2135,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2118,
											"end": 2135,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "176"
										},
										{
											"begin": 2118,
											"end": 2133,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 2118,
											"end": 2135,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2118,
											"end": 2135,
											"name": "tag",
											"source": 3,
											"value": "176"
										},
										{
											"begin": 2118,
											"end": 2135,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2117,
											"end": 2135,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2082,
											"end": 2135,
											"name": "tag",
											"source": 3,
											"value": "175"
										},
										{
											"begin": 2082,
											"end": 2135,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2159,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "177"
										},
										{
											"begin": 2074,
											"end": 2159,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2159,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2074,
											"end": 2159,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2159,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2074,
											"end": 2159,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2159,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2159,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2074,
											"end": 2159,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2159,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "178"
										},
										{
											"begin": 2074,
											"end": 2159,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2159,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "98"
										},
										{
											"begin": 2074,
											"end": 2159,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2159,
											"name": "tag",
											"source": 3,
											"value": "178"
										},
										{
											"begin": 2074,
											"end": 2159,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2159,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2074,
											"end": 2159,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2159,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2159,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2159,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2159,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2159,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2159,
											"name": "tag",
											"source": 3,
											"value": "177"
										},
										{
											"begin": 2074,
											"end": 2159,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1932,
											"end": 2159,
											"name": "tag",
											"source": 3,
											"value": "173"
										},
										{
											"begin": 1932,
											"end": 2159,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4045,
											"end": 4053,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4019,
											"end": 4053,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4019,
											"end": 4053,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4019,
											"end": 4041,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4019,
											"end": 4041,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4019,
											"end": 4041,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 4019,
											"end": 4041,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4019,
											"end": 4041,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 4019,
											"end": 4041,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 4019,
											"end": 4041,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4019,
											"end": 4041,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 4019,
											"end": 4041,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4019,
											"end": 4041,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4019,
											"end": 4053,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4019,
											"end": 4053,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4019,
											"end": 4053,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4015,
											"end": 4294,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "180"
										},
										{
											"begin": 4015,
											"end": 4294,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4081,
											"end": 4109,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 4081,
											"end": 4109,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 4074,
											"end": 4109,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 4074,
											"end": 4109,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 4074,
											"end": 4109,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4074,
											"end": 4109,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 4074,
											"end": 4109,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4074,
											"end": 4109,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFF"
										},
										{
											"begin": 4074,
											"end": 4109,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 4074,
											"end": 4109,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 4074,
											"end": 4109,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4074,
											"end": 4109,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4074,
											"end": 4109,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 4135,
											"end": 4157,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4135,
											"end": 4157,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4128,
											"end": 4157,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 4128,
											"end": 4157,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 4128,
											"end": 4157,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4128,
											"end": 4157,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 4128,
											"end": 4157,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4128,
											"end": 4157,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4128,
											"end": 4157,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 4128,
											"end": 4157,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 4128,
											"end": 4157,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4128,
											"end": 4157,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4128,
											"end": 4157,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 4217,
											"end": 4225,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4182,
											"end": 4226,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4182,
											"end": 4226,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4182,
											"end": 4226,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "F299F61C7E493F99B20CB36C587CA903D085D5206BFE4452D295711E372DA029"
										},
										{
											"begin": 4182,
											"end": 4226,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4182,
											"end": 4226,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4182,
											"end": 4226,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4182,
											"end": 4226,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4182,
											"end": 4226,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4182,
											"end": 4226,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4182,
											"end": 4226,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4182,
											"end": 4226,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4182,
											"end": 4226,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 3
										},
										{
											"begin": 4015,
											"end": 4294,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "181"
										},
										{
											"begin": 4015,
											"end": 4294,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4015,
											"end": 4294,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "180"
										},
										{
											"begin": 4015,
											"end": 4294,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4285,
											"end": 4293,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4253,
											"end": 4294,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4253,
											"end": 4294,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4253,
											"end": 4294,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "C632231500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4253,
											"end": 4294,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4253,
											"end": 4294,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4253,
											"end": 4294,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4253,
											"end": 4294,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4253,
											"end": 4294,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "182"
										},
										{
											"begin": 4253,
											"end": 4294,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4253,
											"end": 4294,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4253,
											"end": 4294,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "49"
										},
										{
											"begin": 4253,
											"end": 4294,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4253,
											"end": 4294,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "182"
										},
										{
											"begin": 4253,
											"end": 4294,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4253,
											"end": 4294,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4253,
											"end": 4294,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4253,
											"end": 4294,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4253,
											"end": 4294,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4253,
											"end": 4294,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4253,
											"end": 4294,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4253,
											"end": 4294,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 4015,
											"end": 4294,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "181"
										},
										{
											"begin": 4015,
											"end": 4294,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3928,
											"end": 4302,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3928,
											"end": 4302,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5420,
											"end": 5592,
											"name": "tag",
											"source": 3,
											"value": "55"
										},
										{
											"begin": 5420,
											"end": 5592,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2247,
											"end": 2264,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "184"
										},
										{
											"begin": 2247,
											"end": 2262,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "57"
										},
										{
											"begin": 2247,
											"end": 2264,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2247,
											"end": 2264,
											"name": "tag",
											"source": 3,
											"value": "184"
										},
										{
											"begin": 2247,
											"end": 2264,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2264,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2233,
											"end": 2264,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2243,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2264,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2233,
											"end": 2264,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2264,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2286,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2286,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2286,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "185"
										},
										{
											"begin": 2233,
											"end": 2286,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2286,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2269,
											"end": 2286,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "186"
										},
										{
											"begin": 2269,
											"end": 2284,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 2269,
											"end": 2286,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2269,
											"end": 2286,
											"name": "tag",
											"source": 3,
											"value": "186"
										},
										{
											"begin": 2269,
											"end": 2286,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2268,
											"end": 2286,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2286,
											"name": "tag",
											"source": 3,
											"value": "185"
										},
										{
											"begin": 2233,
											"end": 2286,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2225,
											"end": 2310,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "187"
										},
										{
											"begin": 2225,
											"end": 2310,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2225,
											"end": 2310,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2225,
											"end": 2310,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2225,
											"end": 2310,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2225,
											"end": 2310,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2225,
											"end": 2310,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2225,
											"end": 2310,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2225,
											"end": 2310,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2225,
											"end": 2310,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "188"
										},
										{
											"begin": 2225,
											"end": 2310,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2225,
											"end": 2310,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "98"
										},
										{
											"begin": 2225,
											"end": 2310,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2225,
											"end": 2310,
											"name": "tag",
											"source": 3,
											"value": "188"
										},
										{
											"begin": 2225,
											"end": 2310,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2225,
											"end": 2310,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2225,
											"end": 2310,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2225,
											"end": 2310,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2225,
											"end": 2310,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2225,
											"end": 2310,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2225,
											"end": 2310,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2225,
											"end": 2310,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2225,
											"end": 2310,
											"name": "tag",
											"source": 3,
											"value": "187"
										},
										{
											"begin": 2225,
											"end": 2310,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5524,
											"end": 5529,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5500,
											"end": 5521,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 5500,
											"end": 5521,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5500,
											"end": 5529,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 5500,
											"end": 5529,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 5500,
											"end": 5529,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5500,
											"end": 5529,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 5500,
											"end": 5529,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5500,
											"end": 5529,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5500,
											"end": 5529,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 5500,
											"end": 5529,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 5500,
											"end": 5529,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5500,
											"end": 5529,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5500,
											"end": 5529,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5500,
											"end": 5529,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5500,
											"end": 5529,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5500,
											"end": 5529,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 5500,
											"end": 5529,
											"modifierDepth": 1,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 5500,
											"end": 5529,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5500,
											"end": 5529,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 5500,
											"end": 5529,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5578,
											"end": 5583,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5547,
											"end": 5584,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5547,
											"end": 5584,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5547,
											"end": 5584,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "FF3CAD3EE28C342AD5F3D7C8FF8559EE4D21EB48494092B82A1652E443B3420B"
										},
										{
											"begin": 5547,
											"end": 5584,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5547,
											"end": 5584,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5547,
											"end": 5584,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5547,
											"end": 5584,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5547,
											"end": 5584,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5547,
											"end": 5584,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5547,
											"end": 5584,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5547,
											"end": 5584,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5547,
											"end": 5584,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 3
										},
										{
											"begin": 5420,
											"end": 5592,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5420,
											"end": 5592,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5207,
											"end": 5308,
											"name": "tag",
											"source": 3,
											"value": "57"
										},
										{
											"begin": 5207,
											"end": 5308,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5255,
											"end": 5262,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5282,
											"end": 5292,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 5282,
											"end": 5300,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5282,
											"end": 5300,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5282,
											"end": 5300,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5282,
											"end": 5300,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5282,
											"end": 5300,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 5282,
											"end": 5300,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5282,
											"end": 5300,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 5282,
											"end": 5300,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 5282,
											"end": 5300,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5282,
											"end": 5300,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 5282,
											"end": 5300,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5282,
											"end": 5300,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5275,
											"end": 5300,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5275,
											"end": 5300,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5207,
											"end": 5308,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5207,
											"end": 5308,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5316,
											"end": 5412,
											"name": "tag",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 5316,
											"end": 5412,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5364,
											"end": 5368,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5388,
											"end": 5398,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 5388,
											"end": 5404,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5388,
											"end": 5404,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5388,
											"end": 5404,
											"name": "PUSH",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 5388,
											"end": 5404,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5388,
											"end": 5404,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 5388,
											"end": 5404,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5388,
											"end": 5404,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 5388,
											"end": 5404,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 5388,
											"end": 5404,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5388,
											"end": 5404,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 5388,
											"end": 5404,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 5388,
											"end": 5404,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5381,
											"end": 5404,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5381,
											"end": 5404,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5316,
											"end": 5412,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5316,
											"end": 5412,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3290,
											"end": 3920,
											"name": "tag",
											"source": 3,
											"value": "65"
										},
										{
											"begin": 3290,
											"end": 3920,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1956,
											"end": 1971,
											"name": "TIMESTAMP",
											"source": 3
										},
										{
											"begin": 1936,
											"end": 1953,
											"name": "PUSHIMMUTABLE",
											"source": 3,
											"value": "3171"
										},
										{
											"begin": 1936,
											"end": 1971,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFF"
										},
										{
											"begin": 1936,
											"end": 1971,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1936,
											"end": 1971,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 1932,
											"end": 2159,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1932,
											"end": 2159,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "193"
										},
										{
											"begin": 1932,
											"end": 2159,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2010,
											"end": 2030,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "194"
										},
										{
											"begin": 2010,
											"end": 2028,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "77"
										},
										{
											"begin": 2010,
											"end": 2030,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2010,
											"end": 2030,
											"name": "tag",
											"source": 3,
											"value": "194"
										},
										{
											"begin": 2010,
											"end": 2030,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1996,
											"end": 2030,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1996,
											"end": 2030,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1996,
											"end": 2006,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 1996,
											"end": 2030,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1996,
											"end": 2030,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1996,
											"end": 2030,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1988,
											"end": 2054,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "195"
										},
										{
											"begin": 1988,
											"end": 2054,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1988,
											"end": 2054,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1988,
											"end": 2054,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1988,
											"end": 2054,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1988,
											"end": 2054,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1988,
											"end": 2054,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1988,
											"end": 2054,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1988,
											"end": 2054,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1988,
											"end": 2054,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "196"
										},
										{
											"begin": 1988,
											"end": 2054,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1988,
											"end": 2054,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "98"
										},
										{
											"begin": 1988,
											"end": 2054,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1988,
											"end": 2054,
											"name": "tag",
											"source": 3,
											"value": "196"
										},
										{
											"begin": 1988,
											"end": 2054,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1988,
											"end": 2054,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1988,
											"end": 2054,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1988,
											"end": 2054,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1988,
											"end": 2054,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1988,
											"end": 2054,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1988,
											"end": 2054,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1988,
											"end": 2054,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1988,
											"end": 2054,
											"name": "tag",
											"source": 3,
											"value": "195"
										},
										{
											"begin": 1988,
											"end": 2054,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1932,
											"end": 2159,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "197"
										},
										{
											"begin": 1932,
											"end": 2159,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1932,
											"end": 2159,
											"name": "tag",
											"source": 3,
											"value": "193"
										},
										{
											"begin": 1932,
											"end": 2159,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2096,
											"end": 2113,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "198"
										},
										{
											"begin": 2096,
											"end": 2111,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "57"
										},
										{
											"begin": 2096,
											"end": 2113,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2096,
											"end": 2113,
											"name": "tag",
											"source": 3,
											"value": "198"
										},
										{
											"begin": 2096,
											"end": 2113,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2082,
											"end": 2113,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2082,
											"end": 2113,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2082,
											"end": 2092,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 2082,
											"end": 2113,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2082,
											"end": 2113,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2082,
											"end": 2113,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 2082,
											"end": 2135,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2082,
											"end": 2135,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2082,
											"end": 2135,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "199"
										},
										{
											"begin": 2082,
											"end": 2135,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2082,
											"end": 2135,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2118,
											"end": 2135,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "200"
										},
										{
											"begin": 2118,
											"end": 2133,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 2118,
											"end": 2135,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2118,
											"end": 2135,
											"name": "tag",
											"source": 3,
											"value": "200"
										},
										{
											"begin": 2118,
											"end": 2135,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2117,
											"end": 2135,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2082,
											"end": 2135,
											"name": "tag",
											"source": 3,
											"value": "199"
										},
										{
											"begin": 2082,
											"end": 2135,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2159,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "201"
										},
										{
											"begin": 2074,
											"end": 2159,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2159,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2074,
											"end": 2159,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2159,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2074,
											"end": 2159,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2159,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2159,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2074,
											"end": 2159,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2159,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "202"
										},
										{
											"begin": 2074,
											"end": 2159,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2159,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "98"
										},
										{
											"begin": 2074,
											"end": 2159,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2159,
											"name": "tag",
											"source": 3,
											"value": "202"
										},
										{
											"begin": 2074,
											"end": 2159,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2159,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2074,
											"end": 2159,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2159,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2159,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2159,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2159,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2159,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2159,
											"name": "tag",
											"source": 3,
											"value": "201"
										},
										{
											"begin": 2074,
											"end": 2159,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1932,
											"end": 2159,
											"name": "tag",
											"source": 3,
											"value": "197"
										},
										{
											"begin": 1932,
											"end": 2159,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3407,
											"end": 3422,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 3
										},
										{
											"begin": 3376,
											"end": 3404,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 3376,
											"end": 3404,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 3376,
											"end": 3404,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3376,
											"end": 3404,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3376,
											"end": 3404,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3376,
											"end": 3404,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 3376,
											"end": 3404,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 3376,
											"end": 3404,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3376,
											"end": 3404,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 3376,
											"end": 3404,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFF"
										},
										{
											"begin": 3376,
											"end": 3404,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3376,
											"end": 3422,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFF"
										},
										{
											"begin": 3376,
											"end": 3422,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3376,
											"end": 3422,
											"modifierDepth": 1,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 3372,
											"end": 3912,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3372,
											"end": 3912,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "204"
										},
										{
											"begin": 3372,
											"end": 3912,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3479,
											"end": 3480,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3447,
											"end": 3475,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 3447,
											"end": 3475,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 3447,
											"end": 3475,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3447,
											"end": 3475,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3447,
											"end": 3475,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3447,
											"end": 3475,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 3447,
											"end": 3475,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 3447,
											"end": 3475,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3447,
											"end": 3475,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 3447,
											"end": 3475,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFF"
										},
										{
											"begin": 3447,
											"end": 3475,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3447,
											"end": 3480,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFF"
										},
										{
											"begin": 3447,
											"end": 3480,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3447,
											"end": 3480,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3439,
											"end": 3506,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "205"
										},
										{
											"begin": 3439,
											"end": 3506,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3439,
											"end": 3506,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3439,
											"end": 3506,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3439,
											"end": 3506,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3439,
											"end": 3506,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3439,
											"end": 3506,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3439,
											"end": 3506,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3439,
											"end": 3506,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3439,
											"end": 3506,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "206"
										},
										{
											"begin": 3439,
											"end": 3506,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3439,
											"end": 3506,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "207"
										},
										{
											"begin": 3439,
											"end": 3506,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3439,
											"end": 3506,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "206"
										},
										{
											"begin": 3439,
											"end": 3506,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3439,
											"end": 3506,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3439,
											"end": 3506,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3439,
											"end": 3506,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3439,
											"end": 3506,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3439,
											"end": 3506,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3439,
											"end": 3506,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3439,
											"end": 3506,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 3439,
											"end": 3506,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "205"
										},
										{
											"begin": 3439,
											"end": 3506,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3559,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3525,
											"end": 3559,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3525,
											"end": 3559,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3525,
											"end": 3547,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3525,
											"end": 3547,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3525,
											"end": 3547,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3525,
											"end": 3547,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3525,
											"end": 3547,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 3525,
											"end": 3547,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 3525,
											"end": 3547,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3525,
											"end": 3547,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 3525,
											"end": 3547,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3525,
											"end": 3547,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3525,
											"end": 3559,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3525,
											"end": 3559,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3525,
											"end": 3559,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3521,
											"end": 3788,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "208"
										},
										{
											"begin": 3521,
											"end": 3788,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3587,
											"end": 3615,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 3587,
											"end": 3615,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 3580,
											"end": 3615,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 3580,
											"end": 3615,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 3580,
											"end": 3615,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3580,
											"end": 3615,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3580,
											"end": 3615,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3580,
											"end": 3615,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFF"
										},
										{
											"begin": 3580,
											"end": 3615,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 3580,
											"end": 3615,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 3580,
											"end": 3615,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3580,
											"end": 3615,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3580,
											"end": 3615,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 3641,
											"end": 3663,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3641,
											"end": 3663,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3634,
											"end": 3663,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 3634,
											"end": 3663,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 3634,
											"end": 3663,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3634,
											"end": 3663,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3634,
											"end": 3663,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3634,
											"end": 3663,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3634,
											"end": 3663,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 3634,
											"end": 3663,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 3634,
											"end": 3663,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3634,
											"end": 3663,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3634,
											"end": 3663,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 3682,
											"end": 3716,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "209"
										},
										{
											"begin": 3707,
											"end": 3715,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3682,
											"end": 3706,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "161"
										},
										{
											"begin": 3682,
											"end": 3716,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3682,
											"end": 3716,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "209"
										},
										{
											"begin": 3682,
											"end": 3716,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3521,
											"end": 3788,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "210"
										},
										{
											"begin": 3521,
											"end": 3788,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3521,
											"end": 3788,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "208"
										},
										{
											"begin": 3521,
											"end": 3788,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3779,
											"end": 3787,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3747,
											"end": 3788,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3747,
											"end": 3788,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3747,
											"end": 3788,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "C632231500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3747,
											"end": 3788,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3747,
											"end": 3788,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3747,
											"end": 3788,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3747,
											"end": 3788,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3747,
											"end": 3788,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "211"
										},
										{
											"begin": 3747,
											"end": 3788,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3747,
											"end": 3788,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3747,
											"end": 3788,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "49"
										},
										{
											"begin": 3747,
											"end": 3788,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3747,
											"end": 3788,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "211"
										},
										{
											"begin": 3747,
											"end": 3788,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3747,
											"end": 3788,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3747,
											"end": 3788,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3747,
											"end": 3788,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3747,
											"end": 3788,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3747,
											"end": 3788,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3747,
											"end": 3788,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3747,
											"end": 3788,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 3521,
											"end": 3788,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "210"
										},
										{
											"begin": 3521,
											"end": 3788,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3372,
											"end": 3912,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "212"
										},
										{
											"begin": 3372,
											"end": 3912,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3372,
											"end": 3912,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "204"
										},
										{
											"begin": 3372,
											"end": 3912,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3895,
											"end": 3910,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 3
										},
										{
											"begin": 3857,
											"end": 3885,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 3857,
											"end": 3885,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 3857,
											"end": 3885,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3857,
											"end": 3885,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3857,
											"end": 3885,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3857,
											"end": 3885,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 3857,
											"end": 3885,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 3857,
											"end": 3885,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3857,
											"end": 3885,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 3857,
											"end": 3885,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFF"
										},
										{
											"begin": 3857,
											"end": 3885,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3857,
											"end": 3911,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "213"
										},
										{
											"begin": 3857,
											"end": 3911,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3857,
											"end": 3911,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3857,
											"end": 3911,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "214"
										},
										{
											"begin": 3857,
											"end": 3911,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3857,
											"end": 3911,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "213"
										},
										{
											"begin": 3857,
											"end": 3911,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3815,
											"end": 3912,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3815,
											"end": 3912,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3815,
											"end": 3912,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "223A6CBB00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3815,
											"end": 3912,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3815,
											"end": 3912,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3815,
											"end": 3912,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3815,
											"end": 3912,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3815,
											"end": 3912,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "215"
										},
										{
											"begin": 3815,
											"end": 3912,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3815,
											"end": 3912,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3815,
											"end": 3912,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "216"
										},
										{
											"begin": 3815,
											"end": 3912,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3815,
											"end": 3912,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "215"
										},
										{
											"begin": 3815,
											"end": 3912,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3815,
											"end": 3912,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3815,
											"end": 3912,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3815,
											"end": 3912,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3815,
											"end": 3912,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3815,
											"end": 3912,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3815,
											"end": 3912,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3815,
											"end": 3912,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 3372,
											"end": 3912,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "212"
										},
										{
											"begin": 3372,
											"end": 3912,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3290,
											"end": 3920,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3290,
											"end": 3920,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6089,
											"end": 6198,
											"name": "tag",
											"source": 3,
											"value": "67"
										},
										{
											"begin": 6089,
											"end": 6198,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6141,
											"end": 6148,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6168,
											"end": 6182,
											"name": "PUSH",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 6168,
											"end": 6190,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6168,
											"end": 6190,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6168,
											"end": 6190,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6168,
											"end": 6190,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6168,
											"end": 6190,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 6168,
											"end": 6190,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6168,
											"end": 6190,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 6168,
											"end": 6190,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 6168,
											"end": 6190,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6168,
											"end": 6190,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 6168,
											"end": 6190,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6168,
											"end": 6190,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6161,
											"end": 6190,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6161,
											"end": 6190,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6089,
											"end": 6198,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6089,
											"end": 6198,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7290,
											"end": 7433,
											"name": "tag",
											"source": 3,
											"value": "71"
										},
										{
											"begin": 7290,
											"end": 7433,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1956,
											"end": 1971,
											"name": "TIMESTAMP",
											"source": 3
										},
										{
											"begin": 1936,
											"end": 1953,
											"name": "PUSHIMMUTABLE",
											"source": 3,
											"value": "3171"
										},
										{
											"begin": 1936,
											"end": 1971,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFF"
										},
										{
											"begin": 1936,
											"end": 1971,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1936,
											"end": 1971,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 1932,
											"end": 2159,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1932,
											"end": 2159,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "219"
										},
										{
											"begin": 1932,
											"end": 2159,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2010,
											"end": 2030,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "220"
										},
										{
											"begin": 2010,
											"end": 2028,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "77"
										},
										{
											"begin": 2010,
											"end": 2030,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2010,
											"end": 2030,
											"name": "tag",
											"source": 3,
											"value": "220"
										},
										{
											"begin": 2010,
											"end": 2030,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1996,
											"end": 2030,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1996,
											"end": 2030,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1996,
											"end": 2006,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 1996,
											"end": 2030,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1996,
											"end": 2030,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1996,
											"end": 2030,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1988,
											"end": 2054,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "221"
										},
										{
											"begin": 1988,
											"end": 2054,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1988,
											"end": 2054,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1988,
											"end": 2054,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1988,
											"end": 2054,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1988,
											"end": 2054,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1988,
											"end": 2054,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1988,
											"end": 2054,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1988,
											"end": 2054,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1988,
											"end": 2054,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "222"
										},
										{
											"begin": 1988,
											"end": 2054,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1988,
											"end": 2054,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "98"
										},
										{
											"begin": 1988,
											"end": 2054,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1988,
											"end": 2054,
											"name": "tag",
											"source": 3,
											"value": "222"
										},
										{
											"begin": 1988,
											"end": 2054,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1988,
											"end": 2054,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1988,
											"end": 2054,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1988,
											"end": 2054,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1988,
											"end": 2054,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1988,
											"end": 2054,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1988,
											"end": 2054,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1988,
											"end": 2054,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1988,
											"end": 2054,
											"name": "tag",
											"source": 3,
											"value": "221"
										},
										{
											"begin": 1988,
											"end": 2054,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1932,
											"end": 2159,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "223"
										},
										{
											"begin": 1932,
											"end": 2159,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1932,
											"end": 2159,
											"name": "tag",
											"source": 3,
											"value": "219"
										},
										{
											"begin": 1932,
											"end": 2159,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2096,
											"end": 2113,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "224"
										},
										{
											"begin": 2096,
											"end": 2111,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "57"
										},
										{
											"begin": 2096,
											"end": 2113,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2096,
											"end": 2113,
											"name": "tag",
											"source": 3,
											"value": "224"
										},
										{
											"begin": 2096,
											"end": 2113,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2082,
											"end": 2113,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2082,
											"end": 2113,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2082,
											"end": 2092,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 2082,
											"end": 2113,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2082,
											"end": 2113,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2082,
											"end": 2113,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 2082,
											"end": 2135,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2082,
											"end": 2135,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2082,
											"end": 2135,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "225"
										},
										{
											"begin": 2082,
											"end": 2135,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2082,
											"end": 2135,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2118,
											"end": 2135,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "226"
										},
										{
											"begin": 2118,
											"end": 2133,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 2118,
											"end": 2135,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2118,
											"end": 2135,
											"name": "tag",
											"source": 3,
											"value": "226"
										},
										{
											"begin": 2118,
											"end": 2135,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2117,
											"end": 2135,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2082,
											"end": 2135,
											"name": "tag",
											"source": 3,
											"value": "225"
										},
										{
											"begin": 2082,
											"end": 2135,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2159,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "227"
										},
										{
											"begin": 2074,
											"end": 2159,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2159,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2074,
											"end": 2159,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2159,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2074,
											"end": 2159,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2159,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2159,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2074,
											"end": 2159,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2159,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "228"
										},
										{
											"begin": 2074,
											"end": 2159,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2159,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "98"
										},
										{
											"begin": 2074,
											"end": 2159,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2159,
											"name": "tag",
											"source": 3,
											"value": "228"
										},
										{
											"begin": 2074,
											"end": 2159,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2159,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2074,
											"end": 2159,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2159,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2159,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2159,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2159,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2159,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2159,
											"name": "tag",
											"source": 3,
											"value": "227"
										},
										{
											"begin": 2074,
											"end": 2159,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1932,
											"end": 2159,
											"name": "tag",
											"source": 3,
											"value": "223"
										},
										{
											"begin": 1932,
											"end": 2159,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7360,
											"end": 7385,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "230"
										},
										{
											"begin": 7379,
											"end": 7384,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7360,
											"end": 7378,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "107"
										},
										{
											"begin": 7360,
											"end": 7385,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7360,
											"end": 7385,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "230"
										},
										{
											"begin": 7360,
											"end": 7385,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7396,
											"end": 7425,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "231"
										},
										{
											"begin": 7419,
											"end": 7424,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7396,
											"end": 7418,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "109"
										},
										{
											"begin": 7396,
											"end": 7425,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7396,
											"end": 7425,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "231"
										},
										{
											"begin": 7396,
											"end": 7425,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7290,
											"end": 7433,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7290,
											"end": 7433,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7178,
											"end": 7282,
											"name": "tag",
											"source": 3,
											"value": "73"
										},
										{
											"begin": 7178,
											"end": 7282,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7231,
											"end": 7237,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7257,
											"end": 7268,
											"name": "PUSH",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 7257,
											"end": 7274,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7257,
											"end": 7274,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7257,
											"end": 7274,
											"name": "PUSH",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 7257,
											"end": 7274,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7257,
											"end": 7274,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 7257,
											"end": 7274,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7257,
											"end": 7274,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 7257,
											"end": 7274,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 7257,
											"end": 7274,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7257,
											"end": 7274,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 7257,
											"end": 7274,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7257,
											"end": 7274,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7250,
											"end": 7274,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7250,
											"end": 7274,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7178,
											"end": 7282,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7178,
											"end": 7282,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4310,
											"end": 4424,
											"name": "tag",
											"source": 3,
											"value": "77"
										},
										{
											"begin": 4310,
											"end": 4424,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4361,
											"end": 4371,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4395,
											"end": 4404,
											"name": "PUSH",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 4395,
											"end": 4412,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4395,
											"end": 4412,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4395,
											"end": 4412,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4395,
											"end": 4412,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4395,
											"end": 4412,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 4395,
											"end": 4412,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4395,
											"end": 4412,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 4395,
											"end": 4412,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 4395,
											"end": 4412,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4395,
											"end": 4412,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 4395,
											"end": 4412,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4395,
											"end": 4412,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4388,
											"end": 4412,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4388,
											"end": 4412,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4310,
											"end": 4424,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4310,
											"end": 4424,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6320,
											"end": 6635,
											"name": "tag",
											"source": 3,
											"value": "81"
										},
										{
											"begin": 6320,
											"end": 6635,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1956,
											"end": 1971,
											"name": "TIMESTAMP",
											"source": 3
										},
										{
											"begin": 1936,
											"end": 1953,
											"name": "PUSHIMMUTABLE",
											"source": 3,
											"value": "3171"
										},
										{
											"begin": 1936,
											"end": 1971,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFF"
										},
										{
											"begin": 1936,
											"end": 1971,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1936,
											"end": 1971,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 1932,
											"end": 2159,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1932,
											"end": 2159,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "235"
										},
										{
											"begin": 1932,
											"end": 2159,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2010,
											"end": 2030,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "236"
										},
										{
											"begin": 2010,
											"end": 2028,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "77"
										},
										{
											"begin": 2010,
											"end": 2030,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2010,
											"end": 2030,
											"name": "tag",
											"source": 3,
											"value": "236"
										},
										{
											"begin": 2010,
											"end": 2030,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1996,
											"end": 2030,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1996,
											"end": 2030,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1996,
											"end": 2006,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 1996,
											"end": 2030,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1996,
											"end": 2030,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1996,
											"end": 2030,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1988,
											"end": 2054,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "237"
										},
										{
											"begin": 1988,
											"end": 2054,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1988,
											"end": 2054,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1988,
											"end": 2054,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1988,
											"end": 2054,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1988,
											"end": 2054,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1988,
											"end": 2054,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1988,
											"end": 2054,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1988,
											"end": 2054,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1988,
											"end": 2054,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "238"
										},
										{
											"begin": 1988,
											"end": 2054,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1988,
											"end": 2054,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "98"
										},
										{
											"begin": 1988,
											"end": 2054,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1988,
											"end": 2054,
											"name": "tag",
											"source": 3,
											"value": "238"
										},
										{
											"begin": 1988,
											"end": 2054,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1988,
											"end": 2054,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1988,
											"end": 2054,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1988,
											"end": 2054,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1988,
											"end": 2054,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1988,
											"end": 2054,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1988,
											"end": 2054,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1988,
											"end": 2054,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1988,
											"end": 2054,
											"name": "tag",
											"source": 3,
											"value": "237"
										},
										{
											"begin": 1988,
											"end": 2054,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1932,
											"end": 2159,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "239"
										},
										{
											"begin": 1932,
											"end": 2159,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1932,
											"end": 2159,
											"name": "tag",
											"source": 3,
											"value": "235"
										},
										{
											"begin": 1932,
											"end": 2159,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2096,
											"end": 2113,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "240"
										},
										{
											"begin": 2096,
											"end": 2111,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "57"
										},
										{
											"begin": 2096,
											"end": 2113,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2096,
											"end": 2113,
											"name": "tag",
											"source": 3,
											"value": "240"
										},
										{
											"begin": 2096,
											"end": 2113,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2082,
											"end": 2113,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2082,
											"end": 2113,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2082,
											"end": 2092,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 2082,
											"end": 2113,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2082,
											"end": 2113,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2082,
											"end": 2113,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 2082,
											"end": 2135,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2082,
											"end": 2135,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2082,
											"end": 2135,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "241"
										},
										{
											"begin": 2082,
											"end": 2135,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2082,
											"end": 2135,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2118,
											"end": 2135,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "242"
										},
										{
											"begin": 2118,
											"end": 2133,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 2118,
											"end": 2135,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2118,
											"end": 2135,
											"name": "tag",
											"source": 3,
											"value": "242"
										},
										{
											"begin": 2118,
											"end": 2135,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2117,
											"end": 2135,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2082,
											"end": 2135,
											"name": "tag",
											"source": 3,
											"value": "241"
										},
										{
											"begin": 2082,
											"end": 2135,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2159,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "243"
										},
										{
											"begin": 2074,
											"end": 2159,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2159,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2074,
											"end": 2159,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2159,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2074,
											"end": 2159,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2159,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2159,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2074,
											"end": 2159,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2159,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "244"
										},
										{
											"begin": 2074,
											"end": 2159,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2159,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "98"
										},
										{
											"begin": 2074,
											"end": 2159,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2159,
											"name": "tag",
											"source": 3,
											"value": "244"
										},
										{
											"begin": 2074,
											"end": 2159,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2159,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2074,
											"end": 2159,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2159,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2159,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2159,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2159,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2159,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2159,
											"name": "tag",
											"source": 3,
											"value": "243"
										},
										{
											"begin": 2074,
											"end": 2159,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1932,
											"end": 2159,
											"name": "tag",
											"source": 3,
											"value": "239"
										},
										{
											"begin": 1932,
											"end": 2159,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6449,
											"end": 6450,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6422,
											"end": 6434,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6422,
											"end": 6446,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6422,
											"end": 6446,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6422,
											"end": 6446,
											"modifierDepth": 1,
											"name": "EXTCODESIZE",
											"source": 3
										},
										{
											"begin": 6422,
											"end": 6450,
											"modifierDepth": 1,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 6418,
											"end": 6625,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 6418,
											"end": 6625,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "246"
										},
										{
											"begin": 6418,
											"end": 6625,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6487,
											"end": 6499,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6467,
											"end": 6484,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 6467,
											"end": 6484,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6467,
											"end": 6499,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 6467,
											"end": 6499,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 6467,
											"end": 6499,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6467,
											"end": 6499,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 6467,
											"end": 6499,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6467,
											"end": 6499,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6467,
											"end": 6499,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 6467,
											"end": 6499,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 6467,
											"end": 6499,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6467,
											"end": 6499,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6467,
											"end": 6499,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6467,
											"end": 6499,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6467,
											"end": 6499,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6467,
											"end": 6499,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 6467,
											"end": 6499,
											"modifierDepth": 1,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 6467,
											"end": 6499,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6467,
											"end": 6499,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 6467,
											"end": 6499,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6546,
											"end": 6558,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6519,
											"end": 6559,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6519,
											"end": 6559,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6519,
											"end": 6559,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "E8D8E3C7C3EBEC0C177D0FE22D223F8B5071DB39155104808D45027E368BA77A"
										},
										{
											"begin": 6519,
											"end": 6559,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6519,
											"end": 6559,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6519,
											"end": 6559,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6519,
											"end": 6559,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6519,
											"end": 6559,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6519,
											"end": 6559,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6519,
											"end": 6559,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6519,
											"end": 6559,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6519,
											"end": 6559,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 3
										},
										{
											"begin": 6418,
											"end": 6625,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "247"
										},
										{
											"begin": 6418,
											"end": 6625,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6418,
											"end": 6625,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "246"
										},
										{
											"begin": 6418,
											"end": 6625,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6612,
											"end": 6624,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6586,
											"end": 6625,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6586,
											"end": 6625,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6586,
											"end": 6625,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "84DBC6CB00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6586,
											"end": 6625,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6586,
											"end": 6625,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6586,
											"end": 6625,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 6586,
											"end": 6625,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6586,
											"end": 6625,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "248"
										},
										{
											"begin": 6586,
											"end": 6625,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6586,
											"end": 6625,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6586,
											"end": 6625,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "49"
										},
										{
											"begin": 6586,
											"end": 6625,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6586,
											"end": 6625,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "248"
										},
										{
											"begin": 6586,
											"end": 6625,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6586,
											"end": 6625,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6586,
											"end": 6625,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6586,
											"end": 6625,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6586,
											"end": 6625,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6586,
											"end": 6625,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6586,
											"end": 6625,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6586,
											"end": 6625,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 6418,
											"end": 6625,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "247"
										},
										{
											"begin": 6418,
											"end": 6625,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6320,
											"end": 6635,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6320,
											"end": 6635,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2620,
											"end": 2964,
											"name": "tag",
											"source": 4,
											"value": "83"
										},
										{
											"begin": 2620,
											"end": 2964,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2704,
											"end": 2705,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2671,
											"end": 2682,
											"name": "PUSH",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 2671,
											"end": 2694,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2683,
											"end": 2693,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 2671,
											"end": 2694,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2671,
											"end": 2694,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2671,
											"end": 2694,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2671,
											"end": 2694,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2671,
											"end": 2694,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2671,
											"end": 2694,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2671,
											"end": 2694,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2671,
											"end": 2694,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2671,
											"end": 2694,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2671,
											"end": 2694,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2671,
											"end": 2694,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2671,
											"end": 2694,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2671,
											"end": 2694,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2671,
											"end": 2694,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2671,
											"end": 2694,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 2671,
											"end": 2701,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2671,
											"end": 2701,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2671,
											"end": 2701,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2671,
											"end": 2701,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2671,
											"end": 2701,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2671,
											"end": 2701,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2671,
											"end": 2701,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2671,
											"end": 2701,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 2671,
											"end": 2701,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2671,
											"end": 2701,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2671,
											"end": 2701,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2671,
											"end": 2701,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2671,
											"end": 2705,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2671,
											"end": 2705,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2671,
											"end": 2705,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 2671,
											"end": 2743,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2671,
											"end": 2743,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2671,
											"end": 2743,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "250"
										},
										{
											"begin": 2671,
											"end": 2743,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2671,
											"end": 2743,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2742,
											"end": 2743,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2709,
											"end": 2720,
											"name": "PUSH",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 2709,
											"end": 2732,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2721,
											"end": 2731,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 2709,
											"end": 2732,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2709,
											"end": 2732,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2709,
											"end": 2732,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2709,
											"end": 2732,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2709,
											"end": 2732,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2709,
											"end": 2732,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2709,
											"end": 2732,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2709,
											"end": 2732,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2709,
											"end": 2732,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2709,
											"end": 2732,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2709,
											"end": 2732,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2709,
											"end": 2732,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2709,
											"end": 2732,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2709,
											"end": 2732,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2709,
											"end": 2732,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 2709,
											"end": 2738,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2709,
											"end": 2738,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2709,
											"end": 2738,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2709,
											"end": 2738,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2709,
											"end": 2738,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2709,
											"end": 2738,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2709,
											"end": 2738,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2709,
											"end": 2738,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 2709,
											"end": 2738,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2709,
											"end": 2738,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2709,
											"end": 2738,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFF"
										},
										{
											"begin": 2709,
											"end": 2738,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2709,
											"end": 2743,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFF"
										},
										{
											"begin": 2709,
											"end": 2743,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2709,
											"end": 2743,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 2671,
											"end": 2743,
											"name": "tag",
											"source": 4,
											"value": "250"
										},
										{
											"begin": 2671,
											"end": 2743,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2667,
											"end": 2956,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2667,
											"end": 2956,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "251"
										},
										{
											"begin": 2667,
											"end": 2956,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2756,
											"end": 2767,
											"name": "PUSH",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 2756,
											"end": 2779,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2768,
											"end": 2778,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 2756,
											"end": 2779,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2756,
											"end": 2779,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2756,
											"end": 2779,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2756,
											"end": 2779,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2756,
											"end": 2779,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2756,
											"end": 2779,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2756,
											"end": 2779,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2756,
											"end": 2779,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2756,
											"end": 2779,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2756,
											"end": 2779,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2756,
											"end": 2779,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2756,
											"end": 2779,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2756,
											"end": 2779,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2756,
											"end": 2779,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2756,
											"end": 2779,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 2756,
											"end": 2779,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2875,
											"end": 2886,
											"name": "PUSH",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 2875,
											"end": 2898,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2887,
											"end": 2897,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 2875,
											"end": 2898,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2875,
											"end": 2898,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2875,
											"end": 2898,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2875,
											"end": 2898,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2875,
											"end": 2898,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2875,
											"end": 2898,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2875,
											"end": 2898,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2875,
											"end": 2898,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2875,
											"end": 2898,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2875,
											"end": 2898,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2875,
											"end": 2898,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2875,
											"end": 2898,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2875,
											"end": 2898,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2875,
											"end": 2898,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2875,
											"end": 2898,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 2875,
											"end": 2905,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2875,
											"end": 2905,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2875,
											"end": 2905,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2875,
											"end": 2905,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2875,
											"end": 2905,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2875,
											"end": 2905,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2875,
											"end": 2905,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2875,
											"end": 2905,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 2875,
											"end": 2905,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2875,
											"end": 2905,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2875,
											"end": 2905,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2875,
											"end": 2905,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2797,
											"end": 2906,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2797,
											"end": 2906,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2832,
											"end": 2843,
											"name": "PUSH",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 2832,
											"end": 2855,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2844,
											"end": 2854,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 2832,
											"end": 2855,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2832,
											"end": 2855,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2832,
											"end": 2855,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2832,
											"end": 2855,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2832,
											"end": 2855,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2832,
											"end": 2855,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2832,
											"end": 2855,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2832,
											"end": 2855,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2832,
											"end": 2855,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2832,
											"end": 2855,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2832,
											"end": 2855,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2832,
											"end": 2855,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2832,
											"end": 2855,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2832,
											"end": 2855,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2832,
											"end": 2855,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 2832,
											"end": 2873,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2832,
											"end": 2873,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2832,
											"end": 2873,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2820,
											"end": 2830,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 2797,
											"end": 2906,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2797,
											"end": 2906,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2797,
											"end": 2906,
											"name": "PUSH",
											"source": 4,
											"value": "4A5552F2D245EB6039B03D3A4F2AEEAE275C3D6DC08931B837B5715FBBE5199"
										},
										{
											"begin": 2797,
											"end": 2906,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2797,
											"end": 2906,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2797,
											"end": 2906,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2797,
											"end": 2906,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2797,
											"end": 2906,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2797,
											"end": 2906,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2797,
											"end": 2906,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2797,
											"end": 2906,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2797,
											"end": 2906,
											"name": "LOG4",
											"source": 4
										},
										{
											"begin": 2667,
											"end": 2956,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "252"
										},
										{
											"begin": 2667,
											"end": 2956,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2667,
											"end": 2956,
											"name": "tag",
											"source": 4,
											"value": "251"
										},
										{
											"begin": 2667,
											"end": 2956,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2932,
											"end": 2956,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2932,
											"end": 2956,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2932,
											"end": 2956,
											"name": "PUSH",
											"source": 4,
											"value": "6C4360F000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2932,
											"end": 2956,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2932,
											"end": 2956,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2932,
											"end": 2956,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2932,
											"end": 2956,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2932,
											"end": 2956,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2932,
											"end": 2956,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2932,
											"end": 2956,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2932,
											"end": 2956,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2932,
											"end": 2956,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2932,
											"end": 2956,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2932,
											"end": 2956,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2667,
											"end": 2956,
											"name": "tag",
											"source": 4,
											"value": "252"
										},
										{
											"begin": 2667,
											"end": 2956,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2620,
											"end": 2964,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4436,
											"end": 4545,
											"name": "tag",
											"source": 3,
											"value": "85"
										},
										{
											"begin": 4436,
											"end": 4545,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4488,
											"end": 4495,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4528,
											"end": 4532,
											"name": "ADDRESS",
											"source": 3
										},
										{
											"begin": 4512,
											"end": 4533,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4512,
											"end": 4533,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4436,
											"end": 4545,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4436,
											"end": 4545,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6206,
											"end": 6310,
											"name": "tag",
											"source": 3,
											"value": "88"
										},
										{
											"begin": 6206,
											"end": 6310,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6258,
											"end": 6262,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6282,
											"end": 6296,
											"name": "PUSH",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 6282,
											"end": 6302,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6282,
											"end": 6302,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6282,
											"end": 6302,
											"name": "PUSH",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 6282,
											"end": 6302,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6282,
											"end": 6302,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 6282,
											"end": 6302,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6282,
											"end": 6302,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 6282,
											"end": 6302,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 6282,
											"end": 6302,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6282,
											"end": 6302,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 6282,
											"end": 6302,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 6282,
											"end": 6302,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6275,
											"end": 6302,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6275,
											"end": 6302,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6206,
											"end": 6310,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6206,
											"end": 6310,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6643,
											"end": 7062,
											"name": "tag",
											"source": 3,
											"value": "92"
										},
										{
											"begin": 6643,
											"end": 7062,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2247,
											"end": 2264,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "256"
										},
										{
											"begin": 2247,
											"end": 2262,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "57"
										},
										{
											"begin": 2247,
											"end": 2264,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2247,
											"end": 2264,
											"name": "tag",
											"source": 3,
											"value": "256"
										},
										{
											"begin": 2247,
											"end": 2264,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2264,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2233,
											"end": 2264,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2243,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2264,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2233,
											"end": 2264,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2264,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2286,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2286,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2286,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "257"
										},
										{
											"begin": 2233,
											"end": 2286,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2286,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2269,
											"end": 2286,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "258"
										},
										{
											"begin": 2269,
											"end": 2284,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 2269,
											"end": 2286,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2269,
											"end": 2286,
											"name": "tag",
											"source": 3,
											"value": "258"
										},
										{
											"begin": 2269,
											"end": 2286,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2268,
											"end": 2286,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2286,
											"name": "tag",
											"source": 3,
											"value": "257"
										},
										{
											"begin": 2233,
											"end": 2286,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2225,
											"end": 2310,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "259"
										},
										{
											"begin": 2225,
											"end": 2310,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2225,
											"end": 2310,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2225,
											"end": 2310,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2225,
											"end": 2310,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2225,
											"end": 2310,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2225,
											"end": 2310,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2225,
											"end": 2310,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2225,
											"end": 2310,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2225,
											"end": 2310,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "260"
										},
										{
											"begin": 2225,
											"end": 2310,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2225,
											"end": 2310,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "98"
										},
										{
											"begin": 2225,
											"end": 2310,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2225,
											"end": 2310,
											"name": "tag",
											"source": 3,
											"value": "260"
										},
										{
											"begin": 2225,
											"end": 2310,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2225,
											"end": 2310,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2225,
											"end": 2310,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2225,
											"end": 2310,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2225,
											"end": 2310,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2225,
											"end": 2310,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2225,
											"end": 2310,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2225,
											"end": 2310,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2225,
											"end": 2310,
											"name": "tag",
											"source": 3,
											"value": "259"
										},
										{
											"begin": 2225,
											"end": 2310,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6765,
											"end": 6777,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6744,
											"end": 6777,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6744,
											"end": 6777,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6744,
											"end": 6761,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 6744,
											"end": 6761,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6744,
											"end": 6761,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6744,
											"end": 6761,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 6744,
											"end": 6761,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6744,
											"end": 6761,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 6744,
											"end": 6761,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 6744,
											"end": 6761,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6744,
											"end": 6761,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 6744,
											"end": 6761,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6744,
											"end": 6761,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6744,
											"end": 6777,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6744,
											"end": 6777,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6744,
											"end": 6777,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6740,
											"end": 7054,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "262"
										},
										{
											"begin": 6740,
											"end": 7054,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6801,
											"end": 6818,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 6801,
											"end": 6818,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6794,
											"end": 6818,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 6794,
											"end": 6818,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 6794,
											"end": 6818,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6794,
											"end": 6818,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 6794,
											"end": 6818,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6794,
											"end": 6818,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6794,
											"end": 6818,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 6794,
											"end": 6818,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 6794,
											"end": 6818,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6794,
											"end": 6818,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6794,
											"end": 6818,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 6855,
											"end": 6867,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6833,
											"end": 6844,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 6833,
											"end": 6852,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6833,
											"end": 6852,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6833,
											"end": 6852,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6833,
											"end": 6867,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 6833,
											"end": 6867,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 6833,
											"end": 6867,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6833,
											"end": 6867,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 6833,
											"end": 6867,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6833,
											"end": 6867,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6833,
											"end": 6867,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 6833,
											"end": 6867,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 6833,
											"end": 6867,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6833,
											"end": 6867,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6833,
											"end": 6867,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6833,
											"end": 6867,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6833,
											"end": 6867,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6833,
											"end": 6867,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 6833,
											"end": 6867,
											"modifierDepth": 1,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 6833,
											"end": 6867,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6833,
											"end": 6867,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 6833,
											"end": 6867,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6882,
											"end": 6893,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 6882,
											"end": 6899,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6882,
											"end": 6899,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6882,
											"end": 6899,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 6882,
											"end": 6901,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6882,
											"end": 6901,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6882,
											"end": 6901,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6882,
											"end": 6901,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 6882,
											"end": 6901,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6882,
											"end": 6901,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 6882,
											"end": 6901,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 6882,
											"end": 6901,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6882,
											"end": 6901,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 6882,
											"end": 6901,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6882,
											"end": 6901,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6882,
											"end": 6901,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6882,
											"end": 6901,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6882,
											"end": 6901,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6882,
											"end": 6901,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6882,
											"end": 6901,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "263"
										},
										{
											"begin": 6882,
											"end": 6901,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6882,
											"end": 6901,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "121"
										},
										{
											"begin": 6882,
											"end": 6901,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6882,
											"end": 6901,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "263"
										},
										{
											"begin": 6882,
											"end": 6901,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6882,
											"end": 6901,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6882,
											"end": 6901,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6882,
											"end": 6901,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 6882,
											"end": 6901,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 6882,
											"end": 6901,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6882,
											"end": 6901,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 6882,
											"end": 6901,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6882,
											"end": 6901,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6882,
											"end": 6901,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 6882,
											"end": 6901,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 6882,
											"end": 6901,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6882,
											"end": 6901,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6882,
											"end": 6901,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6882,
											"end": 6901,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6882,
											"end": 6901,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6882,
											"end": 6901,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 6882,
											"end": 6901,
											"modifierDepth": 1,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 6882,
											"end": 6901,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6882,
											"end": 6901,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 6882,
											"end": 6901,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6882,
											"end": 6901,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6970,
											"end": 6981,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 6970,
											"end": 6987,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6970,
											"end": 6987,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6970,
											"end": 6987,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 6970,
											"end": 6987,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6970,
											"end": 6987,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 6970,
											"end": 6987,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6970,
											"end": 6987,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 6970,
											"end": 6987,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 6970,
											"end": 6987,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6970,
											"end": 6987,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 6970,
											"end": 6987,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6970,
											"end": 6987,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6921,
											"end": 6988,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6921,
											"end": 6988,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6949,
											"end": 6960,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 6949,
											"end": 6968,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6949,
											"end": 6968,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6949,
											"end": 6968,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6949,
											"end": 6968,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6949,
											"end": 6968,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 6949,
											"end": 6968,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6949,
											"end": 6968,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 6949,
											"end": 6968,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 6949,
											"end": 6968,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6949,
											"end": 6968,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 6949,
											"end": 6968,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6949,
											"end": 6968,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6921,
											"end": 6988,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6921,
											"end": 6988,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6921,
											"end": 6988,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "5E86008A8467D1EFCCFE6CB6BD49BA7278D6AF2745A1E6994E443322A4237093"
										},
										{
											"begin": 6921,
											"end": 6988,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6921,
											"end": 6988,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6921,
											"end": 6988,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6921,
											"end": 6988,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6921,
											"end": 6988,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6921,
											"end": 6988,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6921,
											"end": 6988,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6921,
											"end": 6988,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6921,
											"end": 6988,
											"modifierDepth": 1,
											"name": "LOG3",
											"source": 3
										},
										{
											"begin": 6740,
											"end": 7054,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "264"
										},
										{
											"begin": 6740,
											"end": 7054,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6740,
											"end": 7054,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "262"
										},
										{
											"begin": 6740,
											"end": 7054,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7041,
											"end": 7053,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7015,
											"end": 7054,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7015,
											"end": 7054,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7015,
											"end": 7054,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "84DBC6CB00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7015,
											"end": 7054,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7015,
											"end": 7054,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7015,
											"end": 7054,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 7015,
											"end": 7054,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7015,
											"end": 7054,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "265"
										},
										{
											"begin": 7015,
											"end": 7054,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7015,
											"end": 7054,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7015,
											"end": 7054,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "49"
										},
										{
											"begin": 7015,
											"end": 7054,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7015,
											"end": 7054,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "265"
										},
										{
											"begin": 7015,
											"end": 7054,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7015,
											"end": 7054,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7015,
											"end": 7054,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7015,
											"end": 7054,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7015,
											"end": 7054,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7015,
											"end": 7054,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7015,
											"end": 7054,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7015,
											"end": 7054,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 6740,
											"end": 7054,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "264"
										},
										{
											"begin": 6740,
											"end": 7054,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6643,
											"end": 7062,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6643,
											"end": 7062,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7788,
											"end": 7879,
											"name": "tag",
											"source": 3,
											"value": "107"
										},
										{
											"begin": 7788,
											"end": 7879,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7866,
											"end": 7871,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7847,
											"end": 7857,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 7847,
											"end": 7863,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7847,
											"end": 7863,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7847,
											"end": 7863,
											"name": "PUSH",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 7847,
											"end": 7871,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 7847,
											"end": 7871,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 7847,
											"end": 7871,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7847,
											"end": 7871,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 7847,
											"end": 7871,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7847,
											"end": 7871,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 7847,
											"end": 7871,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 7847,
											"end": 7871,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 7847,
											"end": 7871,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7847,
											"end": 7871,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7847,
											"end": 7871,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7847,
											"end": 7871,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 7847,
											"end": 7871,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 7847,
											"end": 7871,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 7847,
											"end": 7871,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 7847,
											"end": 7871,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7847,
											"end": 7871,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 7847,
											"end": 7871,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7788,
											"end": 7879,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7788,
											"end": 7879,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7887,
											"end": 7986,
											"name": "tag",
											"source": 3,
											"value": "109"
										},
										{
											"begin": 7887,
											"end": 7986,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7973,
											"end": 7978,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7950,
											"end": 7964,
											"name": "PUSH",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 7950,
											"end": 7970,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7950,
											"end": 7970,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7950,
											"end": 7970,
											"name": "PUSH",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 7950,
											"end": 7978,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 7950,
											"end": 7978,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 7950,
											"end": 7978,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7950,
											"end": 7978,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 7950,
											"end": 7978,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7950,
											"end": 7978,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 7950,
											"end": 7978,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 7950,
											"end": 7978,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 7950,
											"end": 7978,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7950,
											"end": 7978,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7950,
											"end": 7978,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7950,
											"end": 7978,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 7950,
											"end": 7978,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 7950,
											"end": 7978,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 7950,
											"end": 7978,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 7950,
											"end": 7978,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7950,
											"end": 7978,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 7950,
											"end": 7978,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7887,
											"end": 7986,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7887,
											"end": 7986,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7560,
											"end": 7780,
											"name": "tag",
											"source": 3,
											"value": "161"
										},
										{
											"begin": 7560,
											"end": 7780,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7651,
											"end": 7659,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7631,
											"end": 7640,
											"name": "PUSH",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 7631,
											"end": 7648,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7631,
											"end": 7648,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7631,
											"end": 7648,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7631,
											"end": 7659,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 7631,
											"end": 7659,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 7631,
											"end": 7659,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7631,
											"end": 7659,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 7631,
											"end": 7659,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7631,
											"end": 7659,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7631,
											"end": 7659,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 7631,
											"end": 7659,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 7631,
											"end": 7659,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7631,
											"end": 7659,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7631,
											"end": 7659,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7631,
											"end": 7659,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7631,
											"end": 7659,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7631,
											"end": 7659,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 7631,
											"end": 7659,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 7631,
											"end": 7659,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7631,
											"end": 7659,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 7631,
											"end": 7659,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7670,
											"end": 7679,
											"name": "PUSH",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 7670,
											"end": 7685,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7670,
											"end": 7685,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7670,
											"end": 7685,
											"name": "PUSH",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 7670,
											"end": 7687,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7670,
											"end": 7687,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7670,
											"end": 7687,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7670,
											"end": 7687,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 7670,
											"end": 7687,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7670,
											"end": 7687,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 7670,
											"end": 7687,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 7670,
											"end": 7687,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7670,
											"end": 7687,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 7670,
											"end": 7687,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7670,
											"end": 7687,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7670,
											"end": 7687,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7670,
											"end": 7687,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 7670,
											"end": 7687,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7670,
											"end": 7687,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7670,
											"end": 7687,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "269"
										},
										{
											"begin": 7670,
											"end": 7687,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7670,
											"end": 7687,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "121"
										},
										{
											"begin": 7670,
											"end": 7687,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7670,
											"end": 7687,
											"name": "tag",
											"source": 3,
											"value": "269"
										},
										{
											"begin": 7670,
											"end": 7687,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7670,
											"end": 7687,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7670,
											"end": 7687,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7670,
											"end": 7687,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 7670,
											"end": 7687,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 7670,
											"end": 7687,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7670,
											"end": 7687,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 7670,
											"end": 7687,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7670,
											"end": 7687,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7670,
											"end": 7687,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 7670,
											"end": 7687,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 7670,
											"end": 7687,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7670,
											"end": 7687,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7670,
											"end": 7687,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7670,
											"end": 7687,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7670,
											"end": 7687,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7670,
											"end": 7687,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 7670,
											"end": 7687,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 7670,
											"end": 7687,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7670,
											"end": 7687,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 7670,
											"end": 7687,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7670,
											"end": 7687,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7756,
											"end": 7765,
											"name": "PUSH",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 7756,
											"end": 7771,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7756,
											"end": 7771,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7756,
											"end": 7771,
											"name": "PUSH",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 7756,
											"end": 7771,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7756,
											"end": 7771,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 7756,
											"end": 7771,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7756,
											"end": 7771,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 7756,
											"end": 7771,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 7756,
											"end": 7771,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7756,
											"end": 7771,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 7756,
											"end": 7771,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7756,
											"end": 7771,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7703,
											"end": 7772,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7703,
											"end": 7772,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7737,
											"end": 7746,
											"name": "PUSH",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 7737,
											"end": 7754,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7737,
											"end": 7754,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7737,
											"end": 7754,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7737,
											"end": 7754,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7737,
											"end": 7754,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 7737,
											"end": 7754,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7737,
											"end": 7754,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 7737,
											"end": 7754,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 7737,
											"end": 7754,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7737,
											"end": 7754,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 7737,
											"end": 7754,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7737,
											"end": 7754,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7703,
											"end": 7772,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7703,
											"end": 7772,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7703,
											"end": 7772,
											"name": "PUSH",
											"source": 3,
											"value": "F7F7C26682668C39FD8C6DBCA125BD9466E743B9E38ACC3240867C139CD93C30"
										},
										{
											"begin": 7703,
											"end": 7772,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7703,
											"end": 7772,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7703,
											"end": 7772,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7703,
											"end": 7772,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7703,
											"end": 7772,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7703,
											"end": 7772,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7703,
											"end": 7772,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7703,
											"end": 7772,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7703,
											"end": 7772,
											"name": "LOG3",
											"source": 3
										},
										{
											"begin": 7560,
											"end": 7780,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7560,
											"end": 7780,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 5,
											"value": "271"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 334,
											"end": 460,
											"name": "tag",
											"source": 5,
											"value": "273"
										},
										{
											"begin": 334,
											"end": 460,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 453,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 404,
											"end": 409,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 400,
											"end": 454,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 389,
											"end": 454,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 389,
											"end": 454,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 334,
											"end": 460,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 334,
											"end": 460,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 466,
											"end": 562,
											"name": "tag",
											"source": 5,
											"value": "274"
										},
										{
											"begin": 466,
											"end": 562,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 503,
											"end": 510,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "306"
										},
										{
											"begin": 550,
											"end": 555,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "273"
										},
										{
											"begin": 532,
											"end": 556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 532,
											"end": 556,
											"name": "tag",
											"source": 5,
											"value": "306"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 521,
											"end": 556,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 521,
											"end": 556,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 466,
											"end": 562,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 466,
											"end": 562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 568,
											"end": 690,
											"name": "tag",
											"source": 5,
											"value": "275"
										},
										{
											"begin": 568,
											"end": 690,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "308"
										},
										{
											"begin": 659,
											"end": 664,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "274"
										},
										{
											"begin": 641,
											"end": 665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 641,
											"end": 665,
											"name": "tag",
											"source": 5,
											"value": "308"
										},
										{
											"begin": 641,
											"end": 665,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 634,
											"end": 639,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 631,
											"end": 666,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 621,
											"end": 684,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "309"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 680,
											"end": 681,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 677,
											"end": 678,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 670,
											"end": 682,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 621,
											"end": 684,
											"name": "tag",
											"source": 5,
											"value": "309"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 568,
											"end": 690,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 568,
											"end": 690,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 696,
											"end": 835,
											"name": "tag",
											"source": 5,
											"value": "276"
										},
										{
											"begin": 696,
											"end": 835,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 742,
											"end": 747,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 780,
											"end": 786,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 767,
											"end": 787,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 758,
											"end": 787,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 758,
											"end": 787,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "311"
										},
										{
											"begin": 823,
											"end": 828,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "275"
										},
										{
											"begin": 796,
											"end": 829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 796,
											"end": 829,
											"name": "tag",
											"source": 5,
											"value": "311"
										},
										{
											"begin": 796,
											"end": 829,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 696,
											"end": 835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "tag",
											"source": 5,
											"value": "29"
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 900,
											"end": 906,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 949,
											"end": 951,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 937,
											"end": 946,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 928,
											"end": 935,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 924,
											"end": 947,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 920,
											"end": 952,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "313"
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "314"
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "271"
										},
										{
											"begin": 955,
											"end": 1034,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "tag",
											"source": 5,
											"value": "314"
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "tag",
											"source": 5,
											"value": "313"
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1075,
											"end": 1076,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "315"
										},
										{
											"begin": 1145,
											"end": 1152,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1125,
											"end": 1134,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1121,
											"end": 1143,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "276"
										},
										{
											"begin": 1100,
											"end": 1153,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "tag",
											"source": 5,
											"value": "315"
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1090,
											"end": 1153,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1090,
											"end": 1153,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1046,
											"end": 1163,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 841,
											"end": 1170,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1176,
											"end": 1266,
											"name": "tag",
											"source": 5,
											"value": "277"
										},
										{
											"begin": 1176,
											"end": 1266,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1210,
											"end": 1217,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1253,
											"end": 1258,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1246,
											"end": 1259,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1239,
											"end": 1260,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1228,
											"end": 1260,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1228,
											"end": 1260,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1176,
											"end": 1266,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1176,
											"end": 1266,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1176,
											"end": 1266,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1176,
											"end": 1266,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1272,
											"end": 1388,
											"name": "tag",
											"source": 5,
											"value": "278"
										},
										{
											"begin": 1272,
											"end": 1388,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1342,
											"end": 1363,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "318"
										},
										{
											"begin": 1357,
											"end": 1362,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1342,
											"end": 1363,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "277"
										},
										{
											"begin": 1342,
											"end": 1363,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1342,
											"end": 1363,
											"name": "tag",
											"source": 5,
											"value": "318"
										},
										{
											"begin": 1342,
											"end": 1363,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1335,
											"end": 1340,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1332,
											"end": 1364,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1322,
											"end": 1382,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "319"
										},
										{
											"begin": 1322,
											"end": 1382,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1378,
											"end": 1379,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1375,
											"end": 1376,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1368,
											"end": 1380,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1322,
											"end": 1382,
											"name": "tag",
											"source": 5,
											"value": "319"
										},
										{
											"begin": 1322,
											"end": 1382,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1272,
											"end": 1388,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1272,
											"end": 1388,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1394,
											"end": 1527,
											"name": "tag",
											"source": 5,
											"value": "279"
										},
										{
											"begin": 1394,
											"end": 1527,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1437,
											"end": 1442,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1475,
											"end": 1481,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1462,
											"end": 1482,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 1453,
											"end": 1482,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1453,
											"end": 1482,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1491,
											"end": 1521,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "321"
										},
										{
											"begin": 1515,
											"end": 1520,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1491,
											"end": 1521,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "278"
										},
										{
											"begin": 1491,
											"end": 1521,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1491,
											"end": 1521,
											"name": "tag",
											"source": 5,
											"value": "321"
										},
										{
											"begin": 1491,
											"end": 1521,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1394,
											"end": 1527,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1394,
											"end": 1527,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1394,
											"end": 1527,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1394,
											"end": 1527,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1394,
											"end": 1527,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1533,
											"end": 1856,
											"name": "tag",
											"source": 5,
											"value": "33"
										},
										{
											"begin": 1533,
											"end": 1856,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1589,
											"end": 1595,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1638,
											"end": 1640,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1626,
											"end": 1635,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1617,
											"end": 1624,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1613,
											"end": 1636,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1609,
											"end": 1641,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 1606,
											"end": 1725,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1606,
											"end": 1725,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "323"
										},
										{
											"begin": 1606,
											"end": 1725,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1644,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "324"
										},
										{
											"begin": 1644,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "271"
										},
										{
											"begin": 1644,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1644,
											"end": 1723,
											"name": "tag",
											"source": 5,
											"value": "324"
										},
										{
											"begin": 1644,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1606,
											"end": 1725,
											"name": "tag",
											"source": 5,
											"value": "323"
										},
										{
											"begin": 1606,
											"end": 1725,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1764,
											"end": 1765,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1789,
											"end": 1839,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "325"
										},
										{
											"begin": 1831,
											"end": 1838,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1822,
											"end": 1828,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1811,
											"end": 1820,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1807,
											"end": 1829,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1789,
											"end": 1839,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "279"
										},
										{
											"begin": 1789,
											"end": 1839,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1789,
											"end": 1839,
											"name": "tag",
											"source": 5,
											"value": "325"
										},
										{
											"begin": 1789,
											"end": 1839,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1779,
											"end": 1839,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1779,
											"end": 1839,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1735,
											"end": 1849,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1533,
											"end": 1856,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1533,
											"end": 1856,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1533,
											"end": 1856,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1533,
											"end": 1856,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1533,
											"end": 1856,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1862,
											"end": 1939,
											"name": "tag",
											"source": 5,
											"value": "280"
										},
										{
											"begin": 1862,
											"end": 1939,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1899,
											"end": 1906,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1928,
											"end": 1933,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1917,
											"end": 1933,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1917,
											"end": 1933,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1862,
											"end": 1939,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1862,
											"end": 1939,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1862,
											"end": 1939,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1862,
											"end": 1939,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1945,
											"end": 2067,
											"name": "tag",
											"source": 5,
											"value": "281"
										},
										{
											"begin": 1945,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2018,
											"end": 2042,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "328"
										},
										{
											"begin": 2036,
											"end": 2041,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2018,
											"end": 2042,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "280"
										},
										{
											"begin": 2018,
											"end": 2042,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2018,
											"end": 2042,
											"name": "tag",
											"source": 5,
											"value": "328"
										},
										{
											"begin": 2018,
											"end": 2042,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2011,
											"end": 2016,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2008,
											"end": 2043,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1998,
											"end": 2061,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "329"
										},
										{
											"begin": 1998,
											"end": 2061,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2057,
											"end": 2058,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2054,
											"end": 2055,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2047,
											"end": 2059,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1998,
											"end": 2061,
											"name": "tag",
											"source": 5,
											"value": "329"
										},
										{
											"begin": 1998,
											"end": 2061,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1945,
											"end": 2067,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1945,
											"end": 2067,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2073,
											"end": 2212,
											"name": "tag",
											"source": 5,
											"value": "282"
										},
										{
											"begin": 2073,
											"end": 2212,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2119,
											"end": 2124,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2157,
											"end": 2163,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2144,
											"end": 2164,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 2135,
											"end": 2164,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2135,
											"end": 2164,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2173,
											"end": 2206,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "331"
										},
										{
											"begin": 2200,
											"end": 2205,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2173,
											"end": 2206,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "281"
										},
										{
											"begin": 2173,
											"end": 2206,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2173,
											"end": 2206,
											"name": "tag",
											"source": 5,
											"value": "331"
										},
										{
											"begin": 2173,
											"end": 2206,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2073,
											"end": 2212,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2073,
											"end": 2212,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2073,
											"end": 2212,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2073,
											"end": 2212,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2073,
											"end": 2212,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2218,
											"end": 2311,
											"name": "tag",
											"source": 5,
											"value": "283"
										},
										{
											"begin": 2218,
											"end": 2311,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2254,
											"end": 2261,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2294,
											"end": 2304,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2287,
											"end": 2292,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2283,
											"end": 2305,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2272,
											"end": 2305,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2272,
											"end": 2305,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2218,
											"end": 2311,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2218,
											"end": 2311,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2218,
											"end": 2311,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2218,
											"end": 2311,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2317,
											"end": 2437,
											"name": "tag",
											"source": 5,
											"value": "284"
										},
										{
											"begin": 2317,
											"end": 2437,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2389,
											"end": 2412,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "334"
										},
										{
											"begin": 2406,
											"end": 2411,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2389,
											"end": 2412,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "283"
										},
										{
											"begin": 2389,
											"end": 2412,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2389,
											"end": 2412,
											"name": "tag",
											"source": 5,
											"value": "334"
										},
										{
											"begin": 2389,
											"end": 2412,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2382,
											"end": 2387,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2379,
											"end": 2413,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 2369,
											"end": 2431,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "335"
										},
										{
											"begin": 2369,
											"end": 2431,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2427,
											"end": 2428,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2424,
											"end": 2425,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2417,
											"end": 2429,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2369,
											"end": 2431,
											"name": "tag",
											"source": 5,
											"value": "335"
										},
										{
											"begin": 2369,
											"end": 2431,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2317,
											"end": 2437,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2317,
											"end": 2437,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2443,
											"end": 2580,
											"name": "tag",
											"source": 5,
											"value": "285"
										},
										{
											"begin": 2443,
											"end": 2580,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2488,
											"end": 2493,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2526,
											"end": 2532,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2513,
											"end": 2533,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 2504,
											"end": 2533,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2504,
											"end": 2533,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2542,
											"end": 2574,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "337"
										},
										{
											"begin": 2568,
											"end": 2573,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2542,
											"end": 2574,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "284"
										},
										{
											"begin": 2542,
											"end": 2574,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2542,
											"end": 2574,
											"name": "tag",
											"source": 5,
											"value": "337"
										},
										{
											"begin": 2542,
											"end": 2574,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2443,
											"end": 2580,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2443,
											"end": 2580,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2443,
											"end": 2580,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2443,
											"end": 2580,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2443,
											"end": 2580,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2586,
											"end": 2683,
											"name": "tag",
											"source": 5,
											"value": "286"
										},
										{
											"begin": 2586,
											"end": 2683,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2622,
											"end": 2629,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2662,
											"end": 2676,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFF"
										},
										{
											"begin": 2655,
											"end": 2660,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2651,
											"end": 2677,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2640,
											"end": 2677,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2640,
											"end": 2677,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2586,
											"end": 2683,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2586,
											"end": 2683,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2586,
											"end": 2683,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2586,
											"end": 2683,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2689,
											"end": 2809,
											"name": "tag",
											"source": 5,
											"value": "287"
										},
										{
											"begin": 2689,
											"end": 2809,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2761,
											"end": 2784,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "340"
										},
										{
											"begin": 2778,
											"end": 2783,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2761,
											"end": 2784,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "286"
										},
										{
											"begin": 2761,
											"end": 2784,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2761,
											"end": 2784,
											"name": "tag",
											"source": 5,
											"value": "340"
										},
										{
											"begin": 2761,
											"end": 2784,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2754,
											"end": 2759,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2751,
											"end": 2785,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 2741,
											"end": 2803,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "341"
										},
										{
											"begin": 2741,
											"end": 2803,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2799,
											"end": 2800,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2796,
											"end": 2797,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2789,
											"end": 2801,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2741,
											"end": 2803,
											"name": "tag",
											"source": 5,
											"value": "341"
										},
										{
											"begin": 2741,
											"end": 2803,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2689,
											"end": 2809,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2689,
											"end": 2809,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2815,
											"end": 2952,
											"name": "tag",
											"source": 5,
											"value": "288"
										},
										{
											"begin": 2815,
											"end": 2952,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2860,
											"end": 2865,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2898,
											"end": 2904,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2885,
											"end": 2905,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 2876,
											"end": 2905,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2876,
											"end": 2905,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2914,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "343"
										},
										{
											"begin": 2940,
											"end": 2945,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2914,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "287"
										},
										{
											"begin": 2914,
											"end": 2946,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2914,
											"end": 2946,
											"name": "tag",
											"source": 5,
											"value": "343"
										},
										{
											"begin": 2914,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2815,
											"end": 2952,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2815,
											"end": 2952,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2815,
											"end": 2952,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2815,
											"end": 2952,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2815,
											"end": 2952,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2958,
											"end": 3865,
											"name": "tag",
											"source": 5,
											"value": "39"
										},
										{
											"begin": 2958,
											"end": 3865,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3051,
											"end": 3057,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3059,
											"end": 3065,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3067,
											"end": 3073,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3075,
											"end": 3081,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3083,
											"end": 3089,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3132,
											"end": 3135,
											"name": "PUSH",
											"source": 5,
											"value": "A0"
										},
										{
											"begin": 3120,
											"end": 3129,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 3111,
											"end": 3118,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 3107,
											"end": 3130,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3103,
											"end": 3136,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 3100,
											"end": 3220,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3100,
											"end": 3220,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "345"
										},
										{
											"begin": 3100,
											"end": 3220,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3139,
											"end": 3218,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "346"
										},
										{
											"begin": 3139,
											"end": 3218,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "271"
										},
										{
											"begin": 3139,
											"end": 3218,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3139,
											"end": 3218,
											"name": "tag",
											"source": 5,
											"value": "346"
										},
										{
											"begin": 3139,
											"end": 3218,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3100,
											"end": 3220,
											"name": "tag",
											"source": 5,
											"value": "345"
										},
										{
											"begin": 3100,
											"end": 3220,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3259,
											"end": 3260,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3284,
											"end": 3337,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "347"
										},
										{
											"begin": 3329,
											"end": 3336,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 3320,
											"end": 3326,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3309,
											"end": 3318,
											"name": "DUP10",
											"source": 5
										},
										{
											"begin": 3305,
											"end": 3327,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3284,
											"end": 3337,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "276"
										},
										{
											"begin": 3284,
											"end": 3337,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3284,
											"end": 3337,
											"name": "tag",
											"source": 5,
											"value": "347"
										},
										{
											"begin": 3284,
											"end": 3337,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3274,
											"end": 3337,
											"name": "SWAP6",
											"source": 5
										},
										{
											"begin": 3274,
											"end": 3337,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3230,
											"end": 3347,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3386,
											"end": 3388,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3412,
											"end": 3465,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "348"
										},
										{
											"begin": 3457,
											"end": 3464,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 3448,
											"end": 3454,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3437,
											"end": 3446,
											"name": "DUP10",
											"source": 5
										},
										{
											"begin": 3433,
											"end": 3455,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3412,
											"end": 3465,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "276"
										},
										{
											"begin": 3412,
											"end": 3465,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3412,
											"end": 3465,
											"name": "tag",
											"source": 5,
											"value": "348"
										},
										{
											"begin": 3412,
											"end": 3465,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3402,
											"end": 3465,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 3402,
											"end": 3465,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3357,
											"end": 3475,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3514,
											"end": 3516,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3540,
											"end": 3593,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "349"
										},
										{
											"begin": 3585,
											"end": 3592,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 3576,
											"end": 3582,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3565,
											"end": 3574,
											"name": "DUP10",
											"source": 5
										},
										{
											"begin": 3561,
											"end": 3583,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3540,
											"end": 3593,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "282"
										},
										{
											"begin": 3540,
											"end": 3593,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3540,
											"end": 3593,
											"name": "tag",
											"source": 5,
											"value": "349"
										},
										{
											"begin": 3540,
											"end": 3593,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3530,
											"end": 3593,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 3530,
											"end": 3593,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3485,
											"end": 3603,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3642,
											"end": 3644,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 3668,
											"end": 3720,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "350"
										},
										{
											"begin": 3712,
											"end": 3719,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 3703,
											"end": 3709,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3692,
											"end": 3701,
											"name": "DUP10",
											"source": 5
										},
										{
											"begin": 3688,
											"end": 3710,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3668,
											"end": 3720,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "285"
										},
										{
											"begin": 3668,
											"end": 3720,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3668,
											"end": 3720,
											"name": "tag",
											"source": 5,
											"value": "350"
										},
										{
											"begin": 3668,
											"end": 3720,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3658,
											"end": 3720,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3658,
											"end": 3720,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3613,
											"end": 3730,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3769,
											"end": 3772,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 3796,
											"end": 3848,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "351"
										},
										{
											"begin": 3840,
											"end": 3847,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 3831,
											"end": 3837,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3820,
											"end": 3829,
											"name": "DUP10",
											"source": 5
										},
										{
											"begin": 3816,
											"end": 3838,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3796,
											"end": 3848,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "288"
										},
										{
											"begin": 3796,
											"end": 3848,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3796,
											"end": 3848,
											"name": "tag",
											"source": 5,
											"value": "351"
										},
										{
											"begin": 3796,
											"end": 3848,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3786,
											"end": 3848,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3786,
											"end": 3848,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3740,
											"end": 3858,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2958,
											"end": 3865,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2958,
											"end": 3865,
											"name": "SWAP6",
											"source": 5
										},
										{
											"begin": 2958,
											"end": 3865,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2958,
											"end": 3865,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2958,
											"end": 3865,
											"name": "SWAP6",
											"source": 5
										},
										{
											"begin": 2958,
											"end": 3865,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2958,
											"end": 3865,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 2958,
											"end": 3865,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2958,
											"end": 3865,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3871,
											"end": 3989,
											"name": "tag",
											"source": 5,
											"value": "289"
										},
										{
											"begin": 3871,
											"end": 3989,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3958,
											"end": 3982,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "353"
										},
										{
											"begin": 3976,
											"end": 3981,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3958,
											"end": 3982,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "274"
										},
										{
											"begin": 3958,
											"end": 3982,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3958,
											"end": 3982,
											"name": "tag",
											"source": 5,
											"value": "353"
										},
										{
											"begin": 3958,
											"end": 3982,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3953,
											"end": 3956,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3946,
											"end": 3983,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3871,
											"end": 3989,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3871,
											"end": 3989,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3871,
											"end": 3989,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3995,
											"end": 4217,
											"name": "tag",
											"source": 5,
											"value": "49"
										},
										{
											"begin": 3995,
											"end": 4217,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4088,
											"end": 4092,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4126,
											"end": 4128,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4115,
											"end": 4124,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4111,
											"end": 4129,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4103,
											"end": 4129,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4103,
											"end": 4129,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4139,
											"end": 4210,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "355"
										},
										{
											"begin": 4207,
											"end": 4208,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4196,
											"end": 4205,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4192,
											"end": 4209,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4183,
											"end": 4189,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 4139,
											"end": 4210,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "289"
										},
										{
											"begin": 4139,
											"end": 4210,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4139,
											"end": 4210,
											"name": "tag",
											"source": 5,
											"value": "355"
										},
										{
											"begin": 4139,
											"end": 4210,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3995,
											"end": 4217,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3995,
											"end": 4217,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3995,
											"end": 4217,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3995,
											"end": 4217,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3995,
											"end": 4217,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4223,
											"end": 4332,
											"name": "tag",
											"source": 5,
											"value": "290"
										},
										{
											"begin": 4223,
											"end": 4332,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4304,
											"end": 4325,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "357"
										},
										{
											"begin": 4319,
											"end": 4324,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4304,
											"end": 4325,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "277"
										},
										{
											"begin": 4304,
											"end": 4325,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4304,
											"end": 4325,
											"name": "tag",
											"source": 5,
											"value": "357"
										},
										{
											"begin": 4304,
											"end": 4325,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4299,
											"end": 4302,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4292,
											"end": 4326,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4223,
											"end": 4332,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4223,
											"end": 4332,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4223,
											"end": 4332,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4338,
											"end": 4548,
											"name": "tag",
											"source": 5,
											"value": "62"
										},
										{
											"begin": 4338,
											"end": 4548,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4425,
											"end": 4429,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4463,
											"end": 4465,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4452,
											"end": 4461,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4448,
											"end": 4466,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4440,
											"end": 4466,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4440,
											"end": 4466,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4476,
											"end": 4541,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "359"
										},
										{
											"begin": 4538,
											"end": 4539,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4527,
											"end": 4536,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4523,
											"end": 4540,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4514,
											"end": 4520,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 4476,
											"end": 4541,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "290"
										},
										{
											"begin": 4476,
											"end": 4541,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4476,
											"end": 4541,
											"name": "tag",
											"source": 5,
											"value": "359"
										},
										{
											"begin": 4476,
											"end": 4541,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4338,
											"end": 4548,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 4338,
											"end": 4548,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4338,
											"end": 4548,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4338,
											"end": 4548,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4338,
											"end": 4548,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4554,
											"end": 4669,
											"name": "tag",
											"source": 5,
											"value": "291"
										},
										{
											"begin": 4554,
											"end": 4669,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4639,
											"end": 4662,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "361"
										},
										{
											"begin": 4656,
											"end": 4661,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4639,
											"end": 4662,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "283"
										},
										{
											"begin": 4639,
											"end": 4662,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4639,
											"end": 4662,
											"name": "tag",
											"source": 5,
											"value": "361"
										},
										{
											"begin": 4639,
											"end": 4662,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4634,
											"end": 4637,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4627,
											"end": 4663,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4554,
											"end": 4669,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4554,
											"end": 4669,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4554,
											"end": 4669,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4675,
											"end": 4893,
											"name": "tag",
											"source": 5,
											"value": "75"
										},
										{
											"begin": 4675,
											"end": 4893,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4766,
											"end": 4770,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4804,
											"end": 4806,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4793,
											"end": 4802,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4789,
											"end": 4807,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4781,
											"end": 4807,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4781,
											"end": 4807,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4817,
											"end": 4886,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "363"
										},
										{
											"begin": 4883,
											"end": 4884,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4872,
											"end": 4881,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4868,
											"end": 4885,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4859,
											"end": 4865,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 4817,
											"end": 4886,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "291"
										},
										{
											"begin": 4817,
											"end": 4886,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4817,
											"end": 4886,
											"name": "tag",
											"source": 5,
											"value": "363"
										},
										{
											"begin": 4817,
											"end": 4886,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4675,
											"end": 4893,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 4675,
											"end": 4893,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4675,
											"end": 4893,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4675,
											"end": 4893,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4675,
											"end": 4893,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4899,
											"end": 5068,
											"name": "tag",
											"source": 5,
											"value": "292"
										},
										{
											"begin": 4899,
											"end": 5068,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4983,
											"end": 4994,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5017,
											"end": 5023,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5012,
											"end": 5015,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5005,
											"end": 5024,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5057,
											"end": 5061,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5052,
											"end": 5055,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5048,
											"end": 5062,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5033,
											"end": 5062,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5033,
											"end": 5062,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4899,
											"end": 5068,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 4899,
											"end": 5068,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4899,
											"end": 5068,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4899,
											"end": 5068,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4899,
											"end": 5068,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5074,
											"end": 5243,
											"name": "tag",
											"source": 5,
											"value": "293"
										},
										{
											"begin": 5074,
											"end": 5243,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5214,
											"end": 5235,
											"name": "PUSH",
											"source": 5,
											"value": "416363657373206973206E6F742076616C696400000000000000000000000000"
										},
										{
											"begin": 5210,
											"end": 5211,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5202,
											"end": 5208,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5198,
											"end": 5212,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5191,
											"end": 5236,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5074,
											"end": 5243,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5074,
											"end": 5243,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5249,
											"end": 5615,
											"name": "tag",
											"source": 5,
											"value": "294"
										},
										{
											"begin": 5249,
											"end": 5615,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5391,
											"end": 5394,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5412,
											"end": 5479,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "367"
										},
										{
											"begin": 5476,
											"end": 5478,
											"name": "PUSH",
											"source": 5,
											"value": "13"
										},
										{
											"begin": 5471,
											"end": 5474,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5412,
											"end": 5479,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "292"
										},
										{
											"begin": 5412,
											"end": 5479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5412,
											"end": 5479,
											"name": "tag",
											"source": 5,
											"value": "367"
										},
										{
											"begin": 5412,
											"end": 5479,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5405,
											"end": 5479,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5405,
											"end": 5479,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5488,
											"end": 5581,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "368"
										},
										{
											"begin": 5577,
											"end": 5580,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5488,
											"end": 5581,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "293"
										},
										{
											"begin": 5488,
											"end": 5581,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5488,
											"end": 5581,
											"name": "tag",
											"source": 5,
											"value": "368"
										},
										{
											"begin": 5488,
											"end": 5581,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5606,
											"end": 5608,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5601,
											"end": 5604,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5597,
											"end": 5609,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5590,
											"end": 5609,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5590,
											"end": 5609,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5249,
											"end": 5615,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5249,
											"end": 5615,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5249,
											"end": 5615,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5249,
											"end": 5615,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5621,
											"end": 6040,
											"name": "tag",
											"source": 5,
											"value": "98"
										},
										{
											"begin": 5621,
											"end": 6040,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5787,
											"end": 5791,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5825,
											"end": 5827,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5814,
											"end": 5823,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5810,
											"end": 5828,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5802,
											"end": 5828,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5802,
											"end": 5828,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5874,
											"end": 5883,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5868,
											"end": 5872,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5864,
											"end": 5884,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 5860,
											"end": 5861,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5849,
											"end": 5858,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5845,
											"end": 5862,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5838,
											"end": 5885,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5902,
											"end": 6033,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "370"
										},
										{
											"begin": 6028,
											"end": 6032,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5902,
											"end": 6033,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "294"
										},
										{
											"begin": 5902,
											"end": 6033,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5902,
											"end": 6033,
											"name": "tag",
											"source": 5,
											"value": "370"
										},
										{
											"begin": 5902,
											"end": 6033,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5894,
											"end": 6033,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5894,
											"end": 6033,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5621,
											"end": 6040,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5621,
											"end": 6040,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5621,
											"end": 6040,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5621,
											"end": 6040,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6046,
											"end": 6226,
											"name": "tag",
											"source": 5,
											"value": "295"
										},
										{
											"begin": 6046,
											"end": 6226,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6094,
											"end": 6171,
											"name": "PUSH",
											"source": 5,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6091,
											"end": 6092,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6084,
											"end": 6172,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6191,
											"end": 6195,
											"name": "PUSH",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 6188,
											"end": 6189,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 6181,
											"end": 6196,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6215,
											"end": 6219,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 6212,
											"end": 6213,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6205,
											"end": 6220,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 6232,
											"end": 6407,
											"name": "tag",
											"source": 5,
											"value": "121"
										},
										{
											"begin": 6232,
											"end": 6407,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6270,
											"end": 6273,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6293,
											"end": 6316,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "373"
										},
										{
											"begin": 6310,
											"end": 6315,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6293,
											"end": 6316,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "283"
										},
										{
											"begin": 6293,
											"end": 6316,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6293,
											"end": 6316,
											"name": "tag",
											"source": 5,
											"value": "373"
										},
										{
											"begin": 6293,
											"end": 6316,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6284,
											"end": 6316,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6284,
											"end": 6316,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6338,
											"end": 6348,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6331,
											"end": 6336,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6328,
											"end": 6349,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 6325,
											"end": 6372,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "374"
										},
										{
											"begin": 6325,
											"end": 6372,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 6352,
											"end": 6370,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "375"
										},
										{
											"begin": 6352,
											"end": 6370,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "295"
										},
										{
											"begin": 6352,
											"end": 6370,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6352,
											"end": 6370,
											"name": "tag",
											"source": 5,
											"value": "375"
										},
										{
											"begin": 6352,
											"end": 6370,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6325,
											"end": 6372,
											"name": "tag",
											"source": 5,
											"value": "374"
										},
										{
											"begin": 6325,
											"end": 6372,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6399,
											"end": 6400,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 6392,
											"end": 6397,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6388,
											"end": 6401,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6381,
											"end": 6401,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6381,
											"end": 6401,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6232,
											"end": 6407,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6232,
											"end": 6407,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6232,
											"end": 6407,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6232,
											"end": 6407,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6413,
											"end": 6490,
											"name": "tag",
											"source": 5,
											"value": "296"
										},
										{
											"begin": 6413,
											"end": 6490,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6450,
											"end": 6457,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6479,
											"end": 6484,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6468,
											"end": 6484,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6468,
											"end": 6484,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6413,
											"end": 6490,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6413,
											"end": 6490,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6413,
											"end": 6490,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6413,
											"end": 6490,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6496,
											"end": 6687,
											"name": "tag",
											"source": 5,
											"value": "164"
										},
										{
											"begin": 6496,
											"end": 6687,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6536,
											"end": 6539,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6555,
											"end": 6575,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "378"
										},
										{
											"begin": 6573,
											"end": 6574,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6555,
											"end": 6575,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "296"
										},
										{
											"begin": 6555,
											"end": 6575,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6555,
											"end": 6575,
											"name": "tag",
											"source": 5,
											"value": "378"
										},
										{
											"begin": 6555,
											"end": 6575,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6550,
											"end": 6575,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6550,
											"end": 6575,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6589,
											"end": 6609,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "379"
										},
										{
											"begin": 6607,
											"end": 6608,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6589,
											"end": 6609,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "296"
										},
										{
											"begin": 6589,
											"end": 6609,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6589,
											"end": 6609,
											"name": "tag",
											"source": 5,
											"value": "379"
										},
										{
											"begin": 6589,
											"end": 6609,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6584,
											"end": 6609,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 6584,
											"end": 6609,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6632,
											"end": 6633,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6629,
											"end": 6630,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6625,
											"end": 6634,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6618,
											"end": 6634,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6618,
											"end": 6634,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6653,
											"end": 6656,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6650,
											"end": 6651,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6647,
											"end": 6657,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 6644,
											"end": 6680,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 6644,
											"end": 6680,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "380"
										},
										{
											"begin": 6644,
											"end": 6680,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 6660,
											"end": 6678,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "381"
										},
										{
											"begin": 6660,
											"end": 6678,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "295"
										},
										{
											"begin": 6660,
											"end": 6678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6660,
											"end": 6678,
											"name": "tag",
											"source": 5,
											"value": "381"
										},
										{
											"begin": 6660,
											"end": 6678,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6644,
											"end": 6680,
											"name": "tag",
											"source": 5,
											"value": "380"
										},
										{
											"begin": 6644,
											"end": 6680,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6496,
											"end": 6687,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 6496,
											"end": 6687,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6496,
											"end": 6687,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6496,
											"end": 6687,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6496,
											"end": 6687,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6693,
											"end": 6865,
											"name": "tag",
											"source": 5,
											"value": "297"
										},
										{
											"begin": 6693,
											"end": 6865,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6833,
											"end": 6857,
											"name": "PUSH",
											"source": 5,
											"value": "546865207265717565737420697320696E76616C696400000000000000000000"
										},
										{
											"begin": 6829,
											"end": 6830,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6821,
											"end": 6827,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6817,
											"end": 6831,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6810,
											"end": 6858,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6693,
											"end": 6865,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6693,
											"end": 6865,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6871,
											"end": 7237,
											"name": "tag",
											"source": 5,
											"value": "298"
										},
										{
											"begin": 6871,
											"end": 7237,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7013,
											"end": 7016,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7034,
											"end": 7101,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "384"
										},
										{
											"begin": 7098,
											"end": 7100,
											"name": "PUSH",
											"source": 5,
											"value": "16"
										},
										{
											"begin": 7093,
											"end": 7096,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7034,
											"end": 7101,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "292"
										},
										{
											"begin": 7034,
											"end": 7101,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7034,
											"end": 7101,
											"name": "tag",
											"source": 5,
											"value": "384"
										},
										{
											"begin": 7034,
											"end": 7101,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7027,
											"end": 7101,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7027,
											"end": 7101,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7110,
											"end": 7203,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "385"
										},
										{
											"begin": 7199,
											"end": 7202,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7110,
											"end": 7203,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "297"
										},
										{
											"begin": 7110,
											"end": 7203,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7110,
											"end": 7203,
											"name": "tag",
											"source": 5,
											"value": "385"
										},
										{
											"begin": 7110,
											"end": 7203,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7228,
											"end": 7230,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7223,
											"end": 7226,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7219,
											"end": 7231,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7212,
											"end": 7231,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7212,
											"end": 7231,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6871,
											"end": 7237,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6871,
											"end": 7237,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6871,
											"end": 7237,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6871,
											"end": 7237,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7243,
											"end": 7662,
											"name": "tag",
											"source": 5,
											"value": "207"
										},
										{
											"begin": 7243,
											"end": 7662,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7409,
											"end": 7413,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7447,
											"end": 7449,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7436,
											"end": 7445,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7432,
											"end": 7450,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7424,
											"end": 7450,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7424,
											"end": 7450,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7496,
											"end": 7505,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7490,
											"end": 7494,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7486,
											"end": 7506,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 7482,
											"end": 7483,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7471,
											"end": 7480,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7467,
											"end": 7484,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7460,
											"end": 7507,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7524,
											"end": 7655,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "387"
										},
										{
											"begin": 7650,
											"end": 7654,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7524,
											"end": 7655,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "298"
										},
										{
											"begin": 7524,
											"end": 7655,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7524,
											"end": 7655,
											"name": "tag",
											"source": 5,
											"value": "387"
										},
										{
											"begin": 7524,
											"end": 7655,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7516,
											"end": 7655,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7516,
											"end": 7655,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7243,
											"end": 7662,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7243,
											"end": 7662,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7243,
											"end": 7662,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7243,
											"end": 7662,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7668,
											"end": 7872,
											"name": "tag",
											"source": 5,
											"value": "214"
										},
										{
											"begin": 7668,
											"end": 7872,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7707,
											"end": 7711,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7727,
											"end": 7746,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "389"
										},
										{
											"begin": 7744,
											"end": 7745,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7727,
											"end": 7746,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "286"
										},
										{
											"begin": 7727,
											"end": 7746,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7727,
											"end": 7746,
											"name": "tag",
											"source": 5,
											"value": "389"
										},
										{
											"begin": 7727,
											"end": 7746,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7722,
											"end": 7746,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7722,
											"end": 7746,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7760,
											"end": 7779,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "390"
										},
										{
											"begin": 7777,
											"end": 7778,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7760,
											"end": 7779,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "286"
										},
										{
											"begin": 7760,
											"end": 7779,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7760,
											"end": 7779,
											"name": "tag",
											"source": 5,
											"value": "390"
										},
										{
											"begin": 7760,
											"end": 7779,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7755,
											"end": 7779,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 7755,
											"end": 7779,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7803,
											"end": 7804,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7800,
											"end": 7801,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7796,
											"end": 7805,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 7788,
											"end": 7805,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7788,
											"end": 7805,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7827,
											"end": 7841,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFF"
										},
										{
											"begin": 7821,
											"end": 7825,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7818,
											"end": 7842,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 7815,
											"end": 7865,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 7815,
											"end": 7865,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "391"
										},
										{
											"begin": 7815,
											"end": 7865,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 7845,
											"end": 7863,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "392"
										},
										{
											"begin": 7845,
											"end": 7863,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "295"
										},
										{
											"begin": 7845,
											"end": 7863,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7845,
											"end": 7863,
											"name": "tag",
											"source": 5,
											"value": "392"
										},
										{
											"begin": 7845,
											"end": 7863,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7815,
											"end": 7865,
											"name": "tag",
											"source": 5,
											"value": "391"
										},
										{
											"begin": 7815,
											"end": 7865,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7668,
											"end": 7872,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 7668,
											"end": 7872,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7668,
											"end": 7872,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7668,
											"end": 7872,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7668,
											"end": 7872,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7878,
											"end": 7993,
											"name": "tag",
											"source": 5,
											"value": "299"
										},
										{
											"begin": 7878,
											"end": 7993,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7963,
											"end": 7986,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "394"
										},
										{
											"begin": 7980,
											"end": 7985,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7963,
											"end": 7986,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "286"
										},
										{
											"begin": 7963,
											"end": 7986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7963,
											"end": 7986,
											"name": "tag",
											"source": 5,
											"value": "394"
										},
										{
											"begin": 7963,
											"end": 7986,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7958,
											"end": 7961,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7951,
											"end": 7987,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7878,
											"end": 7993,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7878,
											"end": 7993,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7878,
											"end": 7993,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7999,
											"end": 8217,
											"name": "tag",
											"source": 5,
											"value": "216"
										},
										{
											"begin": 7999,
											"end": 8217,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8090,
											"end": 8094,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8128,
											"end": 8130,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 8117,
											"end": 8126,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8113,
											"end": 8131,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8105,
											"end": 8131,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8105,
											"end": 8131,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8141,
											"end": 8210,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "396"
										},
										{
											"begin": 8207,
											"end": 8208,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8196,
											"end": 8205,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 8192,
											"end": 8209,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8183,
											"end": 8189,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 8141,
											"end": 8210,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "299"
										},
										{
											"begin": 8141,
											"end": 8210,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8141,
											"end": 8210,
											"name": "tag",
											"source": 5,
											"value": "396"
										},
										{
											"begin": 8141,
											"end": 8210,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7999,
											"end": 8217,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 7999,
											"end": 8217,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7999,
											"end": 8217,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7999,
											"end": 8217,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7999,
											"end": 8217,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SafeCast.sol",
								"@openzeppelin/contracts/utils/types/Time.sol",
								"contracts/authority.sol",
								"contracts/faykGovernance.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"cancelPendingRepublicAddress(address)": "52e305de",
							"getAuthorityAddress()": "e47a9d46",
							"getGovernance()": "289b3c0d",
							"getPresidentAdd()": "66410997",
							"getPresidentBan()": "6cf106d7",
							"getPrimeMinisterAdd()": "a53da00b",
							"getPrimeMinisterBan()": "e4f3e947",
							"getRepublicAddress()": "c5a1c5c1",
							"getgovernanceVersion()": "c387b49c",
							"setCallerInfo(address,address,bytes32,uint32,uint48)": "14c58b51",
							"setPendigPresident(address)": "054203bd",
							"setPendingGovernanceContractAddress(address)": "ca4cce68",
							"setPendingPrimeMinister(address)": "544fa93e",
							"setPendingRepublicAddress(address)": "1f72783a",
							"setPresidentBaned(bool)": "b5c09c68",
							"setPrimeMinister(bool)": "06e99d93",
							"transferCallerInfo()": "cd01cc28",
							"transferGovernanceContractAddress(address)": "ee7126c3",
							"transferPresident()": "0df4c390",
							"transferPrimeMinister()": "18074eee",
							"transferRepublicAddress(address)": "9c20fe71"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessOnlyForThePendig\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint48\",\"name\":\"reminingTime\",\"type\":\"uint48\"}],\"name\":\"RemainingTimeUntilTheConfirmationDeadline\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"NewGCAddress\",\"type\":\"address\"}],\"name\":\"TheAddressIsNotValidForGC\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newRAddress\",\"type\":\"address\"}],\"name\":\"TheAddressIsNotValidForRAddress\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newCaller\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"peopleName_satrap\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"uint32\",\"name\":\"roleId\",\"type\":\"uint32\"}],\"name\":\"AnOfficialWasConfirmed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newCaller\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"peopleName_satrap\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"uint32\",\"name\":\"roleId\",\"type\":\"uint32\"}],\"name\":\"AnOfficialWasElected\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"GCAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint32\",\"name\":\"version\",\"type\":\"uint32\"}],\"name\":\"TheNewGCAddressWasConfirmed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"presidentAdd\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint32\",\"name\":\"nonce\",\"type\":\"uint32\"}],\"name\":\"TheNewPresidentWasConfirmed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"primeMinisterAdd\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint32\",\"name\":\"nonce\",\"type\":\"uint32\"}],\"name\":\"TheNewPrimeMinisterWasConfirmed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"RepublicAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint32\",\"name\":\"version\",\"type\":\"uint32\"}],\"name\":\"TheNewRepublicAddressWasConfirmed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newGCAddress\",\"type\":\"address\"}],\"name\":\"TheNextGCAddressWasElected\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newPresidentAdd\",\"type\":\"address\"}],\"name\":\"TheNextPresidentWasElected\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newPrimeMinister\",\"type\":\"address\"}],\"name\":\"TheNextPrimeMinisterWasElected\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"PRAddress\",\"type\":\"address\"}],\"name\":\"TheNextRepublicAddressWasCancelled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newRepublicAddress\",\"type\":\"address\"}],\"name\":\"TheNextRepublicAddressWasElected\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bool\",\"name\":\"baned\",\"type\":\"bool\"},{\"indexed\":true,\"internalType\":\"bool\",\"name\":\"done\",\"type\":\"bool\"}],\"name\":\"TheStatusOfBanningAllActivitiesAndDone\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"PRAdress\",\"type\":\"address\"}],\"name\":\"cancelPendingRepublicAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAuthorityAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getGovernance\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPresidentAdd\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPresidentBan\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPrimeMinisterAdd\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPrimeMinisterBan\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRepublicAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"RG\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getgovernanceVersion\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"oldCaller\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"newCaller\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"peopleName_satrap\",\"type\":\"bytes32\"},{\"internalType\":\"uint32\",\"name\":\"roleId\",\"type\":\"uint32\"},{\"internalType\":\"uint48\",\"name\":\"delay\",\"type\":\"uint48\"}],\"name\":\"setCallerInfo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newPresident\",\"type\":\"address\"}],\"name\":\"setPendigPresident\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newGCAddress\",\"type\":\"address\"}],\"name\":\"setPendingGovernanceContractAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newPM\",\"type\":\"address\"}],\"name\":\"setPendingPrimeMinister\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newRAddress\",\"type\":\"address\"}],\"name\":\"setPendingRepublicAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"baned\",\"type\":\"bool\"}],\"name\":\"setPresidentBaned\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"baned\",\"type\":\"bool\"}],\"name\":\"setPrimeMinister\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"transferCallerInfo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pendingGCAdd\",\"type\":\"address\"}],\"name\":\"transferGovernanceContractAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"transferPresident\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"transferPrimeMinister\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"RAddress\",\"type\":\"address\"}],\"name\":\"transferRepublicAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/faykGovernance.sol\":\"faykGovernance\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0xe19a4d5f31d2861e7344e8e535e2feafb913d806d3e2b5fe7782741a2a7094fe\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4aed79c0fa6f0546ed02f2f683e8f77f0fd2ed7eb34d8bbf3d373c9a6d95b13c\",\"dweb:/ipfs/QmWqVz6UAVqmnWU5pqYPt1o6iDEZyPaBraAA3rKfTTSfYj\"]},\"@openzeppelin/contracts/utils/types/Time.sol\":{\"keccak256\":\"0xc7755af115020049e4140f224f9ee88d7e1799ffb0646f37bf0df24bf6213f58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7f09bf94d5274334ec021f61a04659db303f31e60460e14b709c9bf187740111\",\"dweb:/ipfs/QmNvgomZYUwFAt4cZbPWAiTeSZQreGehY9BK5xyVJsUttb\"]},\"contracts/authority.sol\":{\"keccak256\":\"0xcff68988eef9095e2433d2202925430367d085c7272fdfc7b84ff5d21ba6112e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d66df4b68587f7dd7c9c8e467fc4bd34448b0959dbccb6f0104628ea544de044\",\"dweb:/ipfs/QmVLueVfVntP8dvtMYizC6DgMgCaAXoEuKUr8F7wFqngm8\"]},\"contracts/faykGovernance.sol\":{\"keccak256\":\"0x6176a0e196e352b310a52575ae3328f0d90a9ea62e1904ec266e9db762162f07\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://54c127afded64d2bb9347dcfbb2415dd0b7cc733f104100de6021a02e92cc4ea\",\"dweb:/ipfs/QmTEVKYae4m7nasdh3oXSVfpRTF7tamnkh8X9uKxHJiNVZ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 3163,
								"contract": "contracts/faykGovernance.sol:faykGovernance",
								"label": "_pendigRepublicAddress",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 3165,
								"contract": "contracts/faykGovernance.sol:faykGovernance",
								"label": "_pendingGCAddress",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							},
							{
								"astId": 3167,
								"contract": "contracts/faykGovernance.sol:faykGovernance",
								"label": "_pendigPresident",
								"offset": 0,
								"slot": "2",
								"type": "t_address"
							},
							{
								"astId": 3169,
								"contract": "contracts/faykGovernance.sol:faykGovernance",
								"label": "_pendingPrimeMinister",
								"offset": 0,
								"slot": "3",
								"type": "t_address"
							},
							{
								"astId": 3173,
								"contract": "contracts/faykGovernance.sol:faykGovernance",
								"label": "_delayConfirmRepublicAddress",
								"offset": 20,
								"slot": "3",
								"type": "t_uint48"
							},
							{
								"astId": 3183,
								"contract": "contracts/faykGovernance.sol:faykGovernance",
								"label": "_president",
								"offset": 0,
								"slot": "4",
								"type": "t_struct(access)3180_storage"
							},
							{
								"astId": 3186,
								"contract": "contracts/faykGovernance.sol:faykGovernance",
								"label": "_primeMinister",
								"offset": 0,
								"slot": "5",
								"type": "t_struct(access)3180_storage"
							},
							{
								"astId": 3189,
								"contract": "contracts/faykGovernance.sol:faykGovernance",
								"label": "_governance",
								"offset": 0,
								"slot": "6",
								"type": "t_struct(access)3180_storage"
							},
							{
								"astId": 3192,
								"contract": "contracts/faykGovernance.sol:faykGovernance",
								"label": "_Republic",
								"offset": 0,
								"slot": "7",
								"type": "t_struct(access)3180_storage"
							},
							{
								"astId": 3813,
								"contract": "contracts/faykGovernance.sol:faykGovernance",
								"label": "_callerInfo",
								"offset": 0,
								"slot": "8",
								"type": "t_mapping(t_address,t_struct(CallerInfo)3790_storage)"
							},
							{
								"astId": 3819,
								"contract": "contracts/faykGovernance.sol:faykGovernance",
								"label": "_connectorMapping",
								"offset": 0,
								"slot": "9",
								"type": "t_mapping(t_bytes32,t_mapping(t_bytes32,t_address))"
							},
							{
								"astId": 3826,
								"contract": "contracts/faykGovernance.sol:faykGovernance",
								"label": "_roleinfo",
								"offset": 0,
								"slot": "10",
								"type": "t_mapping(t_uint32,t_mapping(t_bytes32,t_struct(Role)3808_storage))"
							},
							{
								"astId": 3833,
								"contract": "contracts/faykGovernance.sol:faykGovernance",
								"label": "_targets",
								"offset": 0,
								"slot": "11",
								"type": "t_mapping(t_address,t_mapping(t_bytes4,t_struct(TargetConfig)3799_storage))"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_bytes4": {
								"encoding": "inplace",
								"label": "bytes4",
								"numberOfBytes": "4"
							},
							"t_mapping(t_address,t_mapping(t_bytes4,t_struct(TargetConfig)3799_storage))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(bytes4 => struct faykGovernance.TargetConfig))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_bytes4,t_struct(TargetConfig)3799_storage)"
							},
							"t_mapping(t_address,t_struct(CallerInfo)3790_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct faykGovernance.CallerInfo)",
								"numberOfBytes": "32",
								"value": "t_struct(CallerInfo)3790_storage"
							},
							"t_mapping(t_bytes32,t_address)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_mapping(t_bytes32,t_mapping(t_bytes32,t_address))": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => mapping(bytes32 => address))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_bytes32,t_address)"
							},
							"t_mapping(t_bytes32,t_struct(Role)3808_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct faykGovernance.Role)",
								"numberOfBytes": "32",
								"value": "t_struct(Role)3808_storage"
							},
							"t_mapping(t_bytes4,t_struct(TargetConfig)3799_storage)": {
								"encoding": "mapping",
								"key": "t_bytes4",
								"label": "mapping(bytes4 => struct faykGovernance.TargetConfig)",
								"numberOfBytes": "32",
								"value": "t_struct(TargetConfig)3799_storage"
							},
							"t_mapping(t_uint32,t_mapping(t_bytes32,t_struct(Role)3808_storage))": {
								"encoding": "mapping",
								"key": "t_uint32",
								"label": "mapping(uint32 => mapping(bytes32 => struct faykGovernance.Role))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_bytes32,t_struct(Role)3808_storage)"
							},
							"t_struct(CallerInfo)3790_storage": {
								"encoding": "inplace",
								"label": "struct faykGovernance.CallerInfo",
								"members": [
									{
										"astId": 3781,
										"contract": "contracts/faykGovernance.sol:faykGovernance",
										"label": "peopleName_satrap",
										"offset": 0,
										"slot": "0",
										"type": "t_bytes32"
									},
									{
										"astId": 3783,
										"contract": "contracts/faykGovernance.sol:faykGovernance",
										"label": "roleId",
										"offset": 0,
										"slot": "1",
										"type": "t_uint32"
									},
									{
										"astId": 3785,
										"contract": "contracts/faykGovernance.sol:faykGovernance",
										"label": "since",
										"offset": 4,
										"slot": "1",
										"type": "t_uint48"
									},
									{
										"astId": 3787,
										"contract": "contracts/faykGovernance.sol:faykGovernance",
										"label": "EndSession",
										"offset": 10,
										"slot": "1",
										"type": "t_uint48"
									},
									{
										"astId": 3789,
										"contract": "contracts/faykGovernance.sol:faykGovernance",
										"label": "executeDelay",
										"offset": 16,
										"slot": "1",
										"type": "t_uint48"
									}
								],
								"numberOfBytes": "64"
							},
							"t_struct(Role)3808_storage": {
								"encoding": "inplace",
								"label": "struct faykGovernance.Role",
								"members": [
									{
										"astId": 3801,
										"contract": "contracts/faykGovernance.sol:faykGovernance",
										"label": "roleLabel",
										"offset": 0,
										"slot": "0",
										"type": "t_bytes32"
									},
									{
										"astId": 3803,
										"contract": "contracts/faykGovernance.sol:faykGovernance",
										"label": "admin",
										"offset": 0,
										"slot": "1",
										"type": "t_uint32"
									},
									{
										"astId": 3805,
										"contract": "contracts/faykGovernance.sol:faykGovernance",
										"label": "guardian",
										"offset": 4,
										"slot": "1",
										"type": "t_uint32"
									},
									{
										"astId": 3807,
										"contract": "contracts/faykGovernance.sol:faykGovernance",
										"label": "periodTime",
										"offset": 8,
										"slot": "1",
										"type": "t_uint48"
									}
								],
								"numberOfBytes": "64"
							},
							"t_struct(TargetConfig)3799_storage": {
								"encoding": "inplace",
								"label": "struct faykGovernance.TargetConfig",
								"members": [
									{
										"astId": 3792,
										"contract": "contracts/faykGovernance.sol:faykGovernance",
										"label": "roleId",
										"offset": 0,
										"slot": "0",
										"type": "t_uint32"
									},
									{
										"astId": 3794,
										"contract": "contracts/faykGovernance.sol:faykGovernance",
										"label": "peopleName_satrap",
										"offset": 0,
										"slot": "1",
										"type": "t_bytes32"
									},
									{
										"astId": 3796,
										"contract": "contracts/faykGovernance.sol:faykGovernance",
										"label": "executeDelay",
										"offset": 0,
										"slot": "2",
										"type": "t_uint48"
									},
									{
										"astId": 3798,
										"contract": "contracts/faykGovernance.sol:faykGovernance",
										"label": "closed",
										"offset": 6,
										"slot": "2",
										"type": "t_bool"
									}
								],
								"numberOfBytes": "96"
							},
							"t_struct(access)3180_storage": {
								"encoding": "inplace",
								"label": "struct Authority.access",
								"members": [
									{
										"astId": 3175,
										"contract": "contracts/faykGovernance.sol:faykGovernance",
										"label": "roleAdd",
										"offset": 0,
										"slot": "0",
										"type": "t_address"
									},
									{
										"astId": 3177,
										"contract": "contracts/faykGovernance.sol:faykGovernance",
										"label": "baned",
										"offset": 20,
										"slot": "0",
										"type": "t_bool"
									},
									{
										"astId": 3179,
										"contract": "contracts/faykGovernance.sol:faykGovernance",
										"label": "nonce",
										"offset": 21,
										"slot": "0",
										"type": "t_uint32"
									}
								],
								"numberOfBytes": "32"
							},
							"t_uint32": {
								"encoding": "inplace",
								"label": "uint32",
								"numberOfBytes": "4"
							},
							"t_uint48": {
								"encoding": "inplace",
								"label": "uint48",
								"numberOfBytes": "6"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
					"exportedSymbols": {
						"Math": [
							1053
						]
					},
					"id": 1054,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "103:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Math",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "129:73:0",
								"text": " @dev Standard math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 1053,
							"linearizedBaseContracts": [
								1053
							],
							"name": "Math",
							"nameLocation": "211:4:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "222:50:0",
										"text": " @dev Muldiv operation overflow."
									},
									"errorSelector": "227bc153",
									"id": 5,
									"name": "MathOverflowedMulDiv",
									"nameLocation": "283:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 4,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "303:2:0"
									},
									"src": "277:29:0"
								},
								{
									"canonicalName": "Math.Rounding",
									"id": 10,
									"members": [
										{
											"id": 6,
											"name": "Floor",
											"nameLocation": "336:5:0",
											"nodeType": "EnumValue",
											"src": "336:5:0"
										},
										{
											"id": 7,
											"name": "Ceil",
											"nameLocation": "379:4:0",
											"nodeType": "EnumValue",
											"src": "379:4:0"
										},
										{
											"id": 8,
											"name": "Trunc",
											"nameLocation": "421:5:0",
											"nodeType": "EnumValue",
											"src": "421:5:0"
										},
										{
											"id": 9,
											"name": "Expand",
											"nameLocation": "451:6:0",
											"nodeType": "EnumValue",
											"src": "451:6:0"
										}
									],
									"name": "Rounding",
									"nameLocation": "317:8:0",
									"nodeType": "EnumDefinition",
									"src": "312:169:0"
								},
								{
									"body": {
										"id": 41,
										"nodeType": "Block",
										"src": "661:140:0",
										"statements": [
											{
												"id": 40,
												"nodeType": "UncheckedBlock",
												"src": "671:124:0",
												"statements": [
													{
														"assignments": [
															23
														],
														"declarations": [
															{
																"constant": false,
																"id": 23,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "703:1:0",
																"nodeType": "VariableDeclaration",
																"scope": 40,
																"src": "695:9:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 22,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "695:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 27,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 26,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 24,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 13,
																"src": "707:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 25,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 15,
																"src": "711:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "707:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "695:17:0"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 30,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 28,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 23,
																"src": "730:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 29,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 13,
																"src": "734:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "730:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 35,
														"nodeType": "IfStatement",
														"src": "726:28:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 31,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "745:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 32,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "752:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 33,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "744:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 21,
															"id": 34,
															"nodeType": "Return",
															"src": "737:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 36,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "776:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 37,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 23,
																	"src": "782:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 38,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "775:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 21,
														"id": 39,
														"nodeType": "Return",
														"src": "768:16:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 11,
										"nodeType": "StructuredDocumentation",
										"src": "487:93:0",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag."
									},
									"id": 42,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "594:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 13,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "609:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 42,
												"src": "601:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 12,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "601:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 15,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "620:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 42,
												"src": "612:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 14,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "612:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "600:22:0"
									},
									"returnParameters": {
										"id": 21,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 18,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 42,
												"src": "646:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 17,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "646:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 20,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 42,
												"src": "652:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 19,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "645:15:0"
									},
									"scope": 1053,
									"src": "585:216:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 69,
										"nodeType": "Block",
										"src": "984:113:0",
										"statements": [
											{
												"id": 68,
												"nodeType": "UncheckedBlock",
												"src": "994:97:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 56,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 54,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 47,
																"src": "1022:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 55,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 45,
																"src": "1026:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1022:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 61,
														"nodeType": "IfStatement",
														"src": "1018:28:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 57,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1037:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 58,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1044:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 59,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1036:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 53,
															"id": 60,
															"nodeType": "Return",
															"src": "1029:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 62,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1068:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 65,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 63,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 45,
																		"src": "1074:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 64,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 47,
																		"src": "1078:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1074:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 66,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1067:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 53,
														"id": 67,
														"nodeType": "Return",
														"src": "1060:20:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 43,
										"nodeType": "StructuredDocumentation",
										"src": "807:96:0",
										"text": " @dev Returns the subtraction of two unsigned integers, with an overflow flag."
									},
									"id": 70,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "917:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 45,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "932:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 70,
												"src": "924:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 44,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "924:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "943:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 70,
												"src": "935:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 46,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "935:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "923:22:0"
									},
									"returnParameters": {
										"id": 53,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 50,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 70,
												"src": "969:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 49,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "969:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 52,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 70,
												"src": "975:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 51,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "975:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "968:15:0"
									},
									"scope": 1053,
									"src": "908:189:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 111,
										"nodeType": "Block",
										"src": "1283:417:0",
										"statements": [
											{
												"id": 110,
												"nodeType": "UncheckedBlock",
												"src": "1293:401:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 84,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 82,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 73,
																"src": "1551:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 83,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1556:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1551:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 89,
														"nodeType": "IfStatement",
														"src": "1547:28:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 85,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1567:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 86,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1573:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 87,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1566:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 81,
															"id": 88,
															"nodeType": "Return",
															"src": "1559:16:0"
														}
													},
													{
														"assignments": [
															91
														],
														"declarations": [
															{
																"constant": false,
																"id": 91,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1597:1:0",
																"nodeType": "VariableDeclaration",
																"scope": 110,
																"src": "1589:9:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 90,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1589:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 95,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 92,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 73,
																"src": "1601:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 93,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 75,
																"src": "1605:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1601:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1589:17:0"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 100,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 98,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 96,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 91,
																	"src": "1624:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 97,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 73,
																	"src": "1628:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1624:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 99,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 75,
																"src": "1633:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1624:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 105,
														"nodeType": "IfStatement",
														"src": "1620:33:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 101,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1644:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 102,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1651:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 103,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1643:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 81,
															"id": 104,
															"nodeType": "Return",
															"src": "1636:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 106,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1675:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 107,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 91,
																	"src": "1681:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 108,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1674:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 81,
														"id": 109,
														"nodeType": "Return",
														"src": "1667:16:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 71,
										"nodeType": "StructuredDocumentation",
										"src": "1103:99:0",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag."
									},
									"id": 112,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1216:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 76,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 73,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1231:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 112,
												"src": "1223:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 72,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 75,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1242:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 112,
												"src": "1234:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 74,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1222:22:0"
									},
									"returnParameters": {
										"id": 81,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 78,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 112,
												"src": "1268:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 77,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1268:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 80,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 112,
												"src": "1274:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 79,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1274:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1267:15:0"
									},
									"scope": 1053,
									"src": "1207:493:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 139,
										"nodeType": "Block",
										"src": "1887:114:0",
										"statements": [
											{
												"id": 138,
												"nodeType": "UncheckedBlock",
												"src": "1897:98:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 126,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 124,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 117,
																"src": "1925:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 125,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1930:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1925:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 131,
														"nodeType": "IfStatement",
														"src": "1921:29:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 127,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1941:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 128,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1948:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 129,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1940:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 123,
															"id": 130,
															"nodeType": "Return",
															"src": "1933:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 132,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1972:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 135,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 133,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 115,
																		"src": "1978:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 134,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 117,
																		"src": "1982:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1978:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 136,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1971:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 123,
														"id": 137,
														"nodeType": "Return",
														"src": "1964:20:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 113,
										"nodeType": "StructuredDocumentation",
										"src": "1706:100:0",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag."
									},
									"id": 140,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1820:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 118,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 115,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1835:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "1827:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 114,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1827:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 117,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1846:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "1838:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 116,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1838:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1826:22:0"
									},
									"returnParameters": {
										"id": 123,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 120,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "1872:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 119,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1872:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 122,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "1878:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 121,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1878:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1871:15:0"
									},
									"scope": 1053,
									"src": "1811:190:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 167,
										"nodeType": "Block",
										"src": "2198:114:0",
										"statements": [
											{
												"id": 166,
												"nodeType": "UncheckedBlock",
												"src": "2208:98:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 154,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 152,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 145,
																"src": "2236:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 153,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2241:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2236:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 159,
														"nodeType": "IfStatement",
														"src": "2232:29:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 155,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2252:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 156,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2259:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 157,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2251:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 151,
															"id": 158,
															"nodeType": "Return",
															"src": "2244:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 160,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2283:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 163,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 161,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 143,
																		"src": "2289:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 162,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 145,
																		"src": "2293:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2289:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 164,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2282:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 151,
														"id": 165,
														"nodeType": "Return",
														"src": "2275:20:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 141,
										"nodeType": "StructuredDocumentation",
										"src": "2007:110:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag."
									},
									"id": 168,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2131:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 146,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 143,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2146:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "2138:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 142,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2138:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 145,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2157:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "2149:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 144,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2149:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2137:22:0"
									},
									"returnParameters": {
										"id": 151,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 148,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "2183:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 147,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2183:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 150,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "2189:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 149,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2189:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2182:15:0"
									},
									"scope": 1053,
									"src": "2122:190:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 185,
										"nodeType": "Block",
										"src": "2449:37:0",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 180,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 178,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 171,
															"src": "2466:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 179,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 173,
															"src": "2470:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2466:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 182,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 173,
														"src": "2478:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 183,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2466:13:0",
													"trueExpression": {
														"id": 181,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 171,
														"src": "2474:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 177,
												"id": 184,
												"nodeType": "Return",
												"src": "2459:20:0"
											}
										]
									},
									"documentation": {
										"id": 169,
										"nodeType": "StructuredDocumentation",
										"src": "2318:59:0",
										"text": " @dev Returns the largest of two numbers."
									},
									"id": 186,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "2391:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 174,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 171,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2403:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 186,
												"src": "2395:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 170,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2395:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 173,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2414:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 186,
												"src": "2406:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 172,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2406:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2394:22:0"
									},
									"returnParameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 186,
												"src": "2440:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 175,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2440:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2439:9:0"
									},
									"scope": 1053,
									"src": "2382:104:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 203,
										"nodeType": "Block",
										"src": "2624:37:0",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 198,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 196,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 189,
															"src": "2641:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 197,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 191,
															"src": "2645:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2641:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 200,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 191,
														"src": "2653:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 201,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2641:13:0",
													"trueExpression": {
														"id": 199,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 189,
														"src": "2649:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 195,
												"id": 202,
												"nodeType": "Return",
												"src": "2634:20:0"
											}
										]
									},
									"documentation": {
										"id": 187,
										"nodeType": "StructuredDocumentation",
										"src": "2492:60:0",
										"text": " @dev Returns the smallest of two numbers."
									},
									"id": 204,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "2566:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 192,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 189,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2578:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 204,
												"src": "2570:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 188,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 191,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2589:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 204,
												"src": "2581:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 190,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2581:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:22:0"
									},
									"returnParameters": {
										"id": 195,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 194,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 204,
												"src": "2615:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 193,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2615:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2614:9:0"
									},
									"scope": 1053,
									"src": "2557:104:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 226,
										"nodeType": "Block",
										"src": "2845:82:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 224,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 216,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 214,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 207,
																	"src": "2900:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 215,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 209,
																	"src": "2904:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2900:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 217,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2899:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 223,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 220,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 218,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 207,
																		"src": "2910:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "^",
																	"rightExpression": {
																		"id": 219,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 209,
																		"src": "2914:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2910:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 221,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2909:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "32",
															"id": 222,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2919:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "2909:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2899:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 213,
												"id": 225,
												"nodeType": "Return",
												"src": "2892:28:0"
											}
										]
									},
									"documentation": {
										"id": 205,
										"nodeType": "StructuredDocumentation",
										"src": "2667:102:0",
										"text": " @dev Returns the average of two numbers. The result is rounded towards\n zero."
									},
									"id": 227,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "2783:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 210,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2799:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 227,
												"src": "2791:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 206,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2791:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 209,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2810:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 227,
												"src": "2802:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 208,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2802:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2790:22:0"
									},
									"returnParameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 212,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 227,
												"src": "2836:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 211,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2836:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2835:9:0"
									},
									"scope": 1053,
									"src": "2774:153:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 260,
										"nodeType": "Block",
										"src": "3219:260:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 239,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 237,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 232,
														"src": "3233:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 238,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3238:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3233:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 245,
												"nodeType": "IfStatement",
												"src": "3229:127:0",
												"trueBody": {
													"id": 244,
													"nodeType": "Block",
													"src": "3241:115:0",
													"statements": [
														{
															"expression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 242,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 240,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 230,
																	"src": "3340:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 241,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 232,
																	"src": "3344:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3340:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 236,
															"id": 243,
															"nodeType": "Return",
															"src": "3333:12:0"
														}
													]
												}
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 248,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 246,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 230,
															"src": "3444:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 247,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3449:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "3444:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 257,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 255,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 252,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 250,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 230,
																			"src": "3458:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 251,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3462:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "3458:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 253,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3457:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 254,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 232,
																"src": "3467:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3457:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 256,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3471:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "3457:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 258,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "3444:28:0",
													"trueExpression": {
														"hexValue": "30",
														"id": 249,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3453:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 236,
												"id": 259,
												"nodeType": "Return",
												"src": "3437:35:0"
											}
										]
									},
									"documentation": {
										"id": 228,
										"nodeType": "StructuredDocumentation",
										"src": "2933:210:0",
										"text": " @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds towards infinity instead\n of rounding towards zero."
									},
									"id": 261,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ceilDiv",
									"nameLocation": "3157:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 233,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 230,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3173:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "3165:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 229,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3165:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 232,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3184:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "3176:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 231,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3176:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3164:22:0"
									},
									"returnParameters": {
										"id": 236,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 235,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "3210:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 234,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3210:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3209:9:0"
									},
									"scope": 1053,
									"src": "3148:331:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 386,
										"nodeType": "Block",
										"src": "3901:4018:0",
										"statements": [
											{
												"id": 385,
												"nodeType": "UncheckedBlock",
												"src": "3911:4002:0",
												"statements": [
													{
														"assignments": [
															274
														],
														"declarations": [
															{
																"constant": false,
																"id": 274,
																"mutability": "mutable",
																"name": "prod0",
																"nameLocation": "4240:5:0",
																"nodeType": "VariableDeclaration",
																"scope": 385,
																"src": "4232:13:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 273,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4232:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 278,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 277,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 275,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 264,
																"src": "4248:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 276,
																"name": "y",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 266,
																"src": "4252:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4248:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4232:21:0"
													},
													{
														"assignments": [
															280
														],
														"declarations": [
															{
																"constant": false,
																"id": 280,
																"mutability": "mutable",
																"name": "prod1",
																"nameLocation": "4320:5:0",
																"nodeType": "VariableDeclaration",
																"scope": 385,
																"src": "4312:13:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 279,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4312:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 281,
														"nodeType": "VariableDeclarationStatement",
														"src": "4312:13:0"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "4392:122:0",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4410:30:0",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "4427:1:0"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "4430:1:0"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4437:1:0",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "4433:3:0"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4433:6:0"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nodeType": "YulIdentifier",
																			"src": "4420:6:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4420:20:0"
																	},
																	"variables": [
																		{
																			"name": "mm",
																			"nodeType": "YulTypedName",
																			"src": "4414:2:0",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4457:43:0",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nodeType": "YulIdentifier",
																						"src": "4474:2:0"
																					},
																					{
																						"name": "prod0",
																						"nodeType": "YulIdentifier",
																						"src": "4478:5:0"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "4470:3:0"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4470:14:0"
																			},
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nodeType": "YulIdentifier",
																						"src": "4489:2:0"
																					},
																					{
																						"name": "prod0",
																						"nodeType": "YulIdentifier",
																						"src": "4493:5:0"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "4486:2:0"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4486:13:0"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4466:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4466:34:0"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nodeType": "YulIdentifier",
																			"src": "4457:5:0"
																		}
																	]
																}
															]
														},
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 274,
																"isOffset": false,
																"isSlot": false,
																"src": "4478:5:0",
																"valueSize": 1
															},
															{
																"declaration": 274,
																"isOffset": false,
																"isSlot": false,
																"src": "4493:5:0",
																"valueSize": 1
															},
															{
																"declaration": 280,
																"isOffset": false,
																"isSlot": false,
																"src": "4457:5:0",
																"valueSize": 1
															},
															{
																"declaration": 264,
																"isOffset": false,
																"isSlot": false,
																"src": "4427:1:0",
																"valueSize": 1
															},
															{
																"declaration": 266,
																"isOffset": false,
																"isSlot": false,
																"src": "4430:1:0",
																"valueSize": 1
															}
														],
														"id": 282,
														"nodeType": "InlineAssembly",
														"src": "4383:131:0"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 285,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 283,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 280,
																"src": "4595:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 284,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4604:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4595:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 291,
														"nodeType": "IfStatement",
														"src": "4591:368:0",
														"trueBody": {
															"id": 290,
															"nodeType": "Block",
															"src": "4607:352:0",
															"statements": [
																{
																	"expression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 288,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 286,
																			"name": "prod0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 274,
																			"src": "4925:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 287,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 268,
																			"src": "4933:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "4925:19:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"functionReturnParameters": 272,
																	"id": 289,
																	"nodeType": "Return",
																	"src": "4918:26:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 294,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 292,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 268,
																"src": "5065:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 293,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 280,
																"src": "5080:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5065:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 299,
														"nodeType": "IfStatement",
														"src": "5061:88:0",
														"trueBody": {
															"id": 298,
															"nodeType": "Block",
															"src": "5087:62:0",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 295,
																			"name": "MathOverflowedMulDiv",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 5,
																			"src": "5112:20:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 296,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5112:22:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 297,
																	"nodeType": "RevertStatement",
																	"src": "5105:29:0"
																}
															]
														}
													},
													{
														"assignments": [
															301
														],
														"declarations": [
															{
																"constant": false,
																"id": 301,
																"mutability": "mutable",
																"name": "remainder",
																"nameLocation": "5412:9:0",
																"nodeType": "VariableDeclaration",
																"scope": 385,
																"src": "5404:17:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 300,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "5404:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 302,
														"nodeType": "VariableDeclarationStatement",
														"src": "5404:17:0"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "5444:291:0",
															"statements": [
																{
																	"nodeType": "YulAssignment",
																	"src": "5513:38:0",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "5533:1:0"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "5536:1:0"
																			},
																			{
																				"name": "denominator",
																				"nodeType": "YulIdentifier",
																				"src": "5539:11:0"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nodeType": "YulIdentifier",
																			"src": "5526:6:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5526:25:0"
																	},
																	"variableNames": [
																		{
																			"name": "remainder",
																			"nodeType": "YulIdentifier",
																			"src": "5513:9:0"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5633:41:0",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod1",
																				"nodeType": "YulIdentifier",
																				"src": "5646:5:0"
																			},
																			{
																				"arguments": [
																					{
																						"name": "remainder",
																						"nodeType": "YulIdentifier",
																						"src": "5656:9:0"
																					},
																					{
																						"name": "prod0",
																						"nodeType": "YulIdentifier",
																						"src": "5667:5:0"
																					}
																				],
																				"functionName": {
																					"name": "gt",
																					"nodeType": "YulIdentifier",
																					"src": "5653:2:0"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5653:20:0"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5642:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5642:32:0"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nodeType": "YulIdentifier",
																			"src": "5633:5:0"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5691:30:0",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nodeType": "YulIdentifier",
																				"src": "5704:5:0"
																			},
																			{
																				"name": "remainder",
																				"nodeType": "YulIdentifier",
																				"src": "5711:9:0"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5700:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5700:21:0"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nodeType": "YulIdentifier",
																			"src": "5691:5:0"
																		}
																	]
																}
															]
														},
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 268,
																"isOffset": false,
																"isSlot": false,
																"src": "5539:11:0",
																"valueSize": 1
															},
															{
																"declaration": 274,
																"isOffset": false,
																"isSlot": false,
																"src": "5667:5:0",
																"valueSize": 1
															},
															{
																"declaration": 274,
																"isOffset": false,
																"isSlot": false,
																"src": "5691:5:0",
																"valueSize": 1
															},
															{
																"declaration": 274,
																"isOffset": false,
																"isSlot": false,
																"src": "5704:5:0",
																"valueSize": 1
															},
															{
																"declaration": 280,
																"isOffset": false,
																"isSlot": false,
																"src": "5633:5:0",
																"valueSize": 1
															},
															{
																"declaration": 280,
																"isOffset": false,
																"isSlot": false,
																"src": "5646:5:0",
																"valueSize": 1
															},
															{
																"declaration": 301,
																"isOffset": false,
																"isSlot": false,
																"src": "5513:9:0",
																"valueSize": 1
															},
															{
																"declaration": 301,
																"isOffset": false,
																"isSlot": false,
																"src": "5656:9:0",
																"valueSize": 1
															},
															{
																"declaration": 301,
																"isOffset": false,
																"isSlot": false,
																"src": "5711:9:0",
																"valueSize": 1
															},
															{
																"declaration": 264,
																"isOffset": false,
																"isSlot": false,
																"src": "5533:1:0",
																"valueSize": 1
															},
															{
																"declaration": 266,
																"isOffset": false,
																"isSlot": false,
																"src": "5536:1:0",
																"valueSize": 1
															}
														],
														"id": 303,
														"nodeType": "InlineAssembly",
														"src": "5435:300:0"
													},
													{
														"assignments": [
															305
														],
														"declarations": [
															{
																"constant": false,
																"id": 305,
																"mutability": "mutable",
																"name": "twos",
																"nameLocation": "5947:4:0",
																"nodeType": "VariableDeclaration",
																"scope": 385,
																"src": "5939:12:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 304,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "5939:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 312,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 311,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 306,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 268,
																"src": "5954:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 309,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "30",
																			"id": 307,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5969:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"id": 308,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 268,
																			"src": "5973:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "5969:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 310,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "5968:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5954:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "5939:46:0"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "6008:362:0",
															"statements": [
																{
																	"nodeType": "YulAssignment",
																	"src": "6073:37:0",
																	"value": {
																		"arguments": [
																			{
																				"name": "denominator",
																				"nodeType": "YulIdentifier",
																				"src": "6092:11:0"
																			},
																			{
																				"name": "twos",
																				"nodeType": "YulIdentifier",
																				"src": "6105:4:0"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nodeType": "YulIdentifier",
																			"src": "6088:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6088:22:0"
																	},
																	"variableNames": [
																		{
																			"name": "denominator",
																			"nodeType": "YulIdentifier",
																			"src": "6073:11:0"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6177:25:0",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nodeType": "YulIdentifier",
																				"src": "6190:5:0"
																			},
																			{
																				"name": "twos",
																				"nodeType": "YulIdentifier",
																				"src": "6197:4:0"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nodeType": "YulIdentifier",
																			"src": "6186:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6186:16:0"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nodeType": "YulIdentifier",
																			"src": "6177:5:0"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6317:39:0",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "6337:1:0",
																								"type": "",
																								"value": "0"
																							},
																							{
																								"name": "twos",
																								"nodeType": "YulIdentifier",
																								"src": "6340:4:0"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "6333:3:0"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "6333:12:0"
																					},
																					{
																						"name": "twos",
																						"nodeType": "YulIdentifier",
																						"src": "6347:4:0"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "6329:3:0"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6329:23:0"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6354:1:0",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6325:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6325:31:0"
																	},
																	"variableNames": [
																		{
																			"name": "twos",
																			"nodeType": "YulIdentifier",
																			"src": "6317:4:0"
																		}
																	]
																}
															]
														},
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 268,
																"isOffset": false,
																"isSlot": false,
																"src": "6073:11:0",
																"valueSize": 1
															},
															{
																"declaration": 268,
																"isOffset": false,
																"isSlot": false,
																"src": "6092:11:0",
																"valueSize": 1
															},
															{
																"declaration": 274,
																"isOffset": false,
																"isSlot": false,
																"src": "6177:5:0",
																"valueSize": 1
															},
															{
																"declaration": 274,
																"isOffset": false,
																"isSlot": false,
																"src": "6190:5:0",
																"valueSize": 1
															},
															{
																"declaration": 305,
																"isOffset": false,
																"isSlot": false,
																"src": "6105:4:0",
																"valueSize": 1
															},
															{
																"declaration": 305,
																"isOffset": false,
																"isSlot": false,
																"src": "6197:4:0",
																"valueSize": 1
															},
															{
																"declaration": 305,
																"isOffset": false,
																"isSlot": false,
																"src": "6317:4:0",
																"valueSize": 1
															},
															{
																"declaration": 305,
																"isOffset": false,
																"isSlot": false,
																"src": "6340:4:0",
																"valueSize": 1
															},
															{
																"declaration": 305,
																"isOffset": false,
																"isSlot": false,
																"src": "6347:4:0",
																"valueSize": 1
															}
														],
														"id": 313,
														"nodeType": "InlineAssembly",
														"src": "5999:371:0"
													},
													{
														"expression": {
															"id": 318,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 314,
																"name": "prod0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 274,
																"src": "6436:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "|=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 317,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 315,
																	"name": "prod1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 280,
																	"src": "6445:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 316,
																	"name": "twos",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 305,
																	"src": "6453:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6445:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6436:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 319,
														"nodeType": "ExpressionStatement",
														"src": "6436:21:0"
													},
													{
														"assignments": [
															321
														],
														"declarations": [
															{
																"constant": false,
																"id": 321,
																"mutability": "mutable",
																"name": "inverse",
																"nameLocation": "6783:7:0",
																"nodeType": "VariableDeclaration",
																"scope": 385,
																"src": "6775:15:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 320,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "6775:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 328,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 327,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 324,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "33",
																			"id": 322,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "6794:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_3_by_1",
																				"typeString": "int_const 3"
																			},
																			"value": "3"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 323,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 268,
																			"src": "6798:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6794:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 325,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "6793:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "^",
															"rightExpression": {
																"hexValue": "32",
																"id": 326,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6813:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "6793:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "6775:39:0"
													},
													{
														"expression": {
															"id": 335,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 329,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 321,
																"src": "7031:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 334,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 330,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7042:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 333,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 331,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 268,
																		"src": "7046:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 332,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 321,
																		"src": "7060:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7046:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7042:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7031:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 336,
														"nodeType": "ExpressionStatement",
														"src": "7031:36:0"
													},
													{
														"expression": {
															"id": 343,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 337,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 321,
																"src": "7100:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 342,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 338,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7111:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 341,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 339,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 268,
																		"src": "7115:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 340,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 321,
																		"src": "7129:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7115:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7111:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7100:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 344,
														"nodeType": "ExpressionStatement",
														"src": "7100:36:0"
													},
													{
														"expression": {
															"id": 351,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 345,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 321,
																"src": "7170:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 350,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 346,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7181:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 349,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 347,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 268,
																		"src": "7185:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 348,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 321,
																		"src": "7199:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7185:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7181:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7170:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 352,
														"nodeType": "ExpressionStatement",
														"src": "7170:36:0"
													},
													{
														"expression": {
															"id": 359,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 353,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 321,
																"src": "7240:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 358,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 354,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7251:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 357,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 355,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 268,
																		"src": "7255:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 356,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 321,
																		"src": "7269:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7255:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7251:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7240:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 360,
														"nodeType": "ExpressionStatement",
														"src": "7240:36:0"
													},
													{
														"expression": {
															"id": 367,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 361,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 321,
																"src": "7310:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 366,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 362,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7321:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 365,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 363,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 268,
																		"src": "7325:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 364,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 321,
																		"src": "7339:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7325:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7321:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7310:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 368,
														"nodeType": "ExpressionStatement",
														"src": "7310:36:0"
													},
													{
														"expression": {
															"id": 375,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 369,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 321,
																"src": "7381:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 374,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 370,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7392:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 373,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 371,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 268,
																		"src": "7396:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 372,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 321,
																		"src": "7410:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7396:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7392:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7381:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 376,
														"nodeType": "ExpressionStatement",
														"src": "7381:36:0"
													},
													{
														"expression": {
															"id": 381,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 377,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 271,
																"src": "7851:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 380,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 378,
																	"name": "prod0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 274,
																	"src": "7860:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 379,
																	"name": "inverse",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 321,
																	"src": "7868:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7860:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7851:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 382,
														"nodeType": "ExpressionStatement",
														"src": "7851:24:0"
													},
													{
														"expression": {
															"id": 383,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 271,
															"src": "7896:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 272,
														"id": 384,
														"nodeType": "Return",
														"src": "7889:13:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 262,
										"nodeType": "StructuredDocumentation",
										"src": "3485:313:0",
										"text": " @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n denominator == 0.\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n Uniswap Labs also under MIT license."
									},
									"id": 387,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "3812:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 269,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "3827:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 387,
												"src": "3819:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 263,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3819:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 266,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "3838:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 387,
												"src": "3830:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 265,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3830:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 268,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "3849:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 387,
												"src": "3841:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 267,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3841:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3818:43:0"
									},
									"returnParameters": {
										"id": 272,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 271,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "3893:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 387,
												"src": "3885:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 270,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3885:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3884:16:0"
									},
									"scope": 1053,
									"src": "3803:4116:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 429,
										"nodeType": "Block",
										"src": "8161:192:0",
										"statements": [
											{
												"assignments": [
													403
												],
												"declarations": [
													{
														"constant": false,
														"id": 403,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "8179:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 429,
														"src": "8171:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 402,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8171:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 409,
												"initialValue": {
													"arguments": [
														{
															"id": 405,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 390,
															"src": "8195:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 406,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 392,
															"src": "8198:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 407,
															"name": "denominator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 394,
															"src": "8201:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 404,
														"name": "mulDiv",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															387,
															430
														],
														"referencedDeclaration": 387,
														"src": "8188:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 408,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8188:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8171:42:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 420,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 411,
																"name": "rounding",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 397,
																"src": "8244:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Rounding_$10",
																	"typeString": "enum Math.Rounding"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_enum$_Rounding_$10",
																	"typeString": "enum Math.Rounding"
																}
															],
															"id": 410,
															"name": "unsignedRoundsUp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1052,
															"src": "8227:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$10_$returns$_t_bool_$",
																"typeString": "function (enum Math.Rounding) pure returns (bool)"
															}
														},
														"id": 412,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8227:26:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 419,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 414,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 390,
																	"src": "8264:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 415,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 392,
																	"src": "8267:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 416,
																	"name": "denominator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 394,
																	"src": "8270:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 413,
																"name": "mulmod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967280,
																"src": "8257:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 417,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8257:25:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 418,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8285:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8257:29:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "8227:59:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 426,
												"nodeType": "IfStatement",
												"src": "8223:101:0",
												"trueBody": {
													"id": 425,
													"nodeType": "Block",
													"src": "8288:36:0",
													"statements": [
														{
															"expression": {
																"id": 423,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 421,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 403,
																	"src": "8302:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 422,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8312:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "8302:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 424,
															"nodeType": "ExpressionStatement",
															"src": "8302:11:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 427,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 403,
													"src": "8340:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 401,
												"id": 428,
												"nodeType": "Return",
												"src": "8333:13:0"
											}
										]
									},
									"documentation": {
										"id": 388,
										"nodeType": "StructuredDocumentation",
										"src": "7925:121:0",
										"text": " @notice Calculates x * y / denominator with full precision, following the selected rounding direction."
									},
									"id": 430,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "8060:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 398,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 390,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "8075:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 430,
												"src": "8067:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 389,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8067:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 392,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "8086:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 430,
												"src": "8078:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 391,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8078:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 394,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "8097:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 430,
												"src": "8089:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 393,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8089:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 397,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "8119:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 430,
												"src": "8110:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$10",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 396,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 395,
														"name": "Rounding",
														"nameLocations": [
															"8110:8:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 10,
														"src": "8110:8:0"
													},
													"referencedDeclaration": 10,
													"src": "8110:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$10",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8066:62:0"
									},
									"returnParameters": {
										"id": 401,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 400,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 430,
												"src": "8152:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 399,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8152:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8151:9:0"
									},
									"scope": 1053,
									"src": "8051:302:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 541,
										"nodeType": "Block",
										"src": "8644:1585:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 440,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 438,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 433,
														"src": "8658:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 439,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8663:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8658:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 444,
												"nodeType": "IfStatement",
												"src": "8654:45:0",
												"trueBody": {
													"id": 443,
													"nodeType": "Block",
													"src": "8666:33:0",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 441,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8687:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 437,
															"id": 442,
															"nodeType": "Return",
															"src": "8680:8:0"
														}
													]
												}
											},
											{
												"assignments": [
													446
												],
												"declarations": [
													{
														"constant": false,
														"id": 446,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "9386:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 541,
														"src": "9378:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 445,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9378:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 455,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 454,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 447,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9395:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 452,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 449,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 433,
																			"src": "9406:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 448,
																		"name": "log2",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			709,
																			744
																		],
																		"referencedDeclaration": 709,
																		"src": "9401:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) pure returns (uint256)"
																		}
																	},
																	"id": 450,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9401:7:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 451,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9412:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9401:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 453,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "9400:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9395:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9378:36:0"
											},
											{
												"id": 540,
												"nodeType": "UncheckedBlock",
												"src": "9815:408:0",
												"statements": [
													{
														"expression": {
															"id": 465,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 456,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 446,
																"src": "9839:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 464,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 461,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 457,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 446,
																				"src": "9849:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 460,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 458,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 433,
																					"src": "9858:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 459,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 446,
																					"src": "9862:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9858:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9849:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 462,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9848:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 463,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9873:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9848:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9839:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 466,
														"nodeType": "ExpressionStatement",
														"src": "9839:35:0"
													},
													{
														"expression": {
															"id": 476,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 467,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 446,
																"src": "9888:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 475,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 472,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 468,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 446,
																				"src": "9898:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 471,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 469,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 433,
																					"src": "9907:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 470,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 446,
																					"src": "9911:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9907:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9898:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 473,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9897:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 474,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9922:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9897:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9888:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 477,
														"nodeType": "ExpressionStatement",
														"src": "9888:35:0"
													},
													{
														"expression": {
															"id": 487,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 478,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 446,
																"src": "9937:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 486,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 483,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 479,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 446,
																				"src": "9947:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 482,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 480,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 433,
																					"src": "9956:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 481,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 446,
																					"src": "9960:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9956:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9947:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 484,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9946:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 485,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9971:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9946:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9937:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 488,
														"nodeType": "ExpressionStatement",
														"src": "9937:35:0"
													},
													{
														"expression": {
															"id": 498,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 489,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 446,
																"src": "9986:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 497,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 494,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 490,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 446,
																				"src": "9996:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 493,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 491,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 433,
																					"src": "10005:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 492,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 446,
																					"src": "10009:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10005:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9996:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 495,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9995:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 496,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10020:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9995:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9986:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 499,
														"nodeType": "ExpressionStatement",
														"src": "9986:35:0"
													},
													{
														"expression": {
															"id": 509,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 500,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 446,
																"src": "10035:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 508,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 505,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 501,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 446,
																				"src": "10045:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 504,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 502,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 433,
																					"src": "10054:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 503,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 446,
																					"src": "10058:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10054:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10045:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 506,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10044:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 507,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10069:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10044:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10035:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 510,
														"nodeType": "ExpressionStatement",
														"src": "10035:35:0"
													},
													{
														"expression": {
															"id": 520,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 511,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 446,
																"src": "10084:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 519,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 516,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 512,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 446,
																				"src": "10094:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 515,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 513,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 433,
																					"src": "10103:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 514,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 446,
																					"src": "10107:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10103:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10094:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 517,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10093:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 518,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10118:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10093:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10084:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 521,
														"nodeType": "ExpressionStatement",
														"src": "10084:35:0"
													},
													{
														"expression": {
															"id": 531,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 522,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 446,
																"src": "10133:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 530,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 527,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 523,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 446,
																				"src": "10143:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 526,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 524,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 433,
																					"src": "10152:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 525,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 446,
																					"src": "10156:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10152:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10143:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 528,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10142:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 529,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10167:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10142:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10133:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 532,
														"nodeType": "ExpressionStatement",
														"src": "10133:35:0"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 534,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 446,
																	"src": "10193:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 537,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 535,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 433,
																		"src": "10201:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 536,
																		"name": "result",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 446,
																		"src": "10205:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "10201:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 533,
																"name": "min",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 204,
																"src": "10189:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 538,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10189:23:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 437,
														"id": 539,
														"nodeType": "Return",
														"src": "10182:30:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 431,
										"nodeType": "StructuredDocumentation",
										"src": "8359:223:0",
										"text": " @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n towards zero.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."
									},
									"id": 542,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "8596:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 434,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 433,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "8609:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 542,
												"src": "8601:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 432,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8601:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8600:11:0"
									},
									"returnParameters": {
										"id": 437,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 436,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 542,
												"src": "8635:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 435,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8635:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8634:9:0"
									},
									"scope": 1053,
									"src": "8587:1642:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 576,
										"nodeType": "Block",
										"src": "10405:164:0",
										"statements": [
											{
												"id": 575,
												"nodeType": "UncheckedBlock",
												"src": "10415:148:0",
												"statements": [
													{
														"assignments": [
															554
														],
														"declarations": [
															{
																"constant": false,
																"id": 554,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "10447:6:0",
																"nodeType": "VariableDeclaration",
																"scope": 575,
																"src": "10439:14:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 553,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "10439:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 558,
														"initialValue": {
															"arguments": [
																{
																	"id": 556,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 545,
																	"src": "10461:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 555,
																"name": "sqrt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	542,
																	577
																],
																"referencedDeclaration": 542,
																"src": "10456:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 557,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10456:7:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "10439:24:0"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 573,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 559,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 554,
																"src": "10484:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 568,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 561,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 548,
																						"src": "10511:8:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$10",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$10",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 560,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1052,
																					"src": "10494:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$10_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 562,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "10494:26:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 567,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 565,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 563,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 554,
																						"src": "10524:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"id": 564,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 554,
																						"src": "10533:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "10524:15:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 566,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 545,
																					"src": "10542:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10524:19:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "10494:49:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 570,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10550:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 571,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "10494:57:0",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 569,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10546:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 572,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "10493:59:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "10484:68:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 552,
														"id": 574,
														"nodeType": "Return",
														"src": "10477:75:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 543,
										"nodeType": "StructuredDocumentation",
										"src": "10235:89:0",
										"text": " @notice Calculates sqrt(a), following the selected rounding direction."
									},
									"id": 577,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "10338:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 549,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 545,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "10351:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 577,
												"src": "10343:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 544,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10343:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 548,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "10363:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 577,
												"src": "10354:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$10",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 547,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 546,
														"name": "Rounding",
														"nameLocations": [
															"10354:8:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 10,
														"src": "10354:8:0"
													},
													"referencedDeclaration": 10,
													"src": "10354:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$10",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10342:30:0"
									},
									"returnParameters": {
										"id": 552,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 551,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 577,
												"src": "10396:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 550,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10396:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10395:9:0"
									},
									"scope": 1053,
									"src": "10329:240:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 708,
										"nodeType": "Block",
										"src": "10760:922:0",
										"statements": [
											{
												"assignments": [
													586
												],
												"declarations": [
													{
														"constant": false,
														"id": 586,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "10778:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 708,
														"src": "10770:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 585,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10770:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 588,
												"initialValue": {
													"hexValue": "30",
													"id": 587,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "10787:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10770:18:0"
											},
											{
												"id": 705,
												"nodeType": "UncheckedBlock",
												"src": "10798:855:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 593,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 591,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 589,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 580,
																	"src": "10826:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 590,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10835:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "10826:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 592,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10841:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "10826:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 603,
														"nodeType": "IfStatement",
														"src": "10822:99:0",
														"trueBody": {
															"id": 602,
															"nodeType": "Block",
															"src": "10844:77:0",
															"statements": [
																{
																	"expression": {
																		"id": 596,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 594,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 580,
																			"src": "10862:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 595,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10872:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "10862:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 597,
																	"nodeType": "ExpressionStatement",
																	"src": "10862:13:0"
																},
																{
																	"expression": {
																		"id": 600,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 598,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 586,
																			"src": "10893:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 599,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10903:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "10893:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 601,
																	"nodeType": "ExpressionStatement",
																	"src": "10893:13:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 608,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 606,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 604,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 580,
																	"src": "10938:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 605,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10947:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "10938:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 607,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10952:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "10938:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 618,
														"nodeType": "IfStatement",
														"src": "10934:96:0",
														"trueBody": {
															"id": 617,
															"nodeType": "Block",
															"src": "10955:75:0",
															"statements": [
																{
																	"expression": {
																		"id": 611,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 609,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 580,
																			"src": "10973:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 610,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10983:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "10973:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 612,
																	"nodeType": "ExpressionStatement",
																	"src": "10973:12:0"
																},
																{
																	"expression": {
																		"id": 615,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 613,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 586,
																			"src": "11003:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 614,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11013:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "11003:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 616,
																	"nodeType": "ExpressionStatement",
																	"src": "11003:12:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 623,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 621,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 619,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 580,
																	"src": "11047:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 620,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11056:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "11047:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 622,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11061:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11047:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 633,
														"nodeType": "IfStatement",
														"src": "11043:96:0",
														"trueBody": {
															"id": 632,
															"nodeType": "Block",
															"src": "11064:75:0",
															"statements": [
																{
																	"expression": {
																		"id": 626,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 624,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 580,
																			"src": "11082:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 625,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11092:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "11082:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 627,
																	"nodeType": "ExpressionStatement",
																	"src": "11082:12:0"
																},
																{
																	"expression": {
																		"id": 630,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 628,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 586,
																			"src": "11112:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 629,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11122:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "11112:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 631,
																	"nodeType": "ExpressionStatement",
																	"src": "11112:12:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 638,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 636,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 634,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 580,
																	"src": "11156:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 635,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11165:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "11156:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 637,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11170:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11156:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 648,
														"nodeType": "IfStatement",
														"src": "11152:96:0",
														"trueBody": {
															"id": 647,
															"nodeType": "Block",
															"src": "11173:75:0",
															"statements": [
																{
																	"expression": {
																		"id": 641,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 639,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 580,
																			"src": "11191:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 640,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11201:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11191:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 642,
																	"nodeType": "ExpressionStatement",
																	"src": "11191:12:0"
																},
																{
																	"expression": {
																		"id": 645,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 643,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 586,
																			"src": "11221:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 644,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11231:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11221:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 646,
																	"nodeType": "ExpressionStatement",
																	"src": "11221:12:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 653,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 651,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 649,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 580,
																	"src": "11265:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 650,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11274:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "11265:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 652,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11278:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11265:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 663,
														"nodeType": "IfStatement",
														"src": "11261:93:0",
														"trueBody": {
															"id": 662,
															"nodeType": "Block",
															"src": "11281:73:0",
															"statements": [
																{
																	"expression": {
																		"id": 656,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 654,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 580,
																			"src": "11299:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 655,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11309:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "11299:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 657,
																	"nodeType": "ExpressionStatement",
																	"src": "11299:11:0"
																},
																{
																	"expression": {
																		"id": 660,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 658,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 586,
																			"src": "11328:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 659,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11338:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "11328:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 661,
																	"nodeType": "ExpressionStatement",
																	"src": "11328:11:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 668,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 666,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 664,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 580,
																	"src": "11371:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 665,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11380:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "11371:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 667,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11384:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11371:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 678,
														"nodeType": "IfStatement",
														"src": "11367:93:0",
														"trueBody": {
															"id": 677,
															"nodeType": "Block",
															"src": "11387:73:0",
															"statements": [
																{
																	"expression": {
																		"id": 671,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 669,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 580,
																			"src": "11405:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 670,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11415:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "11405:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 672,
																	"nodeType": "ExpressionStatement",
																	"src": "11405:11:0"
																},
																{
																	"expression": {
																		"id": 675,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 673,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 586,
																			"src": "11434:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 674,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11444:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "11434:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 676,
																	"nodeType": "ExpressionStatement",
																	"src": "11434:11:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 683,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 681,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 679,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 580,
																	"src": "11477:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 680,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11486:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "11477:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 682,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11490:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11477:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 693,
														"nodeType": "IfStatement",
														"src": "11473:93:0",
														"trueBody": {
															"id": 692,
															"nodeType": "Block",
															"src": "11493:73:0",
															"statements": [
																{
																	"expression": {
																		"id": 686,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 684,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 580,
																			"src": "11511:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 685,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11521:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "11511:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 687,
																	"nodeType": "ExpressionStatement",
																	"src": "11511:11:0"
																},
																{
																	"expression": {
																		"id": 690,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 688,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 586,
																			"src": "11540:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 689,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11550:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "11540:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 691,
																	"nodeType": "ExpressionStatement",
																	"src": "11540:11:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 698,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 696,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 694,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 580,
																	"src": "11583:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 695,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11592:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "11583:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 697,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11596:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11583:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 704,
														"nodeType": "IfStatement",
														"src": "11579:64:0",
														"trueBody": {
															"id": 703,
															"nodeType": "Block",
															"src": "11599:44:0",
															"statements": [
																{
																	"expression": {
																		"id": 701,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 699,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 586,
																			"src": "11617:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 700,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11627:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "11617:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 702,
																	"nodeType": "ExpressionStatement",
																	"src": "11617:11:0"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 706,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 586,
													"src": "11669:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 584,
												"id": 707,
												"nodeType": "Return",
												"src": "11662:13:0"
											}
										]
									},
									"documentation": {
										"id": 578,
										"nodeType": "StructuredDocumentation",
										"src": "10575:119:0",
										"text": " @dev Return the log in base 2 of a positive value rounded towards zero.\n Returns 0 if given 0."
									},
									"id": 709,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "10708:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 581,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 580,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10721:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 709,
												"src": "10713:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 579,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10713:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10712:15:0"
									},
									"returnParameters": {
										"id": 584,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 583,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 709,
												"src": "10751:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 582,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10751:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10750:9:0"
									},
									"scope": 1053,
									"src": "10699:983:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 743,
										"nodeType": "Block",
										"src": "11915:168:0",
										"statements": [
											{
												"id": 742,
												"nodeType": "UncheckedBlock",
												"src": "11925:152:0",
												"statements": [
													{
														"assignments": [
															721
														],
														"declarations": [
															{
																"constant": false,
																"id": 721,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "11957:6:0",
																"nodeType": "VariableDeclaration",
																"scope": 742,
																"src": "11949:14:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 720,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "11949:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 725,
														"initialValue": {
															"arguments": [
																{
																	"id": 723,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 712,
																	"src": "11971:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 722,
																"name": "log2",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	709,
																	744
																],
																"referencedDeclaration": 709,
																"src": "11966:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 724,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11966:11:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "11949:28:0"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 740,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 726,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 721,
																"src": "11998:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 735,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 728,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 715,
																						"src": "12025:8:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$10",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$10",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 727,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1052,
																					"src": "12008:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$10_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 729,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "12008:26:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 734,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 732,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 730,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "12038:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"id": 731,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 721,
																						"src": "12043:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "12038:11:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 733,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 712,
																					"src": "12052:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "12038:19:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "12008:49:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 737,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12064:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 738,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "12008:57:0",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 736,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12060:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 739,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "12007:59:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "11998:68:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 719,
														"id": 741,
														"nodeType": "Return",
														"src": "11991:75:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 710,
										"nodeType": "StructuredDocumentation",
										"src": "11688:142:0",
										"text": " @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 744,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "11844:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 716,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 712,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11857:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 744,
												"src": "11849:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 711,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11849:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 715,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "11873:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 744,
												"src": "11864:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$10",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 714,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 713,
														"name": "Rounding",
														"nameLocations": [
															"11864:8:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 10,
														"src": "11864:8:0"
													},
													"referencedDeclaration": 10,
													"src": "11864:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$10",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11848:34:0"
									},
									"returnParameters": {
										"id": 719,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 718,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 744,
												"src": "11906:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 717,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11906:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11905:9:0"
									},
									"scope": 1053,
									"src": "11835:248:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 872,
										"nodeType": "Block",
										"src": "12276:854:0",
										"statements": [
											{
												"assignments": [
													753
												],
												"declarations": [
													{
														"constant": false,
														"id": 753,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "12294:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 872,
														"src": "12286:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 752,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "12286:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 755,
												"initialValue": {
													"hexValue": "30",
													"id": 754,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "12303:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12286:18:0"
											},
											{
												"id": 869,
												"nodeType": "UncheckedBlock",
												"src": "12314:787:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 760,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 756,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 747,
																"src": "12342:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																},
																"id": 759,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 757,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12351:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 758,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12357:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "12351:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																}
															},
															"src": "12342:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 772,
														"nodeType": "IfStatement",
														"src": "12338:103:0",
														"trueBody": {
															"id": 771,
															"nodeType": "Block",
															"src": "12361:80:0",
															"statements": [
																{
																	"expression": {
																		"id": 765,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 761,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 747,
																			"src": "12379:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			},
																			"id": 764,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 762,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12388:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3634",
																				"id": 763,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12394:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_64_by_1",
																					"typeString": "int_const 64"
																				},
																				"value": "64"
																			},
																			"src": "12388:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			}
																		},
																		"src": "12379:17:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 766,
																	"nodeType": "ExpressionStatement",
																	"src": "12379:17:0"
																},
																{
																	"expression": {
																		"id": 769,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 767,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 753,
																			"src": "12414:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 768,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12424:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "12414:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 770,
																	"nodeType": "ExpressionStatement",
																	"src": "12414:12:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 777,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 773,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 747,
																"src": "12458:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																},
																"id": 776,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 774,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12467:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 775,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12473:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "12467:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																}
															},
															"src": "12458:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 789,
														"nodeType": "IfStatement",
														"src": "12454:103:0",
														"trueBody": {
															"id": 788,
															"nodeType": "Block",
															"src": "12477:80:0",
															"statements": [
																{
																	"expression": {
																		"id": 782,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 778,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 747,
																			"src": "12495:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			},
																			"id": 781,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 779,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12504:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3332",
																				"id": 780,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12510:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_32_by_1",
																					"typeString": "int_const 32"
																				},
																				"value": "32"
																			},
																			"src": "12504:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			}
																		},
																		"src": "12495:17:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 783,
																	"nodeType": "ExpressionStatement",
																	"src": "12495:17:0"
																},
																{
																	"expression": {
																		"id": 786,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 784,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 753,
																			"src": "12530:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 785,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12540:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "12530:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 787,
																	"nodeType": "ExpressionStatement",
																	"src": "12530:12:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 794,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 790,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 747,
																"src": "12574:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																},
																"id": 793,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 791,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12583:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 792,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12589:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "12583:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																}
															},
															"src": "12574:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 806,
														"nodeType": "IfStatement",
														"src": "12570:103:0",
														"trueBody": {
															"id": 805,
															"nodeType": "Block",
															"src": "12593:80:0",
															"statements": [
																{
																	"expression": {
																		"id": 799,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 795,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 747,
																			"src": "12611:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			},
																			"id": 798,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 796,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12620:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3136",
																				"id": 797,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12626:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_16_by_1",
																					"typeString": "int_const 16"
																				},
																				"value": "16"
																			},
																			"src": "12620:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			}
																		},
																		"src": "12611:17:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 800,
																	"nodeType": "ExpressionStatement",
																	"src": "12611:17:0"
																},
																{
																	"expression": {
																		"id": 803,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 801,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 753,
																			"src": "12646:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 802,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12656:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "12646:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 804,
																	"nodeType": "ExpressionStatement",
																	"src": "12646:12:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 811,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 807,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 747,
																"src": "12690:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																},
																"id": 810,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 808,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12699:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 809,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12705:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "12699:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																}
															},
															"src": "12690:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 823,
														"nodeType": "IfStatement",
														"src": "12686:100:0",
														"trueBody": {
															"id": 822,
															"nodeType": "Block",
															"src": "12708:78:0",
															"statements": [
																{
																	"expression": {
																		"id": 816,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 812,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 747,
																			"src": "12726:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			},
																			"id": 815,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 813,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12735:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "38",
																				"id": 814,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12741:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_8_by_1",
																					"typeString": "int_const 8"
																				},
																				"value": "8"
																			},
																			"src": "12735:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			}
																		},
																		"src": "12726:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 817,
																	"nodeType": "ExpressionStatement",
																	"src": "12726:16:0"
																},
																{
																	"expression": {
																		"id": 820,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 818,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 753,
																			"src": "12760:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 819,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12770:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "12760:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 821,
																	"nodeType": "ExpressionStatement",
																	"src": "12760:11:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 828,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 824,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 747,
																"src": "12803:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																},
																"id": 827,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 825,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12812:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 826,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12818:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "12812:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																}
															},
															"src": "12803:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 840,
														"nodeType": "IfStatement",
														"src": "12799:100:0",
														"trueBody": {
															"id": 839,
															"nodeType": "Block",
															"src": "12821:78:0",
															"statements": [
																{
																	"expression": {
																		"id": 833,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 829,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 747,
																			"src": "12839:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			},
																			"id": 832,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 830,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12848:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "34",
																				"id": 831,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12854:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_4_by_1",
																					"typeString": "int_const 4"
																				},
																				"value": "4"
																			},
																			"src": "12848:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			}
																		},
																		"src": "12839:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 834,
																	"nodeType": "ExpressionStatement",
																	"src": "12839:16:0"
																},
																{
																	"expression": {
																		"id": 837,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 835,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 753,
																			"src": "12873:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 836,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12883:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "12873:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 838,
																	"nodeType": "ExpressionStatement",
																	"src": "12873:11:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 845,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 841,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 747,
																"src": "12916:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"id": 844,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 842,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12925:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 843,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12931:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "12925:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																}
															},
															"src": "12916:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 857,
														"nodeType": "IfStatement",
														"src": "12912:100:0",
														"trueBody": {
															"id": 856,
															"nodeType": "Block",
															"src": "12934:78:0",
															"statements": [
																{
																	"expression": {
																		"id": 850,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 846,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 747,
																			"src": "12952:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			},
																			"id": 849,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 847,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12961:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "32",
																				"id": 848,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12967:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				},
																				"value": "2"
																			},
																			"src": "12961:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			}
																		},
																		"src": "12952:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 851,
																	"nodeType": "ExpressionStatement",
																	"src": "12952:16:0"
																},
																{
																	"expression": {
																		"id": 854,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 852,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 753,
																			"src": "12986:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 853,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12996:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "12986:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 855,
																	"nodeType": "ExpressionStatement",
																	"src": "12986:11:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 862,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 858,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 747,
																"src": "13029:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"id": 861,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 859,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13038:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 860,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13044:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "13038:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																}
															},
															"src": "13029:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 868,
														"nodeType": "IfStatement",
														"src": "13025:66:0",
														"trueBody": {
															"id": 867,
															"nodeType": "Block",
															"src": "13047:44:0",
															"statements": [
																{
																	"expression": {
																		"id": 865,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 863,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 753,
																			"src": "13065:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 864,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13075:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "13065:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 866,
																	"nodeType": "ExpressionStatement",
																	"src": "13065:11:0"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 870,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 753,
													"src": "13117:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 751,
												"id": 871,
												"nodeType": "Return",
												"src": "13110:13:0"
											}
										]
									},
									"documentation": {
										"id": 745,
										"nodeType": "StructuredDocumentation",
										"src": "12089:120:0",
										"text": " @dev Return the log in base 10 of a positive value rounded towards zero.\n Returns 0 if given 0."
									},
									"id": 873,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "12223:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 748,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 747,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "12237:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 873,
												"src": "12229:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 746,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12229:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12228:15:0"
									},
									"returnParameters": {
										"id": 751,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 750,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 873,
												"src": "12267:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 749,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12267:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12266:9:0"
									},
									"scope": 1053,
									"src": "12214:916:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 907,
										"nodeType": "Block",
										"src": "13365:170:0",
										"statements": [
											{
												"id": 906,
												"nodeType": "UncheckedBlock",
												"src": "13375:154:0",
												"statements": [
													{
														"assignments": [
															885
														],
														"declarations": [
															{
																"constant": false,
																"id": 885,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "13407:6:0",
																"nodeType": "VariableDeclaration",
																"scope": 906,
																"src": "13399:14:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 884,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "13399:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 889,
														"initialValue": {
															"arguments": [
																{
																	"id": 887,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 876,
																	"src": "13422:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 886,
																"name": "log10",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	873,
																	908
																],
																"referencedDeclaration": 873,
																"src": "13416:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 888,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13416:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "13399:29:0"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 904,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 890,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 885,
																"src": "13449:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 899,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 892,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 879,
																						"src": "13476:8:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$10",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$10",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 891,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1052,
																					"src": "13459:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$10_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 893,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "13459:26:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 898,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 896,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "3130",
																						"id": 894,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "13489:2:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_10_by_1",
																							"typeString": "int_const 10"
																						},
																						"value": "10"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "**",
																					"rightExpression": {
																						"id": 895,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 885,
																						"src": "13495:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "13489:12:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 897,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 876,
																					"src": "13504:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "13489:20:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "13459:50:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 901,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13516:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 902,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "13459:58:0",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 900,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13512:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 903,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "13458:60:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "13449:69:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 883,
														"id": 905,
														"nodeType": "Return",
														"src": "13442:76:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 874,
										"nodeType": "StructuredDocumentation",
										"src": "13136:143:0",
										"text": " @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 908,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "13293:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 880,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 876,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "13307:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 908,
												"src": "13299:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 875,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13299:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 879,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "13323:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 908,
												"src": "13314:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$10",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 878,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 877,
														"name": "Rounding",
														"nameLocations": [
															"13314:8:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 10,
														"src": "13314:8:0"
													},
													"referencedDeclaration": 10,
													"src": "13314:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$10",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13298:34:0"
									},
									"returnParameters": {
										"id": 883,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 882,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 908,
												"src": "13356:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 881,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13356:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13355:9:0"
									},
									"scope": 1053,
									"src": "13284:251:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 994,
										"nodeType": "Block",
										"src": "13855:600:0",
										"statements": [
											{
												"assignments": [
													917
												],
												"declarations": [
													{
														"constant": false,
														"id": 917,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "13873:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 994,
														"src": "13865:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 916,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "13865:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 919,
												"initialValue": {
													"hexValue": "30",
													"id": 918,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "13882:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13865:18:0"
											},
											{
												"id": 991,
												"nodeType": "UncheckedBlock",
												"src": "13893:533:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 924,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 922,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 920,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 911,
																	"src": "13921:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 921,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13930:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "13921:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 923,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "13936:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "13921:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 934,
														"nodeType": "IfStatement",
														"src": "13917:98:0",
														"trueBody": {
															"id": 933,
															"nodeType": "Block",
															"src": "13939:76:0",
															"statements": [
																{
																	"expression": {
																		"id": 927,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 925,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 911,
																			"src": "13957:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 926,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13967:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "13957:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 928,
																	"nodeType": "ExpressionStatement",
																	"src": "13957:13:0"
																},
																{
																	"expression": {
																		"id": 931,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 929,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 917,
																			"src": "13988:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 930,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13998:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "13988:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 932,
																	"nodeType": "ExpressionStatement",
																	"src": "13988:12:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 939,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 937,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 935,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 911,
																	"src": "14032:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 936,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14041:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "14032:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 938,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14046:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14032:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 949,
														"nodeType": "IfStatement",
														"src": "14028:95:0",
														"trueBody": {
															"id": 948,
															"nodeType": "Block",
															"src": "14049:74:0",
															"statements": [
																{
																	"expression": {
																		"id": 942,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 940,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 911,
																			"src": "14067:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 941,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14077:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "14067:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 943,
																	"nodeType": "ExpressionStatement",
																	"src": "14067:12:0"
																},
																{
																	"expression": {
																		"id": 946,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 944,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 917,
																			"src": "14097:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 945,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14107:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "14097:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 947,
																	"nodeType": "ExpressionStatement",
																	"src": "14097:11:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 954,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 952,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 950,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 911,
																	"src": "14140:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 951,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14149:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "14140:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 953,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14154:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14140:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 964,
														"nodeType": "IfStatement",
														"src": "14136:95:0",
														"trueBody": {
															"id": 963,
															"nodeType": "Block",
															"src": "14157:74:0",
															"statements": [
																{
																	"expression": {
																		"id": 957,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 955,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 911,
																			"src": "14175:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 956,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14185:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "14175:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 958,
																	"nodeType": "ExpressionStatement",
																	"src": "14175:12:0"
																},
																{
																	"expression": {
																		"id": 961,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 959,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 917,
																			"src": "14205:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 960,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14215:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "14205:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 962,
																	"nodeType": "ExpressionStatement",
																	"src": "14205:11:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 969,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 967,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 965,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 911,
																	"src": "14248:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 966,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14257:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "14248:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 968,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14262:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14248:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 979,
														"nodeType": "IfStatement",
														"src": "14244:95:0",
														"trueBody": {
															"id": 978,
															"nodeType": "Block",
															"src": "14265:74:0",
															"statements": [
																{
																	"expression": {
																		"id": 972,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 970,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 911,
																			"src": "14283:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 971,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14293:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "14283:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 973,
																	"nodeType": "ExpressionStatement",
																	"src": "14283:12:0"
																},
																{
																	"expression": {
																		"id": 976,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 974,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 917,
																			"src": "14313:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 975,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14323:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "14313:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 977,
																	"nodeType": "ExpressionStatement",
																	"src": "14313:11:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 984,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 982,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 980,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 911,
																	"src": "14356:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 981,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14365:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "14356:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 983,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14369:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14356:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 990,
														"nodeType": "IfStatement",
														"src": "14352:64:0",
														"trueBody": {
															"id": 989,
															"nodeType": "Block",
															"src": "14372:44:0",
															"statements": [
																{
																	"expression": {
																		"id": 987,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 985,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 917,
																			"src": "14390:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 986,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14400:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "14390:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 988,
																	"nodeType": "ExpressionStatement",
																	"src": "14390:11:0"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 992,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 917,
													"src": "14442:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 915,
												"id": 993,
												"nodeType": "Return",
												"src": "14435:13:0"
											}
										]
									},
									"documentation": {
										"id": 909,
										"nodeType": "StructuredDocumentation",
										"src": "13541:246:0",
										"text": " @dev Return the log in base 256 of a positive value rounded towards zero.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."
									},
									"id": 995,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "13801:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 912,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 911,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "13816:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 995,
												"src": "13808:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 910,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13808:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13807:15:0"
									},
									"returnParameters": {
										"id": 915,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 914,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 995,
												"src": "13846:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 913,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13846:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13845:9:0"
									},
									"scope": 1053,
									"src": "13792:663:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1032,
										"nodeType": "Block",
										"src": "14692:177:0",
										"statements": [
											{
												"id": 1031,
												"nodeType": "UncheckedBlock",
												"src": "14702:161:0",
												"statements": [
													{
														"assignments": [
															1007
														],
														"declarations": [
															{
																"constant": false,
																"id": 1007,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "14734:6:0",
																"nodeType": "VariableDeclaration",
																"scope": 1031,
																"src": "14726:14:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1006,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "14726:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1011,
														"initialValue": {
															"arguments": [
																{
																	"id": 1009,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 998,
																	"src": "14750:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1008,
																"name": "log256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	995,
																	1033
																],
																"referencedDeclaration": 995,
																"src": "14743:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 1010,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14743:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "14726:30:0"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1029,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1012,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1007,
																"src": "14777:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 1024,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 1014,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1001,
																						"src": "14804:8:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$10",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$10",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 1013,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1052,
																					"src": "14787:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$10_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 1015,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "14787:26:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1023,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1021,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 1016,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "14817:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"components": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 1019,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 1017,
																									"name": "result",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1007,
																									"src": "14823:6:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "<<",
																								"rightExpression": {
																									"hexValue": "33",
																									"id": 1018,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "14833:1:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_3_by_1",
																										"typeString": "int_const 3"
																									},
																									"value": "3"
																								},
																								"src": "14823:11:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"id": 1020,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "14822:13:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "14817:18:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 1022,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 998,
																					"src": "14838:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "14817:26:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "14787:56:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 1026,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14850:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 1027,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "14787:64:0",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 1025,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14846:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 1028,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "14786:66:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "14777:75:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1005,
														"id": 1030,
														"nodeType": "Return",
														"src": "14770:82:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 996,
										"nodeType": "StructuredDocumentation",
										"src": "14461:144:0",
										"text": " @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 1033,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "14619:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1002,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 998,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "14634:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1033,
												"src": "14626:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 997,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14626:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1001,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "14650:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1033,
												"src": "14641:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$10",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1000,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 999,
														"name": "Rounding",
														"nameLocations": [
															"14641:8:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 10,
														"src": "14641:8:0"
													},
													"referencedDeclaration": 10,
													"src": "14641:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$10",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14625:34:0"
									},
									"returnParameters": {
										"id": 1005,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1004,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1033,
												"src": "14683:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1003,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14683:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14682:9:0"
									},
									"scope": 1053,
									"src": "14610:259:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1051,
										"nodeType": "Block",
										"src": "15067:48:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													},
													"id": 1049,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"id": 1047,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 1044,
																	"name": "rounding",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1037,
																	"src": "15090:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_Rounding_$10",
																		"typeString": "enum Math.Rounding"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_enum$_Rounding_$10",
																		"typeString": "enum Math.Rounding"
																	}
																],
																"id": 1043,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "15084:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint8_$",
																	"typeString": "type(uint8)"
																},
																"typeName": {
																	"id": 1042,
																	"name": "uint8",
																	"nodeType": "ElementaryTypeName",
																	"src": "15084:5:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1045,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15084:15:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "%",
														"rightExpression": {
															"hexValue": "32",
															"id": 1046,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15102:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "15084:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "31",
														"id": 1048,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "15107:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "15084:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1041,
												"id": 1050,
												"nodeType": "Return",
												"src": "15077:31:0"
											}
										]
									},
									"documentation": {
										"id": 1034,
										"nodeType": "StructuredDocumentation",
										"src": "14875:113:0",
										"text": " @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers."
									},
									"id": 1052,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unsignedRoundsUp",
									"nameLocation": "15002:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1038,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1037,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "15028:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1052,
												"src": "15019:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$10",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1036,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1035,
														"name": "Rounding",
														"nameLocations": [
															"15019:8:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 10,
														"src": "15019:8:0"
													},
													"referencedDeclaration": 10,
													"src": "15019:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$10",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15018:19:0"
									},
									"returnParameters": {
										"id": 1041,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1040,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1052,
												"src": "15061:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1039,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15061:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15060:6:0"
									},
									"scope": 1053,
									"src": "14993:122:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1054,
							"src": "203:14914:0",
							"usedErrors": [
								5
							],
							"usedEvents": []
						}
					],
					"src": "103:15015:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/utils/math/SafeCast.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/SafeCast.sol",
					"exportedSymbols": {
						"SafeCast": [
							2808
						]
					},
					"id": 2809,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1055,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "192:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeCast",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1056,
								"nodeType": "StructuredDocumentation",
								"src": "218:545:1",
								"text": " @dev Wrappers over Solidity's uintXX/intXX casting operators with added overflow\n checks.\n Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n easily result in undesired exploitation or bugs, since developers usually\n assume that overflows raise errors. `SafeCast` restores this intuition by\n reverting the transaction when such an operation overflows.\n Using this library instead of the unchecked operations eliminates an entire\n class of bugs, so it's recommended to use it always."
							},
							"fullyImplemented": true,
							"id": 2808,
							"linearizedBaseContracts": [
								2808
							],
							"name": "SafeCast",
							"nameLocation": "772:8:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1057,
										"nodeType": "StructuredDocumentation",
										"src": "787:68:1",
										"text": " @dev Value doesn't fit in an uint of `bits` size."
									},
									"errorSelector": "6dfcc650",
									"id": 1063,
									"name": "SafeCastOverflowedUintDowncast",
									"nameLocation": "866:30:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1062,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1059,
												"mutability": "mutable",
												"name": "bits",
												"nameLocation": "903:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 1063,
												"src": "897:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1058,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "897:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1061,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "917:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 1063,
												"src": "909:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1060,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "909:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "896:27:1"
									},
									"src": "860:64:1"
								},
								{
									"documentation": {
										"id": 1064,
										"nodeType": "StructuredDocumentation",
										"src": "930:75:1",
										"text": " @dev An int value doesn't fit in an uint of `bits` size."
									},
									"errorSelector": "a8ce4432",
									"id": 1068,
									"name": "SafeCastOverflowedIntToUint",
									"nameLocation": "1016:27:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1067,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1066,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1051:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 1068,
												"src": "1044:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1065,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1044:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1043:14:1"
									},
									"src": "1010:48:1"
								},
								{
									"documentation": {
										"id": 1069,
										"nodeType": "StructuredDocumentation",
										"src": "1064:67:1",
										"text": " @dev Value doesn't fit in an int of `bits` size."
									},
									"errorSelector": "327269a7",
									"id": 1075,
									"name": "SafeCastOverflowedIntDowncast",
									"nameLocation": "1142:29:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1074,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1071,
												"mutability": "mutable",
												"name": "bits",
												"nameLocation": "1178:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 1075,
												"src": "1172:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1070,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1172:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1073,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1191:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 1075,
												"src": "1184:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1072,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1184:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1171:26:1"
									},
									"src": "1136:62:1"
								},
								{
									"documentation": {
										"id": 1076,
										"nodeType": "StructuredDocumentation",
										"src": "1204:75:1",
										"text": " @dev An uint value doesn't fit in an int of `bits` size."
									},
									"errorSelector": "24775e06",
									"id": 1080,
									"name": "SafeCastOverflowedUintToInt",
									"nameLocation": "1290:27:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1079,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1078,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1326:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 1080,
												"src": "1318:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1077,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1318:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1317:15:1"
									},
									"src": "1284:49:1"
								},
								{
									"body": {
										"id": 1107,
										"nodeType": "Block",
										"src": "1690:152:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1094,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1088,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1083,
														"src": "1704:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1091,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1717:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint248_$",
																		"typeString": "type(uint248)"
																	},
																	"typeName": {
																		"id": 1090,
																		"name": "uint248",
																		"nodeType": "ElementaryTypeName",
																		"src": "1717:7:1",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint248_$",
																		"typeString": "type(uint248)"
																	}
																],
																"id": 1089,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "1712:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1092,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1712:13:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint248",
																"typeString": "type(uint248)"
															}
														},
														"id": 1093,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "1726:3:1",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "1712:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint248",
															"typeString": "uint248"
														}
													},
													"src": "1704:25:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1101,
												"nodeType": "IfStatement",
												"src": "1700:105:1",
												"trueBody": {
													"id": 1100,
													"nodeType": "Block",
													"src": "1731:74:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "323438",
																		"id": 1096,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1783:3:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_248_by_1",
																			"typeString": "int_const 248"
																		},
																		"value": "248"
																	},
																	{
																		"id": 1097,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1083,
																		"src": "1788:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_248_by_1",
																			"typeString": "int_const 248"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1095,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1063,
																	"src": "1752:30:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$",
																		"typeString": "function (uint8,uint256) pure"
																	}
																},
																"id": 1098,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1752:42:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1099,
															"nodeType": "RevertStatement",
															"src": "1745:49:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1104,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1083,
															"src": "1829:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1103,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "1821:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint248_$",
															"typeString": "type(uint248)"
														},
														"typeName": {
															"id": 1102,
															"name": "uint248",
															"nodeType": "ElementaryTypeName",
															"src": "1821:7:1",
															"typeDescriptions": {}
														}
													},
													"id": 1105,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1821:14:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint248",
														"typeString": "uint248"
													}
												},
												"functionReturnParameters": 1087,
												"id": 1106,
												"nodeType": "Return",
												"src": "1814:21:1"
											}
										]
									},
									"documentation": {
										"id": 1081,
										"nodeType": "StructuredDocumentation",
										"src": "1339:280:1",
										"text": " @dev Returns the downcasted uint248 from uint256, reverting on\n overflow (when the input is greater than largest uint248).\n Counterpart to Solidity's `uint248` operator.\n Requirements:\n - input must fit into 248 bits"
									},
									"id": 1108,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint248",
									"nameLocation": "1633:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1084,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1083,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1651:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 1108,
												"src": "1643:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1082,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1643:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1642:15:1"
									},
									"returnParameters": {
										"id": 1087,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1086,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1108,
												"src": "1681:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint248",
													"typeString": "uint248"
												},
												"typeName": {
													"id": 1085,
													"name": "uint248",
													"nodeType": "ElementaryTypeName",
													"src": "1681:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint248",
														"typeString": "uint248"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1680:9:1"
									},
									"scope": 2808,
									"src": "1624:218:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1135,
										"nodeType": "Block",
										"src": "2199:152:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1122,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1116,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1111,
														"src": "2213:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1119,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2226:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint240_$",
																		"typeString": "type(uint240)"
																	},
																	"typeName": {
																		"id": 1118,
																		"name": "uint240",
																		"nodeType": "ElementaryTypeName",
																		"src": "2226:7:1",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint240_$",
																		"typeString": "type(uint240)"
																	}
																],
																"id": 1117,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "2221:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1120,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2221:13:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint240",
																"typeString": "type(uint240)"
															}
														},
														"id": 1121,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "2235:3:1",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "2221:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint240",
															"typeString": "uint240"
														}
													},
													"src": "2213:25:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1129,
												"nodeType": "IfStatement",
												"src": "2209:105:1",
												"trueBody": {
													"id": 1128,
													"nodeType": "Block",
													"src": "2240:74:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "323430",
																		"id": 1124,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2292:3:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_240_by_1",
																			"typeString": "int_const 240"
																		},
																		"value": "240"
																	},
																	{
																		"id": 1125,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1111,
																		"src": "2297:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_240_by_1",
																			"typeString": "int_const 240"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1123,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1063,
																	"src": "2261:30:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$",
																		"typeString": "function (uint8,uint256) pure"
																	}
																},
																"id": 1126,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2261:42:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1127,
															"nodeType": "RevertStatement",
															"src": "2254:49:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1132,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1111,
															"src": "2338:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1131,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2330:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint240_$",
															"typeString": "type(uint240)"
														},
														"typeName": {
															"id": 1130,
															"name": "uint240",
															"nodeType": "ElementaryTypeName",
															"src": "2330:7:1",
															"typeDescriptions": {}
														}
													},
													"id": 1133,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2330:14:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint240",
														"typeString": "uint240"
													}
												},
												"functionReturnParameters": 1115,
												"id": 1134,
												"nodeType": "Return",
												"src": "2323:21:1"
											}
										]
									},
									"documentation": {
										"id": 1109,
										"nodeType": "StructuredDocumentation",
										"src": "1848:280:1",
										"text": " @dev Returns the downcasted uint240 from uint256, reverting on\n overflow (when the input is greater than largest uint240).\n Counterpart to Solidity's `uint240` operator.\n Requirements:\n - input must fit into 240 bits"
									},
									"id": 1136,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint240",
									"nameLocation": "2142:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1112,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1111,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2160:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 1136,
												"src": "2152:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1110,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2152:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2151:15:1"
									},
									"returnParameters": {
										"id": 1115,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1114,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1136,
												"src": "2190:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint240",
													"typeString": "uint240"
												},
												"typeName": {
													"id": 1113,
													"name": "uint240",
													"nodeType": "ElementaryTypeName",
													"src": "2190:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint240",
														"typeString": "uint240"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2189:9:1"
									},
									"scope": 2808,
									"src": "2133:218:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1163,
										"nodeType": "Block",
										"src": "2708:152:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1150,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1144,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1139,
														"src": "2722:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1147,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2735:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint232_$",
																		"typeString": "type(uint232)"
																	},
																	"typeName": {
																		"id": 1146,
																		"name": "uint232",
																		"nodeType": "ElementaryTypeName",
																		"src": "2735:7:1",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint232_$",
																		"typeString": "type(uint232)"
																	}
																],
																"id": 1145,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "2730:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1148,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2730:13:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint232",
																"typeString": "type(uint232)"
															}
														},
														"id": 1149,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "2744:3:1",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "2730:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint232",
															"typeString": "uint232"
														}
													},
													"src": "2722:25:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1157,
												"nodeType": "IfStatement",
												"src": "2718:105:1",
												"trueBody": {
													"id": 1156,
													"nodeType": "Block",
													"src": "2749:74:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "323332",
																		"id": 1152,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2801:3:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_232_by_1",
																			"typeString": "int_const 232"
																		},
																		"value": "232"
																	},
																	{
																		"id": 1153,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1139,
																		"src": "2806:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_232_by_1",
																			"typeString": "int_const 232"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1151,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1063,
																	"src": "2770:30:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$",
																		"typeString": "function (uint8,uint256) pure"
																	}
																},
																"id": 1154,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2770:42:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1155,
															"nodeType": "RevertStatement",
															"src": "2763:49:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1160,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1139,
															"src": "2847:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1159,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2839:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint232_$",
															"typeString": "type(uint232)"
														},
														"typeName": {
															"id": 1158,
															"name": "uint232",
															"nodeType": "ElementaryTypeName",
															"src": "2839:7:1",
															"typeDescriptions": {}
														}
													},
													"id": 1161,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2839:14:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint232",
														"typeString": "uint232"
													}
												},
												"functionReturnParameters": 1143,
												"id": 1162,
												"nodeType": "Return",
												"src": "2832:21:1"
											}
										]
									},
									"documentation": {
										"id": 1137,
										"nodeType": "StructuredDocumentation",
										"src": "2357:280:1",
										"text": " @dev Returns the downcasted uint232 from uint256, reverting on\n overflow (when the input is greater than largest uint232).\n Counterpart to Solidity's `uint232` operator.\n Requirements:\n - input must fit into 232 bits"
									},
									"id": 1164,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint232",
									"nameLocation": "2651:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1140,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1139,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2669:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 1164,
												"src": "2661:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1138,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2661:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2660:15:1"
									},
									"returnParameters": {
										"id": 1143,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1142,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1164,
												"src": "2699:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint232",
													"typeString": "uint232"
												},
												"typeName": {
													"id": 1141,
													"name": "uint232",
													"nodeType": "ElementaryTypeName",
													"src": "2699:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint232",
														"typeString": "uint232"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2698:9:1"
									},
									"scope": 2808,
									"src": "2642:218:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1191,
										"nodeType": "Block",
										"src": "3217:152:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1178,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1172,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1167,
														"src": "3231:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1175,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3244:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint224_$",
																		"typeString": "type(uint224)"
																	},
																	"typeName": {
																		"id": 1174,
																		"name": "uint224",
																		"nodeType": "ElementaryTypeName",
																		"src": "3244:7:1",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint224_$",
																		"typeString": "type(uint224)"
																	}
																],
																"id": 1173,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "3239:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1176,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3239:13:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint224",
																"typeString": "type(uint224)"
															}
														},
														"id": 1177,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "3253:3:1",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "3239:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint224",
															"typeString": "uint224"
														}
													},
													"src": "3231:25:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1185,
												"nodeType": "IfStatement",
												"src": "3227:105:1",
												"trueBody": {
													"id": 1184,
													"nodeType": "Block",
													"src": "3258:74:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "323234",
																		"id": 1180,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3310:3:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_224_by_1",
																			"typeString": "int_const 224"
																		},
																		"value": "224"
																	},
																	{
																		"id": 1181,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1167,
																		"src": "3315:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_224_by_1",
																			"typeString": "int_const 224"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1179,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1063,
																	"src": "3279:30:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$",
																		"typeString": "function (uint8,uint256) pure"
																	}
																},
																"id": 1182,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3279:42:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1183,
															"nodeType": "RevertStatement",
															"src": "3272:49:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1188,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1167,
															"src": "3356:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1187,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "3348:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint224_$",
															"typeString": "type(uint224)"
														},
														"typeName": {
															"id": 1186,
															"name": "uint224",
															"nodeType": "ElementaryTypeName",
															"src": "3348:7:1",
															"typeDescriptions": {}
														}
													},
													"id": 1189,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3348:14:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint224",
														"typeString": "uint224"
													}
												},
												"functionReturnParameters": 1171,
												"id": 1190,
												"nodeType": "Return",
												"src": "3341:21:1"
											}
										]
									},
									"documentation": {
										"id": 1165,
										"nodeType": "StructuredDocumentation",
										"src": "2866:280:1",
										"text": " @dev Returns the downcasted uint224 from uint256, reverting on\n overflow (when the input is greater than largest uint224).\n Counterpart to Solidity's `uint224` operator.\n Requirements:\n - input must fit into 224 bits"
									},
									"id": 1192,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint224",
									"nameLocation": "3160:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1167,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3178:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 1192,
												"src": "3170:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1166,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3170:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3169:15:1"
									},
									"returnParameters": {
										"id": 1171,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1170,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1192,
												"src": "3208:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint224",
													"typeString": "uint224"
												},
												"typeName": {
													"id": 1169,
													"name": "uint224",
													"nodeType": "ElementaryTypeName",
													"src": "3208:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint224",
														"typeString": "uint224"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3207:9:1"
									},
									"scope": 2808,
									"src": "3151:218:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1219,
										"nodeType": "Block",
										"src": "3726:152:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1206,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1200,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1195,
														"src": "3740:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1203,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3753:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint216_$",
																		"typeString": "type(uint216)"
																	},
																	"typeName": {
																		"id": 1202,
																		"name": "uint216",
																		"nodeType": "ElementaryTypeName",
																		"src": "3753:7:1",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint216_$",
																		"typeString": "type(uint216)"
																	}
																],
																"id": 1201,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "3748:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1204,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3748:13:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint216",
																"typeString": "type(uint216)"
															}
														},
														"id": 1205,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "3762:3:1",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "3748:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint216",
															"typeString": "uint216"
														}
													},
													"src": "3740:25:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1213,
												"nodeType": "IfStatement",
												"src": "3736:105:1",
												"trueBody": {
													"id": 1212,
													"nodeType": "Block",
													"src": "3767:74:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "323136",
																		"id": 1208,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3819:3:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_216_by_1",
																			"typeString": "int_const 216"
																		},
																		"value": "216"
																	},
																	{
																		"id": 1209,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1195,
																		"src": "3824:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_216_by_1",
																			"typeString": "int_const 216"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1207,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1063,
																	"src": "3788:30:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$",
																		"typeString": "function (uint8,uint256) pure"
																	}
																},
																"id": 1210,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3788:42:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1211,
															"nodeType": "RevertStatement",
															"src": "3781:49:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1216,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1195,
															"src": "3865:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1215,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "3857:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint216_$",
															"typeString": "type(uint216)"
														},
														"typeName": {
															"id": 1214,
															"name": "uint216",
															"nodeType": "ElementaryTypeName",
															"src": "3857:7:1",
															"typeDescriptions": {}
														}
													},
													"id": 1217,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3857:14:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint216",
														"typeString": "uint216"
													}
												},
												"functionReturnParameters": 1199,
												"id": 1218,
												"nodeType": "Return",
												"src": "3850:21:1"
											}
										]
									},
									"documentation": {
										"id": 1193,
										"nodeType": "StructuredDocumentation",
										"src": "3375:280:1",
										"text": " @dev Returns the downcasted uint216 from uint256, reverting on\n overflow (when the input is greater than largest uint216).\n Counterpart to Solidity's `uint216` operator.\n Requirements:\n - input must fit into 216 bits"
									},
									"id": 1220,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint216",
									"nameLocation": "3669:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1196,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1195,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3687:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 1220,
												"src": "3679:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1194,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3679:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3678:15:1"
									},
									"returnParameters": {
										"id": 1199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1198,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1220,
												"src": "3717:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint216",
													"typeString": "uint216"
												},
												"typeName": {
													"id": 1197,
													"name": "uint216",
													"nodeType": "ElementaryTypeName",
													"src": "3717:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint216",
														"typeString": "uint216"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3716:9:1"
									},
									"scope": 2808,
									"src": "3660:218:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1247,
										"nodeType": "Block",
										"src": "4235:152:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1234,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1228,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1223,
														"src": "4249:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1231,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4262:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint208_$",
																		"typeString": "type(uint208)"
																	},
																	"typeName": {
																		"id": 1230,
																		"name": "uint208",
																		"nodeType": "ElementaryTypeName",
																		"src": "4262:7:1",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint208_$",
																		"typeString": "type(uint208)"
																	}
																],
																"id": 1229,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "4257:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1232,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4257:13:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint208",
																"typeString": "type(uint208)"
															}
														},
														"id": 1233,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "4271:3:1",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "4257:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint208",
															"typeString": "uint208"
														}
													},
													"src": "4249:25:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1241,
												"nodeType": "IfStatement",
												"src": "4245:105:1",
												"trueBody": {
													"id": 1240,
													"nodeType": "Block",
													"src": "4276:74:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "323038",
																		"id": 1236,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4328:3:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_208_by_1",
																			"typeString": "int_const 208"
																		},
																		"value": "208"
																	},
																	{
																		"id": 1237,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1223,
																		"src": "4333:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_208_by_1",
																			"typeString": "int_const 208"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1235,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1063,
																	"src": "4297:30:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$",
																		"typeString": "function (uint8,uint256) pure"
																	}
																},
																"id": 1238,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4297:42:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1239,
															"nodeType": "RevertStatement",
															"src": "4290:49:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1244,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1223,
															"src": "4374:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1243,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "4366:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint208_$",
															"typeString": "type(uint208)"
														},
														"typeName": {
															"id": 1242,
															"name": "uint208",
															"nodeType": "ElementaryTypeName",
															"src": "4366:7:1",
															"typeDescriptions": {}
														}
													},
													"id": 1245,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4366:14:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint208",
														"typeString": "uint208"
													}
												},
												"functionReturnParameters": 1227,
												"id": 1246,
												"nodeType": "Return",
												"src": "4359:21:1"
											}
										]
									},
									"documentation": {
										"id": 1221,
										"nodeType": "StructuredDocumentation",
										"src": "3884:280:1",
										"text": " @dev Returns the downcasted uint208 from uint256, reverting on\n overflow (when the input is greater than largest uint208).\n Counterpart to Solidity's `uint208` operator.\n Requirements:\n - input must fit into 208 bits"
									},
									"id": 1248,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint208",
									"nameLocation": "4178:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1224,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1223,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4196:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 1248,
												"src": "4188:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1222,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4188:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4187:15:1"
									},
									"returnParameters": {
										"id": 1227,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1226,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1248,
												"src": "4226:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint208",
													"typeString": "uint208"
												},
												"typeName": {
													"id": 1225,
													"name": "uint208",
													"nodeType": "ElementaryTypeName",
													"src": "4226:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint208",
														"typeString": "uint208"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4225:9:1"
									},
									"scope": 2808,
									"src": "4169:218:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1275,
										"nodeType": "Block",
										"src": "4744:152:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1262,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1256,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1251,
														"src": "4758:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1259,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4771:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint200_$",
																		"typeString": "type(uint200)"
																	},
																	"typeName": {
																		"id": 1258,
																		"name": "uint200",
																		"nodeType": "ElementaryTypeName",
																		"src": "4771:7:1",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint200_$",
																		"typeString": "type(uint200)"
																	}
																],
																"id": 1257,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "4766:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1260,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4766:13:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint200",
																"typeString": "type(uint200)"
															}
														},
														"id": 1261,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "4780:3:1",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "4766:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint200",
															"typeString": "uint200"
														}
													},
													"src": "4758:25:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1269,
												"nodeType": "IfStatement",
												"src": "4754:105:1",
												"trueBody": {
													"id": 1268,
													"nodeType": "Block",
													"src": "4785:74:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "323030",
																		"id": 1264,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4837:3:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_200_by_1",
																			"typeString": "int_const 200"
																		},
																		"value": "200"
																	},
																	{
																		"id": 1265,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1251,
																		"src": "4842:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_200_by_1",
																			"typeString": "int_const 200"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1263,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1063,
																	"src": "4806:30:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$",
																		"typeString": "function (uint8,uint256) pure"
																	}
																},
																"id": 1266,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4806:42:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1267,
															"nodeType": "RevertStatement",
															"src": "4799:49:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1272,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1251,
															"src": "4883:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1271,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "4875:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint200_$",
															"typeString": "type(uint200)"
														},
														"typeName": {
															"id": 1270,
															"name": "uint200",
															"nodeType": "ElementaryTypeName",
															"src": "4875:7:1",
															"typeDescriptions": {}
														}
													},
													"id": 1273,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4875:14:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint200",
														"typeString": "uint200"
													}
												},
												"functionReturnParameters": 1255,
												"id": 1274,
												"nodeType": "Return",
												"src": "4868:21:1"
											}
										]
									},
									"documentation": {
										"id": 1249,
										"nodeType": "StructuredDocumentation",
										"src": "4393:280:1",
										"text": " @dev Returns the downcasted uint200 from uint256, reverting on\n overflow (when the input is greater than largest uint200).\n Counterpart to Solidity's `uint200` operator.\n Requirements:\n - input must fit into 200 bits"
									},
									"id": 1276,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint200",
									"nameLocation": "4687:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1252,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1251,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4705:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 1276,
												"src": "4697:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1250,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4697:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4696:15:1"
									},
									"returnParameters": {
										"id": 1255,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1254,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1276,
												"src": "4735:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint200",
													"typeString": "uint200"
												},
												"typeName": {
													"id": 1253,
													"name": "uint200",
													"nodeType": "ElementaryTypeName",
													"src": "4735:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint200",
														"typeString": "uint200"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4734:9:1"
									},
									"scope": 2808,
									"src": "4678:218:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1303,
										"nodeType": "Block",
										"src": "5253:152:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1290,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1284,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1279,
														"src": "5267:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1287,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "5280:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint192_$",
																		"typeString": "type(uint192)"
																	},
																	"typeName": {
																		"id": 1286,
																		"name": "uint192",
																		"nodeType": "ElementaryTypeName",
																		"src": "5280:7:1",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint192_$",
																		"typeString": "type(uint192)"
																	}
																],
																"id": 1285,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "5275:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1288,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5275:13:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint192",
																"typeString": "type(uint192)"
															}
														},
														"id": 1289,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "5289:3:1",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "5275:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint192",
															"typeString": "uint192"
														}
													},
													"src": "5267:25:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1297,
												"nodeType": "IfStatement",
												"src": "5263:105:1",
												"trueBody": {
													"id": 1296,
													"nodeType": "Block",
													"src": "5294:74:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313932",
																		"id": 1292,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5346:3:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_192_by_1",
																			"typeString": "int_const 192"
																		},
																		"value": "192"
																	},
																	{
																		"id": 1293,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1279,
																		"src": "5351:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_192_by_1",
																			"typeString": "int_const 192"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1291,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1063,
																	"src": "5315:30:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$",
																		"typeString": "function (uint8,uint256) pure"
																	}
																},
																"id": 1294,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5315:42:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1295,
															"nodeType": "RevertStatement",
															"src": "5308:49:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1300,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1279,
															"src": "5392:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1299,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "5384:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint192_$",
															"typeString": "type(uint192)"
														},
														"typeName": {
															"id": 1298,
															"name": "uint192",
															"nodeType": "ElementaryTypeName",
															"src": "5384:7:1",
															"typeDescriptions": {}
														}
													},
													"id": 1301,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5384:14:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint192",
														"typeString": "uint192"
													}
												},
												"functionReturnParameters": 1283,
												"id": 1302,
												"nodeType": "Return",
												"src": "5377:21:1"
											}
										]
									},
									"documentation": {
										"id": 1277,
										"nodeType": "StructuredDocumentation",
										"src": "4902:280:1",
										"text": " @dev Returns the downcasted uint192 from uint256, reverting on\n overflow (when the input is greater than largest uint192).\n Counterpart to Solidity's `uint192` operator.\n Requirements:\n - input must fit into 192 bits"
									},
									"id": 1304,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint192",
									"nameLocation": "5196:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1280,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1279,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5214:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 1304,
												"src": "5206:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1278,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5206:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5205:15:1"
									},
									"returnParameters": {
										"id": 1283,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1282,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1304,
												"src": "5244:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint192",
													"typeString": "uint192"
												},
												"typeName": {
													"id": 1281,
													"name": "uint192",
													"nodeType": "ElementaryTypeName",
													"src": "5244:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint192",
														"typeString": "uint192"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5243:9:1"
									},
									"scope": 2808,
									"src": "5187:218:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1331,
										"nodeType": "Block",
										"src": "5762:152:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1318,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1312,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1307,
														"src": "5776:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1315,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "5789:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint184_$",
																		"typeString": "type(uint184)"
																	},
																	"typeName": {
																		"id": 1314,
																		"name": "uint184",
																		"nodeType": "ElementaryTypeName",
																		"src": "5789:7:1",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint184_$",
																		"typeString": "type(uint184)"
																	}
																],
																"id": 1313,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "5784:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1316,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5784:13:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint184",
																"typeString": "type(uint184)"
															}
														},
														"id": 1317,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "5798:3:1",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "5784:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint184",
															"typeString": "uint184"
														}
													},
													"src": "5776:25:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1325,
												"nodeType": "IfStatement",
												"src": "5772:105:1",
												"trueBody": {
													"id": 1324,
													"nodeType": "Block",
													"src": "5803:74:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313834",
																		"id": 1320,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5855:3:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_184_by_1",
																			"typeString": "int_const 184"
																		},
																		"value": "184"
																	},
																	{
																		"id": 1321,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1307,
																		"src": "5860:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_184_by_1",
																			"typeString": "int_const 184"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1319,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1063,
																	"src": "5824:30:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$",
																		"typeString": "function (uint8,uint256) pure"
																	}
																},
																"id": 1322,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5824:42:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1323,
															"nodeType": "RevertStatement",
															"src": "5817:49:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1328,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1307,
															"src": "5901:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1327,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "5893:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint184_$",
															"typeString": "type(uint184)"
														},
														"typeName": {
															"id": 1326,
															"name": "uint184",
															"nodeType": "ElementaryTypeName",
															"src": "5893:7:1",
															"typeDescriptions": {}
														}
													},
													"id": 1329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5893:14:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint184",
														"typeString": "uint184"
													}
												},
												"functionReturnParameters": 1311,
												"id": 1330,
												"nodeType": "Return",
												"src": "5886:21:1"
											}
										]
									},
									"documentation": {
										"id": 1305,
										"nodeType": "StructuredDocumentation",
										"src": "5411:280:1",
										"text": " @dev Returns the downcasted uint184 from uint256, reverting on\n overflow (when the input is greater than largest uint184).\n Counterpart to Solidity's `uint184` operator.\n Requirements:\n - input must fit into 184 bits"
									},
									"id": 1332,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint184",
									"nameLocation": "5705:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1308,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1307,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5723:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 1332,
												"src": "5715:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1306,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5715:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5714:15:1"
									},
									"returnParameters": {
										"id": 1311,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1310,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1332,
												"src": "5753:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint184",
													"typeString": "uint184"
												},
												"typeName": {
													"id": 1309,
													"name": "uint184",
													"nodeType": "ElementaryTypeName",
													"src": "5753:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint184",
														"typeString": "uint184"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5752:9:1"
									},
									"scope": 2808,
									"src": "5696:218:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1359,
										"nodeType": "Block",
										"src": "6271:152:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1346,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1340,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1335,
														"src": "6285:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1343,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "6298:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint176_$",
																		"typeString": "type(uint176)"
																	},
																	"typeName": {
																		"id": 1342,
																		"name": "uint176",
																		"nodeType": "ElementaryTypeName",
																		"src": "6298:7:1",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint176_$",
																		"typeString": "type(uint176)"
																	}
																],
																"id": 1341,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "6293:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1344,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6293:13:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint176",
																"typeString": "type(uint176)"
															}
														},
														"id": 1345,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "6307:3:1",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "6293:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint176",
															"typeString": "uint176"
														}
													},
													"src": "6285:25:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1353,
												"nodeType": "IfStatement",
												"src": "6281:105:1",
												"trueBody": {
													"id": 1352,
													"nodeType": "Block",
													"src": "6312:74:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313736",
																		"id": 1348,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6364:3:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_176_by_1",
																			"typeString": "int_const 176"
																		},
																		"value": "176"
																	},
																	{
																		"id": 1349,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1335,
																		"src": "6369:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_176_by_1",
																			"typeString": "int_const 176"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1347,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1063,
																	"src": "6333:30:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$",
																		"typeString": "function (uint8,uint256) pure"
																	}
																},
																"id": 1350,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6333:42:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1351,
															"nodeType": "RevertStatement",
															"src": "6326:49:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1356,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1335,
															"src": "6410:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1355,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "6402:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint176_$",
															"typeString": "type(uint176)"
														},
														"typeName": {
															"id": 1354,
															"name": "uint176",
															"nodeType": "ElementaryTypeName",
															"src": "6402:7:1",
															"typeDescriptions": {}
														}
													},
													"id": 1357,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6402:14:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint176",
														"typeString": "uint176"
													}
												},
												"functionReturnParameters": 1339,
												"id": 1358,
												"nodeType": "Return",
												"src": "6395:21:1"
											}
										]
									},
									"documentation": {
										"id": 1333,
										"nodeType": "StructuredDocumentation",
										"src": "5920:280:1",
										"text": " @dev Returns the downcasted uint176 from uint256, reverting on\n overflow (when the input is greater than largest uint176).\n Counterpart to Solidity's `uint176` operator.\n Requirements:\n - input must fit into 176 bits"
									},
									"id": 1360,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint176",
									"nameLocation": "6214:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1336,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1335,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6232:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 1360,
												"src": "6224:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1334,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6224:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6223:15:1"
									},
									"returnParameters": {
										"id": 1339,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1338,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1360,
												"src": "6262:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint176",
													"typeString": "uint176"
												},
												"typeName": {
													"id": 1337,
													"name": "uint176",
													"nodeType": "ElementaryTypeName",
													"src": "6262:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint176",
														"typeString": "uint176"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6261:9:1"
									},
									"scope": 2808,
									"src": "6205:218:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1387,
										"nodeType": "Block",
										"src": "6780:152:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1374,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1368,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1363,
														"src": "6794:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1371,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "6807:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint168_$",
																		"typeString": "type(uint168)"
																	},
																	"typeName": {
																		"id": 1370,
																		"name": "uint168",
																		"nodeType": "ElementaryTypeName",
																		"src": "6807:7:1",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint168_$",
																		"typeString": "type(uint168)"
																	}
																],
																"id": 1369,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "6802:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1372,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6802:13:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint168",
																"typeString": "type(uint168)"
															}
														},
														"id": 1373,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "6816:3:1",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "6802:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint168",
															"typeString": "uint168"
														}
													},
													"src": "6794:25:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1381,
												"nodeType": "IfStatement",
												"src": "6790:105:1",
												"trueBody": {
													"id": 1380,
													"nodeType": "Block",
													"src": "6821:74:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313638",
																		"id": 1376,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6873:3:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_168_by_1",
																			"typeString": "int_const 168"
																		},
																		"value": "168"
																	},
																	{
																		"id": 1377,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1363,
																		"src": "6878:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_168_by_1",
																			"typeString": "int_const 168"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1375,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1063,
																	"src": "6842:30:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$",
																		"typeString": "function (uint8,uint256) pure"
																	}
																},
																"id": 1378,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6842:42:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1379,
															"nodeType": "RevertStatement",
															"src": "6835:49:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1384,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1363,
															"src": "6919:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1383,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "6911:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint168_$",
															"typeString": "type(uint168)"
														},
														"typeName": {
															"id": 1382,
															"name": "uint168",
															"nodeType": "ElementaryTypeName",
															"src": "6911:7:1",
															"typeDescriptions": {}
														}
													},
													"id": 1385,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6911:14:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint168",
														"typeString": "uint168"
													}
												},
												"functionReturnParameters": 1367,
												"id": 1386,
												"nodeType": "Return",
												"src": "6904:21:1"
											}
										]
									},
									"documentation": {
										"id": 1361,
										"nodeType": "StructuredDocumentation",
										"src": "6429:280:1",
										"text": " @dev Returns the downcasted uint168 from uint256, reverting on\n overflow (when the input is greater than largest uint168).\n Counterpart to Solidity's `uint168` operator.\n Requirements:\n - input must fit into 168 bits"
									},
									"id": 1388,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint168",
									"nameLocation": "6723:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1364,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1363,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6741:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 1388,
												"src": "6733:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1362,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6733:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6732:15:1"
									},
									"returnParameters": {
										"id": 1367,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1366,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1388,
												"src": "6771:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint168",
													"typeString": "uint168"
												},
												"typeName": {
													"id": 1365,
													"name": "uint168",
													"nodeType": "ElementaryTypeName",
													"src": "6771:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint168",
														"typeString": "uint168"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6770:9:1"
									},
									"scope": 2808,
									"src": "6714:218:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1415,
										"nodeType": "Block",
										"src": "7289:152:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1402,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1396,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1391,
														"src": "7303:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1399,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7316:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint160_$",
																		"typeString": "type(uint160)"
																	},
																	"typeName": {
																		"id": 1398,
																		"name": "uint160",
																		"nodeType": "ElementaryTypeName",
																		"src": "7316:7:1",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint160_$",
																		"typeString": "type(uint160)"
																	}
																],
																"id": 1397,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "7311:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1400,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7311:13:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint160",
																"typeString": "type(uint160)"
															}
														},
														"id": 1401,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "7325:3:1",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "7311:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														}
													},
													"src": "7303:25:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1409,
												"nodeType": "IfStatement",
												"src": "7299:105:1",
												"trueBody": {
													"id": 1408,
													"nodeType": "Block",
													"src": "7330:74:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313630",
																		"id": 1404,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7382:3:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_160_by_1",
																			"typeString": "int_const 160"
																		},
																		"value": "160"
																	},
																	{
																		"id": 1405,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1391,
																		"src": "7387:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_160_by_1",
																			"typeString": "int_const 160"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1403,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1063,
																	"src": "7351:30:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$",
																		"typeString": "function (uint8,uint256) pure"
																	}
																},
																"id": 1406,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7351:42:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1407,
															"nodeType": "RevertStatement",
															"src": "7344:49:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1412,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1391,
															"src": "7428:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1411,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "7420:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint160_$",
															"typeString": "type(uint160)"
														},
														"typeName": {
															"id": 1410,
															"name": "uint160",
															"nodeType": "ElementaryTypeName",
															"src": "7420:7:1",
															"typeDescriptions": {}
														}
													},
													"id": 1413,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7420:14:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"functionReturnParameters": 1395,
												"id": 1414,
												"nodeType": "Return",
												"src": "7413:21:1"
											}
										]
									},
									"documentation": {
										"id": 1389,
										"nodeType": "StructuredDocumentation",
										"src": "6938:280:1",
										"text": " @dev Returns the downcasted uint160 from uint256, reverting on\n overflow (when the input is greater than largest uint160).\n Counterpart to Solidity's `uint160` operator.\n Requirements:\n - input must fit into 160 bits"
									},
									"id": 1416,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint160",
									"nameLocation": "7232:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1392,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1391,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7250:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 1416,
												"src": "7242:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1390,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7242:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7241:15:1"
									},
									"returnParameters": {
										"id": 1395,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1394,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1416,
												"src": "7280:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 1393,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "7280:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7279:9:1"
									},
									"scope": 2808,
									"src": "7223:218:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1443,
										"nodeType": "Block",
										"src": "7798:152:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1430,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1424,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1419,
														"src": "7812:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1427,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7825:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint152_$",
																		"typeString": "type(uint152)"
																	},
																	"typeName": {
																		"id": 1426,
																		"name": "uint152",
																		"nodeType": "ElementaryTypeName",
																		"src": "7825:7:1",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint152_$",
																		"typeString": "type(uint152)"
																	}
																],
																"id": 1425,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "7820:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1428,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7820:13:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint152",
																"typeString": "type(uint152)"
															}
														},
														"id": 1429,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "7834:3:1",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "7820:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint152",
															"typeString": "uint152"
														}
													},
													"src": "7812:25:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1437,
												"nodeType": "IfStatement",
												"src": "7808:105:1",
												"trueBody": {
													"id": 1436,
													"nodeType": "Block",
													"src": "7839:74:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313532",
																		"id": 1432,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7891:3:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_152_by_1",
																			"typeString": "int_const 152"
																		},
																		"value": "152"
																	},
																	{
																		"id": 1433,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1419,
																		"src": "7896:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_152_by_1",
																			"typeString": "int_const 152"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1431,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1063,
																	"src": "7860:30:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$",
																		"typeString": "function (uint8,uint256) pure"
																	}
																},
																"id": 1434,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7860:42:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1435,
															"nodeType": "RevertStatement",
															"src": "7853:49:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1440,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1419,
															"src": "7937:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1439,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "7929:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint152_$",
															"typeString": "type(uint152)"
														},
														"typeName": {
															"id": 1438,
															"name": "uint152",
															"nodeType": "ElementaryTypeName",
															"src": "7929:7:1",
															"typeDescriptions": {}
														}
													},
													"id": 1441,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7929:14:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint152",
														"typeString": "uint152"
													}
												},
												"functionReturnParameters": 1423,
												"id": 1442,
												"nodeType": "Return",
												"src": "7922:21:1"
											}
										]
									},
									"documentation": {
										"id": 1417,
										"nodeType": "StructuredDocumentation",
										"src": "7447:280:1",
										"text": " @dev Returns the downcasted uint152 from uint256, reverting on\n overflow (when the input is greater than largest uint152).\n Counterpart to Solidity's `uint152` operator.\n Requirements:\n - input must fit into 152 bits"
									},
									"id": 1444,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint152",
									"nameLocation": "7741:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1420,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1419,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7759:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 1444,
												"src": "7751:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1418,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7751:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7750:15:1"
									},
									"returnParameters": {
										"id": 1423,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1422,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1444,
												"src": "7789:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint152",
													"typeString": "uint152"
												},
												"typeName": {
													"id": 1421,
													"name": "uint152",
													"nodeType": "ElementaryTypeName",
													"src": "7789:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint152",
														"typeString": "uint152"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7788:9:1"
									},
									"scope": 2808,
									"src": "7732:218:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1471,
										"nodeType": "Block",
										"src": "8307:152:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1458,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1452,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1447,
														"src": "8321:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1455,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8334:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint144_$",
																		"typeString": "type(uint144)"
																	},
																	"typeName": {
																		"id": 1454,
																		"name": "uint144",
																		"nodeType": "ElementaryTypeName",
																		"src": "8334:7:1",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint144_$",
																		"typeString": "type(uint144)"
																	}
																],
																"id": 1453,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "8329:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1456,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8329:13:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint144",
																"typeString": "type(uint144)"
															}
														},
														"id": 1457,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "8343:3:1",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "8329:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint144",
															"typeString": "uint144"
														}
													},
													"src": "8321:25:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1465,
												"nodeType": "IfStatement",
												"src": "8317:105:1",
												"trueBody": {
													"id": 1464,
													"nodeType": "Block",
													"src": "8348:74:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313434",
																		"id": 1460,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8400:3:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_144_by_1",
																			"typeString": "int_const 144"
																		},
																		"value": "144"
																	},
																	{
																		"id": 1461,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1447,
																		"src": "8405:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_144_by_1",
																			"typeString": "int_const 144"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1459,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1063,
																	"src": "8369:30:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$",
																		"typeString": "function (uint8,uint256) pure"
																	}
																},
																"id": 1462,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8369:42:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1463,
															"nodeType": "RevertStatement",
															"src": "8362:49:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1468,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1447,
															"src": "8446:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1467,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "8438:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint144_$",
															"typeString": "type(uint144)"
														},
														"typeName": {
															"id": 1466,
															"name": "uint144",
															"nodeType": "ElementaryTypeName",
															"src": "8438:7:1",
															"typeDescriptions": {}
														}
													},
													"id": 1469,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8438:14:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint144",
														"typeString": "uint144"
													}
												},
												"functionReturnParameters": 1451,
												"id": 1470,
												"nodeType": "Return",
												"src": "8431:21:1"
											}
										]
									},
									"documentation": {
										"id": 1445,
										"nodeType": "StructuredDocumentation",
										"src": "7956:280:1",
										"text": " @dev Returns the downcasted uint144 from uint256, reverting on\n overflow (when the input is greater than largest uint144).\n Counterpart to Solidity's `uint144` operator.\n Requirements:\n - input must fit into 144 bits"
									},
									"id": 1472,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint144",
									"nameLocation": "8250:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1448,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1447,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8268:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 1472,
												"src": "8260:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1446,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8260:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8259:15:1"
									},
									"returnParameters": {
										"id": 1451,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1450,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1472,
												"src": "8298:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint144",
													"typeString": "uint144"
												},
												"typeName": {
													"id": 1449,
													"name": "uint144",
													"nodeType": "ElementaryTypeName",
													"src": "8298:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint144",
														"typeString": "uint144"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8297:9:1"
									},
									"scope": 2808,
									"src": "8241:218:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1499,
										"nodeType": "Block",
										"src": "8816:152:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1486,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1480,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1475,
														"src": "8830:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1483,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8843:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint136_$",
																		"typeString": "type(uint136)"
																	},
																	"typeName": {
																		"id": 1482,
																		"name": "uint136",
																		"nodeType": "ElementaryTypeName",
																		"src": "8843:7:1",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint136_$",
																		"typeString": "type(uint136)"
																	}
																],
																"id": 1481,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "8838:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1484,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8838:13:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint136",
																"typeString": "type(uint136)"
															}
														},
														"id": 1485,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "8852:3:1",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "8838:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint136",
															"typeString": "uint136"
														}
													},
													"src": "8830:25:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1493,
												"nodeType": "IfStatement",
												"src": "8826:105:1",
												"trueBody": {
													"id": 1492,
													"nodeType": "Block",
													"src": "8857:74:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313336",
																		"id": 1488,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8909:3:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_136_by_1",
																			"typeString": "int_const 136"
																		},
																		"value": "136"
																	},
																	{
																		"id": 1489,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1475,
																		"src": "8914:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_136_by_1",
																			"typeString": "int_const 136"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1487,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1063,
																	"src": "8878:30:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$",
																		"typeString": "function (uint8,uint256) pure"
																	}
																},
																"id": 1490,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8878:42:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1491,
															"nodeType": "RevertStatement",
															"src": "8871:49:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1496,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1475,
															"src": "8955:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1495,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "8947:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint136_$",
															"typeString": "type(uint136)"
														},
														"typeName": {
															"id": 1494,
															"name": "uint136",
															"nodeType": "ElementaryTypeName",
															"src": "8947:7:1",
															"typeDescriptions": {}
														}
													},
													"id": 1497,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8947:14:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint136",
														"typeString": "uint136"
													}
												},
												"functionReturnParameters": 1479,
												"id": 1498,
												"nodeType": "Return",
												"src": "8940:21:1"
											}
										]
									},
									"documentation": {
										"id": 1473,
										"nodeType": "StructuredDocumentation",
										"src": "8465:280:1",
										"text": " @dev Returns the downcasted uint136 from uint256, reverting on\n overflow (when the input is greater than largest uint136).\n Counterpart to Solidity's `uint136` operator.\n Requirements:\n - input must fit into 136 bits"
									},
									"id": 1500,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint136",
									"nameLocation": "8759:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1476,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1475,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8777:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 1500,
												"src": "8769:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1474,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8769:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8768:15:1"
									},
									"returnParameters": {
										"id": 1479,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1478,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1500,
												"src": "8807:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint136",
													"typeString": "uint136"
												},
												"typeName": {
													"id": 1477,
													"name": "uint136",
													"nodeType": "ElementaryTypeName",
													"src": "8807:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint136",
														"typeString": "uint136"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8806:9:1"
									},
									"scope": 2808,
									"src": "8750:218:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1527,
										"nodeType": "Block",
										"src": "9325:152:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1514,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1508,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1503,
														"src": "9339:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1511,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9352:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint128_$",
																		"typeString": "type(uint128)"
																	},
																	"typeName": {
																		"id": 1510,
																		"name": "uint128",
																		"nodeType": "ElementaryTypeName",
																		"src": "9352:7:1",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint128_$",
																		"typeString": "type(uint128)"
																	}
																],
																"id": 1509,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "9347:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1512,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9347:13:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint128",
																"typeString": "type(uint128)"
															}
														},
														"id": 1513,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "9361:3:1",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "9347:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint128",
															"typeString": "uint128"
														}
													},
													"src": "9339:25:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1521,
												"nodeType": "IfStatement",
												"src": "9335:105:1",
												"trueBody": {
													"id": 1520,
													"nodeType": "Block",
													"src": "9366:74:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313238",
																		"id": 1516,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9418:3:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_128_by_1",
																			"typeString": "int_const 128"
																		},
																		"value": "128"
																	},
																	{
																		"id": 1517,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1503,
																		"src": "9423:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_128_by_1",
																			"typeString": "int_const 128"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1515,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1063,
																	"src": "9387:30:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$",
																		"typeString": "function (uint8,uint256) pure"
																	}
																},
																"id": 1518,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9387:42:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1519,
															"nodeType": "RevertStatement",
															"src": "9380:49:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1524,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1503,
															"src": "9464:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1523,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "9456:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint128_$",
															"typeString": "type(uint128)"
														},
														"typeName": {
															"id": 1522,
															"name": "uint128",
															"nodeType": "ElementaryTypeName",
															"src": "9456:7:1",
															"typeDescriptions": {}
														}
													},
													"id": 1525,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9456:14:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"functionReturnParameters": 1507,
												"id": 1526,
												"nodeType": "Return",
												"src": "9449:21:1"
											}
										]
									},
									"documentation": {
										"id": 1501,
										"nodeType": "StructuredDocumentation",
										"src": "8974:280:1",
										"text": " @dev Returns the downcasted uint128 from uint256, reverting on\n overflow (when the input is greater than largest uint128).\n Counterpart to Solidity's `uint128` operator.\n Requirements:\n - input must fit into 128 bits"
									},
									"id": 1528,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint128",
									"nameLocation": "9268:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1504,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1503,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9286:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 1528,
												"src": "9278:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1502,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9278:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9277:15:1"
									},
									"returnParameters": {
										"id": 1507,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1506,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1528,
												"src": "9316:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1505,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "9316:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9315:9:1"
									},
									"scope": 2808,
									"src": "9259:218:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1555,
										"nodeType": "Block",
										"src": "9834:152:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1542,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1536,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1531,
														"src": "9848:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1539,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9861:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint120_$",
																		"typeString": "type(uint120)"
																	},
																	"typeName": {
																		"id": 1538,
																		"name": "uint120",
																		"nodeType": "ElementaryTypeName",
																		"src": "9861:7:1",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint120_$",
																		"typeString": "type(uint120)"
																	}
																],
																"id": 1537,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "9856:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1540,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9856:13:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint120",
																"typeString": "type(uint120)"
															}
														},
														"id": 1541,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "9870:3:1",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "9856:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint120",
															"typeString": "uint120"
														}
													},
													"src": "9848:25:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1549,
												"nodeType": "IfStatement",
												"src": "9844:105:1",
												"trueBody": {
													"id": 1548,
													"nodeType": "Block",
													"src": "9875:74:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313230",
																		"id": 1544,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9927:3:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_120_by_1",
																			"typeString": "int_const 120"
																		},
																		"value": "120"
																	},
																	{
																		"id": 1545,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1531,
																		"src": "9932:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_120_by_1",
																			"typeString": "int_const 120"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1543,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1063,
																	"src": "9896:30:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$",
																		"typeString": "function (uint8,uint256) pure"
																	}
																},
																"id": 1546,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9896:42:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1547,
															"nodeType": "RevertStatement",
															"src": "9889:49:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1552,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1531,
															"src": "9973:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1551,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "9965:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint120_$",
															"typeString": "type(uint120)"
														},
														"typeName": {
															"id": 1550,
															"name": "uint120",
															"nodeType": "ElementaryTypeName",
															"src": "9965:7:1",
															"typeDescriptions": {}
														}
													},
													"id": 1553,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9965:14:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint120",
														"typeString": "uint120"
													}
												},
												"functionReturnParameters": 1535,
												"id": 1554,
												"nodeType": "Return",
												"src": "9958:21:1"
											}
										]
									},
									"documentation": {
										"id": 1529,
										"nodeType": "StructuredDocumentation",
										"src": "9483:280:1",
										"text": " @dev Returns the downcasted uint120 from uint256, reverting on\n overflow (when the input is greater than largest uint120).\n Counterpart to Solidity's `uint120` operator.\n Requirements:\n - input must fit into 120 bits"
									},
									"id": 1556,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint120",
									"nameLocation": "9777:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1532,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1531,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9795:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 1556,
												"src": "9787:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1530,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9787:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9786:15:1"
									},
									"returnParameters": {
										"id": 1535,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1534,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1556,
												"src": "9825:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint120",
													"typeString": "uint120"
												},
												"typeName": {
													"id": 1533,
													"name": "uint120",
													"nodeType": "ElementaryTypeName",
													"src": "9825:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint120",
														"typeString": "uint120"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9824:9:1"
									},
									"scope": 2808,
									"src": "9768:218:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1583,
										"nodeType": "Block",
										"src": "10343:152:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1570,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1564,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1559,
														"src": "10357:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1567,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10370:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint112_$",
																		"typeString": "type(uint112)"
																	},
																	"typeName": {
																		"id": 1566,
																		"name": "uint112",
																		"nodeType": "ElementaryTypeName",
																		"src": "10370:7:1",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint112_$",
																		"typeString": "type(uint112)"
																	}
																],
																"id": 1565,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10365:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1568,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10365:13:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint112",
																"typeString": "type(uint112)"
															}
														},
														"id": 1569,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10379:3:1",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10365:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint112",
															"typeString": "uint112"
														}
													},
													"src": "10357:25:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1577,
												"nodeType": "IfStatement",
												"src": "10353:105:1",
												"trueBody": {
													"id": 1576,
													"nodeType": "Block",
													"src": "10384:74:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313132",
																		"id": 1572,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10436:3:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_112_by_1",
																			"typeString": "int_const 112"
																		},
																		"value": "112"
																	},
																	{
																		"id": 1573,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1559,
																		"src": "10441:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_112_by_1",
																			"typeString": "int_const 112"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1571,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1063,
																	"src": "10405:30:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$",
																		"typeString": "function (uint8,uint256) pure"
																	}
																},
																"id": 1574,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10405:42:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1575,
															"nodeType": "RevertStatement",
															"src": "10398:49:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1580,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1559,
															"src": "10482:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1579,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "10474:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint112_$",
															"typeString": "type(uint112)"
														},
														"typeName": {
															"id": 1578,
															"name": "uint112",
															"nodeType": "ElementaryTypeName",
															"src": "10474:7:1",
															"typeDescriptions": {}
														}
													},
													"id": 1581,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10474:14:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"functionReturnParameters": 1563,
												"id": 1582,
												"nodeType": "Return",
												"src": "10467:21:1"
											}
										]
									},
									"documentation": {
										"id": 1557,
										"nodeType": "StructuredDocumentation",
										"src": "9992:280:1",
										"text": " @dev Returns the downcasted uint112 from uint256, reverting on\n overflow (when the input is greater than largest uint112).\n Counterpart to Solidity's `uint112` operator.\n Requirements:\n - input must fit into 112 bits"
									},
									"id": 1584,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint112",
									"nameLocation": "10286:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1560,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1559,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10304:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 1584,
												"src": "10296:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1558,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10296:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10295:15:1"
									},
									"returnParameters": {
										"id": 1563,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1562,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1584,
												"src": "10334:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint112",
													"typeString": "uint112"
												},
												"typeName": {
													"id": 1561,
													"name": "uint112",
													"nodeType": "ElementaryTypeName",
													"src": "10334:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10333:9:1"
									},
									"scope": 2808,
									"src": "10277:218:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1611,
										"nodeType": "Block",
										"src": "10852:152:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1598,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1592,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1587,
														"src": "10866:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1595,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10879:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint104_$",
																		"typeString": "type(uint104)"
																	},
																	"typeName": {
																		"id": 1594,
																		"name": "uint104",
																		"nodeType": "ElementaryTypeName",
																		"src": "10879:7:1",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint104_$",
																		"typeString": "type(uint104)"
																	}
																],
																"id": 1593,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10874:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1596,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10874:13:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint104",
																"typeString": "type(uint104)"
															}
														},
														"id": 1597,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10888:3:1",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10874:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint104",
															"typeString": "uint104"
														}
													},
													"src": "10866:25:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1605,
												"nodeType": "IfStatement",
												"src": "10862:105:1",
												"trueBody": {
													"id": 1604,
													"nodeType": "Block",
													"src": "10893:74:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313034",
																		"id": 1600,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10945:3:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_104_by_1",
																			"typeString": "int_const 104"
																		},
																		"value": "104"
																	},
																	{
																		"id": 1601,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1587,
																		"src": "10950:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_104_by_1",
																			"typeString": "int_const 104"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1599,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1063,
																	"src": "10914:30:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$",
																		"typeString": "function (uint8,uint256) pure"
																	}
																},
																"id": 1602,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10914:42:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1603,
															"nodeType": "RevertStatement",
															"src": "10907:49:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1608,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1587,
															"src": "10991:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1607,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "10983:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint104_$",
															"typeString": "type(uint104)"
														},
														"typeName": {
															"id": 1606,
															"name": "uint104",
															"nodeType": "ElementaryTypeName",
															"src": "10983:7:1",
															"typeDescriptions": {}
														}
													},
													"id": 1609,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10983:14:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint104",
														"typeString": "uint104"
													}
												},
												"functionReturnParameters": 1591,
												"id": 1610,
												"nodeType": "Return",
												"src": "10976:21:1"
											}
										]
									},
									"documentation": {
										"id": 1585,
										"nodeType": "StructuredDocumentation",
										"src": "10501:280:1",
										"text": " @dev Returns the downcasted uint104 from uint256, reverting on\n overflow (when the input is greater than largest uint104).\n Counterpart to Solidity's `uint104` operator.\n Requirements:\n - input must fit into 104 bits"
									},
									"id": 1612,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint104",
									"nameLocation": "10795:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1588,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1587,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10813:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 1612,
												"src": "10805:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1586,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10805:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10804:15:1"
									},
									"returnParameters": {
										"id": 1591,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1590,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1612,
												"src": "10843:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint104",
													"typeString": "uint104"
												},
												"typeName": {
													"id": 1589,
													"name": "uint104",
													"nodeType": "ElementaryTypeName",
													"src": "10843:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint104",
														"typeString": "uint104"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10842:9:1"
									},
									"scope": 2808,
									"src": "10786:218:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1639,
										"nodeType": "Block",
										"src": "11355:149:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1626,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1620,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1615,
														"src": "11369:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1623,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "11382:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint96_$",
																		"typeString": "type(uint96)"
																	},
																	"typeName": {
																		"id": 1622,
																		"name": "uint96",
																		"nodeType": "ElementaryTypeName",
																		"src": "11382:6:1",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint96_$",
																		"typeString": "type(uint96)"
																	}
																],
																"id": 1621,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "11377:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1624,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11377:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint96",
																"typeString": "type(uint96)"
															}
														},
														"id": 1625,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "11390:3:1",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "11377:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														}
													},
													"src": "11369:24:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1633,
												"nodeType": "IfStatement",
												"src": "11365:103:1",
												"trueBody": {
													"id": 1632,
													"nodeType": "Block",
													"src": "11395:73:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3936",
																		"id": 1628,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11447:2:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_96_by_1",
																			"typeString": "int_const 96"
																		},
																		"value": "96"
																	},
																	{
																		"id": 1629,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1615,
																		"src": "11451:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_96_by_1",
																			"typeString": "int_const 96"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1627,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1063,
																	"src": "11416:30:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$",
																		"typeString": "function (uint8,uint256) pure"
																	}
																},
																"id": 1630,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11416:41:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1631,
															"nodeType": "RevertStatement",
															"src": "11409:48:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1636,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1615,
															"src": "11491:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1635,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "11484:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint96_$",
															"typeString": "type(uint96)"
														},
														"typeName": {
															"id": 1634,
															"name": "uint96",
															"nodeType": "ElementaryTypeName",
															"src": "11484:6:1",
															"typeDescriptions": {}
														}
													},
													"id": 1637,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11484:13:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"functionReturnParameters": 1619,
												"id": 1638,
												"nodeType": "Return",
												"src": "11477:20:1"
											}
										]
									},
									"documentation": {
										"id": 1613,
										"nodeType": "StructuredDocumentation",
										"src": "11010:276:1",
										"text": " @dev Returns the downcasted uint96 from uint256, reverting on\n overflow (when the input is greater than largest uint96).\n Counterpart to Solidity's `uint96` operator.\n Requirements:\n - input must fit into 96 bits"
									},
									"id": 1640,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint96",
									"nameLocation": "11300:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1616,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1615,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11317:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 1640,
												"src": "11309:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1614,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11309:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11308:15:1"
									},
									"returnParameters": {
										"id": 1619,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1618,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1640,
												"src": "11347:6:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint96",
													"typeString": "uint96"
												},
												"typeName": {
													"id": 1617,
													"name": "uint96",
													"nodeType": "ElementaryTypeName",
													"src": "11347:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11346:8:1"
									},
									"scope": 2808,
									"src": "11291:213:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1667,
										"nodeType": "Block",
										"src": "11855:149:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1654,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1648,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1643,
														"src": "11869:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1651,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "11882:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint88_$",
																		"typeString": "type(uint88)"
																	},
																	"typeName": {
																		"id": 1650,
																		"name": "uint88",
																		"nodeType": "ElementaryTypeName",
																		"src": "11882:6:1",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint88_$",
																		"typeString": "type(uint88)"
																	}
																],
																"id": 1649,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "11877:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1652,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11877:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint88",
																"typeString": "type(uint88)"
															}
														},
														"id": 1653,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "11890:3:1",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "11877:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint88",
															"typeString": "uint88"
														}
													},
													"src": "11869:24:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1661,
												"nodeType": "IfStatement",
												"src": "11865:103:1",
												"trueBody": {
													"id": 1660,
													"nodeType": "Block",
													"src": "11895:73:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3838",
																		"id": 1656,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11947:2:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_88_by_1",
																			"typeString": "int_const 88"
																		},
																		"value": "88"
																	},
																	{
																		"id": 1657,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1643,
																		"src": "11951:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_88_by_1",
																			"typeString": "int_const 88"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1655,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1063,
																	"src": "11916:30:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$",
																		"typeString": "function (uint8,uint256) pure"
																	}
																},
																"id": 1658,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11916:41:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1659,
															"nodeType": "RevertStatement",
															"src": "11909:48:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1664,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1643,
															"src": "11991:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1663,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "11984:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint88_$",
															"typeString": "type(uint88)"
														},
														"typeName": {
															"id": 1662,
															"name": "uint88",
															"nodeType": "ElementaryTypeName",
															"src": "11984:6:1",
															"typeDescriptions": {}
														}
													},
													"id": 1665,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11984:13:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint88",
														"typeString": "uint88"
													}
												},
												"functionReturnParameters": 1647,
												"id": 1666,
												"nodeType": "Return",
												"src": "11977:20:1"
											}
										]
									},
									"documentation": {
										"id": 1641,
										"nodeType": "StructuredDocumentation",
										"src": "11510:276:1",
										"text": " @dev Returns the downcasted uint88 from uint256, reverting on\n overflow (when the input is greater than largest uint88).\n Counterpart to Solidity's `uint88` operator.\n Requirements:\n - input must fit into 88 bits"
									},
									"id": 1668,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint88",
									"nameLocation": "11800:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1644,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1643,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11817:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 1668,
												"src": "11809:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1642,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11809:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11808:15:1"
									},
									"returnParameters": {
										"id": 1647,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1646,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1668,
												"src": "11847:6:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint88",
													"typeString": "uint88"
												},
												"typeName": {
													"id": 1645,
													"name": "uint88",
													"nodeType": "ElementaryTypeName",
													"src": "11847:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint88",
														"typeString": "uint88"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11846:8:1"
									},
									"scope": 2808,
									"src": "11791:213:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1695,
										"nodeType": "Block",
										"src": "12355:149:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1682,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1676,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1671,
														"src": "12369:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1679,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "12382:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint80_$",
																		"typeString": "type(uint80)"
																	},
																	"typeName": {
																		"id": 1678,
																		"name": "uint80",
																		"nodeType": "ElementaryTypeName",
																		"src": "12382:6:1",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint80_$",
																		"typeString": "type(uint80)"
																	}
																],
																"id": 1677,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "12377:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1680,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12377:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint80",
																"typeString": "type(uint80)"
															}
														},
														"id": 1681,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "12390:3:1",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "12377:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint80",
															"typeString": "uint80"
														}
													},
													"src": "12369:24:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1689,
												"nodeType": "IfStatement",
												"src": "12365:103:1",
												"trueBody": {
													"id": 1688,
													"nodeType": "Block",
													"src": "12395:73:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3830",
																		"id": 1684,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "12447:2:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_80_by_1",
																			"typeString": "int_const 80"
																		},
																		"value": "80"
																	},
																	{
																		"id": 1685,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1671,
																		"src": "12451:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_80_by_1",
																			"typeString": "int_const 80"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1683,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1063,
																	"src": "12416:30:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$",
																		"typeString": "function (uint8,uint256) pure"
																	}
																},
																"id": 1686,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12416:41:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1687,
															"nodeType": "RevertStatement",
															"src": "12409:48:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1692,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1671,
															"src": "12491:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1691,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "12484:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint80_$",
															"typeString": "type(uint80)"
														},
														"typeName": {
															"id": 1690,
															"name": "uint80",
															"nodeType": "ElementaryTypeName",
															"src": "12484:6:1",
															"typeDescriptions": {}
														}
													},
													"id": 1693,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12484:13:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"functionReturnParameters": 1675,
												"id": 1694,
												"nodeType": "Return",
												"src": "12477:20:1"
											}
										]
									},
									"documentation": {
										"id": 1669,
										"nodeType": "StructuredDocumentation",
										"src": "12010:276:1",
										"text": " @dev Returns the downcasted uint80 from uint256, reverting on\n overflow (when the input is greater than largest uint80).\n Counterpart to Solidity's `uint80` operator.\n Requirements:\n - input must fit into 80 bits"
									},
									"id": 1696,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint80",
									"nameLocation": "12300:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1672,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1671,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "12317:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 1696,
												"src": "12309:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1670,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12309:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12308:15:1"
									},
									"returnParameters": {
										"id": 1675,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1674,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1696,
												"src": "12347:6:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 1673,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "12347:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12346:8:1"
									},
									"scope": 2808,
									"src": "12291:213:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1723,
										"nodeType": "Block",
										"src": "12855:149:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1710,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1704,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1699,
														"src": "12869:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1707,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "12882:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint72_$",
																		"typeString": "type(uint72)"
																	},
																	"typeName": {
																		"id": 1706,
																		"name": "uint72",
																		"nodeType": "ElementaryTypeName",
																		"src": "12882:6:1",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint72_$",
																		"typeString": "type(uint72)"
																	}
																],
																"id": 1705,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "12877:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1708,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12877:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint72",
																"typeString": "type(uint72)"
															}
														},
														"id": 1709,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "12890:3:1",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "12877:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint72",
															"typeString": "uint72"
														}
													},
													"src": "12869:24:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1717,
												"nodeType": "IfStatement",
												"src": "12865:103:1",
												"trueBody": {
													"id": 1716,
													"nodeType": "Block",
													"src": "12895:73:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3732",
																		"id": 1712,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "12947:2:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_72_by_1",
																			"typeString": "int_const 72"
																		},
																		"value": "72"
																	},
																	{
																		"id": 1713,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1699,
																		"src": "12951:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_72_by_1",
																			"typeString": "int_const 72"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1711,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1063,
																	"src": "12916:30:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$",
																		"typeString": "function (uint8,uint256) pure"
																	}
																},
																"id": 1714,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12916:41:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1715,
															"nodeType": "RevertStatement",
															"src": "12909:48:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1720,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1699,
															"src": "12991:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1719,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "12984:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint72_$",
															"typeString": "type(uint72)"
														},
														"typeName": {
															"id": 1718,
															"name": "uint72",
															"nodeType": "ElementaryTypeName",
															"src": "12984:6:1",
															"typeDescriptions": {}
														}
													},
													"id": 1721,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12984:13:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint72",
														"typeString": "uint72"
													}
												},
												"functionReturnParameters": 1703,
												"id": 1722,
												"nodeType": "Return",
												"src": "12977:20:1"
											}
										]
									},
									"documentation": {
										"id": 1697,
										"nodeType": "StructuredDocumentation",
										"src": "12510:276:1",
										"text": " @dev Returns the downcasted uint72 from uint256, reverting on\n overflow (when the input is greater than largest uint72).\n Counterpart to Solidity's `uint72` operator.\n Requirements:\n - input must fit into 72 bits"
									},
									"id": 1724,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint72",
									"nameLocation": "12800:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1700,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1699,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "12817:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 1724,
												"src": "12809:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1698,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12809:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12808:15:1"
									},
									"returnParameters": {
										"id": 1703,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1702,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1724,
												"src": "12847:6:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint72",
													"typeString": "uint72"
												},
												"typeName": {
													"id": 1701,
													"name": "uint72",
													"nodeType": "ElementaryTypeName",
													"src": "12847:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint72",
														"typeString": "uint72"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12846:8:1"
									},
									"scope": 2808,
									"src": "12791:213:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1751,
										"nodeType": "Block",
										"src": "13355:149:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1738,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1732,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1727,
														"src": "13369:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1735,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "13382:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint64_$",
																		"typeString": "type(uint64)"
																	},
																	"typeName": {
																		"id": 1734,
																		"name": "uint64",
																		"nodeType": "ElementaryTypeName",
																		"src": "13382:6:1",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint64_$",
																		"typeString": "type(uint64)"
																	}
																],
																"id": 1733,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "13377:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1736,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13377:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint64",
																"typeString": "type(uint64)"
															}
														},
														"id": 1737,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "13390:3:1",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "13377:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "13369:24:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1745,
												"nodeType": "IfStatement",
												"src": "13365:103:1",
												"trueBody": {
													"id": 1744,
													"nodeType": "Block",
													"src": "13395:73:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3634",
																		"id": 1740,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "13447:2:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_64_by_1",
																			"typeString": "int_const 64"
																		},
																		"value": "64"
																	},
																	{
																		"id": 1741,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1727,
																		"src": "13451:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_64_by_1",
																			"typeString": "int_const 64"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1739,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1063,
																	"src": "13416:30:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$",
																		"typeString": "function (uint8,uint256) pure"
																	}
																},
																"id": 1742,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "13416:41:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1743,
															"nodeType": "RevertStatement",
															"src": "13409:48:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1748,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1727,
															"src": "13491:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1747,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "13484:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint64_$",
															"typeString": "type(uint64)"
														},
														"typeName": {
															"id": 1746,
															"name": "uint64",
															"nodeType": "ElementaryTypeName",
															"src": "13484:6:1",
															"typeDescriptions": {}
														}
													},
													"id": 1749,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13484:13:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"functionReturnParameters": 1731,
												"id": 1750,
												"nodeType": "Return",
												"src": "13477:20:1"
											}
										]
									},
									"documentation": {
										"id": 1725,
										"nodeType": "StructuredDocumentation",
										"src": "13010:276:1",
										"text": " @dev Returns the downcasted uint64 from uint256, reverting on\n overflow (when the input is greater than largest uint64).\n Counterpart to Solidity's `uint64` operator.\n Requirements:\n - input must fit into 64 bits"
									},
									"id": 1752,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint64",
									"nameLocation": "13300:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1728,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1727,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "13317:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 1752,
												"src": "13309:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1726,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13309:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13308:15:1"
									},
									"returnParameters": {
										"id": 1731,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1730,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1752,
												"src": "13347:6:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 1729,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "13347:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13346:8:1"
									},
									"scope": 2808,
									"src": "13291:213:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1779,
										"nodeType": "Block",
										"src": "13855:149:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1766,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1760,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1755,
														"src": "13869:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1763,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "13882:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint56_$",
																		"typeString": "type(uint56)"
																	},
																	"typeName": {
																		"id": 1762,
																		"name": "uint56",
																		"nodeType": "ElementaryTypeName",
																		"src": "13882:6:1",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint56_$",
																		"typeString": "type(uint56)"
																	}
																],
																"id": 1761,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "13877:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1764,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13877:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint56",
																"typeString": "type(uint56)"
															}
														},
														"id": 1765,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "13890:3:1",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "13877:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint56",
															"typeString": "uint56"
														}
													},
													"src": "13869:24:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1773,
												"nodeType": "IfStatement",
												"src": "13865:103:1",
												"trueBody": {
													"id": 1772,
													"nodeType": "Block",
													"src": "13895:73:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3536",
																		"id": 1768,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "13947:2:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_56_by_1",
																			"typeString": "int_const 56"
																		},
																		"value": "56"
																	},
																	{
																		"id": 1769,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1755,
																		"src": "13951:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_56_by_1",
																			"typeString": "int_const 56"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1767,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1063,
																	"src": "13916:30:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$",
																		"typeString": "function (uint8,uint256) pure"
																	}
																},
																"id": 1770,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "13916:41:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1771,
															"nodeType": "RevertStatement",
															"src": "13909:48:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1776,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1755,
															"src": "13991:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1775,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "13984:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint56_$",
															"typeString": "type(uint56)"
														},
														"typeName": {
															"id": 1774,
															"name": "uint56",
															"nodeType": "ElementaryTypeName",
															"src": "13984:6:1",
															"typeDescriptions": {}
														}
													},
													"id": 1777,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13984:13:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint56",
														"typeString": "uint56"
													}
												},
												"functionReturnParameters": 1759,
												"id": 1778,
												"nodeType": "Return",
												"src": "13977:20:1"
											}
										]
									},
									"documentation": {
										"id": 1753,
										"nodeType": "StructuredDocumentation",
										"src": "13510:276:1",
										"text": " @dev Returns the downcasted uint56 from uint256, reverting on\n overflow (when the input is greater than largest uint56).\n Counterpart to Solidity's `uint56` operator.\n Requirements:\n - input must fit into 56 bits"
									},
									"id": 1780,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint56",
									"nameLocation": "13800:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1756,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1755,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "13817:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 1780,
												"src": "13809:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1754,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13809:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13808:15:1"
									},
									"returnParameters": {
										"id": 1759,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1758,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1780,
												"src": "13847:6:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint56",
													"typeString": "uint56"
												},
												"typeName": {
													"id": 1757,
													"name": "uint56",
													"nodeType": "ElementaryTypeName",
													"src": "13847:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint56",
														"typeString": "uint56"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13846:8:1"
									},
									"scope": 2808,
									"src": "13791:213:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1807,
										"nodeType": "Block",
										"src": "14355:149:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1794,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1788,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1783,
														"src": "14369:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1791,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "14382:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint48_$",
																		"typeString": "type(uint48)"
																	},
																	"typeName": {
																		"id": 1790,
																		"name": "uint48",
																		"nodeType": "ElementaryTypeName",
																		"src": "14382:6:1",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint48_$",
																		"typeString": "type(uint48)"
																	}
																],
																"id": 1789,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "14377:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1792,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14377:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint48",
																"typeString": "type(uint48)"
															}
														},
														"id": 1793,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "14390:3:1",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "14377:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint48",
															"typeString": "uint48"
														}
													},
													"src": "14369:24:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1801,
												"nodeType": "IfStatement",
												"src": "14365:103:1",
												"trueBody": {
													"id": 1800,
													"nodeType": "Block",
													"src": "14395:73:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3438",
																		"id": 1796,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "14447:2:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_48_by_1",
																			"typeString": "int_const 48"
																		},
																		"value": "48"
																	},
																	{
																		"id": 1797,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1783,
																		"src": "14451:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_48_by_1",
																			"typeString": "int_const 48"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1795,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1063,
																	"src": "14416:30:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$",
																		"typeString": "function (uint8,uint256) pure"
																	}
																},
																"id": 1798,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14416:41:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1799,
															"nodeType": "RevertStatement",
															"src": "14409:48:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1804,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1783,
															"src": "14491:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1803,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "14484:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint48_$",
															"typeString": "type(uint48)"
														},
														"typeName": {
															"id": 1802,
															"name": "uint48",
															"nodeType": "ElementaryTypeName",
															"src": "14484:6:1",
															"typeDescriptions": {}
														}
													},
													"id": 1805,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14484:13:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint48",
														"typeString": "uint48"
													}
												},
												"functionReturnParameters": 1787,
												"id": 1806,
												"nodeType": "Return",
												"src": "14477:20:1"
											}
										]
									},
									"documentation": {
										"id": 1781,
										"nodeType": "StructuredDocumentation",
										"src": "14010:276:1",
										"text": " @dev Returns the downcasted uint48 from uint256, reverting on\n overflow (when the input is greater than largest uint48).\n Counterpart to Solidity's `uint48` operator.\n Requirements:\n - input must fit into 48 bits"
									},
									"id": 1808,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint48",
									"nameLocation": "14300:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1784,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1783,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "14317:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 1808,
												"src": "14309:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1782,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14309:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14308:15:1"
									},
									"returnParameters": {
										"id": 1787,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1786,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1808,
												"src": "14347:6:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint48",
													"typeString": "uint48"
												},
												"typeName": {
													"id": 1785,
													"name": "uint48",
													"nodeType": "ElementaryTypeName",
													"src": "14347:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint48",
														"typeString": "uint48"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14346:8:1"
									},
									"scope": 2808,
									"src": "14291:213:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1835,
										"nodeType": "Block",
										"src": "14855:149:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1822,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1816,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1811,
														"src": "14869:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1819,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "14882:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint40_$",
																		"typeString": "type(uint40)"
																	},
																	"typeName": {
																		"id": 1818,
																		"name": "uint40",
																		"nodeType": "ElementaryTypeName",
																		"src": "14882:6:1",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint40_$",
																		"typeString": "type(uint40)"
																	}
																],
																"id": 1817,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "14877:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1820,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14877:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint40",
																"typeString": "type(uint40)"
															}
														},
														"id": 1821,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "14890:3:1",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "14877:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint40",
															"typeString": "uint40"
														}
													},
													"src": "14869:24:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1829,
												"nodeType": "IfStatement",
												"src": "14865:103:1",
												"trueBody": {
													"id": 1828,
													"nodeType": "Block",
													"src": "14895:73:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3430",
																		"id": 1824,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "14947:2:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_40_by_1",
																			"typeString": "int_const 40"
																		},
																		"value": "40"
																	},
																	{
																		"id": 1825,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1811,
																		"src": "14951:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_40_by_1",
																			"typeString": "int_const 40"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1823,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1063,
																	"src": "14916:30:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$",
																		"typeString": "function (uint8,uint256) pure"
																	}
																},
																"id": 1826,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14916:41:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1827,
															"nodeType": "RevertStatement",
															"src": "14909:48:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1832,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1811,
															"src": "14991:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1831,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "14984:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint40_$",
															"typeString": "type(uint40)"
														},
														"typeName": {
															"id": 1830,
															"name": "uint40",
															"nodeType": "ElementaryTypeName",
															"src": "14984:6:1",
															"typeDescriptions": {}
														}
													},
													"id": 1833,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14984:13:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint40",
														"typeString": "uint40"
													}
												},
												"functionReturnParameters": 1815,
												"id": 1834,
												"nodeType": "Return",
												"src": "14977:20:1"
											}
										]
									},
									"documentation": {
										"id": 1809,
										"nodeType": "StructuredDocumentation",
										"src": "14510:276:1",
										"text": " @dev Returns the downcasted uint40 from uint256, reverting on\n overflow (when the input is greater than largest uint40).\n Counterpart to Solidity's `uint40` operator.\n Requirements:\n - input must fit into 40 bits"
									},
									"id": 1836,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint40",
									"nameLocation": "14800:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1812,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1811,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "14817:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 1836,
												"src": "14809:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1810,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14809:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14808:15:1"
									},
									"returnParameters": {
										"id": 1815,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1814,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1836,
												"src": "14847:6:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint40",
													"typeString": "uint40"
												},
												"typeName": {
													"id": 1813,
													"name": "uint40",
													"nodeType": "ElementaryTypeName",
													"src": "14847:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint40",
														"typeString": "uint40"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14846:8:1"
									},
									"scope": 2808,
									"src": "14791:213:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1863,
										"nodeType": "Block",
										"src": "15355:149:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1850,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1844,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1839,
														"src": "15369:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1847,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "15382:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint32_$",
																		"typeString": "type(uint32)"
																	},
																	"typeName": {
																		"id": 1846,
																		"name": "uint32",
																		"nodeType": "ElementaryTypeName",
																		"src": "15382:6:1",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint32_$",
																		"typeString": "type(uint32)"
																	}
																],
																"id": 1845,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "15377:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1848,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15377:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint32",
																"typeString": "type(uint32)"
															}
														},
														"id": 1849,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "15390:3:1",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "15377:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"src": "15369:24:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1857,
												"nodeType": "IfStatement",
												"src": "15365:103:1",
												"trueBody": {
													"id": 1856,
													"nodeType": "Block",
													"src": "15395:73:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3332",
																		"id": 1852,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "15447:2:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_32_by_1",
																			"typeString": "int_const 32"
																		},
																		"value": "32"
																	},
																	{
																		"id": 1853,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1839,
																		"src": "15451:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_32_by_1",
																			"typeString": "int_const 32"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1851,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1063,
																	"src": "15416:30:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$",
																		"typeString": "function (uint8,uint256) pure"
																	}
																},
																"id": 1854,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "15416:41:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1855,
															"nodeType": "RevertStatement",
															"src": "15409:48:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1860,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1839,
															"src": "15491:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1859,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "15484:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint32_$",
															"typeString": "type(uint32)"
														},
														"typeName": {
															"id": 1858,
															"name": "uint32",
															"nodeType": "ElementaryTypeName",
															"src": "15484:6:1",
															"typeDescriptions": {}
														}
													},
													"id": 1861,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15484:13:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"functionReturnParameters": 1843,
												"id": 1862,
												"nodeType": "Return",
												"src": "15477:20:1"
											}
										]
									},
									"documentation": {
										"id": 1837,
										"nodeType": "StructuredDocumentation",
										"src": "15010:276:1",
										"text": " @dev Returns the downcasted uint32 from uint256, reverting on\n overflow (when the input is greater than largest uint32).\n Counterpart to Solidity's `uint32` operator.\n Requirements:\n - input must fit into 32 bits"
									},
									"id": 1864,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint32",
									"nameLocation": "15300:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1840,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1839,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "15317:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 1864,
												"src": "15309:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1838,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15309:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15308:15:1"
									},
									"returnParameters": {
										"id": 1843,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1842,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1864,
												"src": "15347:6:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 1841,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "15347:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15346:8:1"
									},
									"scope": 2808,
									"src": "15291:213:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1891,
										"nodeType": "Block",
										"src": "15855:149:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1878,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1872,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1867,
														"src": "15869:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1875,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "15882:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint24_$",
																		"typeString": "type(uint24)"
																	},
																	"typeName": {
																		"id": 1874,
																		"name": "uint24",
																		"nodeType": "ElementaryTypeName",
																		"src": "15882:6:1",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint24_$",
																		"typeString": "type(uint24)"
																	}
																],
																"id": 1873,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "15877:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1876,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15877:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint24",
																"typeString": "type(uint24)"
															}
														},
														"id": 1877,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "15890:3:1",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "15877:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint24",
															"typeString": "uint24"
														}
													},
													"src": "15869:24:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1885,
												"nodeType": "IfStatement",
												"src": "15865:103:1",
												"trueBody": {
													"id": 1884,
													"nodeType": "Block",
													"src": "15895:73:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3234",
																		"id": 1880,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "15947:2:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_24_by_1",
																			"typeString": "int_const 24"
																		},
																		"value": "24"
																	},
																	{
																		"id": 1881,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1867,
																		"src": "15951:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_24_by_1",
																			"typeString": "int_const 24"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1879,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1063,
																	"src": "15916:30:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$",
																		"typeString": "function (uint8,uint256) pure"
																	}
																},
																"id": 1882,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "15916:41:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1883,
															"nodeType": "RevertStatement",
															"src": "15909:48:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1888,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1867,
															"src": "15991:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1887,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "15984:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint24_$",
															"typeString": "type(uint24)"
														},
														"typeName": {
															"id": 1886,
															"name": "uint24",
															"nodeType": "ElementaryTypeName",
															"src": "15984:6:1",
															"typeDescriptions": {}
														}
													},
													"id": 1889,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15984:13:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"functionReturnParameters": 1871,
												"id": 1890,
												"nodeType": "Return",
												"src": "15977:20:1"
											}
										]
									},
									"documentation": {
										"id": 1865,
										"nodeType": "StructuredDocumentation",
										"src": "15510:276:1",
										"text": " @dev Returns the downcasted uint24 from uint256, reverting on\n overflow (when the input is greater than largest uint24).\n Counterpart to Solidity's `uint24` operator.\n Requirements:\n - input must fit into 24 bits"
									},
									"id": 1892,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint24",
									"nameLocation": "15800:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1868,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1867,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "15817:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 1892,
												"src": "15809:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1866,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15809:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15808:15:1"
									},
									"returnParameters": {
										"id": 1871,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1870,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1892,
												"src": "15847:6:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 1869,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "15847:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15846:8:1"
									},
									"scope": 2808,
									"src": "15791:213:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1919,
										"nodeType": "Block",
										"src": "16355:149:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1906,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1900,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1895,
														"src": "16369:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1903,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "16382:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint16_$",
																		"typeString": "type(uint16)"
																	},
																	"typeName": {
																		"id": 1902,
																		"name": "uint16",
																		"nodeType": "ElementaryTypeName",
																		"src": "16382:6:1",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint16_$",
																		"typeString": "type(uint16)"
																	}
																],
																"id": 1901,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "16377:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1904,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "16377:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint16",
																"typeString": "type(uint16)"
															}
														},
														"id": 1905,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "16390:3:1",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "16377:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint16",
															"typeString": "uint16"
														}
													},
													"src": "16369:24:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1913,
												"nodeType": "IfStatement",
												"src": "16365:103:1",
												"trueBody": {
													"id": 1912,
													"nodeType": "Block",
													"src": "16395:73:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3136",
																		"id": 1908,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "16447:2:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_16_by_1",
																			"typeString": "int_const 16"
																		},
																		"value": "16"
																	},
																	{
																		"id": 1909,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1895,
																		"src": "16451:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_16_by_1",
																			"typeString": "int_const 16"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1907,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1063,
																	"src": "16416:30:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$",
																		"typeString": "function (uint8,uint256) pure"
																	}
																},
																"id": 1910,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16416:41:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1911,
															"nodeType": "RevertStatement",
															"src": "16409:48:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1916,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1895,
															"src": "16491:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1915,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "16484:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint16_$",
															"typeString": "type(uint16)"
														},
														"typeName": {
															"id": 1914,
															"name": "uint16",
															"nodeType": "ElementaryTypeName",
															"src": "16484:6:1",
															"typeDescriptions": {}
														}
													},
													"id": 1917,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16484:13:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"functionReturnParameters": 1899,
												"id": 1918,
												"nodeType": "Return",
												"src": "16477:20:1"
											}
										]
									},
									"documentation": {
										"id": 1893,
										"nodeType": "StructuredDocumentation",
										"src": "16010:276:1",
										"text": " @dev Returns the downcasted uint16 from uint256, reverting on\n overflow (when the input is greater than largest uint16).\n Counterpart to Solidity's `uint16` operator.\n Requirements:\n - input must fit into 16 bits"
									},
									"id": 1920,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint16",
									"nameLocation": "16300:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1896,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1895,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "16317:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 1920,
												"src": "16309:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1894,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16309:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16308:15:1"
									},
									"returnParameters": {
										"id": 1899,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1898,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1920,
												"src": "16347:6:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 1897,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "16347:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16346:8:1"
									},
									"scope": 2808,
									"src": "16291:213:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1947,
										"nodeType": "Block",
										"src": "16849:146:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1934,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1928,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1923,
														"src": "16863:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1931,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "16876:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint8_$",
																		"typeString": "type(uint8)"
																	},
																	"typeName": {
																		"id": 1930,
																		"name": "uint8",
																		"nodeType": "ElementaryTypeName",
																		"src": "16876:5:1",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint8_$",
																		"typeString": "type(uint8)"
																	}
																],
																"id": 1929,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "16871:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1932,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "16871:11:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint8",
																"typeString": "type(uint8)"
															}
														},
														"id": 1933,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "16883:3:1",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "16871:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "16863:23:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1941,
												"nodeType": "IfStatement",
												"src": "16859:101:1",
												"trueBody": {
													"id": 1940,
													"nodeType": "Block",
													"src": "16888:72:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "38",
																		"id": 1936,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "16940:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_8_by_1",
																			"typeString": "int_const 8"
																		},
																		"value": "8"
																	},
																	{
																		"id": 1937,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1923,
																		"src": "16943:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_8_by_1",
																			"typeString": "int_const 8"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1935,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1063,
																	"src": "16909:30:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$",
																		"typeString": "function (uint8,uint256) pure"
																	}
																},
																"id": 1938,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16909:40:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1939,
															"nodeType": "RevertStatement",
															"src": "16902:47:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1944,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1923,
															"src": "16982:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1943,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "16976:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint8_$",
															"typeString": "type(uint8)"
														},
														"typeName": {
															"id": 1942,
															"name": "uint8",
															"nodeType": "ElementaryTypeName",
															"src": "16976:5:1",
															"typeDescriptions": {}
														}
													},
													"id": 1945,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16976:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"functionReturnParameters": 1927,
												"id": 1946,
												"nodeType": "Return",
												"src": "16969:19:1"
											}
										]
									},
									"documentation": {
										"id": 1921,
										"nodeType": "StructuredDocumentation",
										"src": "16510:272:1",
										"text": " @dev Returns the downcasted uint8 from uint256, reverting on\n overflow (when the input is greater than largest uint8).\n Counterpart to Solidity's `uint8` operator.\n Requirements:\n - input must fit into 8 bits"
									},
									"id": 1948,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint8",
									"nameLocation": "16796:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1924,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1923,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "16812:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 1948,
												"src": "16804:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1922,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16804:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16803:15:1"
									},
									"returnParameters": {
										"id": 1927,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1926,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1948,
												"src": "16842:5:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1925,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "16842:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16841:7:1"
									},
									"scope": 2808,
									"src": "16787:208:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1970,
										"nodeType": "Block",
										"src": "17231:128:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 1958,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1956,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1951,
														"src": "17245:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"hexValue": "30",
														"id": 1957,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "17253:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "17245:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1964,
												"nodeType": "IfStatement",
												"src": "17241:81:1",
												"trueBody": {
													"id": 1963,
													"nodeType": "Block",
													"src": "17256:66:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1960,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1951,
																		"src": "17305:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 1959,
																	"name": "SafeCastOverflowedIntToUint",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1068,
																	"src": "17277:27:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_int256_$returns$__$",
																		"typeString": "function (int256) pure"
																	}
																},
																"id": 1961,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "17277:34:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1962,
															"nodeType": "RevertStatement",
															"src": "17270:41:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1967,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1951,
															"src": "17346:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														],
														"id": 1966,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "17338:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint256_$",
															"typeString": "type(uint256)"
														},
														"typeName": {
															"id": 1965,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "17338:7:1",
															"typeDescriptions": {}
														}
													},
													"id": 1968,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17338:14:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1955,
												"id": 1969,
												"nodeType": "Return",
												"src": "17331:21:1"
											}
										]
									},
									"documentation": {
										"id": 1949,
										"nodeType": "StructuredDocumentation",
										"src": "17001:160:1",
										"text": " @dev Converts a signed int256 into an unsigned uint256.\n Requirements:\n - input must be greater than or equal to 0."
									},
									"id": 1971,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint256",
									"nameLocation": "17175:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1952,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1951,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "17192:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 1971,
												"src": "17185:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1950,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "17185:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17184:14:1"
									},
									"returnParameters": {
										"id": 1955,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1954,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1971,
												"src": "17222:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1953,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17222:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17221:9:1"
									},
									"scope": 2808,
									"src": "17166:193:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1996,
										"nodeType": "Block",
										"src": "17756:150:1",
										"statements": [
											{
												"expression": {
													"id": 1984,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1979,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1977,
														"src": "17766:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_int248",
															"typeString": "int248"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1982,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1974,
																"src": "17786:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 1981,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "17779:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int248_$",
																"typeString": "type(int248)"
															},
															"typeName": {
																"id": 1980,
																"name": "int248",
																"nodeType": "ElementaryTypeName",
																"src": "17779:6:1",
																"typeDescriptions": {}
															}
														},
														"id": 1983,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "17779:13:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int248",
															"typeString": "int248"
														}
													},
													"src": "17766:26:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int248",
														"typeString": "int248"
													}
												},
												"id": 1985,
												"nodeType": "ExpressionStatement",
												"src": "17766:26:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 1988,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1986,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1977,
														"src": "17806:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_int248",
															"typeString": "int248"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 1987,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1974,
														"src": "17820:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "17806:19:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1995,
												"nodeType": "IfStatement",
												"src": "17802:98:1",
												"trueBody": {
													"id": 1994,
													"nodeType": "Block",
													"src": "17827:73:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "323438",
																		"id": 1990,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "17878:3:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_248_by_1",
																			"typeString": "int_const 248"
																		},
																		"value": "248"
																	},
																	{
																		"id": 1991,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1974,
																		"src": "17883:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_248_by_1",
																			"typeString": "int_const 248"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 1989,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1075,
																	"src": "17848:29:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$__$",
																		"typeString": "function (uint8,int256) pure"
																	}
																},
																"id": 1992,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "17848:41:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1993,
															"nodeType": "RevertStatement",
															"src": "17841:48:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1972,
										"nodeType": "StructuredDocumentation",
										"src": "17365:312:1",
										"text": " @dev Returns the downcasted int248 from int256, reverting on\n overflow (when the input is less than smallest int248 or\n greater than largest int248).\n Counterpart to Solidity's `int248` operator.\n Requirements:\n - input must fit into 248 bits"
									},
									"id": 1997,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt248",
									"nameLocation": "17691:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1975,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1974,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "17707:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 1997,
												"src": "17700:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1973,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "17700:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17699:14:1"
									},
									"returnParameters": {
										"id": 1978,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1977,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "17744:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 1997,
												"src": "17737:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int248",
													"typeString": "int248"
												},
												"typeName": {
													"id": 1976,
													"name": "int248",
													"nodeType": "ElementaryTypeName",
													"src": "17737:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int248",
														"typeString": "int248"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17736:19:1"
									},
									"scope": 2808,
									"src": "17682:224:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2022,
										"nodeType": "Block",
										"src": "18303:150:1",
										"statements": [
											{
												"expression": {
													"id": 2010,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2005,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2003,
														"src": "18313:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_int240",
															"typeString": "int240"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2008,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2000,
																"src": "18333:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 2007,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "18326:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int240_$",
																"typeString": "type(int240)"
															},
															"typeName": {
																"id": 2006,
																"name": "int240",
																"nodeType": "ElementaryTypeName",
																"src": "18326:6:1",
																"typeDescriptions": {}
															}
														},
														"id": 2009,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "18326:13:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int240",
															"typeString": "int240"
														}
													},
													"src": "18313:26:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int240",
														"typeString": "int240"
													}
												},
												"id": 2011,
												"nodeType": "ExpressionStatement",
												"src": "18313:26:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 2014,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2012,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2003,
														"src": "18353:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_int240",
															"typeString": "int240"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 2013,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2000,
														"src": "18367:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "18353:19:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2021,
												"nodeType": "IfStatement",
												"src": "18349:98:1",
												"trueBody": {
													"id": 2020,
													"nodeType": "Block",
													"src": "18374:73:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "323430",
																		"id": 2016,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "18425:3:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_240_by_1",
																			"typeString": "int_const 240"
																		},
																		"value": "240"
																	},
																	{
																		"id": 2017,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2000,
																		"src": "18430:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_240_by_1",
																			"typeString": "int_const 240"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 2015,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1075,
																	"src": "18395:29:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$__$",
																		"typeString": "function (uint8,int256) pure"
																	}
																},
																"id": 2018,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "18395:41:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2019,
															"nodeType": "RevertStatement",
															"src": "18388:48:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1998,
										"nodeType": "StructuredDocumentation",
										"src": "17912:312:1",
										"text": " @dev Returns the downcasted int240 from int256, reverting on\n overflow (when the input is less than smallest int240 or\n greater than largest int240).\n Counterpart to Solidity's `int240` operator.\n Requirements:\n - input must fit into 240 bits"
									},
									"id": 2023,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt240",
									"nameLocation": "18238:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2001,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2000,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "18254:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 2023,
												"src": "18247:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1999,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "18247:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18246:14:1"
									},
									"returnParameters": {
										"id": 2004,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2003,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "18291:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 2023,
												"src": "18284:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int240",
													"typeString": "int240"
												},
												"typeName": {
													"id": 2002,
													"name": "int240",
													"nodeType": "ElementaryTypeName",
													"src": "18284:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int240",
														"typeString": "int240"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18283:19:1"
									},
									"scope": 2808,
									"src": "18229:224:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2048,
										"nodeType": "Block",
										"src": "18850:150:1",
										"statements": [
											{
												"expression": {
													"id": 2036,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2031,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2029,
														"src": "18860:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_int232",
															"typeString": "int232"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2034,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2026,
																"src": "18880:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 2033,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "18873:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int232_$",
																"typeString": "type(int232)"
															},
															"typeName": {
																"id": 2032,
																"name": "int232",
																"nodeType": "ElementaryTypeName",
																"src": "18873:6:1",
																"typeDescriptions": {}
															}
														},
														"id": 2035,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "18873:13:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int232",
															"typeString": "int232"
														}
													},
													"src": "18860:26:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int232",
														"typeString": "int232"
													}
												},
												"id": 2037,
												"nodeType": "ExpressionStatement",
												"src": "18860:26:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 2040,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2038,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2029,
														"src": "18900:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_int232",
															"typeString": "int232"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 2039,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2026,
														"src": "18914:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "18900:19:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2047,
												"nodeType": "IfStatement",
												"src": "18896:98:1",
												"trueBody": {
													"id": 2046,
													"nodeType": "Block",
													"src": "18921:73:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "323332",
																		"id": 2042,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "18972:3:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_232_by_1",
																			"typeString": "int_const 232"
																		},
																		"value": "232"
																	},
																	{
																		"id": 2043,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2026,
																		"src": "18977:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_232_by_1",
																			"typeString": "int_const 232"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 2041,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1075,
																	"src": "18942:29:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$__$",
																		"typeString": "function (uint8,int256) pure"
																	}
																},
																"id": 2044,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "18942:41:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2045,
															"nodeType": "RevertStatement",
															"src": "18935:48:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2024,
										"nodeType": "StructuredDocumentation",
										"src": "18459:312:1",
										"text": " @dev Returns the downcasted int232 from int256, reverting on\n overflow (when the input is less than smallest int232 or\n greater than largest int232).\n Counterpart to Solidity's `int232` operator.\n Requirements:\n - input must fit into 232 bits"
									},
									"id": 2049,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt232",
									"nameLocation": "18785:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2027,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2026,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "18801:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 2049,
												"src": "18794:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2025,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "18794:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18793:14:1"
									},
									"returnParameters": {
										"id": 2030,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2029,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "18838:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 2049,
												"src": "18831:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int232",
													"typeString": "int232"
												},
												"typeName": {
													"id": 2028,
													"name": "int232",
													"nodeType": "ElementaryTypeName",
													"src": "18831:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int232",
														"typeString": "int232"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18830:19:1"
									},
									"scope": 2808,
									"src": "18776:224:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2074,
										"nodeType": "Block",
										"src": "19397:150:1",
										"statements": [
											{
												"expression": {
													"id": 2062,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2057,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2055,
														"src": "19407:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_int224",
															"typeString": "int224"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2060,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2052,
																"src": "19427:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 2059,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "19420:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int224_$",
																"typeString": "type(int224)"
															},
															"typeName": {
																"id": 2058,
																"name": "int224",
																"nodeType": "ElementaryTypeName",
																"src": "19420:6:1",
																"typeDescriptions": {}
															}
														},
														"id": 2061,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "19420:13:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int224",
															"typeString": "int224"
														}
													},
													"src": "19407:26:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int224",
														"typeString": "int224"
													}
												},
												"id": 2063,
												"nodeType": "ExpressionStatement",
												"src": "19407:26:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 2066,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2064,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2055,
														"src": "19447:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_int224",
															"typeString": "int224"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 2065,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2052,
														"src": "19461:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "19447:19:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2073,
												"nodeType": "IfStatement",
												"src": "19443:98:1",
												"trueBody": {
													"id": 2072,
													"nodeType": "Block",
													"src": "19468:73:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "323234",
																		"id": 2068,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "19519:3:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_224_by_1",
																			"typeString": "int_const 224"
																		},
																		"value": "224"
																	},
																	{
																		"id": 2069,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2052,
																		"src": "19524:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_224_by_1",
																			"typeString": "int_const 224"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 2067,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1075,
																	"src": "19489:29:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$__$",
																		"typeString": "function (uint8,int256) pure"
																	}
																},
																"id": 2070,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "19489:41:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2071,
															"nodeType": "RevertStatement",
															"src": "19482:48:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2050,
										"nodeType": "StructuredDocumentation",
										"src": "19006:312:1",
										"text": " @dev Returns the downcasted int224 from int256, reverting on\n overflow (when the input is less than smallest int224 or\n greater than largest int224).\n Counterpart to Solidity's `int224` operator.\n Requirements:\n - input must fit into 224 bits"
									},
									"id": 2075,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt224",
									"nameLocation": "19332:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2053,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2052,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "19348:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 2075,
												"src": "19341:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2051,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "19341:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19340:14:1"
									},
									"returnParameters": {
										"id": 2056,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2055,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "19385:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 2075,
												"src": "19378:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int224",
													"typeString": "int224"
												},
												"typeName": {
													"id": 2054,
													"name": "int224",
													"nodeType": "ElementaryTypeName",
													"src": "19378:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int224",
														"typeString": "int224"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19377:19:1"
									},
									"scope": 2808,
									"src": "19323:224:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2100,
										"nodeType": "Block",
										"src": "19944:150:1",
										"statements": [
											{
												"expression": {
													"id": 2088,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2083,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2081,
														"src": "19954:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_int216",
															"typeString": "int216"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2086,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2078,
																"src": "19974:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 2085,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "19967:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int216_$",
																"typeString": "type(int216)"
															},
															"typeName": {
																"id": 2084,
																"name": "int216",
																"nodeType": "ElementaryTypeName",
																"src": "19967:6:1",
																"typeDescriptions": {}
															}
														},
														"id": 2087,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "19967:13:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int216",
															"typeString": "int216"
														}
													},
													"src": "19954:26:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int216",
														"typeString": "int216"
													}
												},
												"id": 2089,
												"nodeType": "ExpressionStatement",
												"src": "19954:26:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 2092,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2090,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2081,
														"src": "19994:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_int216",
															"typeString": "int216"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 2091,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2078,
														"src": "20008:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "19994:19:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2099,
												"nodeType": "IfStatement",
												"src": "19990:98:1",
												"trueBody": {
													"id": 2098,
													"nodeType": "Block",
													"src": "20015:73:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "323136",
																		"id": 2094,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "20066:3:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_216_by_1",
																			"typeString": "int_const 216"
																		},
																		"value": "216"
																	},
																	{
																		"id": 2095,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2078,
																		"src": "20071:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_216_by_1",
																			"typeString": "int_const 216"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 2093,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1075,
																	"src": "20036:29:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$__$",
																		"typeString": "function (uint8,int256) pure"
																	}
																},
																"id": 2096,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "20036:41:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2097,
															"nodeType": "RevertStatement",
															"src": "20029:48:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2076,
										"nodeType": "StructuredDocumentation",
										"src": "19553:312:1",
										"text": " @dev Returns the downcasted int216 from int256, reverting on\n overflow (when the input is less than smallest int216 or\n greater than largest int216).\n Counterpart to Solidity's `int216` operator.\n Requirements:\n - input must fit into 216 bits"
									},
									"id": 2101,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt216",
									"nameLocation": "19879:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2079,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2078,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "19895:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 2101,
												"src": "19888:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2077,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "19888:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19887:14:1"
									},
									"returnParameters": {
										"id": 2082,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2081,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "19932:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 2101,
												"src": "19925:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int216",
													"typeString": "int216"
												},
												"typeName": {
													"id": 2080,
													"name": "int216",
													"nodeType": "ElementaryTypeName",
													"src": "19925:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int216",
														"typeString": "int216"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19924:19:1"
									},
									"scope": 2808,
									"src": "19870:224:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2126,
										"nodeType": "Block",
										"src": "20491:150:1",
										"statements": [
											{
												"expression": {
													"id": 2114,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2109,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2107,
														"src": "20501:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_int208",
															"typeString": "int208"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2112,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2104,
																"src": "20521:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 2111,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "20514:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int208_$",
																"typeString": "type(int208)"
															},
															"typeName": {
																"id": 2110,
																"name": "int208",
																"nodeType": "ElementaryTypeName",
																"src": "20514:6:1",
																"typeDescriptions": {}
															}
														},
														"id": 2113,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "20514:13:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int208",
															"typeString": "int208"
														}
													},
													"src": "20501:26:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int208",
														"typeString": "int208"
													}
												},
												"id": 2115,
												"nodeType": "ExpressionStatement",
												"src": "20501:26:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 2118,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2116,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2107,
														"src": "20541:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_int208",
															"typeString": "int208"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 2117,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2104,
														"src": "20555:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "20541:19:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2125,
												"nodeType": "IfStatement",
												"src": "20537:98:1",
												"trueBody": {
													"id": 2124,
													"nodeType": "Block",
													"src": "20562:73:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "323038",
																		"id": 2120,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "20613:3:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_208_by_1",
																			"typeString": "int_const 208"
																		},
																		"value": "208"
																	},
																	{
																		"id": 2121,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2104,
																		"src": "20618:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_208_by_1",
																			"typeString": "int_const 208"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 2119,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1075,
																	"src": "20583:29:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$__$",
																		"typeString": "function (uint8,int256) pure"
																	}
																},
																"id": 2122,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "20583:41:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2123,
															"nodeType": "RevertStatement",
															"src": "20576:48:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2102,
										"nodeType": "StructuredDocumentation",
										"src": "20100:312:1",
										"text": " @dev Returns the downcasted int208 from int256, reverting on\n overflow (when the input is less than smallest int208 or\n greater than largest int208).\n Counterpart to Solidity's `int208` operator.\n Requirements:\n - input must fit into 208 bits"
									},
									"id": 2127,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt208",
									"nameLocation": "20426:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2104,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "20442:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 2127,
												"src": "20435:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2103,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "20435:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20434:14:1"
									},
									"returnParameters": {
										"id": 2108,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2107,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "20479:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 2127,
												"src": "20472:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int208",
													"typeString": "int208"
												},
												"typeName": {
													"id": 2106,
													"name": "int208",
													"nodeType": "ElementaryTypeName",
													"src": "20472:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int208",
														"typeString": "int208"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20471:19:1"
									},
									"scope": 2808,
									"src": "20417:224:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2152,
										"nodeType": "Block",
										"src": "21038:150:1",
										"statements": [
											{
												"expression": {
													"id": 2140,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2135,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2133,
														"src": "21048:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_int200",
															"typeString": "int200"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2138,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2130,
																"src": "21068:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 2137,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "21061:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int200_$",
																"typeString": "type(int200)"
															},
															"typeName": {
																"id": 2136,
																"name": "int200",
																"nodeType": "ElementaryTypeName",
																"src": "21061:6:1",
																"typeDescriptions": {}
															}
														},
														"id": 2139,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "21061:13:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int200",
															"typeString": "int200"
														}
													},
													"src": "21048:26:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int200",
														"typeString": "int200"
													}
												},
												"id": 2141,
												"nodeType": "ExpressionStatement",
												"src": "21048:26:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 2144,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2142,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2133,
														"src": "21088:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_int200",
															"typeString": "int200"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 2143,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2130,
														"src": "21102:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "21088:19:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2151,
												"nodeType": "IfStatement",
												"src": "21084:98:1",
												"trueBody": {
													"id": 2150,
													"nodeType": "Block",
													"src": "21109:73:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "323030",
																		"id": 2146,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "21160:3:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_200_by_1",
																			"typeString": "int_const 200"
																		},
																		"value": "200"
																	},
																	{
																		"id": 2147,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2130,
																		"src": "21165:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_200_by_1",
																			"typeString": "int_const 200"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 2145,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1075,
																	"src": "21130:29:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$__$",
																		"typeString": "function (uint8,int256) pure"
																	}
																},
																"id": 2148,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "21130:41:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2149,
															"nodeType": "RevertStatement",
															"src": "21123:48:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2128,
										"nodeType": "StructuredDocumentation",
										"src": "20647:312:1",
										"text": " @dev Returns the downcasted int200 from int256, reverting on\n overflow (when the input is less than smallest int200 or\n greater than largest int200).\n Counterpart to Solidity's `int200` operator.\n Requirements:\n - input must fit into 200 bits"
									},
									"id": 2153,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt200",
									"nameLocation": "20973:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2131,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2130,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "20989:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 2153,
												"src": "20982:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2129,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "20982:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20981:14:1"
									},
									"returnParameters": {
										"id": 2134,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2133,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "21026:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 2153,
												"src": "21019:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int200",
													"typeString": "int200"
												},
												"typeName": {
													"id": 2132,
													"name": "int200",
													"nodeType": "ElementaryTypeName",
													"src": "21019:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int200",
														"typeString": "int200"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21018:19:1"
									},
									"scope": 2808,
									"src": "20964:224:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2178,
										"nodeType": "Block",
										"src": "21585:150:1",
										"statements": [
											{
												"expression": {
													"id": 2166,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2161,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2159,
														"src": "21595:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_int192",
															"typeString": "int192"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2164,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2156,
																"src": "21615:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 2163,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "21608:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int192_$",
																"typeString": "type(int192)"
															},
															"typeName": {
																"id": 2162,
																"name": "int192",
																"nodeType": "ElementaryTypeName",
																"src": "21608:6:1",
																"typeDescriptions": {}
															}
														},
														"id": 2165,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "21608:13:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int192",
															"typeString": "int192"
														}
													},
													"src": "21595:26:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int192",
														"typeString": "int192"
													}
												},
												"id": 2167,
												"nodeType": "ExpressionStatement",
												"src": "21595:26:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 2170,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2168,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2159,
														"src": "21635:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_int192",
															"typeString": "int192"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 2169,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2156,
														"src": "21649:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "21635:19:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2177,
												"nodeType": "IfStatement",
												"src": "21631:98:1",
												"trueBody": {
													"id": 2176,
													"nodeType": "Block",
													"src": "21656:73:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313932",
																		"id": 2172,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "21707:3:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_192_by_1",
																			"typeString": "int_const 192"
																		},
																		"value": "192"
																	},
																	{
																		"id": 2173,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2156,
																		"src": "21712:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_192_by_1",
																			"typeString": "int_const 192"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 2171,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1075,
																	"src": "21677:29:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$__$",
																		"typeString": "function (uint8,int256) pure"
																	}
																},
																"id": 2174,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "21677:41:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2175,
															"nodeType": "RevertStatement",
															"src": "21670:48:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2154,
										"nodeType": "StructuredDocumentation",
										"src": "21194:312:1",
										"text": " @dev Returns the downcasted int192 from int256, reverting on\n overflow (when the input is less than smallest int192 or\n greater than largest int192).\n Counterpart to Solidity's `int192` operator.\n Requirements:\n - input must fit into 192 bits"
									},
									"id": 2179,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt192",
									"nameLocation": "21520:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2157,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2156,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "21536:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 2179,
												"src": "21529:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2155,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "21529:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21528:14:1"
									},
									"returnParameters": {
										"id": 2160,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2159,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "21573:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 2179,
												"src": "21566:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int192",
													"typeString": "int192"
												},
												"typeName": {
													"id": 2158,
													"name": "int192",
													"nodeType": "ElementaryTypeName",
													"src": "21566:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int192",
														"typeString": "int192"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21565:19:1"
									},
									"scope": 2808,
									"src": "21511:224:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2204,
										"nodeType": "Block",
										"src": "22132:150:1",
										"statements": [
											{
												"expression": {
													"id": 2192,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2187,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2185,
														"src": "22142:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_int184",
															"typeString": "int184"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2190,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2182,
																"src": "22162:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 2189,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "22155:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int184_$",
																"typeString": "type(int184)"
															},
															"typeName": {
																"id": 2188,
																"name": "int184",
																"nodeType": "ElementaryTypeName",
																"src": "22155:6:1",
																"typeDescriptions": {}
															}
														},
														"id": 2191,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "22155:13:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int184",
															"typeString": "int184"
														}
													},
													"src": "22142:26:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int184",
														"typeString": "int184"
													}
												},
												"id": 2193,
												"nodeType": "ExpressionStatement",
												"src": "22142:26:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 2196,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2194,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2185,
														"src": "22182:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_int184",
															"typeString": "int184"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 2195,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2182,
														"src": "22196:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "22182:19:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2203,
												"nodeType": "IfStatement",
												"src": "22178:98:1",
												"trueBody": {
													"id": 2202,
													"nodeType": "Block",
													"src": "22203:73:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313834",
																		"id": 2198,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "22254:3:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_184_by_1",
																			"typeString": "int_const 184"
																		},
																		"value": "184"
																	},
																	{
																		"id": 2199,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2182,
																		"src": "22259:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_184_by_1",
																			"typeString": "int_const 184"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 2197,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1075,
																	"src": "22224:29:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$__$",
																		"typeString": "function (uint8,int256) pure"
																	}
																},
																"id": 2200,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "22224:41:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2201,
															"nodeType": "RevertStatement",
															"src": "22217:48:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2180,
										"nodeType": "StructuredDocumentation",
										"src": "21741:312:1",
										"text": " @dev Returns the downcasted int184 from int256, reverting on\n overflow (when the input is less than smallest int184 or\n greater than largest int184).\n Counterpart to Solidity's `int184` operator.\n Requirements:\n - input must fit into 184 bits"
									},
									"id": 2205,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt184",
									"nameLocation": "22067:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2183,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2182,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "22083:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 2205,
												"src": "22076:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2181,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "22076:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22075:14:1"
									},
									"returnParameters": {
										"id": 2186,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2185,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "22120:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 2205,
												"src": "22113:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int184",
													"typeString": "int184"
												},
												"typeName": {
													"id": 2184,
													"name": "int184",
													"nodeType": "ElementaryTypeName",
													"src": "22113:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int184",
														"typeString": "int184"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22112:19:1"
									},
									"scope": 2808,
									"src": "22058:224:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2230,
										"nodeType": "Block",
										"src": "22679:150:1",
										"statements": [
											{
												"expression": {
													"id": 2218,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2213,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2211,
														"src": "22689:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_int176",
															"typeString": "int176"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2216,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2208,
																"src": "22709:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 2215,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "22702:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int176_$",
																"typeString": "type(int176)"
															},
															"typeName": {
																"id": 2214,
																"name": "int176",
																"nodeType": "ElementaryTypeName",
																"src": "22702:6:1",
																"typeDescriptions": {}
															}
														},
														"id": 2217,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "22702:13:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int176",
															"typeString": "int176"
														}
													},
													"src": "22689:26:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int176",
														"typeString": "int176"
													}
												},
												"id": 2219,
												"nodeType": "ExpressionStatement",
												"src": "22689:26:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 2222,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2220,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2211,
														"src": "22729:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_int176",
															"typeString": "int176"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 2221,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2208,
														"src": "22743:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "22729:19:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2229,
												"nodeType": "IfStatement",
												"src": "22725:98:1",
												"trueBody": {
													"id": 2228,
													"nodeType": "Block",
													"src": "22750:73:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313736",
																		"id": 2224,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "22801:3:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_176_by_1",
																			"typeString": "int_const 176"
																		},
																		"value": "176"
																	},
																	{
																		"id": 2225,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2208,
																		"src": "22806:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_176_by_1",
																			"typeString": "int_const 176"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 2223,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1075,
																	"src": "22771:29:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$__$",
																		"typeString": "function (uint8,int256) pure"
																	}
																},
																"id": 2226,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "22771:41:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2227,
															"nodeType": "RevertStatement",
															"src": "22764:48:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2206,
										"nodeType": "StructuredDocumentation",
										"src": "22288:312:1",
										"text": " @dev Returns the downcasted int176 from int256, reverting on\n overflow (when the input is less than smallest int176 or\n greater than largest int176).\n Counterpart to Solidity's `int176` operator.\n Requirements:\n - input must fit into 176 bits"
									},
									"id": 2231,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt176",
									"nameLocation": "22614:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2209,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2208,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "22630:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 2231,
												"src": "22623:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2207,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "22623:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22622:14:1"
									},
									"returnParameters": {
										"id": 2212,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2211,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "22667:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 2231,
												"src": "22660:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int176",
													"typeString": "int176"
												},
												"typeName": {
													"id": 2210,
													"name": "int176",
													"nodeType": "ElementaryTypeName",
													"src": "22660:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int176",
														"typeString": "int176"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22659:19:1"
									},
									"scope": 2808,
									"src": "22605:224:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2256,
										"nodeType": "Block",
										"src": "23226:150:1",
										"statements": [
											{
												"expression": {
													"id": 2244,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2239,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2237,
														"src": "23236:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_int168",
															"typeString": "int168"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2242,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2234,
																"src": "23256:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 2241,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "23249:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int168_$",
																"typeString": "type(int168)"
															},
															"typeName": {
																"id": 2240,
																"name": "int168",
																"nodeType": "ElementaryTypeName",
																"src": "23249:6:1",
																"typeDescriptions": {}
															}
														},
														"id": 2243,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "23249:13:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int168",
															"typeString": "int168"
														}
													},
													"src": "23236:26:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int168",
														"typeString": "int168"
													}
												},
												"id": 2245,
												"nodeType": "ExpressionStatement",
												"src": "23236:26:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 2248,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2246,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2237,
														"src": "23276:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_int168",
															"typeString": "int168"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 2247,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2234,
														"src": "23290:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "23276:19:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2255,
												"nodeType": "IfStatement",
												"src": "23272:98:1",
												"trueBody": {
													"id": 2254,
													"nodeType": "Block",
													"src": "23297:73:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313638",
																		"id": 2250,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "23348:3:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_168_by_1",
																			"typeString": "int_const 168"
																		},
																		"value": "168"
																	},
																	{
																		"id": 2251,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2234,
																		"src": "23353:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_168_by_1",
																			"typeString": "int_const 168"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 2249,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1075,
																	"src": "23318:29:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$__$",
																		"typeString": "function (uint8,int256) pure"
																	}
																},
																"id": 2252,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "23318:41:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2253,
															"nodeType": "RevertStatement",
															"src": "23311:48:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2232,
										"nodeType": "StructuredDocumentation",
										"src": "22835:312:1",
										"text": " @dev Returns the downcasted int168 from int256, reverting on\n overflow (when the input is less than smallest int168 or\n greater than largest int168).\n Counterpart to Solidity's `int168` operator.\n Requirements:\n - input must fit into 168 bits"
									},
									"id": 2257,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt168",
									"nameLocation": "23161:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2234,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "23177:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 2257,
												"src": "23170:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2233,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "23170:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23169:14:1"
									},
									"returnParameters": {
										"id": 2238,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2237,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "23214:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 2257,
												"src": "23207:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int168",
													"typeString": "int168"
												},
												"typeName": {
													"id": 2236,
													"name": "int168",
													"nodeType": "ElementaryTypeName",
													"src": "23207:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int168",
														"typeString": "int168"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23206:19:1"
									},
									"scope": 2808,
									"src": "23152:224:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2282,
										"nodeType": "Block",
										"src": "23773:150:1",
										"statements": [
											{
												"expression": {
													"id": 2270,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2265,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2263,
														"src": "23783:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_int160",
															"typeString": "int160"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2268,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2260,
																"src": "23803:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 2267,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "23796:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int160_$",
																"typeString": "type(int160)"
															},
															"typeName": {
																"id": 2266,
																"name": "int160",
																"nodeType": "ElementaryTypeName",
																"src": "23796:6:1",
																"typeDescriptions": {}
															}
														},
														"id": 2269,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "23796:13:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int160",
															"typeString": "int160"
														}
													},
													"src": "23783:26:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int160",
														"typeString": "int160"
													}
												},
												"id": 2271,
												"nodeType": "ExpressionStatement",
												"src": "23783:26:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 2274,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2272,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2263,
														"src": "23823:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_int160",
															"typeString": "int160"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 2273,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2260,
														"src": "23837:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "23823:19:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2281,
												"nodeType": "IfStatement",
												"src": "23819:98:1",
												"trueBody": {
													"id": 2280,
													"nodeType": "Block",
													"src": "23844:73:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313630",
																		"id": 2276,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "23895:3:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_160_by_1",
																			"typeString": "int_const 160"
																		},
																		"value": "160"
																	},
																	{
																		"id": 2277,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2260,
																		"src": "23900:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_160_by_1",
																			"typeString": "int_const 160"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 2275,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1075,
																	"src": "23865:29:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$__$",
																		"typeString": "function (uint8,int256) pure"
																	}
																},
																"id": 2278,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "23865:41:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2279,
															"nodeType": "RevertStatement",
															"src": "23858:48:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2258,
										"nodeType": "StructuredDocumentation",
										"src": "23382:312:1",
										"text": " @dev Returns the downcasted int160 from int256, reverting on\n overflow (when the input is less than smallest int160 or\n greater than largest int160).\n Counterpart to Solidity's `int160` operator.\n Requirements:\n - input must fit into 160 bits"
									},
									"id": 2283,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt160",
									"nameLocation": "23708:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2261,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2260,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "23724:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 2283,
												"src": "23717:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2259,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "23717:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23716:14:1"
									},
									"returnParameters": {
										"id": 2264,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2263,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "23761:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 2283,
												"src": "23754:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int160",
													"typeString": "int160"
												},
												"typeName": {
													"id": 2262,
													"name": "int160",
													"nodeType": "ElementaryTypeName",
													"src": "23754:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int160",
														"typeString": "int160"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23753:19:1"
									},
									"scope": 2808,
									"src": "23699:224:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2308,
										"nodeType": "Block",
										"src": "24320:150:1",
										"statements": [
											{
												"expression": {
													"id": 2296,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2291,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2289,
														"src": "24330:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_int152",
															"typeString": "int152"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2294,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2286,
																"src": "24350:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 2293,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "24343:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int152_$",
																"typeString": "type(int152)"
															},
															"typeName": {
																"id": 2292,
																"name": "int152",
																"nodeType": "ElementaryTypeName",
																"src": "24343:6:1",
																"typeDescriptions": {}
															}
														},
														"id": 2295,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "24343:13:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int152",
															"typeString": "int152"
														}
													},
													"src": "24330:26:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int152",
														"typeString": "int152"
													}
												},
												"id": 2297,
												"nodeType": "ExpressionStatement",
												"src": "24330:26:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 2300,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2298,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2289,
														"src": "24370:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_int152",
															"typeString": "int152"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 2299,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2286,
														"src": "24384:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "24370:19:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2307,
												"nodeType": "IfStatement",
												"src": "24366:98:1",
												"trueBody": {
													"id": 2306,
													"nodeType": "Block",
													"src": "24391:73:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313532",
																		"id": 2302,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "24442:3:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_152_by_1",
																			"typeString": "int_const 152"
																		},
																		"value": "152"
																	},
																	{
																		"id": 2303,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2286,
																		"src": "24447:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_152_by_1",
																			"typeString": "int_const 152"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 2301,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1075,
																	"src": "24412:29:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$__$",
																		"typeString": "function (uint8,int256) pure"
																	}
																},
																"id": 2304,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "24412:41:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2305,
															"nodeType": "RevertStatement",
															"src": "24405:48:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2284,
										"nodeType": "StructuredDocumentation",
										"src": "23929:312:1",
										"text": " @dev Returns the downcasted int152 from int256, reverting on\n overflow (when the input is less than smallest int152 or\n greater than largest int152).\n Counterpart to Solidity's `int152` operator.\n Requirements:\n - input must fit into 152 bits"
									},
									"id": 2309,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt152",
									"nameLocation": "24255:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2287,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2286,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "24271:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 2309,
												"src": "24264:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2285,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "24264:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24263:14:1"
									},
									"returnParameters": {
										"id": 2290,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2289,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "24308:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 2309,
												"src": "24301:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int152",
													"typeString": "int152"
												},
												"typeName": {
													"id": 2288,
													"name": "int152",
													"nodeType": "ElementaryTypeName",
													"src": "24301:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int152",
														"typeString": "int152"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24300:19:1"
									},
									"scope": 2808,
									"src": "24246:224:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2334,
										"nodeType": "Block",
										"src": "24867:150:1",
										"statements": [
											{
												"expression": {
													"id": 2322,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2317,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2315,
														"src": "24877:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_int144",
															"typeString": "int144"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2320,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2312,
																"src": "24897:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 2319,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "24890:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int144_$",
																"typeString": "type(int144)"
															},
															"typeName": {
																"id": 2318,
																"name": "int144",
																"nodeType": "ElementaryTypeName",
																"src": "24890:6:1",
																"typeDescriptions": {}
															}
														},
														"id": 2321,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "24890:13:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int144",
															"typeString": "int144"
														}
													},
													"src": "24877:26:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int144",
														"typeString": "int144"
													}
												},
												"id": 2323,
												"nodeType": "ExpressionStatement",
												"src": "24877:26:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 2326,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2324,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2315,
														"src": "24917:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_int144",
															"typeString": "int144"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 2325,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2312,
														"src": "24931:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "24917:19:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2333,
												"nodeType": "IfStatement",
												"src": "24913:98:1",
												"trueBody": {
													"id": 2332,
													"nodeType": "Block",
													"src": "24938:73:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313434",
																		"id": 2328,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "24989:3:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_144_by_1",
																			"typeString": "int_const 144"
																		},
																		"value": "144"
																	},
																	{
																		"id": 2329,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2312,
																		"src": "24994:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_144_by_1",
																			"typeString": "int_const 144"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 2327,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1075,
																	"src": "24959:29:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$__$",
																		"typeString": "function (uint8,int256) pure"
																	}
																},
																"id": 2330,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "24959:41:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2331,
															"nodeType": "RevertStatement",
															"src": "24952:48:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2310,
										"nodeType": "StructuredDocumentation",
										"src": "24476:312:1",
										"text": " @dev Returns the downcasted int144 from int256, reverting on\n overflow (when the input is less than smallest int144 or\n greater than largest int144).\n Counterpart to Solidity's `int144` operator.\n Requirements:\n - input must fit into 144 bits"
									},
									"id": 2335,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt144",
									"nameLocation": "24802:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2312,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "24818:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 2335,
												"src": "24811:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2311,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "24811:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24810:14:1"
									},
									"returnParameters": {
										"id": 2316,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2315,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "24855:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 2335,
												"src": "24848:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int144",
													"typeString": "int144"
												},
												"typeName": {
													"id": 2314,
													"name": "int144",
													"nodeType": "ElementaryTypeName",
													"src": "24848:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int144",
														"typeString": "int144"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24847:19:1"
									},
									"scope": 2808,
									"src": "24793:224:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2360,
										"nodeType": "Block",
										"src": "25414:150:1",
										"statements": [
											{
												"expression": {
													"id": 2348,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2343,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2341,
														"src": "25424:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_int136",
															"typeString": "int136"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2346,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2338,
																"src": "25444:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 2345,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "25437:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int136_$",
																"typeString": "type(int136)"
															},
															"typeName": {
																"id": 2344,
																"name": "int136",
																"nodeType": "ElementaryTypeName",
																"src": "25437:6:1",
																"typeDescriptions": {}
															}
														},
														"id": 2347,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "25437:13:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int136",
															"typeString": "int136"
														}
													},
													"src": "25424:26:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int136",
														"typeString": "int136"
													}
												},
												"id": 2349,
												"nodeType": "ExpressionStatement",
												"src": "25424:26:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 2352,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2350,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2341,
														"src": "25464:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_int136",
															"typeString": "int136"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 2351,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2338,
														"src": "25478:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "25464:19:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2359,
												"nodeType": "IfStatement",
												"src": "25460:98:1",
												"trueBody": {
													"id": 2358,
													"nodeType": "Block",
													"src": "25485:73:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313336",
																		"id": 2354,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "25536:3:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_136_by_1",
																			"typeString": "int_const 136"
																		},
																		"value": "136"
																	},
																	{
																		"id": 2355,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2338,
																		"src": "25541:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_136_by_1",
																			"typeString": "int_const 136"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 2353,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1075,
																	"src": "25506:29:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$__$",
																		"typeString": "function (uint8,int256) pure"
																	}
																},
																"id": 2356,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "25506:41:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2357,
															"nodeType": "RevertStatement",
															"src": "25499:48:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2336,
										"nodeType": "StructuredDocumentation",
										"src": "25023:312:1",
										"text": " @dev Returns the downcasted int136 from int256, reverting on\n overflow (when the input is less than smallest int136 or\n greater than largest int136).\n Counterpart to Solidity's `int136` operator.\n Requirements:\n - input must fit into 136 bits"
									},
									"id": 2361,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt136",
									"nameLocation": "25349:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2339,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2338,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "25365:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 2361,
												"src": "25358:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2337,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "25358:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25357:14:1"
									},
									"returnParameters": {
										"id": 2342,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2341,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "25402:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 2361,
												"src": "25395:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int136",
													"typeString": "int136"
												},
												"typeName": {
													"id": 2340,
													"name": "int136",
													"nodeType": "ElementaryTypeName",
													"src": "25395:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int136",
														"typeString": "int136"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25394:19:1"
									},
									"scope": 2808,
									"src": "25340:224:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2386,
										"nodeType": "Block",
										"src": "25961:150:1",
										"statements": [
											{
												"expression": {
													"id": 2374,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2369,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2367,
														"src": "25971:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_int128",
															"typeString": "int128"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2372,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2364,
																"src": "25991:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 2371,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "25984:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int128_$",
																"typeString": "type(int128)"
															},
															"typeName": {
																"id": 2370,
																"name": "int128",
																"nodeType": "ElementaryTypeName",
																"src": "25984:6:1",
																"typeDescriptions": {}
															}
														},
														"id": 2373,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "25984:13:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int128",
															"typeString": "int128"
														}
													},
													"src": "25971:26:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int128",
														"typeString": "int128"
													}
												},
												"id": 2375,
												"nodeType": "ExpressionStatement",
												"src": "25971:26:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 2378,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2376,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2367,
														"src": "26011:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_int128",
															"typeString": "int128"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 2377,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2364,
														"src": "26025:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "26011:19:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2385,
												"nodeType": "IfStatement",
												"src": "26007:98:1",
												"trueBody": {
													"id": 2384,
													"nodeType": "Block",
													"src": "26032:73:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313238",
																		"id": 2380,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "26083:3:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_128_by_1",
																			"typeString": "int_const 128"
																		},
																		"value": "128"
																	},
																	{
																		"id": 2381,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2364,
																		"src": "26088:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_128_by_1",
																			"typeString": "int_const 128"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 2379,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1075,
																	"src": "26053:29:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$__$",
																		"typeString": "function (uint8,int256) pure"
																	}
																},
																"id": 2382,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "26053:41:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2383,
															"nodeType": "RevertStatement",
															"src": "26046:48:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2362,
										"nodeType": "StructuredDocumentation",
										"src": "25570:312:1",
										"text": " @dev Returns the downcasted int128 from int256, reverting on\n overflow (when the input is less than smallest int128 or\n greater than largest int128).\n Counterpart to Solidity's `int128` operator.\n Requirements:\n - input must fit into 128 bits"
									},
									"id": 2387,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt128",
									"nameLocation": "25896:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2365,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2364,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "25912:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 2387,
												"src": "25905:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2363,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "25905:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25904:14:1"
									},
									"returnParameters": {
										"id": 2368,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2367,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "25949:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 2387,
												"src": "25942:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int128",
													"typeString": "int128"
												},
												"typeName": {
													"id": 2366,
													"name": "int128",
													"nodeType": "ElementaryTypeName",
													"src": "25942:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int128",
														"typeString": "int128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25941:19:1"
									},
									"scope": 2808,
									"src": "25887:224:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2412,
										"nodeType": "Block",
										"src": "26508:150:1",
										"statements": [
											{
												"expression": {
													"id": 2400,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2395,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2393,
														"src": "26518:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_int120",
															"typeString": "int120"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2398,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2390,
																"src": "26538:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 2397,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "26531:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int120_$",
																"typeString": "type(int120)"
															},
															"typeName": {
																"id": 2396,
																"name": "int120",
																"nodeType": "ElementaryTypeName",
																"src": "26531:6:1",
																"typeDescriptions": {}
															}
														},
														"id": 2399,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "26531:13:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int120",
															"typeString": "int120"
														}
													},
													"src": "26518:26:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int120",
														"typeString": "int120"
													}
												},
												"id": 2401,
												"nodeType": "ExpressionStatement",
												"src": "26518:26:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 2404,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2402,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2393,
														"src": "26558:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_int120",
															"typeString": "int120"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 2403,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2390,
														"src": "26572:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "26558:19:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2411,
												"nodeType": "IfStatement",
												"src": "26554:98:1",
												"trueBody": {
													"id": 2410,
													"nodeType": "Block",
													"src": "26579:73:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313230",
																		"id": 2406,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "26630:3:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_120_by_1",
																			"typeString": "int_const 120"
																		},
																		"value": "120"
																	},
																	{
																		"id": 2407,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2390,
																		"src": "26635:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_120_by_1",
																			"typeString": "int_const 120"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 2405,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1075,
																	"src": "26600:29:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$__$",
																		"typeString": "function (uint8,int256) pure"
																	}
																},
																"id": 2408,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "26600:41:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2409,
															"nodeType": "RevertStatement",
															"src": "26593:48:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2388,
										"nodeType": "StructuredDocumentation",
										"src": "26117:312:1",
										"text": " @dev Returns the downcasted int120 from int256, reverting on\n overflow (when the input is less than smallest int120 or\n greater than largest int120).\n Counterpart to Solidity's `int120` operator.\n Requirements:\n - input must fit into 120 bits"
									},
									"id": 2413,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt120",
									"nameLocation": "26443:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2391,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2390,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "26459:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 2413,
												"src": "26452:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2389,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "26452:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26451:14:1"
									},
									"returnParameters": {
										"id": 2394,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2393,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "26496:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 2413,
												"src": "26489:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int120",
													"typeString": "int120"
												},
												"typeName": {
													"id": 2392,
													"name": "int120",
													"nodeType": "ElementaryTypeName",
													"src": "26489:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int120",
														"typeString": "int120"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26488:19:1"
									},
									"scope": 2808,
									"src": "26434:224:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2438,
										"nodeType": "Block",
										"src": "27055:150:1",
										"statements": [
											{
												"expression": {
													"id": 2426,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2421,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2419,
														"src": "27065:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_int112",
															"typeString": "int112"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2424,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2416,
																"src": "27085:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 2423,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "27078:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int112_$",
																"typeString": "type(int112)"
															},
															"typeName": {
																"id": 2422,
																"name": "int112",
																"nodeType": "ElementaryTypeName",
																"src": "27078:6:1",
																"typeDescriptions": {}
															}
														},
														"id": 2425,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "27078:13:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int112",
															"typeString": "int112"
														}
													},
													"src": "27065:26:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int112",
														"typeString": "int112"
													}
												},
												"id": 2427,
												"nodeType": "ExpressionStatement",
												"src": "27065:26:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 2430,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2428,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2419,
														"src": "27105:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_int112",
															"typeString": "int112"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 2429,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2416,
														"src": "27119:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "27105:19:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2437,
												"nodeType": "IfStatement",
												"src": "27101:98:1",
												"trueBody": {
													"id": 2436,
													"nodeType": "Block",
													"src": "27126:73:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313132",
																		"id": 2432,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "27177:3:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_112_by_1",
																			"typeString": "int_const 112"
																		},
																		"value": "112"
																	},
																	{
																		"id": 2433,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2416,
																		"src": "27182:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_112_by_1",
																			"typeString": "int_const 112"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 2431,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1075,
																	"src": "27147:29:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$__$",
																		"typeString": "function (uint8,int256) pure"
																	}
																},
																"id": 2434,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "27147:41:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2435,
															"nodeType": "RevertStatement",
															"src": "27140:48:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2414,
										"nodeType": "StructuredDocumentation",
										"src": "26664:312:1",
										"text": " @dev Returns the downcasted int112 from int256, reverting on\n overflow (when the input is less than smallest int112 or\n greater than largest int112).\n Counterpart to Solidity's `int112` operator.\n Requirements:\n - input must fit into 112 bits"
									},
									"id": 2439,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt112",
									"nameLocation": "26990:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2417,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2416,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "27006:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 2439,
												"src": "26999:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2415,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "26999:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26998:14:1"
									},
									"returnParameters": {
										"id": 2420,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2419,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "27043:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 2439,
												"src": "27036:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int112",
													"typeString": "int112"
												},
												"typeName": {
													"id": 2418,
													"name": "int112",
													"nodeType": "ElementaryTypeName",
													"src": "27036:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int112",
														"typeString": "int112"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27035:19:1"
									},
									"scope": 2808,
									"src": "26981:224:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2464,
										"nodeType": "Block",
										"src": "27602:150:1",
										"statements": [
											{
												"expression": {
													"id": 2452,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2447,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2445,
														"src": "27612:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_int104",
															"typeString": "int104"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2450,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2442,
																"src": "27632:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 2449,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "27625:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int104_$",
																"typeString": "type(int104)"
															},
															"typeName": {
																"id": 2448,
																"name": "int104",
																"nodeType": "ElementaryTypeName",
																"src": "27625:6:1",
																"typeDescriptions": {}
															}
														},
														"id": 2451,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "27625:13:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int104",
															"typeString": "int104"
														}
													},
													"src": "27612:26:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int104",
														"typeString": "int104"
													}
												},
												"id": 2453,
												"nodeType": "ExpressionStatement",
												"src": "27612:26:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 2456,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2454,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2445,
														"src": "27652:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_int104",
															"typeString": "int104"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 2455,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2442,
														"src": "27666:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "27652:19:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2463,
												"nodeType": "IfStatement",
												"src": "27648:98:1",
												"trueBody": {
													"id": 2462,
													"nodeType": "Block",
													"src": "27673:73:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313034",
																		"id": 2458,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "27724:3:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_104_by_1",
																			"typeString": "int_const 104"
																		},
																		"value": "104"
																	},
																	{
																		"id": 2459,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2442,
																		"src": "27729:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_104_by_1",
																			"typeString": "int_const 104"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 2457,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1075,
																	"src": "27694:29:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$__$",
																		"typeString": "function (uint8,int256) pure"
																	}
																},
																"id": 2460,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "27694:41:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2461,
															"nodeType": "RevertStatement",
															"src": "27687:48:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2440,
										"nodeType": "StructuredDocumentation",
										"src": "27211:312:1",
										"text": " @dev Returns the downcasted int104 from int256, reverting on\n overflow (when the input is less than smallest int104 or\n greater than largest int104).\n Counterpart to Solidity's `int104` operator.\n Requirements:\n - input must fit into 104 bits"
									},
									"id": 2465,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt104",
									"nameLocation": "27537:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2443,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2442,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "27553:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 2465,
												"src": "27546:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2441,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "27546:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27545:14:1"
									},
									"returnParameters": {
										"id": 2446,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2445,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "27590:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 2465,
												"src": "27583:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int104",
													"typeString": "int104"
												},
												"typeName": {
													"id": 2444,
													"name": "int104",
													"nodeType": "ElementaryTypeName",
													"src": "27583:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int104",
														"typeString": "int104"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27582:19:1"
									},
									"scope": 2808,
									"src": "27528:224:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2490,
										"nodeType": "Block",
										"src": "28142:148:1",
										"statements": [
											{
												"expression": {
													"id": 2478,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2473,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2471,
														"src": "28152:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_int96",
															"typeString": "int96"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2476,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2468,
																"src": "28171:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 2475,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "28165:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int96_$",
																"typeString": "type(int96)"
															},
															"typeName": {
																"id": 2474,
																"name": "int96",
																"nodeType": "ElementaryTypeName",
																"src": "28165:5:1",
																"typeDescriptions": {}
															}
														},
														"id": 2477,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "28165:12:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int96",
															"typeString": "int96"
														}
													},
													"src": "28152:25:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int96",
														"typeString": "int96"
													}
												},
												"id": 2479,
												"nodeType": "ExpressionStatement",
												"src": "28152:25:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 2482,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2480,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2471,
														"src": "28191:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_int96",
															"typeString": "int96"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 2481,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2468,
														"src": "28205:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "28191:19:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2489,
												"nodeType": "IfStatement",
												"src": "28187:97:1",
												"trueBody": {
													"id": 2488,
													"nodeType": "Block",
													"src": "28212:72:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3936",
																		"id": 2484,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "28263:2:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_96_by_1",
																			"typeString": "int_const 96"
																		},
																		"value": "96"
																	},
																	{
																		"id": 2485,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2468,
																		"src": "28267:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_96_by_1",
																			"typeString": "int_const 96"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 2483,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1075,
																	"src": "28233:29:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$__$",
																		"typeString": "function (uint8,int256) pure"
																	}
																},
																"id": 2486,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "28233:40:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2487,
															"nodeType": "RevertStatement",
															"src": "28226:47:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2466,
										"nodeType": "StructuredDocumentation",
										"src": "27758:307:1",
										"text": " @dev Returns the downcasted int96 from int256, reverting on\n overflow (when the input is less than smallest int96 or\n greater than largest int96).\n Counterpart to Solidity's `int96` operator.\n Requirements:\n - input must fit into 96 bits"
									},
									"id": 2491,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt96",
									"nameLocation": "28079:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2469,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2468,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "28094:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 2491,
												"src": "28087:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2467,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "28087:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28086:14:1"
									},
									"returnParameters": {
										"id": 2472,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2471,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "28130:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 2491,
												"src": "28124:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int96",
													"typeString": "int96"
												},
												"typeName": {
													"id": 2470,
													"name": "int96",
													"nodeType": "ElementaryTypeName",
													"src": "28124:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int96",
														"typeString": "int96"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28123:18:1"
									},
									"scope": 2808,
									"src": "28070:220:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2516,
										"nodeType": "Block",
										"src": "28680:148:1",
										"statements": [
											{
												"expression": {
													"id": 2504,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2499,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2497,
														"src": "28690:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_int88",
															"typeString": "int88"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2502,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2494,
																"src": "28709:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 2501,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "28703:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int88_$",
																"typeString": "type(int88)"
															},
															"typeName": {
																"id": 2500,
																"name": "int88",
																"nodeType": "ElementaryTypeName",
																"src": "28703:5:1",
																"typeDescriptions": {}
															}
														},
														"id": 2503,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "28703:12:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int88",
															"typeString": "int88"
														}
													},
													"src": "28690:25:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int88",
														"typeString": "int88"
													}
												},
												"id": 2505,
												"nodeType": "ExpressionStatement",
												"src": "28690:25:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 2508,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2506,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2497,
														"src": "28729:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_int88",
															"typeString": "int88"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 2507,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2494,
														"src": "28743:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "28729:19:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2515,
												"nodeType": "IfStatement",
												"src": "28725:97:1",
												"trueBody": {
													"id": 2514,
													"nodeType": "Block",
													"src": "28750:72:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3838",
																		"id": 2510,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "28801:2:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_88_by_1",
																			"typeString": "int_const 88"
																		},
																		"value": "88"
																	},
																	{
																		"id": 2511,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2494,
																		"src": "28805:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_88_by_1",
																			"typeString": "int_const 88"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 2509,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1075,
																	"src": "28771:29:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$__$",
																		"typeString": "function (uint8,int256) pure"
																	}
																},
																"id": 2512,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "28771:40:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2513,
															"nodeType": "RevertStatement",
															"src": "28764:47:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2492,
										"nodeType": "StructuredDocumentation",
										"src": "28296:307:1",
										"text": " @dev Returns the downcasted int88 from int256, reverting on\n overflow (when the input is less than smallest int88 or\n greater than largest int88).\n Counterpart to Solidity's `int88` operator.\n Requirements:\n - input must fit into 88 bits"
									},
									"id": 2517,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt88",
									"nameLocation": "28617:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2495,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2494,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "28632:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 2517,
												"src": "28625:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2493,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "28625:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28624:14:1"
									},
									"returnParameters": {
										"id": 2498,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2497,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "28668:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 2517,
												"src": "28662:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int88",
													"typeString": "int88"
												},
												"typeName": {
													"id": 2496,
													"name": "int88",
													"nodeType": "ElementaryTypeName",
													"src": "28662:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int88",
														"typeString": "int88"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28661:18:1"
									},
									"scope": 2808,
									"src": "28608:220:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2542,
										"nodeType": "Block",
										"src": "29218:148:1",
										"statements": [
											{
												"expression": {
													"id": 2530,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2525,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2523,
														"src": "29228:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_int80",
															"typeString": "int80"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2528,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2520,
																"src": "29247:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 2527,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "29241:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int80_$",
																"typeString": "type(int80)"
															},
															"typeName": {
																"id": 2526,
																"name": "int80",
																"nodeType": "ElementaryTypeName",
																"src": "29241:5:1",
																"typeDescriptions": {}
															}
														},
														"id": 2529,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "29241:12:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int80",
															"typeString": "int80"
														}
													},
													"src": "29228:25:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int80",
														"typeString": "int80"
													}
												},
												"id": 2531,
												"nodeType": "ExpressionStatement",
												"src": "29228:25:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 2534,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2532,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2523,
														"src": "29267:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_int80",
															"typeString": "int80"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 2533,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2520,
														"src": "29281:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "29267:19:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2541,
												"nodeType": "IfStatement",
												"src": "29263:97:1",
												"trueBody": {
													"id": 2540,
													"nodeType": "Block",
													"src": "29288:72:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3830",
																		"id": 2536,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "29339:2:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_80_by_1",
																			"typeString": "int_const 80"
																		},
																		"value": "80"
																	},
																	{
																		"id": 2537,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2520,
																		"src": "29343:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_80_by_1",
																			"typeString": "int_const 80"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 2535,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1075,
																	"src": "29309:29:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$__$",
																		"typeString": "function (uint8,int256) pure"
																	}
																},
																"id": 2538,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "29309:40:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2539,
															"nodeType": "RevertStatement",
															"src": "29302:47:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2518,
										"nodeType": "StructuredDocumentation",
										"src": "28834:307:1",
										"text": " @dev Returns the downcasted int80 from int256, reverting on\n overflow (when the input is less than smallest int80 or\n greater than largest int80).\n Counterpart to Solidity's `int80` operator.\n Requirements:\n - input must fit into 80 bits"
									},
									"id": 2543,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt80",
									"nameLocation": "29155:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2521,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2520,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "29170:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 2543,
												"src": "29163:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2519,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "29163:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29162:14:1"
									},
									"returnParameters": {
										"id": 2524,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2523,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "29206:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 2543,
												"src": "29200:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int80",
													"typeString": "int80"
												},
												"typeName": {
													"id": 2522,
													"name": "int80",
													"nodeType": "ElementaryTypeName",
													"src": "29200:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int80",
														"typeString": "int80"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29199:18:1"
									},
									"scope": 2808,
									"src": "29146:220:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2568,
										"nodeType": "Block",
										"src": "29756:148:1",
										"statements": [
											{
												"expression": {
													"id": 2556,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2551,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2549,
														"src": "29766:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_int72",
															"typeString": "int72"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2554,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2546,
																"src": "29785:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 2553,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "29779:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int72_$",
																"typeString": "type(int72)"
															},
															"typeName": {
																"id": 2552,
																"name": "int72",
																"nodeType": "ElementaryTypeName",
																"src": "29779:5:1",
																"typeDescriptions": {}
															}
														},
														"id": 2555,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "29779:12:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int72",
															"typeString": "int72"
														}
													},
													"src": "29766:25:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int72",
														"typeString": "int72"
													}
												},
												"id": 2557,
												"nodeType": "ExpressionStatement",
												"src": "29766:25:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 2560,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2558,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2549,
														"src": "29805:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_int72",
															"typeString": "int72"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 2559,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2546,
														"src": "29819:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "29805:19:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2567,
												"nodeType": "IfStatement",
												"src": "29801:97:1",
												"trueBody": {
													"id": 2566,
													"nodeType": "Block",
													"src": "29826:72:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3732",
																		"id": 2562,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "29877:2:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_72_by_1",
																			"typeString": "int_const 72"
																		},
																		"value": "72"
																	},
																	{
																		"id": 2563,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2546,
																		"src": "29881:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_72_by_1",
																			"typeString": "int_const 72"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 2561,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1075,
																	"src": "29847:29:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$__$",
																		"typeString": "function (uint8,int256) pure"
																	}
																},
																"id": 2564,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "29847:40:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2565,
															"nodeType": "RevertStatement",
															"src": "29840:47:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2544,
										"nodeType": "StructuredDocumentation",
										"src": "29372:307:1",
										"text": " @dev Returns the downcasted int72 from int256, reverting on\n overflow (when the input is less than smallest int72 or\n greater than largest int72).\n Counterpart to Solidity's `int72` operator.\n Requirements:\n - input must fit into 72 bits"
									},
									"id": 2569,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt72",
									"nameLocation": "29693:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2547,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2546,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "29708:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 2569,
												"src": "29701:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2545,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "29701:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29700:14:1"
									},
									"returnParameters": {
										"id": 2550,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2549,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "29744:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 2569,
												"src": "29738:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int72",
													"typeString": "int72"
												},
												"typeName": {
													"id": 2548,
													"name": "int72",
													"nodeType": "ElementaryTypeName",
													"src": "29738:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int72",
														"typeString": "int72"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29737:18:1"
									},
									"scope": 2808,
									"src": "29684:220:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2594,
										"nodeType": "Block",
										"src": "30294:148:1",
										"statements": [
											{
												"expression": {
													"id": 2582,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2577,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2575,
														"src": "30304:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_int64",
															"typeString": "int64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2580,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2572,
																"src": "30323:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 2579,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "30317:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int64_$",
																"typeString": "type(int64)"
															},
															"typeName": {
																"id": 2578,
																"name": "int64",
																"nodeType": "ElementaryTypeName",
																"src": "30317:5:1",
																"typeDescriptions": {}
															}
														},
														"id": 2581,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "30317:12:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int64",
															"typeString": "int64"
														}
													},
													"src": "30304:25:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int64",
														"typeString": "int64"
													}
												},
												"id": 2583,
												"nodeType": "ExpressionStatement",
												"src": "30304:25:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 2586,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2584,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2575,
														"src": "30343:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_int64",
															"typeString": "int64"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 2585,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2572,
														"src": "30357:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "30343:19:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2593,
												"nodeType": "IfStatement",
												"src": "30339:97:1",
												"trueBody": {
													"id": 2592,
													"nodeType": "Block",
													"src": "30364:72:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3634",
																		"id": 2588,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "30415:2:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_64_by_1",
																			"typeString": "int_const 64"
																		},
																		"value": "64"
																	},
																	{
																		"id": 2589,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2572,
																		"src": "30419:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_64_by_1",
																			"typeString": "int_const 64"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 2587,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1075,
																	"src": "30385:29:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$__$",
																		"typeString": "function (uint8,int256) pure"
																	}
																},
																"id": 2590,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "30385:40:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2591,
															"nodeType": "RevertStatement",
															"src": "30378:47:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2570,
										"nodeType": "StructuredDocumentation",
										"src": "29910:307:1",
										"text": " @dev Returns the downcasted int64 from int256, reverting on\n overflow (when the input is less than smallest int64 or\n greater than largest int64).\n Counterpart to Solidity's `int64` operator.\n Requirements:\n - input must fit into 64 bits"
									},
									"id": 2595,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt64",
									"nameLocation": "30231:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2573,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2572,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "30246:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 2595,
												"src": "30239:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2571,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "30239:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30238:14:1"
									},
									"returnParameters": {
										"id": 2576,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2575,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "30282:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 2595,
												"src": "30276:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int64",
													"typeString": "int64"
												},
												"typeName": {
													"id": 2574,
													"name": "int64",
													"nodeType": "ElementaryTypeName",
													"src": "30276:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int64",
														"typeString": "int64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30275:18:1"
									},
									"scope": 2808,
									"src": "30222:220:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2620,
										"nodeType": "Block",
										"src": "30832:148:1",
										"statements": [
											{
												"expression": {
													"id": 2608,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2603,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2601,
														"src": "30842:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_int56",
															"typeString": "int56"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2606,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2598,
																"src": "30861:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 2605,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "30855:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int56_$",
																"typeString": "type(int56)"
															},
															"typeName": {
																"id": 2604,
																"name": "int56",
																"nodeType": "ElementaryTypeName",
																"src": "30855:5:1",
																"typeDescriptions": {}
															}
														},
														"id": 2607,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "30855:12:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int56",
															"typeString": "int56"
														}
													},
													"src": "30842:25:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int56",
														"typeString": "int56"
													}
												},
												"id": 2609,
												"nodeType": "ExpressionStatement",
												"src": "30842:25:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 2612,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2610,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2601,
														"src": "30881:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_int56",
															"typeString": "int56"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 2611,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2598,
														"src": "30895:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "30881:19:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2619,
												"nodeType": "IfStatement",
												"src": "30877:97:1",
												"trueBody": {
													"id": 2618,
													"nodeType": "Block",
													"src": "30902:72:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3536",
																		"id": 2614,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "30953:2:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_56_by_1",
																			"typeString": "int_const 56"
																		},
																		"value": "56"
																	},
																	{
																		"id": 2615,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2598,
																		"src": "30957:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_56_by_1",
																			"typeString": "int_const 56"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 2613,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1075,
																	"src": "30923:29:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$__$",
																		"typeString": "function (uint8,int256) pure"
																	}
																},
																"id": 2616,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "30923:40:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2617,
															"nodeType": "RevertStatement",
															"src": "30916:47:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2596,
										"nodeType": "StructuredDocumentation",
										"src": "30448:307:1",
										"text": " @dev Returns the downcasted int56 from int256, reverting on\n overflow (when the input is less than smallest int56 or\n greater than largest int56).\n Counterpart to Solidity's `int56` operator.\n Requirements:\n - input must fit into 56 bits"
									},
									"id": 2621,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt56",
									"nameLocation": "30769:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2599,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2598,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "30784:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 2621,
												"src": "30777:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2597,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "30777:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30776:14:1"
									},
									"returnParameters": {
										"id": 2602,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2601,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "30820:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 2621,
												"src": "30814:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int56",
													"typeString": "int56"
												},
												"typeName": {
													"id": 2600,
													"name": "int56",
													"nodeType": "ElementaryTypeName",
													"src": "30814:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int56",
														"typeString": "int56"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30813:18:1"
									},
									"scope": 2808,
									"src": "30760:220:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2646,
										"nodeType": "Block",
										"src": "31370:148:1",
										"statements": [
											{
												"expression": {
													"id": 2634,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2629,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2627,
														"src": "31380:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_int48",
															"typeString": "int48"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2632,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2624,
																"src": "31399:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 2631,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "31393:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int48_$",
																"typeString": "type(int48)"
															},
															"typeName": {
																"id": 2630,
																"name": "int48",
																"nodeType": "ElementaryTypeName",
																"src": "31393:5:1",
																"typeDescriptions": {}
															}
														},
														"id": 2633,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "31393:12:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int48",
															"typeString": "int48"
														}
													},
													"src": "31380:25:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int48",
														"typeString": "int48"
													}
												},
												"id": 2635,
												"nodeType": "ExpressionStatement",
												"src": "31380:25:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 2638,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2636,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2627,
														"src": "31419:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_int48",
															"typeString": "int48"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 2637,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2624,
														"src": "31433:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "31419:19:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2645,
												"nodeType": "IfStatement",
												"src": "31415:97:1",
												"trueBody": {
													"id": 2644,
													"nodeType": "Block",
													"src": "31440:72:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3438",
																		"id": 2640,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "31491:2:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_48_by_1",
																			"typeString": "int_const 48"
																		},
																		"value": "48"
																	},
																	{
																		"id": 2641,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2624,
																		"src": "31495:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_48_by_1",
																			"typeString": "int_const 48"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 2639,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1075,
																	"src": "31461:29:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$__$",
																		"typeString": "function (uint8,int256) pure"
																	}
																},
																"id": 2642,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "31461:40:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2643,
															"nodeType": "RevertStatement",
															"src": "31454:47:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2622,
										"nodeType": "StructuredDocumentation",
										"src": "30986:307:1",
										"text": " @dev Returns the downcasted int48 from int256, reverting on\n overflow (when the input is less than smallest int48 or\n greater than largest int48).\n Counterpart to Solidity's `int48` operator.\n Requirements:\n - input must fit into 48 bits"
									},
									"id": 2647,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt48",
									"nameLocation": "31307:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2625,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2624,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "31322:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 2647,
												"src": "31315:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2623,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "31315:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31314:14:1"
									},
									"returnParameters": {
										"id": 2628,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2627,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "31358:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 2647,
												"src": "31352:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int48",
													"typeString": "int48"
												},
												"typeName": {
													"id": 2626,
													"name": "int48",
													"nodeType": "ElementaryTypeName",
													"src": "31352:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int48",
														"typeString": "int48"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31351:18:1"
									},
									"scope": 2808,
									"src": "31298:220:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2672,
										"nodeType": "Block",
										"src": "31908:148:1",
										"statements": [
											{
												"expression": {
													"id": 2660,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2655,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2653,
														"src": "31918:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_int40",
															"typeString": "int40"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2658,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2650,
																"src": "31937:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 2657,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "31931:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int40_$",
																"typeString": "type(int40)"
															},
															"typeName": {
																"id": 2656,
																"name": "int40",
																"nodeType": "ElementaryTypeName",
																"src": "31931:5:1",
																"typeDescriptions": {}
															}
														},
														"id": 2659,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "31931:12:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int40",
															"typeString": "int40"
														}
													},
													"src": "31918:25:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int40",
														"typeString": "int40"
													}
												},
												"id": 2661,
												"nodeType": "ExpressionStatement",
												"src": "31918:25:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 2664,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2662,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2653,
														"src": "31957:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_int40",
															"typeString": "int40"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 2663,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2650,
														"src": "31971:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "31957:19:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2671,
												"nodeType": "IfStatement",
												"src": "31953:97:1",
												"trueBody": {
													"id": 2670,
													"nodeType": "Block",
													"src": "31978:72:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3430",
																		"id": 2666,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "32029:2:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_40_by_1",
																			"typeString": "int_const 40"
																		},
																		"value": "40"
																	},
																	{
																		"id": 2667,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2650,
																		"src": "32033:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_40_by_1",
																			"typeString": "int_const 40"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 2665,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1075,
																	"src": "31999:29:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$__$",
																		"typeString": "function (uint8,int256) pure"
																	}
																},
																"id": 2668,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "31999:40:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2669,
															"nodeType": "RevertStatement",
															"src": "31992:47:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2648,
										"nodeType": "StructuredDocumentation",
										"src": "31524:307:1",
										"text": " @dev Returns the downcasted int40 from int256, reverting on\n overflow (when the input is less than smallest int40 or\n greater than largest int40).\n Counterpart to Solidity's `int40` operator.\n Requirements:\n - input must fit into 40 bits"
									},
									"id": 2673,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt40",
									"nameLocation": "31845:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2651,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2650,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "31860:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 2673,
												"src": "31853:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2649,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "31853:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31852:14:1"
									},
									"returnParameters": {
										"id": 2654,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2653,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "31896:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 2673,
												"src": "31890:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int40",
													"typeString": "int40"
												},
												"typeName": {
													"id": 2652,
													"name": "int40",
													"nodeType": "ElementaryTypeName",
													"src": "31890:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int40",
														"typeString": "int40"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31889:18:1"
									},
									"scope": 2808,
									"src": "31836:220:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2698,
										"nodeType": "Block",
										"src": "32446:148:1",
										"statements": [
											{
												"expression": {
													"id": 2686,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2681,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2679,
														"src": "32456:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_int32",
															"typeString": "int32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2684,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2676,
																"src": "32475:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 2683,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "32469:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int32_$",
																"typeString": "type(int32)"
															},
															"typeName": {
																"id": 2682,
																"name": "int32",
																"nodeType": "ElementaryTypeName",
																"src": "32469:5:1",
																"typeDescriptions": {}
															}
														},
														"id": 2685,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "32469:12:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int32",
															"typeString": "int32"
														}
													},
													"src": "32456:25:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int32",
														"typeString": "int32"
													}
												},
												"id": 2687,
												"nodeType": "ExpressionStatement",
												"src": "32456:25:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 2690,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2688,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2679,
														"src": "32495:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_int32",
															"typeString": "int32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 2689,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2676,
														"src": "32509:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "32495:19:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2697,
												"nodeType": "IfStatement",
												"src": "32491:97:1",
												"trueBody": {
													"id": 2696,
													"nodeType": "Block",
													"src": "32516:72:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3332",
																		"id": 2692,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "32567:2:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_32_by_1",
																			"typeString": "int_const 32"
																		},
																		"value": "32"
																	},
																	{
																		"id": 2693,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2676,
																		"src": "32571:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_32_by_1",
																			"typeString": "int_const 32"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 2691,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1075,
																	"src": "32537:29:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$__$",
																		"typeString": "function (uint8,int256) pure"
																	}
																},
																"id": 2694,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "32537:40:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2695,
															"nodeType": "RevertStatement",
															"src": "32530:47:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2674,
										"nodeType": "StructuredDocumentation",
										"src": "32062:307:1",
										"text": " @dev Returns the downcasted int32 from int256, reverting on\n overflow (when the input is less than smallest int32 or\n greater than largest int32).\n Counterpart to Solidity's `int32` operator.\n Requirements:\n - input must fit into 32 bits"
									},
									"id": 2699,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt32",
									"nameLocation": "32383:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2677,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2676,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "32398:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 2699,
												"src": "32391:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2675,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "32391:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32390:14:1"
									},
									"returnParameters": {
										"id": 2680,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2679,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "32434:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 2699,
												"src": "32428:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int32",
													"typeString": "int32"
												},
												"typeName": {
													"id": 2678,
													"name": "int32",
													"nodeType": "ElementaryTypeName",
													"src": "32428:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int32",
														"typeString": "int32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32427:18:1"
									},
									"scope": 2808,
									"src": "32374:220:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2724,
										"nodeType": "Block",
										"src": "32984:148:1",
										"statements": [
											{
												"expression": {
													"id": 2712,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2707,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2705,
														"src": "32994:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2710,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2702,
																"src": "33013:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 2709,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "33007:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int24_$",
																"typeString": "type(int24)"
															},
															"typeName": {
																"id": 2708,
																"name": "int24",
																"nodeType": "ElementaryTypeName",
																"src": "33007:5:1",
																"typeDescriptions": {}
															}
														},
														"id": 2711,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "33007:12:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														}
													},
													"src": "32994:25:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"id": 2713,
												"nodeType": "ExpressionStatement",
												"src": "32994:25:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 2716,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2714,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2705,
														"src": "33033:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 2715,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2702,
														"src": "33047:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "33033:19:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2723,
												"nodeType": "IfStatement",
												"src": "33029:97:1",
												"trueBody": {
													"id": 2722,
													"nodeType": "Block",
													"src": "33054:72:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3234",
																		"id": 2718,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "33105:2:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_24_by_1",
																			"typeString": "int_const 24"
																		},
																		"value": "24"
																	},
																	{
																		"id": 2719,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2702,
																		"src": "33109:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_24_by_1",
																			"typeString": "int_const 24"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 2717,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1075,
																	"src": "33075:29:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$__$",
																		"typeString": "function (uint8,int256) pure"
																	}
																},
																"id": 2720,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "33075:40:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2721,
															"nodeType": "RevertStatement",
															"src": "33068:47:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2700,
										"nodeType": "StructuredDocumentation",
										"src": "32600:307:1",
										"text": " @dev Returns the downcasted int24 from int256, reverting on\n overflow (when the input is less than smallest int24 or\n greater than largest int24).\n Counterpart to Solidity's `int24` operator.\n Requirements:\n - input must fit into 24 bits"
									},
									"id": 2725,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt24",
									"nameLocation": "32921:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2703,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2702,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "32936:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 2725,
												"src": "32929:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2701,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "32929:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32928:14:1"
									},
									"returnParameters": {
										"id": 2706,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2705,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "32972:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 2725,
												"src": "32966:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 2704,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "32966:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32965:18:1"
									},
									"scope": 2808,
									"src": "32912:220:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2750,
										"nodeType": "Block",
										"src": "33522:148:1",
										"statements": [
											{
												"expression": {
													"id": 2738,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2733,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2731,
														"src": "33532:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_int16",
															"typeString": "int16"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2736,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2728,
																"src": "33551:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 2735,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "33545:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int16_$",
																"typeString": "type(int16)"
															},
															"typeName": {
																"id": 2734,
																"name": "int16",
																"nodeType": "ElementaryTypeName",
																"src": "33545:5:1",
																"typeDescriptions": {}
															}
														},
														"id": 2737,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "33545:12:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int16",
															"typeString": "int16"
														}
													},
													"src": "33532:25:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int16",
														"typeString": "int16"
													}
												},
												"id": 2739,
												"nodeType": "ExpressionStatement",
												"src": "33532:25:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 2742,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2740,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2731,
														"src": "33571:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_int16",
															"typeString": "int16"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 2741,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2728,
														"src": "33585:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "33571:19:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2749,
												"nodeType": "IfStatement",
												"src": "33567:97:1",
												"trueBody": {
													"id": 2748,
													"nodeType": "Block",
													"src": "33592:72:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3136",
																		"id": 2744,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "33643:2:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_16_by_1",
																			"typeString": "int_const 16"
																		},
																		"value": "16"
																	},
																	{
																		"id": 2745,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2728,
																		"src": "33647:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_16_by_1",
																			"typeString": "int_const 16"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 2743,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1075,
																	"src": "33613:29:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$__$",
																		"typeString": "function (uint8,int256) pure"
																	}
																},
																"id": 2746,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "33613:40:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2747,
															"nodeType": "RevertStatement",
															"src": "33606:47:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2726,
										"nodeType": "StructuredDocumentation",
										"src": "33138:307:1",
										"text": " @dev Returns the downcasted int16 from int256, reverting on\n overflow (when the input is less than smallest int16 or\n greater than largest int16).\n Counterpart to Solidity's `int16` operator.\n Requirements:\n - input must fit into 16 bits"
									},
									"id": 2751,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt16",
									"nameLocation": "33459:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2729,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2728,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "33474:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 2751,
												"src": "33467:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2727,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "33467:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "33466:14:1"
									},
									"returnParameters": {
										"id": 2732,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2731,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "33510:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 2751,
												"src": "33504:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int16",
													"typeString": "int16"
												},
												"typeName": {
													"id": 2730,
													"name": "int16",
													"nodeType": "ElementaryTypeName",
													"src": "33504:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int16",
														"typeString": "int16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "33503:18:1"
									},
									"scope": 2808,
									"src": "33450:220:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2776,
										"nodeType": "Block",
										"src": "34053:146:1",
										"statements": [
											{
												"expression": {
													"id": 2764,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2759,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2757,
														"src": "34063:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_int8",
															"typeString": "int8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2762,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2754,
																"src": "34081:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 2761,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "34076:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int8_$",
																"typeString": "type(int8)"
															},
															"typeName": {
																"id": 2760,
																"name": "int8",
																"nodeType": "ElementaryTypeName",
																"src": "34076:4:1",
																"typeDescriptions": {}
															}
														},
														"id": 2763,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "34076:11:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int8",
															"typeString": "int8"
														}
													},
													"src": "34063:24:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int8",
														"typeString": "int8"
													}
												},
												"id": 2765,
												"nodeType": "ExpressionStatement",
												"src": "34063:24:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 2768,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2766,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2757,
														"src": "34101:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_int8",
															"typeString": "int8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 2767,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2754,
														"src": "34115:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "34101:19:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2775,
												"nodeType": "IfStatement",
												"src": "34097:96:1",
												"trueBody": {
													"id": 2774,
													"nodeType": "Block",
													"src": "34122:71:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "38",
																		"id": 2770,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "34173:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_8_by_1",
																			"typeString": "int_const 8"
																		},
																		"value": "8"
																	},
																	{
																		"id": 2771,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2754,
																		"src": "34176:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_8_by_1",
																			"typeString": "int_const 8"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 2769,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1075,
																	"src": "34143:29:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$__$",
																		"typeString": "function (uint8,int256) pure"
																	}
																},
																"id": 2772,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "34143:39:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2773,
															"nodeType": "RevertStatement",
															"src": "34136:46:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2752,
										"nodeType": "StructuredDocumentation",
										"src": "33676:302:1",
										"text": " @dev Returns the downcasted int8 from int256, reverting on\n overflow (when the input is less than smallest int8 or\n greater than largest int8).\n Counterpart to Solidity's `int8` operator.\n Requirements:\n - input must fit into 8 bits"
									},
									"id": 2777,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt8",
									"nameLocation": "33992:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2755,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2754,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "34006:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 2777,
												"src": "33999:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2753,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "33999:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "33998:14:1"
									},
									"returnParameters": {
										"id": 2758,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2757,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "34041:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 2777,
												"src": "34036:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int8",
													"typeString": "int8"
												},
												"typeName": {
													"id": 2756,
													"name": "int8",
													"nodeType": "ElementaryTypeName",
													"src": "34036:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int8",
														"typeString": "int8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34035:17:1"
									},
									"scope": 2808,
									"src": "33983:216:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2806,
										"nodeType": "Block",
										"src": "34439:250:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2794,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2785,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2780,
														"src": "34552:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"arguments": [
															{
																"expression": {
																	"arguments": [
																		{
																			"id": 2790,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "34573:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_int256_$",
																				"typeString": "type(int256)"
																			},
																			"typeName": {
																				"id": 2789,
																				"name": "int256",
																				"nodeType": "ElementaryTypeName",
																				"src": "34573:6:1",
																				"typeDescriptions": {}
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_int256_$",
																				"typeString": "type(int256)"
																			}
																		],
																		"id": 2788,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "34568:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 2791,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "34568:12:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_int256",
																		"typeString": "type(int256)"
																	}
																},
																"id": 2792,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "34581:3:1",
																"memberName": "max",
																"nodeType": "MemberAccess",
																"src": "34568:16:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 2787,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "34560:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															},
															"typeName": {
																"id": 2786,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "34560:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 2793,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "34560:25:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "34552:33:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2800,
												"nodeType": "IfStatement",
												"src": "34548:105:1",
												"trueBody": {
													"id": 2799,
													"nodeType": "Block",
													"src": "34587:66:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 2796,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2780,
																		"src": "34636:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2795,
																	"name": "SafeCastOverflowedUintToInt",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1080,
																	"src": "34608:27:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																		"typeString": "function (uint256) pure"
																	}
																},
																"id": 2797,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "34608:34:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2798,
															"nodeType": "RevertStatement",
															"src": "34601:41:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2803,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2780,
															"src": "34676:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2802,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "34669:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_int256_$",
															"typeString": "type(int256)"
														},
														"typeName": {
															"id": 2801,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "34669:6:1",
															"typeDescriptions": {}
														}
													},
													"id": 2804,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "34669:13:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 2784,
												"id": 2805,
												"nodeType": "Return",
												"src": "34662:20:1"
											}
										]
									},
									"documentation": {
										"id": 2778,
										"nodeType": "StructuredDocumentation",
										"src": "34205:165:1",
										"text": " @dev Converts an unsigned uint256 into a signed int256.\n Requirements:\n - input must be less than or equal to maxInt256."
									},
									"id": 2807,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt256",
									"nameLocation": "34384:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2781,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2780,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "34401:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 2807,
												"src": "34393:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2779,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "34393:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34392:15:1"
									},
									"returnParameters": {
										"id": 2784,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2783,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2807,
												"src": "34431:6:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2782,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "34431:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34430:8:1"
									},
									"scope": 2808,
									"src": "34375:314:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2809,
							"src": "764:33927:1",
							"usedErrors": [
								1063,
								1068,
								1075,
								1080
							],
							"usedEvents": []
						}
					],
					"src": "192:34500:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/utils/types/Time.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/types/Time.sol",
					"exportedSymbols": {
						"Math": [
							1053
						],
						"SafeCast": [
							2808
						],
						"Time": [
							3083
						]
					},
					"id": 3084,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2810,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "104:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
							"file": "../math/Math.sol",
							"id": 2812,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3084,
							"sourceUnit": 1054,
							"src": "130:38:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2811,
										"name": "Math",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1053,
										"src": "138:4:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SafeCast.sol",
							"file": "../math/SafeCast.sol",
							"id": 2814,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3084,
							"sourceUnit": 2809,
							"src": "169:46:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2813,
										"name": "SafeCast",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2808,
										"src": "177:8:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Time",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2815,
								"nodeType": "StructuredDocumentation",
								"src": "217:422:2",
								"text": " @dev This library provides helpers for manipulating time-related objects.\n It uses the following types:\n - `uint48` for timepoints\n - `uint32` for durations\n While the library doesn't provide specific types for timepoints and duration, it does provide:\n - a `Delay` type to represent duration that can be programmed to change value automatically at a given point\n - additional helper functions"
							},
							"fullyImplemented": true,
							"id": 3083,
							"linearizedBaseContracts": [
								3083
							],
							"name": "Time",
							"nameLocation": "648:4:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 2817,
									"libraryName": {
										"id": 2816,
										"name": "Time",
										"nameLocations": [
											"665:4:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 3083,
										"src": "665:4:2"
									},
									"nodeType": "UsingForDirective",
									"src": "659:17:2"
								},
								{
									"body": {
										"id": 2829,
										"nodeType": "Block",
										"src": "802:58:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 2825,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "837:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 2826,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "843:9:2",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "837:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2823,
															"name": "SafeCast",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2808,
															"src": "819:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_SafeCast_$2808_$",
																"typeString": "type(library SafeCast)"
															}
														},
														"id": 2824,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "828:8:2",
														"memberName": "toUint48",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1808,
														"src": "819:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint48_$",
															"typeString": "function (uint256) pure returns (uint48)"
														}
													},
													"id": 2827,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "819:34:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint48",
														"typeString": "uint48"
													}
												},
												"functionReturnParameters": 2822,
												"id": 2828,
												"nodeType": "Return",
												"src": "812:41:2"
											}
										]
									},
									"documentation": {
										"id": 2818,
										"nodeType": "StructuredDocumentation",
										"src": "682:63:2",
										"text": " @dev Get the block timestamp as a Timepoint."
									},
									"id": 2830,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "timestamp",
									"nameLocation": "759:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2819,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "768:2:2"
									},
									"returnParameters": {
										"id": 2822,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2821,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2830,
												"src": "794:6:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint48",
													"typeString": "uint48"
												},
												"typeName": {
													"id": 2820,
													"name": "uint48",
													"nodeType": "ElementaryTypeName",
													"src": "794:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint48",
														"typeString": "uint48"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "793:8:2"
									},
									"scope": 3083,
									"src": "750:110:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2842,
										"nodeType": "Block",
										"src": "985:55:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 2838,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "1020:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 2839,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1026:6:2",
															"memberName": "number",
															"nodeType": "MemberAccess",
															"src": "1020:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2836,
															"name": "SafeCast",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2808,
															"src": "1002:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_SafeCast_$2808_$",
																"typeString": "type(library SafeCast)"
															}
														},
														"id": 2837,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1011:8:2",
														"memberName": "toUint48",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1808,
														"src": "1002:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint48_$",
															"typeString": "function (uint256) pure returns (uint48)"
														}
													},
													"id": 2840,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1002:31:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint48",
														"typeString": "uint48"
													}
												},
												"functionReturnParameters": 2835,
												"id": 2841,
												"nodeType": "Return",
												"src": "995:38:2"
											}
										]
									},
									"documentation": {
										"id": 2831,
										"nodeType": "StructuredDocumentation",
										"src": "866:60:2",
										"text": " @dev Get the block number as a Timepoint."
									},
									"id": 2843,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "blockNumber",
									"nameLocation": "940:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2832,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "951:2:2"
									},
									"returnParameters": {
										"id": 2835,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2834,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2843,
												"src": "977:6:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint48",
													"typeString": "uint48"
												},
												"typeName": {
													"id": 2833,
													"name": "uint48",
													"nodeType": "ElementaryTypeName",
													"src": "977:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint48",
														"typeString": "uint48"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "976:8:2"
									},
									"scope": 3083,
									"src": "931:109:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"canonicalName": "Time.Delay",
									"id": 2845,
									"name": "Delay",
									"nameLocation": "2377:5:2",
									"nodeType": "UserDefinedValueTypeDefinition",
									"src": "2372:22:2",
									"underlyingType": {
										"id": 2844,
										"name": "uint112",
										"nodeType": "ElementaryTypeName",
										"src": "2386:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint112",
											"typeString": "uint112"
										}
									}
								},
								{
									"body": {
										"id": 2859,
										"nodeType": "Block",
										"src": "2572:44:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2856,
															"name": "duration",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2848,
															"src": "2600:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														],
														"expression": {
															"id": 2854,
															"name": "Delay",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2845,
															"src": "2589:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_userDefinedValueType$_Delay_$2845_$",
																"typeString": "type(Time.Delay)"
															}
														},
														"id": 2855,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "2595:4:2",
														"memberName": "wrap",
														"nodeType": "MemberAccess",
														"src": "2589:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_wrap_pure$_t_uint112_$returns$_t_userDefinedValueType$_Delay_$2845_$",
															"typeString": "function (uint112) pure returns (Time.Delay)"
														}
													},
													"id": 2857,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2589:20:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_Delay_$2845",
														"typeString": "Time.Delay"
													}
												},
												"functionReturnParameters": 2853,
												"id": 2858,
												"nodeType": "Return",
												"src": "2582:27:2"
											}
										]
									},
									"documentation": {
										"id": 2846,
										"nodeType": "StructuredDocumentation",
										"src": "2400:103:2",
										"text": " @dev Wrap a duration into a Delay to add the one-step \"update in the future\" feature"
									},
									"id": 2860,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toDelay",
									"nameLocation": "2517:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2849,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2848,
												"mutability": "mutable",
												"name": "duration",
												"nameLocation": "2532:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 2860,
												"src": "2525:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 2847,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "2525:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2524:17:2"
									},
									"returnParameters": {
										"id": 2853,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2852,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2860,
												"src": "2565:5:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_userDefinedValueType$_Delay_$2845",
													"typeString": "Time.Delay"
												},
												"typeName": {
													"id": 2851,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2850,
														"name": "Delay",
														"nameLocations": [
															"2565:5:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2845,
														"src": "2565:5:2"
													},
													"referencedDeclaration": 2845,
													"src": "2565:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_Delay_$2845",
														"typeString": "Time.Delay"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2564:7:2"
									},
									"scope": 3083,
									"src": "2508:108:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2898,
										"nodeType": "Block",
										"src": "2964:180:2",
										"statements": [
											{
												"assignments": [
													2876,
													2878,
													2880
												],
												"declarations": [
													{
														"constant": false,
														"id": 2876,
														"mutability": "mutable",
														"name": "valueBefore",
														"nameLocation": "2982:11:2",
														"nodeType": "VariableDeclaration",
														"scope": 2898,
														"src": "2975:18:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														},
														"typeName": {
															"id": 2875,
															"name": "uint32",
															"nodeType": "ElementaryTypeName",
															"src": "2975:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2878,
														"mutability": "mutable",
														"name": "valueAfter",
														"nameLocation": "3002:10:2",
														"nodeType": "VariableDeclaration",
														"scope": 2898,
														"src": "2995:17:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														},
														"typeName": {
															"id": 2877,
															"name": "uint32",
															"nodeType": "ElementaryTypeName",
															"src": "2995:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2880,
														"mutability": "mutable",
														"name": "effect",
														"nameLocation": "3021:6:2",
														"nodeType": "VariableDeclaration",
														"scope": 2898,
														"src": "3014:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint48",
															"typeString": "uint48"
														},
														"typeName": {
															"id": 2879,
															"name": "uint48",
															"nodeType": "ElementaryTypeName",
															"src": "3014:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint48",
																"typeString": "uint48"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2884,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 2881,
															"name": "self",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2864,
															"src": "3031:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_userDefinedValueType$_Delay_$2845",
																"typeString": "Time.Delay"
															}
														},
														"id": 2882,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3036:6:2",
														"memberName": "unpack",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3044,
														"src": "3031:11:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_userDefinedValueType$_Delay_$2845_$returns$_t_uint32_$_t_uint32_$_t_uint48_$attached_to$_t_userDefinedValueType$_Delay_$2845_$",
															"typeString": "function (Time.Delay) pure returns (uint32,uint32,uint48)"
														}
													},
													"id": 2883,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3031:13:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint32_$_t_uint32_$_t_uint48_$",
														"typeString": "tuple(uint32,uint32,uint48)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2974:70:2"
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint48",
															"typeString": "uint48"
														},
														"id": 2887,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2885,
															"name": "effect",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2880,
															"src": "3061:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint48",
																"typeString": "uint48"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<=",
														"rightExpression": {
															"id": 2886,
															"name": "timepoint",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2866,
															"src": "3071:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint48",
																"typeString": "uint48"
															}
														},
														"src": "3061:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"components": [
															{
																"id": 2892,
																"name": "valueBefore",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2876,
																"src": "3105:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																}
															},
															{
																"id": 2893,
																"name": "valueAfter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2878,
																"src": "3118:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																}
															},
															{
																"id": 2894,
																"name": "effect",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2880,
																"src": "3130:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint48",
																	"typeString": "uint48"
																}
															}
														],
														"id": 2895,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "3104:33:2",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_uint32_$_t_uint32_$_t_uint48_$",
															"typeString": "tuple(uint32,uint32,uint48)"
														}
													},
													"id": 2896,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "3061:76:2",
													"trueExpression": {
														"components": [
															{
																"id": 2888,
																"name": "valueAfter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2878,
																"src": "3084:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																}
															},
															{
																"hexValue": "30",
																"id": 2889,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3096:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															{
																"hexValue": "30",
																"id": 2890,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3099:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"id": 2891,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "3083:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_uint32_$_t_rational_0_by_1_$_t_rational_0_by_1_$",
															"typeString": "tuple(uint32,int_const 0,int_const 0)"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint32_$_t_uint32_$_t_uint48_$",
														"typeString": "tuple(uint32,uint32,uint48)"
													}
												},
												"functionReturnParameters": 2874,
												"id": 2897,
												"nodeType": "Return",
												"src": "3054:83:2"
											}
										]
									},
									"documentation": {
										"id": 2861,
										"nodeType": "StructuredDocumentation",
										"src": "2622:241:2",
										"text": " @dev Get the value at a given timepoint plus the pending value and effect timepoint if there is a scheduled\n change after this timepoint. If the effect timepoint is 0, then the pending value should not be considered."
									},
									"id": 2899,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getFullAt",
									"nameLocation": "2877:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2867,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2864,
												"mutability": "mutable",
												"name": "self",
												"nameLocation": "2894:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 2899,
												"src": "2888:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_userDefinedValueType$_Delay_$2845",
													"typeString": "Time.Delay"
												},
												"typeName": {
													"id": 2863,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2862,
														"name": "Delay",
														"nameLocations": [
															"2888:5:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2845,
														"src": "2888:5:2"
													},
													"referencedDeclaration": 2845,
													"src": "2888:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_Delay_$2845",
														"typeString": "Time.Delay"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2866,
												"mutability": "mutable",
												"name": "timepoint",
												"nameLocation": "2907:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 2899,
												"src": "2900:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint48",
													"typeString": "uint48"
												},
												"typeName": {
													"id": 2865,
													"name": "uint48",
													"nodeType": "ElementaryTypeName",
													"src": "2900:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint48",
														"typeString": "uint48"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2887:30:2"
									},
									"returnParameters": {
										"id": 2874,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2869,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2899,
												"src": "2940:6:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 2868,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "2940:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2871,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2899,
												"src": "2948:6:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 2870,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "2948:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2873,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2899,
												"src": "2956:6:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint48",
													"typeString": "uint48"
												},
												"typeName": {
													"id": 2872,
													"name": "uint48",
													"nodeType": "ElementaryTypeName",
													"src": "2956:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint48",
														"typeString": "uint48"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:24:2"
									},
									"scope": 3083,
									"src": "2868:276:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 2918,
										"nodeType": "Block",
										"src": "3438:53:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2913,
															"name": "self",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2903,
															"src": "3466:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_userDefinedValueType$_Delay_$2845",
																"typeString": "Time.Delay"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 2914,
																"name": "timestamp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2830,
																"src": "3472:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_uint48_$",
																	"typeString": "function () view returns (uint48)"
																}
															},
															"id": 2915,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3472:11:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint48",
																"typeString": "uint48"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_userDefinedValueType$_Delay_$2845",
																"typeString": "Time.Delay"
															},
															{
																"typeIdentifier": "t_uint48",
																"typeString": "uint48"
															}
														],
														"id": 2912,
														"name": "_getFullAt",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2899,
														"src": "3455:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_userDefinedValueType$_Delay_$2845_$_t_uint48_$returns$_t_uint32_$_t_uint32_$_t_uint48_$",
															"typeString": "function (Time.Delay,uint48) pure returns (uint32,uint32,uint48)"
														}
													},
													"id": 2916,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3455:29:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint32_$_t_uint32_$_t_uint48_$",
														"typeString": "tuple(uint32,uint32,uint48)"
													}
												},
												"functionReturnParameters": 2911,
												"id": 2917,
												"nodeType": "Return",
												"src": "3448:36:2"
											}
										]
									},
									"documentation": {
										"id": 2900,
										"nodeType": "StructuredDocumentation",
										"src": "3150:207:2",
										"text": " @dev Get the current value plus the pending value and effect timepoint if there is a scheduled change. If the\n effect timepoint is 0, then the pending value should not be considered."
									},
									"id": 2919,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getFull",
									"nameLocation": "3371:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2904,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2903,
												"mutability": "mutable",
												"name": "self",
												"nameLocation": "3385:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 2919,
												"src": "3379:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_userDefinedValueType$_Delay_$2845",
													"typeString": "Time.Delay"
												},
												"typeName": {
													"id": 2902,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2901,
														"name": "Delay",
														"nameLocations": [
															"3379:5:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2845,
														"src": "3379:5:2"
													},
													"referencedDeclaration": 2845,
													"src": "3379:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_Delay_$2845",
														"typeString": "Time.Delay"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3378:12:2"
									},
									"returnParameters": {
										"id": 2911,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2906,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2919,
												"src": "3414:6:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 2905,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "3414:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2908,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2919,
												"src": "3422:6:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 2907,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "3422:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2910,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2919,
												"src": "3430:6:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint48",
													"typeString": "uint48"
												},
												"typeName": {
													"id": 2909,
													"name": "uint48",
													"nodeType": "ElementaryTypeName",
													"src": "3430:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint48",
														"typeString": "uint48"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3413:24:2"
									},
									"scope": 3083,
									"src": "3362:129:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2936,
										"nodeType": "Block",
										"src": "3604:74:2",
										"statements": [
											{
												"assignments": [
													2929,
													null,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 2929,
														"mutability": "mutable",
														"name": "delay",
														"nameLocation": "3622:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 2936,
														"src": "3615:12:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														},
														"typeName": {
															"id": 2928,
															"name": "uint32",
															"nodeType": "ElementaryTypeName",
															"src": "3615:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"visibility": "internal"
													},
													null,
													null
												],
												"id": 2933,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 2930,
															"name": "self",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2923,
															"src": "3635:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_userDefinedValueType$_Delay_$2845",
																"typeString": "Time.Delay"
															}
														},
														"id": 2931,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3640:7:2",
														"memberName": "getFull",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2919,
														"src": "3635:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_userDefinedValueType$_Delay_$2845_$returns$_t_uint32_$_t_uint32_$_t_uint48_$attached_to$_t_userDefinedValueType$_Delay_$2845_$",
															"typeString": "function (Time.Delay) view returns (uint32,uint32,uint48)"
														}
													},
													"id": 2932,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3635:14:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint32_$_t_uint32_$_t_uint48_$",
														"typeString": "tuple(uint32,uint32,uint48)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3614:35:2"
											},
											{
												"expression": {
													"id": 2934,
													"name": "delay",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2929,
													"src": "3666:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"functionReturnParameters": 2927,
												"id": 2935,
												"nodeType": "Return",
												"src": "3659:12:2"
											}
										]
									},
									"documentation": {
										"id": 2920,
										"nodeType": "StructuredDocumentation",
										"src": "3497:46:2",
										"text": " @dev Get the current value."
									},
									"id": 2937,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "get",
									"nameLocation": "3557:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2924,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2923,
												"mutability": "mutable",
												"name": "self",
												"nameLocation": "3567:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 2937,
												"src": "3561:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_userDefinedValueType$_Delay_$2845",
													"typeString": "Time.Delay"
												},
												"typeName": {
													"id": 2922,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2921,
														"name": "Delay",
														"nameLocations": [
															"3561:5:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2845,
														"src": "3561:5:2"
													},
													"referencedDeclaration": 2845,
													"src": "3561:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_Delay_$2845",
														"typeString": "Time.Delay"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3560:12:2"
									},
									"returnParameters": {
										"id": 2927,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2926,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2937,
												"src": "3596:6:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 2925,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "3596:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3595:8:2"
									},
									"scope": 3083,
									"src": "3548:130:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2992,
										"nodeType": "Block",
										"src": "4128:234:2",
										"statements": [
											{
												"assignments": [
													2954
												],
												"declarations": [
													{
														"constant": false,
														"id": 2954,
														"mutability": "mutable",
														"name": "value",
														"nameLocation": "4145:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 2992,
														"src": "4138:12:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														},
														"typeName": {
															"id": 2953,
															"name": "uint32",
															"nodeType": "ElementaryTypeName",
															"src": "4138:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2958,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 2955,
															"name": "self",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2941,
															"src": "4153:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_userDefinedValueType$_Delay_$2845",
																"typeString": "Time.Delay"
															}
														},
														"id": 2956,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4158:3:2",
														"memberName": "get",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2937,
														"src": "4153:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_userDefinedValueType$_Delay_$2845_$returns$_t_uint32_$attached_to$_t_userDefinedValueType$_Delay_$2845_$",
															"typeString": "function (Time.Delay) view returns (uint32)"
														}
													},
													"id": 2957,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4153:10:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4138:25:2"
											},
											{
												"assignments": [
													2960
												],
												"declarations": [
													{
														"constant": false,
														"id": 2960,
														"mutability": "mutable",
														"name": "setback",
														"nameLocation": "4180:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 2992,
														"src": "4173:14:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														},
														"typeName": {
															"id": 2959,
															"name": "uint32",
															"nodeType": "ElementaryTypeName",
															"src": "4173:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2976,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 2965,
																	"name": "minSetback",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2945,
																	"src": "4206:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	}
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint32",
																			"typeString": "uint32"
																		},
																		"id": 2968,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2966,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2954,
																			"src": "4218:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint32",
																				"typeString": "uint32"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">",
																		"rightExpression": {
																			"id": 2967,
																			"name": "newValue",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2943,
																			"src": "4226:8:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint32",
																				"typeString": "uint32"
																			}
																		},
																		"src": "4218:16:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseExpression": {
																		"hexValue": "30",
																		"id": 2972,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4256:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"id": 2973,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "Conditional",
																	"src": "4218:39:2",
																	"trueExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint32",
																			"typeString": "uint32"
																		},
																		"id": 2971,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2969,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2954,
																			"src": "4237:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint32",
																				"typeString": "uint32"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"id": 2970,
																			"name": "newValue",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2943,
																			"src": "4245:8:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint32",
																				"typeString": "uint32"
																			}
																		},
																		"src": "4237:16:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint32",
																			"typeString": "uint32"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	},
																	{
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	}
																],
																"expression": {
																	"id": 2963,
																	"name": "Math",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1053,
																	"src": "4197:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_Math_$1053_$",
																		"typeString": "type(library Math)"
																	}
																},
																"id": 2964,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4202:3:2",
																"memberName": "max",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 186,
																"src": "4197:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2974,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4197:61:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2962,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "4190:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint32_$",
															"typeString": "type(uint32)"
														},
														"typeName": {
															"id": 2961,
															"name": "uint32",
															"nodeType": "ElementaryTypeName",
															"src": "4190:6:2",
															"typeDescriptions": {}
														}
													},
													"id": 2975,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4190:69:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4173:86:2"
											},
											{
												"expression": {
													"id": 2982,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2977,
														"name": "effect",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2951,
														"src": "4269:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint48",
															"typeString": "uint48"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint48",
															"typeString": "uint48"
														},
														"id": 2981,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 2978,
																"name": "timestamp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2830,
																"src": "4278:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_uint48_$",
																	"typeString": "function () view returns (uint48)"
																}
															},
															"id": 2979,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4278:11:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint48",
																"typeString": "uint48"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"id": 2980,
															"name": "setback",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2960,
															"src": "4292:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"src": "4278:21:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint48",
															"typeString": "uint48"
														}
													},
													"src": "4269:30:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint48",
														"typeString": "uint48"
													}
												},
												"id": 2983,
												"nodeType": "ExpressionStatement",
												"src": "4269:30:2"
											},
											{
												"expression": {
													"components": [
														{
															"arguments": [
																{
																	"id": 2985,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2954,
																	"src": "4322:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	}
																},
																{
																	"id": 2986,
																	"name": "newValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2943,
																	"src": "4329:8:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	}
																},
																{
																	"id": 2987,
																	"name": "effect",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2951,
																	"src": "4339:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint48",
																		"typeString": "uint48"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	},
																	{
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	},
																	{
																		"typeIdentifier": "t_uint48",
																		"typeString": "uint48"
																	}
																],
																"id": 2984,
																"name": "pack",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3082,
																"src": "4317:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint32_$_t_uint32_$_t_uint48_$returns$_t_userDefinedValueType$_Delay_$2845_$",
																	"typeString": "function (uint32,uint32,uint48) pure returns (Time.Delay)"
																}
															},
															"id": 2988,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4317:29:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_userDefinedValueType$_Delay_$2845",
																"typeString": "Time.Delay"
															}
														},
														{
															"id": 2989,
															"name": "effect",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2951,
															"src": "4348:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint48",
																"typeString": "uint48"
															}
														}
													],
													"id": 2990,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "4316:39:2",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_userDefinedValueType$_Delay_$2845_$_t_uint48_$",
														"typeString": "tuple(Time.Delay,uint48)"
													}
												},
												"functionReturnParameters": 2952,
												"id": 2991,
												"nodeType": "Return",
												"src": "4309:46:2"
											}
										]
									},
									"documentation": {
										"id": 2938,
										"nodeType": "StructuredDocumentation",
										"src": "3684:283:2",
										"text": " @dev Update a Delay object so that it takes a new duration after a timepoint that is automatically computed to\n enforce the old delay at the moment of the update. Returns the updated Delay object and the timestamp when the\n new delay becomes effective."
									},
									"id": 2993,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "withUpdate",
									"nameLocation": "3981:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2946,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2941,
												"mutability": "mutable",
												"name": "self",
												"nameLocation": "4007:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 2993,
												"src": "4001:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_userDefinedValueType$_Delay_$2845",
													"typeString": "Time.Delay"
												},
												"typeName": {
													"id": 2940,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2939,
														"name": "Delay",
														"nameLocations": [
															"4001:5:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2845,
														"src": "4001:5:2"
													},
													"referencedDeclaration": 2845,
													"src": "4001:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_Delay_$2845",
														"typeString": "Time.Delay"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2943,
												"mutability": "mutable",
												"name": "newValue",
												"nameLocation": "4028:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 2993,
												"src": "4021:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 2942,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "4021:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2945,
												"mutability": "mutable",
												"name": "minSetback",
												"nameLocation": "4053:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 2993,
												"src": "4046:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 2944,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "4046:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3991:78:2"
									},
									"returnParameters": {
										"id": 2952,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2949,
												"mutability": "mutable",
												"name": "updatedDelay",
												"nameLocation": "4099:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 2993,
												"src": "4093:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_userDefinedValueType$_Delay_$2845",
													"typeString": "Time.Delay"
												},
												"typeName": {
													"id": 2948,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2947,
														"name": "Delay",
														"nameLocations": [
															"4093:5:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2845,
														"src": "4093:5:2"
													},
													"referencedDeclaration": 2845,
													"src": "4093:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_Delay_$2845",
														"typeString": "Time.Delay"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2951,
												"mutability": "mutable",
												"name": "effect",
												"nameLocation": "4120:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 2993,
												"src": "4113:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint48",
													"typeString": "uint48"
												},
												"typeName": {
													"id": 2950,
													"name": "uint48",
													"nodeType": "ElementaryTypeName",
													"src": "4113:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint48",
														"typeString": "uint48"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4092:35:2"
									},
									"scope": 3083,
									"src": "3972:390:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3043,
										"nodeType": "Block",
										"src": "4595:212:2",
										"statements": [
											{
												"assignments": [
													3007
												],
												"declarations": [
													{
														"constant": false,
														"id": 3007,
														"mutability": "mutable",
														"name": "raw",
														"nameLocation": "4613:3:2",
														"nodeType": "VariableDeclaration",
														"scope": 3043,
														"src": "4605:11:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint112",
															"typeString": "uint112"
														},
														"typeName": {
															"id": 3006,
															"name": "uint112",
															"nodeType": "ElementaryTypeName",
															"src": "4605:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3012,
												"initialValue": {
													"arguments": [
														{
															"id": 3010,
															"name": "self",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2997,
															"src": "4632:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_userDefinedValueType$_Delay_$2845",
																"typeString": "Time.Delay"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_userDefinedValueType$_Delay_$2845",
																"typeString": "Time.Delay"
															}
														],
														"expression": {
															"id": 3008,
															"name": "Delay",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2845,
															"src": "4619:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_userDefinedValueType$_Delay_$2845_$",
																"typeString": "type(Time.Delay)"
															}
														},
														"id": 3009,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "4625:6:2",
														"memberName": "unwrap",
														"nodeType": "MemberAccess",
														"src": "4619:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_unwrap_pure$_t_userDefinedValueType$_Delay_$2845_$returns$_t_uint112_$",
															"typeString": "function (Time.Delay) pure returns (uint112)"
														}
													},
													"id": 3011,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4619:18:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4605:32:2"
											},
											{
												"expression": {
													"id": 3018,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3013,
														"name": "valueAfter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3002,
														"src": "4648:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3016,
																"name": "raw",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3007,
																"src": "4668:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint112",
																	"typeString": "uint112"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint112",
																	"typeString": "uint112"
																}
															],
															"id": 3015,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "4661:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint32_$",
																"typeString": "type(uint32)"
															},
															"typeName": {
																"id": 3014,
																"name": "uint32",
																"nodeType": "ElementaryTypeName",
																"src": "4661:6:2",
																"typeDescriptions": {}
															}
														},
														"id": 3017,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4661:11:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"src": "4648:24:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"id": 3019,
												"nodeType": "ExpressionStatement",
												"src": "4648:24:2"
											},
											{
												"expression": {
													"id": 3027,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3020,
														"name": "valueBefore",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3000,
														"src": "4682:11:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint112",
																	"typeString": "uint112"
																},
																"id": 3025,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3023,
																	"name": "raw",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3007,
																	"src": "4703:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint112",
																		"typeString": "uint112"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 3024,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4710:2:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "4703:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint112",
																	"typeString": "uint112"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint112",
																	"typeString": "uint112"
																}
															],
															"id": 3022,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "4696:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint32_$",
																"typeString": "type(uint32)"
															},
															"typeName": {
																"id": 3021,
																"name": "uint32",
																"nodeType": "ElementaryTypeName",
																"src": "4696:6:2",
																"typeDescriptions": {}
															}
														},
														"id": 3026,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4696:17:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"src": "4682:31:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"id": 3028,
												"nodeType": "ExpressionStatement",
												"src": "4682:31:2"
											},
											{
												"expression": {
													"id": 3036,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3029,
														"name": "effect",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3004,
														"src": "4723:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint48",
															"typeString": "uint48"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint112",
																	"typeString": "uint112"
																},
																"id": 3034,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3032,
																	"name": "raw",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3007,
																	"src": "4739:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint112",
																		"typeString": "uint112"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 3033,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4746:2:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "4739:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint112",
																	"typeString": "uint112"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint112",
																	"typeString": "uint112"
																}
															],
															"id": 3031,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "4732:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint48_$",
																"typeString": "type(uint48)"
															},
															"typeName": {
																"id": 3030,
																"name": "uint48",
																"nodeType": "ElementaryTypeName",
																"src": "4732:6:2",
																"typeDescriptions": {}
															}
														},
														"id": 3035,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4732:17:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint48",
															"typeString": "uint48"
														}
													},
													"src": "4723:26:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint48",
														"typeString": "uint48"
													}
												},
												"id": 3037,
												"nodeType": "ExpressionStatement",
												"src": "4723:26:2"
											},
											{
												"expression": {
													"components": [
														{
															"id": 3038,
															"name": "valueBefore",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3000,
															"src": "4768:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														{
															"id": 3039,
															"name": "valueAfter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3002,
															"src": "4781:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														{
															"id": 3040,
															"name": "effect",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3004,
															"src": "4793:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint48",
																"typeString": "uint48"
															}
														}
													],
													"id": 3041,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "4767:33:2",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint32_$_t_uint32_$_t_uint48_$",
														"typeString": "tuple(uint32,uint32,uint48)"
													}
												},
												"functionReturnParameters": 3005,
												"id": 3042,
												"nodeType": "Return",
												"src": "4760:40:2"
											}
										]
									},
									"documentation": {
										"id": 2994,
										"nodeType": "StructuredDocumentation",
										"src": "4368:117:2",
										"text": " @dev Split a delay into its components: valueBefore, valueAfter and effect (transition timepoint)."
									},
									"id": 3044,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unpack",
									"nameLocation": "4499:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2998,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2997,
												"mutability": "mutable",
												"name": "self",
												"nameLocation": "4512:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 3044,
												"src": "4506:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_userDefinedValueType$_Delay_$2845",
													"typeString": "Time.Delay"
												},
												"typeName": {
													"id": 2996,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2995,
														"name": "Delay",
														"nameLocations": [
															"4506:5:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2845,
														"src": "4506:5:2"
													},
													"referencedDeclaration": 2845,
													"src": "4506:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_Delay_$2845",
														"typeString": "Time.Delay"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4505:12:2"
									},
									"returnParameters": {
										"id": 3005,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3000,
												"mutability": "mutable",
												"name": "valueBefore",
												"nameLocation": "4548:11:2",
												"nodeType": "VariableDeclaration",
												"scope": 3044,
												"src": "4541:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 2999,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "4541:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3002,
												"mutability": "mutable",
												"name": "valueAfter",
												"nameLocation": "4568:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 3044,
												"src": "4561:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 3001,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "4561:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3004,
												"mutability": "mutable",
												"name": "effect",
												"nameLocation": "4587:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 3044,
												"src": "4580:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint48",
													"typeString": "uint48"
												},
												"typeName": {
													"id": 3003,
													"name": "uint48",
													"nodeType": "ElementaryTypeName",
													"src": "4580:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint48",
														"typeString": "uint48"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4540:54:2"
									},
									"scope": 3083,
									"src": "4490:317:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3081,
										"nodeType": "Block",
										"src": "4980:112:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															},
															"id": 3078,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint112",
																	"typeString": "uint112"
																},
																"id": 3073,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint112",
																				"typeString": "uint112"
																			},
																			"id": 3064,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 3061,
																						"name": "effect",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3051,
																						"src": "5017:6:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint48",
																							"typeString": "uint48"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint48",
																							"typeString": "uint48"
																						}
																					],
																					"id": 3060,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "5009:7:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint112_$",
																						"typeString": "type(uint112)"
																					},
																					"typeName": {
																						"id": 3059,
																						"name": "uint112",
																						"nodeType": "ElementaryTypeName",
																						"src": "5009:7:2",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 3062,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "5009:15:2",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint112",
																					"typeString": "uint112"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<<",
																			"rightExpression": {
																				"hexValue": "3634",
																				"id": 3063,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5028:2:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_64_by_1",
																					"typeString": "int_const 64"
																				},
																				"value": "64"
																			},
																			"src": "5009:21:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint112",
																				"typeString": "uint112"
																			}
																		}
																	],
																	"id": 3065,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "5008:23:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint112",
																		"typeString": "uint112"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "|",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint112",
																				"typeString": "uint112"
																			},
																			"id": 3071,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 3068,
																						"name": "valueBefore",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3047,
																						"src": "5043:11:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint32",
																							"typeString": "uint32"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint32",
																							"typeString": "uint32"
																						}
																					],
																					"id": 3067,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "5035:7:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint112_$",
																						"typeString": "type(uint112)"
																					},
																					"typeName": {
																						"id": 3066,
																						"name": "uint112",
																						"nodeType": "ElementaryTypeName",
																						"src": "5035:7:2",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 3069,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "5035:20:2",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint112",
																					"typeString": "uint112"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<<",
																			"rightExpression": {
																				"hexValue": "3332",
																				"id": 3070,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5059:2:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_32_by_1",
																					"typeString": "int_const 32"
																				},
																				"value": "32"
																			},
																			"src": "5035:26:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint112",
																				"typeString": "uint112"
																			}
																		}
																	],
																	"id": 3072,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "5034:28:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint112",
																		"typeString": "uint112"
																	}
																},
																"src": "5008:54:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint112",
																	"typeString": "uint112"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "|",
															"rightExpression": {
																"arguments": [
																	{
																		"id": 3076,
																		"name": "valueAfter",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3049,
																		"src": "5073:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint32",
																			"typeString": "uint32"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint32",
																			"typeString": "uint32"
																		}
																	],
																	"id": 3075,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "5065:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint112_$",
																		"typeString": "type(uint112)"
																	},
																	"typeName": {
																		"id": 3074,
																		"name": "uint112",
																		"nodeType": "ElementaryTypeName",
																		"src": "5065:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 3077,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5065:19:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint112",
																	"typeString": "uint112"
																}
															},
															"src": "5008:76:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														],
														"expression": {
															"id": 3057,
															"name": "Delay",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2845,
															"src": "4997:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_userDefinedValueType$_Delay_$2845_$",
																"typeString": "type(Time.Delay)"
															}
														},
														"id": 3058,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "5003:4:2",
														"memberName": "wrap",
														"nodeType": "MemberAccess",
														"src": "4997:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_wrap_pure$_t_uint112_$returns$_t_userDefinedValueType$_Delay_$2845_$",
															"typeString": "function (uint112) pure returns (Time.Delay)"
														}
													},
													"id": 3079,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4997:88:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_Delay_$2845",
														"typeString": "Time.Delay"
													}
												},
												"functionReturnParameters": 3056,
												"id": 3080,
												"nodeType": "Return",
												"src": "4990:95:2"
											}
										]
									},
									"documentation": {
										"id": 3045,
										"nodeType": "StructuredDocumentation",
										"src": "4813:64:2",
										"text": " @dev pack the components into a Delay object."
									},
									"id": 3082,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "pack",
									"nameLocation": "4891:4:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3052,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3047,
												"mutability": "mutable",
												"name": "valueBefore",
												"nameLocation": "4903:11:2",
												"nodeType": "VariableDeclaration",
												"scope": 3082,
												"src": "4896:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 3046,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "4896:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3049,
												"mutability": "mutable",
												"name": "valueAfter",
												"nameLocation": "4923:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 3082,
												"src": "4916:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 3048,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "4916:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3051,
												"mutability": "mutable",
												"name": "effect",
												"nameLocation": "4942:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 3082,
												"src": "4935:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint48",
													"typeString": "uint48"
												},
												"typeName": {
													"id": 3050,
													"name": "uint48",
													"nodeType": "ElementaryTypeName",
													"src": "4935:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint48",
														"typeString": "uint48"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4895:54:2"
									},
									"returnParameters": {
										"id": 3056,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3055,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3082,
												"src": "4973:5:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_userDefinedValueType$_Delay_$2845",
													"typeString": "Time.Delay"
												},
												"typeName": {
													"id": 3054,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3053,
														"name": "Delay",
														"nameLocations": [
															"4973:5:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2845,
														"src": "4973:5:2"
													},
													"referencedDeclaration": 2845,
													"src": "4973:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_Delay_$2845",
														"typeString": "Time.Delay"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4972:7:2"
									},
									"scope": 3083,
									"src": "4882:210:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 3084,
							"src": "640:4454:2",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "104:4991:2"
				},
				"id": 2
			},
			"contracts/authority.sol": {
				"ast": {
					"absolutePath": "contracts/authority.sol",
					"exportedSymbols": {
						"Authority": [
							3756
						],
						"Igovernance_set": [
							3097
						]
					},
					"id": 3757,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 3085,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Igovernance_set",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 3097,
							"linearizedBaseContracts": [
								3097
							],
							"name": "Igovernance_set",
							"nameLocation": "77:15:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "e35b31b7",
									"id": 3096,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "AccessControl",
									"nameLocation": "109:13:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3092,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3087,
												"mutability": "mutable",
												"name": "caller",
												"nameLocation": "131:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 3096,
												"src": "123:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3086,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "123:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3089,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "147:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 3096,
												"src": "139:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3088,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "139:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3091,
												"mutability": "mutable",
												"name": "Fselector",
												"nameLocation": "162:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 3096,
												"src": "155:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 3090,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "155:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "122:50:3"
									},
									"returnParameters": {
										"id": 3095,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3094,
												"mutability": "mutable",
												"name": "accessed",
												"nameLocation": "196:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 3096,
												"src": "191:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3093,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "191:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "190:15:3"
									},
									"scope": 3097,
									"src": "100:106:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 3757,
							"src": "67:142:3",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Authority",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 3756,
							"linearizedBaseContracts": [
								3756
							],
							"name": "Authority",
							"nameLocation": "230:9:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"errorSelector": "c6322315",
									"id": 3101,
									"name": "TheAddressIsNotValidForRAddress",
									"nameLocation": "255:31:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 3100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3099,
												"mutability": "mutable",
												"name": "newRAddress",
												"nameLocation": "295:11:3",
												"nodeType": "VariableDeclaration",
												"scope": 3101,
												"src": "287:19:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3098,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "287:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "286:21:3"
									},
									"src": "249:59:3"
								},
								{
									"errorSelector": "6c4360f0",
									"id": 3103,
									"name": "AccessOnlyForThePendig",
									"nameLocation": "320:22:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 3102,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "342:2:3"
									},
									"src": "314:31:3"
								},
								{
									"errorSelector": "84dbc6cb",
									"id": 3107,
									"name": "TheAddressIsNotValidForGC",
									"nameLocation": "357:25:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 3106,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3105,
												"mutability": "mutable",
												"name": "NewGCAddress",
												"nameLocation": "391:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 3107,
												"src": "383:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3104,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "383:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "382:22:3"
									},
									"src": "351:54:3"
								},
								{
									"errorSelector": "223a6cbb",
									"id": 3111,
									"name": "RemainingTimeUntilTheConfirmationDeadline",
									"nameLocation": "417:41:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 3110,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3109,
												"mutability": "mutable",
												"name": "reminingTime",
												"nameLocation": "466:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 3111,
												"src": "459:19:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint48",
													"typeString": "uint48"
												},
												"typeName": {
													"id": 3108,
													"name": "uint48",
													"nodeType": "ElementaryTypeName",
													"src": "459:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint48",
														"typeString": "uint48"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "458:21:3"
									},
									"src": "411:69:3"
								},
								{
									"anonymous": false,
									"eventSelector": "3553f1f7ef0242113266a8d183b621bb87468c99237f36b1150b6ab3d688b686",
									"id": 3115,
									"name": "TheNextPresidentWasElected",
									"nameLocation": "496:26:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 3114,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3113,
												"indexed": true,
												"mutability": "mutable",
												"name": "newPresidentAdd",
												"nameLocation": "539:15:3",
												"nodeType": "VariableDeclaration",
												"scope": 3115,
												"src": "523:31:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3112,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "523:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "522:33:3"
									},
									"src": "490:66:3"
								},
								{
									"anonymous": false,
									"eventSelector": "05ad9b3688012cd825c1bfb941e4f5afb2558af6af3deaddf01dbb5e85abdaf9",
									"id": 3121,
									"name": "TheNewPresidentWasConfirmed",
									"nameLocation": "568:27:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 3120,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3117,
												"indexed": true,
												"mutability": "mutable",
												"name": "presidentAdd",
												"nameLocation": "612:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 3121,
												"src": "596:28:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3116,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "596:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3119,
												"indexed": true,
												"mutability": "mutable",
												"name": "nonce",
												"nameLocation": "641:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 3121,
												"src": "626:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 3118,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "626:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "595:52:3"
									},
									"src": "562:86:3"
								},
								{
									"anonymous": false,
									"eventSelector": "e8d8e3c7c3ebec0c177d0fe22d223f8b5071db39155104808d45027e368ba77a",
									"id": 3125,
									"name": "TheNextGCAddressWasElected",
									"nameLocation": "660:26:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 3124,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3123,
												"indexed": true,
												"mutability": "mutable",
												"name": "newGCAddress",
												"nameLocation": "703:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 3125,
												"src": "687:28:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3122,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "687:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "686:30:3"
									},
									"src": "654:63:3"
								},
								{
									"anonymous": false,
									"eventSelector": "5e86008a8467d1efccfe6cb6bd49ba7278d6af2745a1e6994e443322a4237093",
									"id": 3131,
									"name": "TheNewGCAddressWasConfirmed",
									"nameLocation": "729:27:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 3130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3127,
												"indexed": true,
												"mutability": "mutable",
												"name": "GCAddress",
												"nameLocation": "773:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 3131,
												"src": "757:25:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3126,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "757:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3129,
												"indexed": true,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "799:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 3131,
												"src": "784:22:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 3128,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "784:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "756:51:3"
									},
									"src": "723:85:3"
								},
								{
									"anonymous": false,
									"eventSelector": "067d0bd9a6167d98b43392618557d3cba4aa9b3c54791c0b96f1a20a05eb8b84",
									"id": 3137,
									"name": "TheStatusOfBanningAllActivitiesAndDone",
									"nameLocation": "820:38:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 3136,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3133,
												"indexed": true,
												"mutability": "mutable",
												"name": "baned",
												"nameLocation": "872:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 3137,
												"src": "859:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3132,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "859:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3135,
												"indexed": true,
												"mutability": "mutable",
												"name": "done",
												"nameLocation": "892:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 3137,
												"src": "879:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3134,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "879:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "858:39:3"
									},
									"src": "814:84:3"
								},
								{
									"anonymous": false,
									"eventSelector": "675b770e821ba4aad20be77c58f912d689226272e805637f42f838a6035eed86",
									"id": 3141,
									"name": "TheNextRepublicAddressWasElected",
									"nameLocation": "910:32:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 3140,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3139,
												"indexed": true,
												"mutability": "mutable",
												"name": "newRepublicAddress",
												"nameLocation": "959:18:3",
												"nodeType": "VariableDeclaration",
												"scope": 3141,
												"src": "943:34:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3138,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "943:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "942:36:3"
									},
									"src": "904:75:3"
								},
								{
									"anonymous": false,
									"eventSelector": "f7f7c26682668c39fd8c6dbca125bd9466e743b9e38acc3240867c139cd93c30",
									"id": 3147,
									"name": "TheNewRepublicAddressWasConfirmed",
									"nameLocation": "991:33:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 3146,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3143,
												"indexed": true,
												"mutability": "mutable",
												"name": "RepublicAddress",
												"nameLocation": "1041:15:3",
												"nodeType": "VariableDeclaration",
												"scope": 3147,
												"src": "1025:31:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3142,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1025:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3145,
												"indexed": true,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "1073:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 3147,
												"src": "1058:22:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 3144,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "1058:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1024:57:3"
									},
									"src": "985:97:3"
								},
								{
									"anonymous": false,
									"eventSelector": "f299f61c7e493f99b20cb36c587ca903d085d5206bfe4452d295711e372da029",
									"id": 3151,
									"name": "TheNextRepublicAddressWasCancelled",
									"nameLocation": "1094:34:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 3150,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3149,
												"indexed": true,
												"mutability": "mutable",
												"name": "PRAddress",
												"nameLocation": "1145:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 3151,
												"src": "1129:25:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3148,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1129:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1128:27:3"
									},
									"src": "1088:68:3"
								},
								{
									"anonymous": false,
									"eventSelector": "ff3cad3ee28c342ad5f3d7c8ff8559ee4d21eb48494092b82a1652e443b3420b",
									"id": 3155,
									"name": "TheNextPrimeMinisterWasElected",
									"nameLocation": "1168:30:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 3154,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3153,
												"indexed": true,
												"mutability": "mutable",
												"name": "newPrimeMinister",
												"nameLocation": "1215:16:3",
												"nodeType": "VariableDeclaration",
												"scope": 3155,
												"src": "1199:32:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1199:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1198:34:3"
									},
									"src": "1162:71:3"
								},
								{
									"anonymous": false,
									"eventSelector": "11e1b985c07e1bf3fec9bfd0bdb8c4a8e870ba2b26aa89fe50a6a19132ca10fd",
									"id": 3161,
									"name": "TheNewPrimeMinisterWasConfirmed",
									"nameLocation": "1245:31:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 3160,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3157,
												"indexed": true,
												"mutability": "mutable",
												"name": "primeMinisterAdd",
												"nameLocation": "1293:16:3",
												"nodeType": "VariableDeclaration",
												"scope": 3161,
												"src": "1277:32:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3156,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1277:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3159,
												"indexed": true,
												"mutability": "mutable",
												"name": "nonce",
												"nameLocation": "1326:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 3161,
												"src": "1311:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 3158,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "1311:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1276:56:3"
									},
									"src": "1239:94:3"
								},
								{
									"constant": false,
									"id": 3163,
									"mutability": "mutable",
									"name": "_pendigRepublicAddress",
									"nameLocation": "1371:22:3",
									"nodeType": "VariableDeclaration",
									"scope": 3756,
									"src": "1355:38:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 3162,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1355:7:3",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 3165,
									"mutability": "mutable",
									"name": "_pendingGCAddress",
									"nameLocation": "1416:17:3",
									"nodeType": "VariableDeclaration",
									"scope": 3756,
									"src": "1400:33:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 3164,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1400:7:3",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 3167,
									"mutability": "mutable",
									"name": "_pendigPresident",
									"nameLocation": "1456:16:3",
									"nodeType": "VariableDeclaration",
									"scope": 3756,
									"src": "1440:32:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 3166,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1440:7:3",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 3169,
									"mutability": "mutable",
									"name": "_pendingPrimeMinister",
									"nameLocation": "1487:21:3",
									"nodeType": "VariableDeclaration",
									"scope": 3756,
									"src": "1479:29:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 3168,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1479:7:3",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 3171,
									"mutability": "immutable",
									"name": "TimeFirstElection",
									"nameLocation": "1532:17:3",
									"nodeType": "VariableDeclaration",
									"scope": 3756,
									"src": "1515:34:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint48",
										"typeString": "uint48"
									},
									"typeName": {
										"id": 3170,
										"name": "uint48",
										"nodeType": "ElementaryTypeName",
										"src": "1515:6:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint48",
											"typeString": "uint48"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 3173,
									"mutability": "mutable",
									"name": "_delayConfirmRepublicAddress",
									"nameLocation": "1571:28:3",
									"nodeType": "VariableDeclaration",
									"scope": 3756,
									"src": "1556:43:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint48",
										"typeString": "uint48"
									},
									"typeName": {
										"id": 3172,
										"name": "uint48",
										"nodeType": "ElementaryTypeName",
										"src": "1556:6:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint48",
											"typeString": "uint48"
										}
									},
									"visibility": "private"
								},
								{
									"canonicalName": "Authority.access",
									"id": 3180,
									"members": [
										{
											"constant": false,
											"id": 3175,
											"mutability": "mutable",
											"name": "roleAdd",
											"nameLocation": "1643:7:3",
											"nodeType": "VariableDeclaration",
											"scope": 3180,
											"src": "1635:15:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 3174,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1635:7:3",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 3177,
											"mutability": "mutable",
											"name": "baned",
											"nameLocation": "1666:5:3",
											"nodeType": "VariableDeclaration",
											"scope": 3180,
											"src": "1661:10:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 3176,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1661:4:3",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 3179,
											"mutability": "mutable",
											"name": "nonce",
											"nameLocation": "1689:5:3",
											"nodeType": "VariableDeclaration",
											"scope": 3180,
											"src": "1682:12:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint32",
												"typeString": "uint32"
											},
											"typeName": {
												"id": 3178,
												"name": "uint32",
												"nodeType": "ElementaryTypeName",
												"src": "1682:6:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "access",
									"nameLocation": "1617:6:3",
									"nodeType": "StructDefinition",
									"scope": 3756,
									"src": "1610:92:3",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 3183,
									"mutability": "mutable",
									"name": "_president",
									"nameLocation": "1735:10:3",
									"nodeType": "VariableDeclaration",
									"scope": 3756,
									"src": "1720:25:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_struct$_access_$3180_storage",
										"typeString": "struct Authority.access"
									},
									"typeName": {
										"id": 3182,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 3181,
											"name": "access",
											"nameLocations": [
												"1720:6:3"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 3180,
											"src": "1720:6:3"
										},
										"referencedDeclaration": 3180,
										"src": "1720:6:3",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_access_$3180_storage_ptr",
											"typeString": "struct Authority.access"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 3186,
									"mutability": "mutable",
									"name": "_primeMinister",
									"nameLocation": "1767:14:3",
									"nodeType": "VariableDeclaration",
									"scope": 3756,
									"src": "1752:29:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_struct$_access_$3180_storage",
										"typeString": "struct Authority.access"
									},
									"typeName": {
										"id": 3185,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 3184,
											"name": "access",
											"nameLocations": [
												"1752:6:3"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 3180,
											"src": "1752:6:3"
										},
										"referencedDeclaration": 3180,
										"src": "1752:6:3",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_access_$3180_storage_ptr",
											"typeString": "struct Authority.access"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 3189,
									"mutability": "mutable",
									"name": "_governance",
									"nameLocation": "1803:11:3",
									"nodeType": "VariableDeclaration",
									"scope": 3756,
									"src": "1788:26:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_struct$_access_$3180_storage",
										"typeString": "struct Authority.access"
									},
									"typeName": {
										"id": 3188,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 3187,
											"name": "access",
											"nameLocations": [
												"1788:6:3"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 3180,
											"src": "1788:6:3"
										},
										"referencedDeclaration": 3180,
										"src": "1788:6:3",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_access_$3180_storage_ptr",
											"typeString": "struct Authority.access"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 3192,
									"mutability": "mutable",
									"name": "_Republic",
									"nameLocation": "1836:9:3",
									"nodeType": "VariableDeclaration",
									"scope": 3756,
									"src": "1821:24:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_struct$_access_$3180_storage",
										"typeString": "struct Authority.access"
									},
									"typeName": {
										"id": 3191,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 3190,
											"name": "access",
											"nameLocations": [
												"1821:6:3"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 3180,
											"src": "1821:6:3"
										},
										"referencedDeclaration": 3180,
										"src": "1821:6:3",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_access_$3180_storage_ptr",
											"typeString": "struct Authority.access"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 3223,
										"nodeType": "Block",
										"src": "1921:260:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3197,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3194,
														"name": "TimeFirstElection",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3171,
														"src": "1936:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint48",
															"typeString": "uint48"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 3195,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "1956:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 3196,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1962:9:3",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "1956:15:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1936:35:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"expression": {
														"arguments": [
															{
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 3217,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"id": 3213,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 3209,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "2082:3:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 3210,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2086:6:3",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "2082:10:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 3211,
																			"name": "getPresidentAdd",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3510,
																			"src": "2096:15:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 3212,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2096:17:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"src": "2082:31:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"id": 3216,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "!",
																	"prefix": true,
																	"src": "2117:18:3",
																	"subExpression": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 3214,
																			"name": "getPresidentBan",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3519,
																			"src": "2118:15:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																				"typeString": "function () view returns (bool)"
																			}
																		},
																		"id": 3215,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2118:17:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "2082:53:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															{
																"hexValue": "416363657373206973206e6f742076616c6964",
																"id": 3218,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2137:21:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_7ee2f33aca8781826955961850ee0290e9bc9194955de2a97e17ec13b6234440",
																	"typeString": "literal_string \"Access is not valid\""
																},
																"value": "Access is not valid"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																{
																	"typeIdentifier": "t_stringliteral_7ee2f33aca8781826955961850ee0290e9bc9194955de2a97e17ec13b6234440",
																	"typeString": "literal_string \"Access is not valid\""
																}
															],
															"id": 3208,
															"name": "require",
															"nodeType": "Identifier",
															"overloadedDeclarations": [
																4294967278,
																4294967278
															],
															"referencedDeclaration": 4294967278,
															"src": "2074:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																"typeString": "function (bool,string memory) pure"
															}
														},
														"id": 3219,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2074:85:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 3220,
													"nodeType": "ExpressionStatement",
													"src": "2074:85:3"
												},
												"id": 3221,
												"nodeType": "IfStatement",
												"src": "1932:227:3",
												"trueBody": {
													"id": 3207,
													"nodeType": "Block",
													"src": "1973:95:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 3203,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"id": 3199,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "1996:3:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 3200,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "2000:6:3",
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "1996:10:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 3201,
																				"name": "getRepublicAddress",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3427,
																				"src": "2010:18:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																					"typeString": "function () view returns (address)"
																				}
																			},
																			"id": 3202,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "2010:20:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "1996:34:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "416363657373206973206e6f742076616c6964",
																		"id": 3204,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2032:21:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_7ee2f33aca8781826955961850ee0290e9bc9194955de2a97e17ec13b6234440",
																			"typeString": "literal_string \"Access is not valid\""
																		},
																		"value": "Access is not valid"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_7ee2f33aca8781826955961850ee0290e9bc9194955de2a97e17ec13b6234440",
																			"typeString": "literal_string \"Access is not valid\""
																		}
																	],
																	"id": 3198,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "1988:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 3205,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1988:66:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 3206,
															"nodeType": "ExpressionStatement",
															"src": "1988:66:3"
														}
													]
												}
											},
											{
												"id": 3222,
												"nodeType": "PlaceholderStatement",
												"src": "2172:1:3"
											}
										]
									},
									"id": 3224,
									"name": "onlyRepublic",
									"nameLocation": "1906:12:3",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 3193,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1918:2:3"
									},
									"src": "1897:284:3",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3240,
										"nodeType": "Block",
										"src": "2214:118:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 3235,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 3231,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 3227,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "2233:3:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 3228,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2237:6:3",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "2233:10:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 3229,
																		"name": "getPresidentAdd",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3510,
																		"src": "2247:15:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 3230,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2247:17:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "2233:31:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"id": 3234,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "!",
																"prefix": true,
																"src": "2268:18:3",
																"subExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 3232,
																		"name": "getPresidentBan",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3519,
																		"src": "2269:15:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																			"typeString": "function () view returns (bool)"
																		}
																	},
																	"id": 3233,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2269:17:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "2233:53:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416363657373206973206e6f742076616c6964",
															"id": 3236,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2288:21:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7ee2f33aca8781826955961850ee0290e9bc9194955de2a97e17ec13b6234440",
																"typeString": "literal_string \"Access is not valid\""
															},
															"value": "Access is not valid"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7ee2f33aca8781826955961850ee0290e9bc9194955de2a97e17ec13b6234440",
																"typeString": "literal_string \"Access is not valid\""
															}
														],
														"id": 3226,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2225:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3237,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2225:85:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3238,
												"nodeType": "ExpressionStatement",
												"src": "2225:85:3"
											},
											{
												"id": 3239,
												"nodeType": "PlaceholderStatement",
												"src": "2323:1:3"
											}
										]
									},
									"id": 3241,
									"name": "onlyPresident",
									"nameLocation": "2198:13:3",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 3225,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2211:2:3"
									},
									"src": "2189:143:3",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3265,
										"nodeType": "Block",
										"src": "2377:174:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 3260,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3248,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "!",
																"prefix": true,
																"src": "2396:18:3",
																"subExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 3246,
																		"name": "getPresidentBan",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3519,
																		"src": "2397:15:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																			"typeString": "function () view returns (bool)"
																		}
																	},
																	"id": 3247,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2397:17:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"arguments": [
																	{
																		"id": 3254,
																		"name": "caller",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3243,
																		"src": "2469:6:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"expression": {
																			"id": 3255,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "2477:3:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 3256,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2481:6:3",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "2477:10:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"expression": {
																			"id": 3257,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "2489:3:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 3258,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2493:3:3",
																		"memberName": "sig",
																		"nodeType": "MemberAccess",
																		"src": "2489:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes4",
																			"typeString": "bytes4"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bytes4",
																			"typeString": "bytes4"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"expression": {
																					"id": 3250,
																					"name": "_governance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3189,
																					"src": "2434:11:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_access_$3180_storage",
																						"typeString": "struct Authority.access storage ref"
																					}
																				},
																				"id": 3251,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "2446:7:3",
																				"memberName": "roleAdd",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 3175,
																				"src": "2434:19:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 3249,
																			"name": "Igovernance_set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3097,
																			"src": "2418:15:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_Igovernance_set_$3097_$",
																				"typeString": "type(contract Igovernance_set)"
																			}
																		},
																		"id": 3252,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2418:36:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_Igovernance_set_$3097",
																			"typeString": "contract Igovernance_set"
																		}
																	},
																	"id": 3253,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2455:13:3",
																	"memberName": "AccessControl",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 3096,
																	"src": "2418:50:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_bytes4_$returns$_t_bool_$",
																		"typeString": "function (address,address,bytes4) external returns (bool)"
																	}
																},
																"id": 3259,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2418:79:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "2396:101:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416363657373206973206e6f742076616c6964",
															"id": 3261,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2499:21:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7ee2f33aca8781826955961850ee0290e9bc9194955de2a97e17ec13b6234440",
																"typeString": "literal_string \"Access is not valid\""
															},
															"value": "Access is not valid"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7ee2f33aca8781826955961850ee0290e9bc9194955de2a97e17ec13b6234440",
																"typeString": "literal_string \"Access is not valid\""
															}
														],
														"id": 3245,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2388:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3262,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2388:133:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3263,
												"nodeType": "ExpressionStatement",
												"src": "2388:133:3"
											},
											{
												"id": 3264,
												"nodeType": "PlaceholderStatement",
												"src": "2542:1:3"
											}
										]
									},
									"id": 3266,
									"name": "AccessCheck",
									"nameLocation": "2349:11:3",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 3244,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3243,
												"mutability": "mutable",
												"name": "caller",
												"nameLocation": "2369:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 3266,
												"src": "2361:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3242,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2361:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2360:16:3"
									},
									"src": "2340:211:3",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3291,
										"nodeType": "Block",
										"src": "2573:145:3",
										"statements": [
											{
												"expression": {
													"id": 3277,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3269,
														"name": "TimeFirstElection",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3171,
														"src": "2584:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint48",
															"typeString": "uint48"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3275,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 3272,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "2611:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 3273,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2617:9:3",
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "2611:15:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"hexValue": "34343030",
																	"id": 3274,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2629:9:3",
																	"subdenomination": "days",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_380160000_by_1",
																		"typeString": "int_const 380160000"
																	},
																	"value": "4400"
																},
																"src": "2611:27:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 3271,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2604:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint48_$",
																"typeString": "type(uint48)"
															},
															"typeName": {
																"id": 3270,
																"name": "uint48",
																"nodeType": "ElementaryTypeName",
																"src": "2604:6:3",
																"typeDescriptions": {}
															}
														},
														"id": 3276,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2604:35:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint48",
															"typeString": "uint48"
														}
													},
													"src": "2584:55:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint48",
														"typeString": "uint48"
													}
												},
												"id": 3278,
												"nodeType": "ExpressionStatement",
												"src": "2584:55:3"
											},
											{
												"expression": {
													"id": 3284,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 3279,
															"name": "_president",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3183,
															"src": "2650:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_access_$3180_storage",
																"typeString": "struct Authority.access storage ref"
															}
														},
														"id": 3281,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "2661:7:3",
														"memberName": "roleAdd",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3175,
														"src": "2650:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 3282,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "2671:3:3",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 3283,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2675:6:3",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "2671:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2650:31:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 3285,
												"nodeType": "ExpressionStatement",
												"src": "2650:31:3"
											},
											{
												"expression": {
													"id": 3289,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "++",
													"prefix": false,
													"src": "2692:18:3",
													"subExpression": {
														"expression": {
															"id": 3286,
															"name": "_president",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3183,
															"src": "2692:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_access_$3180_storage",
																"typeString": "struct Authority.access storage ref"
															}
														},
														"id": 3288,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "2703:5:3",
														"memberName": "nonce",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3179,
														"src": "2692:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"id": 3290,
												"nodeType": "ExpressionStatement",
												"src": "2692:18:3"
											}
										]
									},
									"id": 3292,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3267,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2570:2:3"
									},
									"returnParameters": {
										"id": 3268,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2573:0:3"
									},
									"scope": 3756,
									"src": "2559:159:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3340,
										"nodeType": "Block",
										"src": "2802:480:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3303,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 3299,
																"name": "newRAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3294,
																"src": "2817:11:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 3300,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2829:4:3",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "2817:16:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 3301,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2834:6:3",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "2817:23:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 3302,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2843:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2817:27:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"errorCall": {
														"arguments": [
															{
																"id": 3336,
																"name": "newRAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3294,
																"src": "3260:11:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 3335,
															"name": "TheAddressIsNotValidForRAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3101,
															"src": "3228:31:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																"typeString": "function (address) pure"
															}
														},
														"id": 3337,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3228:44:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 3338,
													"nodeType": "RevertStatement",
													"src": "3221:51:3"
												},
												"id": 3339,
												"nodeType": "IfStatement",
												"src": "2813:459:3",
												"trueBody": {
													"id": 3334,
													"nodeType": "Block",
													"src": "2846:369:3",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 3308,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 3304,
																		"name": "_president",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3183,
																		"src": "2865:10:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_access_$3180_storage",
																			"typeString": "struct Authority.access storage ref"
																		}
																	},
																	"id": 3305,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2876:7:3",
																	"memberName": "roleAdd",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 3175,
																	"src": "2865:18:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"expression": {
																		"id": 3306,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "2887:3:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 3307,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2891:6:3",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "2887:10:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "2865:32:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 3332,
																"nodeType": "Block",
																"src": "2979:223:3",
																"statements": [
																	{
																		"expression": {
																			"id": 3322,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 3314,
																				"name": "_delayConfirmRepublicAddress",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3173,
																				"src": "2998:28:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint48",
																					"typeString": "uint48"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"arguments": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 3320,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"expression": {
																								"id": 3317,
																								"name": "block",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 4294967292,
																								"src": "3036:5:3",
																								"typeDescriptions": {
																									"typeIdentifier": "t_magic_block",
																									"typeString": "block"
																								}
																							},
																							"id": 3318,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "3042:9:3",
																							"memberName": "timestamp",
																							"nodeType": "MemberAccess",
																							"src": "3036:15:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "+",
																						"rightExpression": {
																							"hexValue": "3135",
																							"id": 3319,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "3054:7:3",
																							"subdenomination": "days",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_1296000_by_1",
																								"typeString": "int_const 1296000"
																							},
																							"value": "15"
																						},
																						"src": "3036:25:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"id": 3316,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "3029:6:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint48_$",
																						"typeString": "type(uint48)"
																					},
																					"typeName": {
																						"id": 3315,
																						"name": "uint48",
																						"nodeType": "ElementaryTypeName",
																						"src": "3029:6:3",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 3321,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "3029:33:3",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint48",
																					"typeString": "uint48"
																				}
																			},
																			"src": "2998:64:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint48",
																				"typeString": "uint48"
																			}
																		},
																		"id": 3323,
																		"nodeType": "ExpressionStatement",
																		"src": "2998:64:3"
																	},
																	{
																		"expression": {
																			"id": 3326,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 3324,
																				"name": "_pendigRepublicAddress",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3163,
																				"src": "3081:22:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"id": 3325,
																				"name": "newRAddress",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3294,
																				"src": "3106:11:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"src": "3081:36:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"id": 3327,
																		"nodeType": "ExpressionStatement",
																		"src": "3081:36:3"
																	},
																	{
																		"eventCall": {
																			"arguments": [
																				{
																					"id": 3329,
																					"name": "newRAddress",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3294,
																					"src": "3174:11:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 3328,
																				"name": "TheNextRepublicAddressWasElected",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3141,
																				"src": "3141:32:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
																					"typeString": "function (address)"
																				}
																			},
																			"id": 3330,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3141:45:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 3331,
																		"nodeType": "EmitStatement",
																		"src": "3136:50:3"
																	}
																]
															},
															"id": 3333,
															"nodeType": "IfStatement",
															"src": "2861:341:3",
															"trueBody": {
																"id": 3313,
																"nodeType": "Block",
																"src": "2899:74:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 3310,
																					"name": "newRAddress",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3294,
																					"src": "2943:11:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 3309,
																				"name": "_transferRepublicAddress",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3731,
																				"src": "2918:24:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
																					"typeString": "function (address)"
																				}
																			},
																			"id": 3311,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "2918:37:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 3312,
																		"nodeType": "ExpressionStatement",
																		"src": "2918:37:3"
																	}
																]
															}
														}
													]
												}
											}
										]
									},
									"functionSelector": "1f72783a",
									"id": 3341,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 3297,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3296,
												"name": "onlyRepublic",
												"nameLocations": [
													"2789:12:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 3224,
												"src": "2789:12:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "2789:12:3"
										}
									],
									"name": "setPendingRepublicAddress",
									"nameLocation": "2735:25:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3295,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3294,
												"mutability": "mutable",
												"name": "newRAddress",
												"nameLocation": "2769:11:3",
												"nodeType": "VariableDeclaration",
												"scope": 3341,
												"src": "2761:19:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3293,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2761:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2760:21:3"
									},
									"returnParameters": {
										"id": 3298,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2802:0:3"
									},
									"scope": 3756,
									"src": "2726:556:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3390,
										"nodeType": "Block",
										"src": "3361:559:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3351,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3348,
														"name": "_delayConfirmRepublicAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3173,
														"src": "3376:28:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint48",
															"typeString": "uint48"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 3349,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "3407:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 3350,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3413:9:3",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "3407:15:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3376:46:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"errorCall": {
														"arguments": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint48",
																	"typeString": "uint48"
																},
																"id": 3386,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3380,
																	"name": "_delayConfirmRepublicAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3173,
																	"src": "3857:28:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint48",
																		"typeString": "uint48"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"arguments": [
																		{
																			"expression": {
																				"id": 3383,
																				"name": "block",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967292,
																				"src": "3895:5:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_block",
																					"typeString": "block"
																				}
																			},
																			"id": 3384,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "3901:9:3",
																			"memberName": "timestamp",
																			"nodeType": "MemberAccess",
																			"src": "3895:15:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 3382,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3888:6:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint48_$",
																			"typeString": "type(uint48)"
																		},
																		"typeName": {
																			"id": 3381,
																			"name": "uint48",
																			"nodeType": "ElementaryTypeName",
																			"src": "3888:6:3",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 3385,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3888:23:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint48",
																		"typeString": "uint48"
																	}
																},
																"src": "3857:54:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint48",
																	"typeString": "uint48"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint48",
																	"typeString": "uint48"
																}
															],
															"id": 3379,
															"name": "RemainingTimeUntilTheConfirmationDeadline",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3111,
															"src": "3815:41:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$_t_uint48_$returns$__$",
																"typeString": "function (uint48) pure"
															}
														},
														"id": 3387,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3815:97:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 3388,
													"nodeType": "RevertStatement",
													"src": "3808:104:3"
												},
												"id": 3389,
												"nodeType": "IfStatement",
												"src": "3372:540:3",
												"trueBody": {
													"id": 3378,
													"nodeType": "Block",
													"src": "3424:378:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint48",
																			"typeString": "uint48"
																		},
																		"id": 3355,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 3353,
																			"name": "_delayConfirmRepublicAddress",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3173,
																			"src": "3447:28:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint48",
																				"typeString": "uint48"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 3354,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3479:1:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "3447:33:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "546865207265717565737420697320696e76616c6964",
																		"id": 3356,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3481:24:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_a294dcfb639c285c6de7811fdf356d91d46d9194d0c816554844d12bbf160772",
																			"typeString": "literal_string \"The request is invalid\""
																		},
																		"value": "The request is invalid"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_a294dcfb639c285c6de7811fdf356d91d46d9194d0c816554844d12bbf160772",
																			"typeString": "literal_string \"The request is invalid\""
																		}
																	],
																	"id": 3352,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "3439:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 3357,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3439:67:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 3358,
															"nodeType": "ExpressionStatement",
															"src": "3439:67:3"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 3361,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3359,
																	"name": "_pendigRepublicAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3163,
																	"src": "3525:22:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 3360,
																	"name": "RAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3343,
																	"src": "3551:8:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "3525:34:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"errorCall": {
																	"arguments": [
																		{
																			"id": 3374,
																			"name": "RAddress",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3343,
																			"src": "3779:8:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 3373,
																		"name": "TheAddressIsNotValidForRAddress",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3101,
																		"src": "3747:31:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																			"typeString": "function (address) pure"
																		}
																	},
																	"id": 3375,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3747:41:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 3376,
																"nodeType": "RevertStatement",
																"src": "3740:48:3"
															},
															"id": 3377,
															"nodeType": "IfStatement",
															"src": "3521:267:3",
															"trueBody": {
																"id": 3372,
																"nodeType": "Block",
																"src": "3561:173:3",
																"statements": [
																	{
																		"expression": {
																			"id": 3363,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "delete",
																			"prefix": true,
																			"src": "3580:35:3",
																			"subExpression": {
																				"id": 3362,
																				"name": "_delayConfirmRepublicAddress",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3173,
																				"src": "3587:28:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint48",
																					"typeString": "uint48"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 3364,
																		"nodeType": "ExpressionStatement",
																		"src": "3580:35:3"
																	},
																	{
																		"expression": {
																			"id": 3366,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "delete",
																			"prefix": true,
																			"src": "3634:29:3",
																			"subExpression": {
																				"id": 3365,
																				"name": "_pendigRepublicAddress",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3163,
																				"src": "3641:22:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 3367,
																		"nodeType": "ExpressionStatement",
																		"src": "3634:29:3"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 3369,
																					"name": "RAddress",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3343,
																					"src": "3707:8:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 3368,
																				"name": "_transferRepublicAddress",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3731,
																				"src": "3682:24:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
																					"typeString": "function (address)"
																				}
																			},
																			"id": 3370,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3682:34:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 3371,
																		"nodeType": "ExpressionStatement",
																		"src": "3682:34:3"
																	}
																]
															}
														}
													]
												}
											}
										]
									},
									"functionSelector": "9c20fe71",
									"id": 3391,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 3346,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3345,
												"name": "onlyRepublic",
												"nameLocations": [
													"3348:12:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 3224,
												"src": "3348:12:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "3348:12:3"
										}
									],
									"name": "transferRepublicAddress",
									"nameLocation": "3299:23:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3344,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3343,
												"mutability": "mutable",
												"name": "RAddress",
												"nameLocation": "3331:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 3391,
												"src": "3323:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3342,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3323:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3322:18:3"
									},
									"returnParameters": {
										"id": 3347,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3361:0:3"
									},
									"scope": 3756,
									"src": "3290:630:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3417,
										"nodeType": "Block",
										"src": "4004:298:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 3400,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3398,
														"name": "_pendigRepublicAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3163,
														"src": "4019:22:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 3399,
														"name": "PRAdress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3393,
														"src": "4045:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4019:34:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"errorCall": {
														"arguments": [
															{
																"id": 3413,
																"name": "PRAdress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3393,
																"src": "4285:8:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 3412,
															"name": "TheAddressIsNotValidForRAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3101,
															"src": "4253:31:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																"typeString": "function (address) pure"
															}
														},
														"id": 3414,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4253:41:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 3415,
													"nodeType": "RevertStatement",
													"src": "4246:48:3"
												},
												"id": 3416,
												"nodeType": "IfStatement",
												"src": "4015:279:3",
												"trueBody": {
													"id": 3411,
													"nodeType": "Block",
													"src": "4055:185:3",
													"statements": [
														{
															"expression": {
																"id": 3402,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "delete",
																"prefix": true,
																"src": "4074:35:3",
																"subExpression": {
																	"id": 3401,
																	"name": "_delayConfirmRepublicAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3173,
																	"src": "4081:28:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint48",
																		"typeString": "uint48"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 3403,
															"nodeType": "ExpressionStatement",
															"src": "4074:35:3"
														},
														{
															"expression": {
																"id": 3405,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "delete",
																"prefix": true,
																"src": "4128:29:3",
																"subExpression": {
																	"id": 3404,
																	"name": "_pendigRepublicAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3163,
																	"src": "4135:22:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 3406,
															"nodeType": "ExpressionStatement",
															"src": "4128:29:3"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 3408,
																		"name": "PRAdress",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3393,
																		"src": "4217:8:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 3407,
																	"name": "TheNextRepublicAddressWasCancelled",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3151,
																	"src": "4182:34:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
																		"typeString": "function (address)"
																	}
																},
																"id": 3409,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4182:44:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 3410,
															"nodeType": "EmitStatement",
															"src": "4176:50:3"
														}
													]
												}
											}
										]
									},
									"functionSelector": "52e305de",
									"id": 3418,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 3396,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3395,
												"name": "onlyRepublic",
												"nameLocations": [
													"3991:12:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 3224,
												"src": "3991:12:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "3991:12:3"
										}
									],
									"name": "cancelPendingRepublicAddress",
									"nameLocation": "3937:28:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3394,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3393,
												"mutability": "mutable",
												"name": "PRAdress",
												"nameLocation": "3974:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 3418,
												"src": "3966:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3392,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3966:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3965:18:3"
									},
									"returnParameters": {
										"id": 3397,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4004:0:3"
									},
									"scope": 3756,
									"src": "3928:374:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3426,
										"nodeType": "Block",
										"src": "4373:51:3",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 3423,
														"name": "_Republic",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3192,
														"src": "4395:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_access_$3180_storage",
															"typeString": "struct Authority.access storage ref"
														}
													},
													"id": 3424,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4405:7:3",
													"memberName": "roleAdd",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 3175,
													"src": "4395:17:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 3422,
												"id": 3425,
												"nodeType": "Return",
												"src": "4388:24:3"
											}
										]
									},
									"functionSelector": "c5a1c5c1",
									"id": 3427,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getRepublicAddress",
									"nameLocation": "4319:18:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3419,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4337:2:3"
									},
									"returnParameters": {
										"id": 3422,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3421,
												"mutability": "mutable",
												"name": "RG",
												"nameLocation": "4369:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 3427,
												"src": "4361:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3420,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4361:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4360:12:3"
									},
									"scope": 3756,
									"src": "4310:114:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3437,
										"nodeType": "Block",
										"src": "4497:48:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 3434,
															"name": "this",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967268,
															"src": "4528:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_Authority_$3756",
																"typeString": "contract Authority"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_Authority_$3756",
																"typeString": "contract Authority"
															}
														],
														"id": 3433,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "4520:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": {
															"id": 3432,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4520:7:3",
															"typeDescriptions": {}
														}
													},
													"id": 3435,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4520:13:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 3431,
												"id": 3436,
												"nodeType": "Return",
												"src": "4512:21:3"
											}
										]
									},
									"functionSelector": "e47a9d46",
									"id": 3438,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAuthorityAddress",
									"nameLocation": "4445:19:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3428,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4464:2:3"
									},
									"returnParameters": {
										"id": 3431,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3430,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3438,
												"src": "4488:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3429,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4488:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4487:9:3"
									},
									"scope": 3756,
									"src": "4436:109:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3461,
										"nodeType": "Block",
										"src": "4623:182:3",
										"statements": [
											{
												"expression": {
													"id": 3447,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3445,
														"name": "_pendigPresident",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3167,
														"src": "4634:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 3446,
														"name": "newPresident",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3440,
														"src": "4653:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4634:31:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 3448,
												"nodeType": "ExpressionStatement",
												"src": "4634:31:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"hexValue": "74727565",
															"id": 3450,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4695:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 3449,
														"name": "_setPresidentBaned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3743,
														"src": "4676:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$",
															"typeString": "function (bool)"
														}
													},
													"id": 3451,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4676:24:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3452,
												"nodeType": "ExpressionStatement",
												"src": "4676:24:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"hexValue": "74727565",
															"id": 3454,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4734:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 3453,
														"name": "_setPrimeMinisterBaned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3755,
														"src": "4711:22:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$",
															"typeString": "function (bool)"
														}
													},
													"id": 3455,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4711:28:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3456,
												"nodeType": "ExpressionStatement",
												"src": "4711:28:3"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 3458,
															"name": "newPresident",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3440,
															"src": "4784:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 3457,
														"name": "TheNextPresidentWasElected",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3115,
														"src": "4757:26:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 3459,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4757:40:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3460,
												"nodeType": "EmitStatement",
												"src": "4752:45:3"
											}
										]
									},
									"functionSelector": "054203bd",
									"id": 3462,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 3443,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3442,
												"name": "onlyRepublic",
												"nameLocations": [
													"4610:12:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 3224,
												"src": "4610:12:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "4610:12:3"
										}
									],
									"name": "setPendigPresident",
									"nameLocation": "4562:18:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3441,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3440,
												"mutability": "mutable",
												"name": "newPresident",
												"nameLocation": "4589:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 3462,
												"src": "4581:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3439,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4581:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4580:22:3"
									},
									"returnParameters": {
										"id": 3444,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4623:0:3"
									},
									"scope": 3756,
									"src": "4553:252:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3500,
										"nodeType": "Block",
										"src": "4849:350:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 3468,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3465,
														"name": "_pendigPresident",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3167,
														"src": "4864:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"id": 3466,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "4884:3:3",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 3467,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4888:6:3",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "4884:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4864:30:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 3496,
															"name": "AccessOnlyForThePendig",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3103,
															"src": "5167:22:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 3497,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5167:24:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 3498,
													"nodeType": "RevertStatement",
													"src": "5160:31:3"
												},
												"id": 3499,
												"nodeType": "IfStatement",
												"src": "4860:331:3",
												"trueBody": {
													"id": 3495,
													"nodeType": "Block",
													"src": "4896:258:3",
													"statements": [
														{
															"expression": {
																"id": 3470,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "delete",
																"prefix": true,
																"src": "4911:23:3",
																"subExpression": {
																	"id": 3469,
																	"name": "_pendigPresident",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3167,
																	"src": "4918:16:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 3471,
															"nodeType": "ExpressionStatement",
															"src": "4911:23:3"
														},
														{
															"expression": {
																"id": 3477,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 3472,
																		"name": "_president",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3183,
																		"src": "4949:10:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_access_$3180_storage",
																			"typeString": "struct Authority.access storage ref"
																		}
																	},
																	"id": 3474,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "4960:7:3",
																	"memberName": "roleAdd",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 3175,
																	"src": "4949:18:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"id": 3475,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "4970:3:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 3476,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4974:6:3",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "4970:10:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "4949:31:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 3478,
															"nodeType": "ExpressionStatement",
															"src": "4949:31:3"
														},
														{
															"expression": {
																"id": 3482,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "++",
																"prefix": false,
																"src": "4995:18:3",
																"subExpression": {
																	"expression": {
																		"id": 3479,
																		"name": "_president",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3183,
																		"src": "4995:10:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_access_$3180_storage",
																			"typeString": "struct Authority.access storage ref"
																		}
																	},
																	"id": 3481,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "5006:5:3",
																	"memberName": "nonce",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 3179,
																	"src": "4995:16:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																}
															},
															"id": 3483,
															"nodeType": "ExpressionStatement",
															"src": "4995:18:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"hexValue": "66616c7365",
																		"id": 3485,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5047:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"id": 3484,
																	"name": "_setPresidentBaned",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3743,
																	"src": "5028:18:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$",
																		"typeString": "function (bool)"
																	}
																},
																"id": 3486,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5028:25:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 3487,
															"nodeType": "ExpressionStatement",
															"src": "5028:25:3"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"expression": {
																			"id": 3489,
																			"name": "_president",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3183,
																			"src": "5103:10:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_access_$3180_storage",
																				"typeString": "struct Authority.access storage ref"
																			}
																		},
																		"id": 3490,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5114:7:3",
																		"memberName": "roleAdd",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 3175,
																		"src": "5103:18:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"expression": {
																			"id": 3491,
																			"name": "_president",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3183,
																			"src": "5123:10:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_access_$3180_storage",
																				"typeString": "struct Authority.access storage ref"
																			}
																		},
																		"id": 3492,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5134:5:3",
																		"memberName": "nonce",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 3179,
																		"src": "5123:16:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint32",
																			"typeString": "uint32"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint32",
																			"typeString": "uint32"
																		}
																	],
																	"id": 3488,
																	"name": "TheNewPresidentWasConfirmed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3121,
																	"src": "5075:27:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint32_$returns$__$",
																		"typeString": "function (address,uint32)"
																	}
																},
																"id": 3493,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5075:65:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 3494,
															"nodeType": "EmitStatement",
															"src": "5070:70:3"
														}
													]
												}
											}
										]
									},
									"functionSelector": "0df4c390",
									"id": 3501,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferPresident",
									"nameLocation": "4822:17:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3463,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4839:2:3"
									},
									"returnParameters": {
										"id": 3464,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4849:0:3"
									},
									"scope": 3756,
									"src": "4813:386:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3509,
										"nodeType": "Block",
										"src": "5264:44:3",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 3506,
														"name": "_president",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3183,
														"src": "5282:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_access_$3180_storage",
															"typeString": "struct Authority.access storage ref"
														}
													},
													"id": 3507,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "5293:7:3",
													"memberName": "roleAdd",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 3175,
													"src": "5282:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 3505,
												"id": 3508,
												"nodeType": "Return",
												"src": "5275:25:3"
											}
										]
									},
									"functionSelector": "66410997",
									"id": 3510,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getPresidentAdd",
									"nameLocation": "5216:15:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3502,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5231:2:3"
									},
									"returnParameters": {
										"id": 3505,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3504,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3510,
												"src": "5255:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3503,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5255:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5254:9:3"
									},
									"scope": 3756,
									"src": "5207:101:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3518,
										"nodeType": "Block",
										"src": "5370:42:3",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 3515,
														"name": "_president",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3183,
														"src": "5388:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_access_$3180_storage",
															"typeString": "struct Authority.access storage ref"
														}
													},
													"id": 3516,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "5399:5:3",
													"memberName": "baned",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 3177,
													"src": "5388:16:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 3514,
												"id": 3517,
												"nodeType": "Return",
												"src": "5381:23:3"
											}
										]
									},
									"functionSelector": "6cf106d7",
									"id": 3519,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getPresidentBan",
									"nameLocation": "5325:15:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3511,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5340:2:3"
									},
									"returnParameters": {
										"id": 3514,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3513,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3519,
												"src": "5364:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3512,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5364:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5363:6:3"
									},
									"scope": 3756,
									"src": "5316:96:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3534,
										"nodeType": "Block",
										"src": "5489:103:3",
										"statements": [
											{
												"expression": {
													"id": 3528,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3526,
														"name": "_pendingPrimeMinister",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3169,
														"src": "5500:21:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 3527,
														"name": "newPM",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3521,
														"src": "5524:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5500:29:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 3529,
												"nodeType": "ExpressionStatement",
												"src": "5500:29:3"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 3531,
															"name": "newPM",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3521,
															"src": "5578:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 3530,
														"name": "TheNextPrimeMinisterWasElected",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3155,
														"src": "5547:30:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 3532,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5547:37:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3533,
												"nodeType": "EmitStatement",
												"src": "5542:42:3"
											}
										]
									},
									"functionSelector": "544fa93e",
									"id": 3535,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 3524,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3523,
												"name": "onlyPresident",
												"nameLocations": [
													"5475:13:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 3241,
												"src": "5475:13:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "5475:13:3"
										}
									],
									"name": "setPendingPrimeMinister",
									"nameLocation": "5429:23:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3522,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3521,
												"mutability": "mutable",
												"name": "newPM",
												"nameLocation": "5461:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 3535,
												"src": "5453:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3520,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5453:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5452:15:3"
									},
									"returnParameters": {
										"id": 3525,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5489:0:3"
									},
									"scope": 3756,
									"src": "5420:172:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3577,
										"nodeType": "Block",
										"src": "5640:441:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 3541,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3538,
														"name": "_pendingPrimeMinister",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3169,
														"src": "5655:21:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"id": 3539,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "5680:3:3",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 3540,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5684:6:3",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "5680:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5655:35:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 3573,
															"name": "AccessOnlyForThePendig",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3103,
															"src": "6049:22:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 3574,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6049:24:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 3575,
													"nodeType": "RevertStatement",
													"src": "6042:31:3"
												},
												"id": 3576,
												"nodeType": "IfStatement",
												"src": "5651:422:3",
												"trueBody": {
													"id": 3572,
													"nodeType": "Block",
													"src": "5692:344:3",
													"statements": [
														{
															"expression": {
																"id": 3543,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "delete",
																"prefix": true,
																"src": "5707:28:3",
																"subExpression": {
																	"id": 3542,
																	"name": "_pendingPrimeMinister",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3169,
																	"src": "5714:21:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 3544,
															"nodeType": "ExpressionStatement",
															"src": "5707:28:3"
														},
														{
															"expression": {
																"id": 3550,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 3545,
																		"name": "_primeMinister",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3186,
																		"src": "5750:14:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_access_$3180_storage",
																			"typeString": "struct Authority.access storage ref"
																		}
																	},
																	"id": 3547,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "5765:7:3",
																	"memberName": "roleAdd",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 3175,
																	"src": "5750:22:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"id": 3548,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "5775:3:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 3549,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5779:6:3",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "5775:10:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "5750:35:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 3551,
															"nodeType": "ExpressionStatement",
															"src": "5750:35:3"
														},
														{
															"expression": {
																"id": 3555,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "++",
																"prefix": false,
																"src": "5800:22:3",
																"subExpression": {
																	"expression": {
																		"id": 3552,
																		"name": "_primeMinister",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3186,
																		"src": "5800:14:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_access_$3180_storage",
																			"typeString": "struct Authority.access storage ref"
																		}
																	},
																	"id": 3554,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "5815:5:3",
																	"memberName": "nonce",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 3179,
																	"src": "5800:20:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																}
															},
															"id": 3556,
															"nodeType": "ExpressionStatement",
															"src": "5800:22:3"
														},
														{
															"condition": {
																"expression": {
																	"id": 3557,
																	"name": "_primeMinister",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3186,
																	"src": "5841:14:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_access_$3180_storage",
																		"typeString": "struct Authority.access storage ref"
																	}
																},
																"id": 3558,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5856:5:3",
																"memberName": "baned",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 3177,
																"src": "5841:20:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 3564,
															"nodeType": "IfStatement",
															"src": "5837:89:3",
															"trueBody": {
																"id": 3563,
																"nodeType": "Block",
																"src": "5862:64:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"hexValue": "66616c7365",
																					"id": 3560,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "bool",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "5904:5:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					},
																					"value": "false"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				],
																				"id": 3559,
																				"name": "_setPrimeMinisterBaned",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3755,
																				"src": "5881:22:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$",
																					"typeString": "function (bool)"
																				}
																			},
																			"id": 3561,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5881:29:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 3562,
																		"nodeType": "ExpressionStatement",
																		"src": "5881:29:3"
																	}
																]
															}
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"expression": {
																			"id": 3566,
																			"name": "_primeMinister",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3186,
																			"src": "5977:14:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_access_$3180_storage",
																				"typeString": "struct Authority.access storage ref"
																			}
																		},
																		"id": 3567,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5992:7:3",
																		"memberName": "roleAdd",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 3175,
																		"src": "5977:22:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"expression": {
																			"id": 3568,
																			"name": "_primeMinister",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3186,
																			"src": "6001:14:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_access_$3180_storage",
																				"typeString": "struct Authority.access storage ref"
																			}
																		},
																		"id": 3569,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "6016:5:3",
																		"memberName": "nonce",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 3179,
																		"src": "6001:20:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint32",
																			"typeString": "uint32"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint32",
																			"typeString": "uint32"
																		}
																	],
																	"id": 3565,
																	"name": "TheNewPrimeMinisterWasConfirmed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3161,
																	"src": "5945:31:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint32_$returns$__$",
																		"typeString": "function (address,uint32)"
																	}
																},
																"id": 3570,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5945:77:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 3571,
															"nodeType": "EmitStatement",
															"src": "5940:82:3"
														}
													]
												}
											}
										]
									},
									"functionSelector": "18074eee",
									"id": 3578,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferPrimeMinister",
									"nameLocation": "5609:21:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3536,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5630:2:3"
									},
									"returnParameters": {
										"id": 3537,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5640:0:3"
									},
									"scope": 3756,
									"src": "5600:481:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3586,
										"nodeType": "Block",
										"src": "6150:48:3",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 3583,
														"name": "_primeMinister",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3186,
														"src": "6168:14:3",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_access_$3180_storage",
															"typeString": "struct Authority.access storage ref"
														}
													},
													"id": 3584,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "6183:7:3",
													"memberName": "roleAdd",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 3175,
													"src": "6168:22:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 3582,
												"id": 3585,
												"nodeType": "Return",
												"src": "6161:29:3"
											}
										]
									},
									"functionSelector": "a53da00b",
									"id": 3587,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getPrimeMinisterAdd",
									"nameLocation": "6098:19:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3579,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6117:2:3"
									},
									"returnParameters": {
										"id": 3582,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3581,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3587,
												"src": "6141:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3580,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6141:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6140:9:3"
									},
									"scope": 3756,
									"src": "6089:109:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3595,
										"nodeType": "Block",
										"src": "6264:46:3",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 3592,
														"name": "_primeMinister",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3186,
														"src": "6282:14:3",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_access_$3180_storage",
															"typeString": "struct Authority.access storage ref"
														}
													},
													"id": 3593,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "6297:5:3",
													"memberName": "baned",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 3177,
													"src": "6282:20:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 3591,
												"id": 3594,
												"nodeType": "Return",
												"src": "6275:27:3"
											}
										]
									},
									"functionSelector": "e4f3e947",
									"id": 3596,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getPrimeMinisterBan",
									"nameLocation": "6215:19:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3588,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6234:2:3"
									},
									"returnParameters": {
										"id": 3591,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3590,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3596,
												"src": "6258:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3589,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6258:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6257:6:3"
									},
									"scope": 3756,
									"src": "6206:104:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3622,
										"nodeType": "Block",
										"src": "6407:228:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3607,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 3603,
																"name": "newGCAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3598,
																"src": "6422:12:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 3604,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6435:4:3",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "6422:17:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 3605,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6440:6:3",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "6422:24:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 3606,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6449:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6422:28:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"errorCall": {
														"arguments": [
															{
																"id": 3618,
																"name": "newGCAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3598,
																"src": "6612:12:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 3617,
															"name": "TheAddressIsNotValidForGC",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3107,
															"src": "6586:25:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																"typeString": "function (address) pure"
															}
														},
														"id": 3619,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6586:39:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 3620,
													"nodeType": "RevertStatement",
													"src": "6579:46:3"
												},
												"id": 3621,
												"nodeType": "IfStatement",
												"src": "6418:207:3",
												"trueBody": {
													"id": 3616,
													"nodeType": "Block",
													"src": "6452:121:3",
													"statements": [
														{
															"expression": {
																"id": 3610,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 3608,
																	"name": "_pendingGCAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3165,
																	"src": "6467:17:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 3609,
																	"name": "newGCAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3598,
																	"src": "6487:12:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "6467:32:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 3611,
															"nodeType": "ExpressionStatement",
															"src": "6467:32:3"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 3613,
																		"name": "newGCAddress",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3598,
																		"src": "6546:12:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 3612,
																	"name": "TheNextGCAddressWasElected",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3125,
																	"src": "6519:26:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
																		"typeString": "function (address)"
																	}
																},
																"id": 3614,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6519:40:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 3615,
															"nodeType": "EmitStatement",
															"src": "6514:45:3"
														}
													]
												}
											}
										]
									},
									"functionSelector": "ca4cce68",
									"id": 3623,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 3601,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3600,
												"name": "onlyRepublic",
												"nameLocations": [
													"6394:12:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 3224,
												"src": "6394:12:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "6394:12:3"
										}
									],
									"name": "setPendingGovernanceContractAddress",
									"nameLocation": "6329:35:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3599,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3598,
												"mutability": "mutable",
												"name": "newGCAddress",
												"nameLocation": "6373:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 3623,
												"src": "6365:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3597,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6365:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6364:22:3"
									},
									"returnParameters": {
										"id": 3602,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6407:0:3"
									},
									"scope": 3756,
									"src": "6320:315:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3660,
										"nodeType": "Block",
										"src": "6729:333:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 3632,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3630,
														"name": "_pendingGCAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3165,
														"src": "6744:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 3631,
														"name": "pendingGCAdd",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3625,
														"src": "6765:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6744:33:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"errorCall": {
														"arguments": [
															{
																"id": 3656,
																"name": "pendingGCAdd",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3625,
																"src": "7041:12:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 3655,
															"name": "TheAddressIsNotValidForGC",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3107,
															"src": "7015:25:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																"typeString": "function (address) pure"
															}
														},
														"id": 3657,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7015:39:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 3658,
													"nodeType": "RevertStatement",
													"src": "7008:46:3"
												},
												"id": 3659,
												"nodeType": "IfStatement",
												"src": "6740:314:3",
												"trueBody": {
													"id": 3654,
													"nodeType": "Block",
													"src": "6779:223:3",
													"statements": [
														{
															"expression": {
																"id": 3634,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "delete",
																"prefix": true,
																"src": "6794:24:3",
																"subExpression": {
																	"id": 3633,
																	"name": "_pendingGCAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3165,
																	"src": "6801:17:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 3635,
															"nodeType": "ExpressionStatement",
															"src": "6794:24:3"
														},
														{
															"expression": {
																"id": 3640,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 3636,
																		"name": "_governance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3189,
																		"src": "6833:11:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_access_$3180_storage",
																			"typeString": "struct Authority.access storage ref"
																		}
																	},
																	"id": 3638,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "6845:7:3",
																	"memberName": "roleAdd",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 3175,
																	"src": "6833:19:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 3639,
																	"name": "pendingGCAdd",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3625,
																	"src": "6855:12:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "6833:34:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 3641,
															"nodeType": "ExpressionStatement",
															"src": "6833:34:3"
														},
														{
															"expression": {
																"id": 3645,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "++",
																"prefix": false,
																"src": "6882:19:3",
																"subExpression": {
																	"expression": {
																		"id": 3642,
																		"name": "_governance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3189,
																		"src": "6882:11:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_access_$3180_storage",
																			"typeString": "struct Authority.access storage ref"
																		}
																	},
																	"id": 3644,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "6894:5:3",
																	"memberName": "nonce",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 3179,
																	"src": "6882:17:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																}
															},
															"id": 3646,
															"nodeType": "ExpressionStatement",
															"src": "6882:19:3"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"expression": {
																			"id": 3648,
																			"name": "_governance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3189,
																			"src": "6949:11:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_access_$3180_storage",
																				"typeString": "struct Authority.access storage ref"
																			}
																		},
																		"id": 3649,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "6961:7:3",
																		"memberName": "roleAdd",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 3175,
																		"src": "6949:19:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"expression": {
																			"id": 3650,
																			"name": "_governance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3189,
																			"src": "6970:11:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_access_$3180_storage",
																				"typeString": "struct Authority.access storage ref"
																			}
																		},
																		"id": 3651,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "6982:5:3",
																		"memberName": "nonce",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 3179,
																		"src": "6970:17:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint32",
																			"typeString": "uint32"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint32",
																			"typeString": "uint32"
																		}
																	],
																	"id": 3647,
																	"name": "TheNewGCAddressWasConfirmed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3131,
																	"src": "6921:27:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint32_$returns$__$",
																		"typeString": "function (address,uint32)"
																	}
																},
																"id": 3652,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6921:67:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 3653,
															"nodeType": "EmitStatement",
															"src": "6916:72:3"
														}
													]
												}
											}
										]
									},
									"functionSelector": "ee7126c3",
									"id": 3661,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 3628,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3627,
												"name": "onlyPresident",
												"nameLocations": [
													"6715:13:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 3241,
												"src": "6715:13:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "6715:13:3"
										}
									],
									"name": "transferGovernanceContractAddress",
									"nameLocation": "6652:33:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3626,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3625,
												"mutability": "mutable",
												"name": "pendingGCAdd",
												"nameLocation": "6694:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 3661,
												"src": "6686:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3624,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6686:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6685:22:3"
									},
									"returnParameters": {
										"id": 3629,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6729:0:3"
									},
									"scope": 3756,
									"src": "6643:419:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3669,
										"nodeType": "Block",
										"src": "7125:45:3",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 3666,
														"name": "_governance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3189,
														"src": "7143:11:3",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_access_$3180_storage",
															"typeString": "struct Authority.access storage ref"
														}
													},
													"id": 3667,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "7155:7:3",
													"memberName": "roleAdd",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 3175,
													"src": "7143:19:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 3665,
												"id": 3668,
												"nodeType": "Return",
												"src": "7136:26:3"
											}
										]
									},
									"functionSelector": "289b3c0d",
									"id": 3670,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getGovernance",
									"nameLocation": "7079:13:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3662,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7092:2:3"
									},
									"returnParameters": {
										"id": 3665,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3664,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3670,
												"src": "7116:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3663,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7116:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7115:9:3"
									},
									"scope": 3756,
									"src": "7070:100:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3678,
										"nodeType": "Block",
										"src": "7239:43:3",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 3675,
														"name": "_governance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3189,
														"src": "7257:11:3",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_access_$3180_storage",
															"typeString": "struct Authority.access storage ref"
														}
													},
													"id": 3676,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "7269:5:3",
													"memberName": "nonce",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 3179,
													"src": "7257:17:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"functionReturnParameters": 3674,
												"id": 3677,
												"nodeType": "Return",
												"src": "7250:24:3"
											}
										]
									},
									"functionSelector": "c387b49c",
									"id": 3679,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getgovernanceVersion",
									"nameLocation": "7187:20:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3671,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7207:2:3"
									},
									"returnParameters": {
										"id": 3674,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3673,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3679,
												"src": "7231:6:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 3672,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "7231:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7230:8:3"
									},
									"scope": 3756,
									"src": "7178:104:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3694,
										"nodeType": "Block",
										"src": "7349:84:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 3687,
															"name": "baned",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3681,
															"src": "7379:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 3686,
														"name": "_setPresidentBaned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3743,
														"src": "7360:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$",
															"typeString": "function (bool)"
														}
													},
													"id": 3688,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7360:25:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3689,
												"nodeType": "ExpressionStatement",
												"src": "7360:25:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3691,
															"name": "baned",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3681,
															"src": "7419:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 3690,
														"name": "_setPrimeMinisterBaned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3755,
														"src": "7396:22:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$",
															"typeString": "function (bool)"
														}
													},
													"id": 3692,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7396:29:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3693,
												"nodeType": "ExpressionStatement",
												"src": "7396:29:3"
											}
										]
									},
									"functionSelector": "b5c09c68",
									"id": 3695,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 3684,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3683,
												"name": "onlyRepublic",
												"nameLocations": [
													"7336:12:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 3224,
												"src": "7336:12:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "7336:12:3"
										}
									],
									"name": "setPresidentBaned",
									"nameLocation": "7299:17:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3682,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3681,
												"mutability": "mutable",
												"name": "baned",
												"nameLocation": "7322:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 3695,
												"src": "7317:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3680,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7317:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7316:12:3"
									},
									"returnParameters": {
										"id": 3685,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7349:0:3"
									},
									"scope": 3756,
									"src": "7290:143:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3706,
										"nodeType": "Block",
										"src": "7500:48:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 3703,
															"name": "baned",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3697,
															"src": "7534:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 3702,
														"name": "_setPrimeMinisterBaned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3755,
														"src": "7511:22:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$",
															"typeString": "function (bool)"
														}
													},
													"id": 3704,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7511:29:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3705,
												"nodeType": "ExpressionStatement",
												"src": "7511:29:3"
											}
										]
									},
									"functionSelector": "06e99d93",
									"id": 3707,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 3700,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3699,
												"name": "onlyPresident",
												"nameLocations": [
													"7486:13:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 3241,
												"src": "7486:13:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "7486:13:3"
										}
									],
									"name": "setPrimeMinister",
									"nameLocation": "7450:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3698,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3697,
												"mutability": "mutable",
												"name": "baned",
												"nameLocation": "7472:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 3707,
												"src": "7467:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3696,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7467:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7466:12:3"
									},
									"returnParameters": {
										"id": 3701,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7500:0:3"
									},
									"scope": 3756,
									"src": "7441:107:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3730,
										"nodeType": "Block",
										"src": "7620:160:3",
										"statements": [
											{
												"expression": {
													"id": 3716,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 3712,
															"name": "_Republic",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3192,
															"src": "7631:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_access_$3180_storage",
																"typeString": "struct Authority.access storage ref"
															}
														},
														"id": 3714,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "7641:7:3",
														"memberName": "roleAdd",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3175,
														"src": "7631:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 3715,
														"name": "RAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3709,
														"src": "7651:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7631:28:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 3717,
												"nodeType": "ExpressionStatement",
												"src": "7631:28:3"
											},
											{
												"expression": {
													"id": 3721,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "++",
													"prefix": false,
													"src": "7670:17:3",
													"subExpression": {
														"expression": {
															"id": 3718,
															"name": "_Republic",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3192,
															"src": "7670:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_access_$3180_storage",
																"typeString": "struct Authority.access storage ref"
															}
														},
														"id": 3720,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "7680:5:3",
														"memberName": "nonce",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3179,
														"src": "7670:15:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"id": 3722,
												"nodeType": "ExpressionStatement",
												"src": "7670:17:3"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 3724,
																"name": "_Republic",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3192,
																"src": "7737:9:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_access_$3180_storage",
																	"typeString": "struct Authority.access storage ref"
																}
															},
															"id": 3725,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7747:7:3",
															"memberName": "roleAdd",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 3175,
															"src": "7737:17:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 3726,
																"name": "_Republic",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3192,
																"src": "7756:9:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_access_$3180_storage",
																	"typeString": "struct Authority.access storage ref"
																}
															},
															"id": 3727,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7766:5:3",
															"memberName": "nonce",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 3179,
															"src": "7756:15:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														],
														"id": 3723,
														"name": "TheNewRepublicAddressWasConfirmed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3147,
														"src": "7703:33:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint32_$returns$__$",
															"typeString": "function (address,uint32)"
														}
													},
													"id": 3728,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7703:69:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3729,
												"nodeType": "EmitStatement",
												"src": "7698:74:3"
											}
										]
									},
									"id": 3731,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferRepublicAddress",
									"nameLocation": "7569:24:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3710,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3709,
												"mutability": "mutable",
												"name": "RAddress",
												"nameLocation": "7602:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 3731,
												"src": "7594:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3708,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7594:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7593:18:3"
									},
									"returnParameters": {
										"id": 3711,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7620:0:3"
									},
									"scope": 3756,
									"src": "7560:220:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 3742,
										"nodeType": "Block",
										"src": "7836:43:3",
										"statements": [
											{
												"expression": {
													"id": 3740,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 3736,
															"name": "_president",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3183,
															"src": "7847:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_access_$3180_storage",
																"typeString": "struct Authority.access storage ref"
															}
														},
														"id": 3738,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "7858:5:3",
														"memberName": "baned",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3177,
														"src": "7847:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 3739,
														"name": "baned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3733,
														"src": "7866:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "7847:24:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3741,
												"nodeType": "ExpressionStatement",
												"src": "7847:24:3"
											}
										]
									},
									"id": 3743,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setPresidentBaned",
									"nameLocation": "7797:18:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3734,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3733,
												"mutability": "mutable",
												"name": "baned",
												"nameLocation": "7821:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 3743,
												"src": "7816:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3732,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7816:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7815:12:3"
									},
									"returnParameters": {
										"id": 3735,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7836:0:3"
									},
									"scope": 3756,
									"src": "7788:91:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 3754,
										"nodeType": "Block",
										"src": "7939:47:3",
										"statements": [
											{
												"expression": {
													"id": 3752,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 3748,
															"name": "_primeMinister",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3186,
															"src": "7950:14:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_access_$3180_storage",
																"typeString": "struct Authority.access storage ref"
															}
														},
														"id": 3750,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "7965:5:3",
														"memberName": "baned",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3177,
														"src": "7950:20:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 3751,
														"name": "baned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3745,
														"src": "7973:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "7950:28:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3753,
												"nodeType": "ExpressionStatement",
												"src": "7950:28:3"
											}
										]
									},
									"id": 3755,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setPrimeMinisterBaned",
									"nameLocation": "7896:22:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3746,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3745,
												"mutability": "mutable",
												"name": "baned",
												"nameLocation": "7924:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 3755,
												"src": "7919:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3744,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7919:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7918:12:3"
									},
									"returnParameters": {
										"id": 3747,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7939:0:3"
									},
									"scope": 3756,
									"src": "7887:99:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 3757,
							"src": "221:7772:3",
							"usedErrors": [
								3101,
								3103,
								3107,
								3111
							],
							"usedEvents": [
								3115,
								3121,
								3125,
								3131,
								3137,
								3141,
								3147,
								3151,
								3155,
								3161
							]
						}
					],
					"src": "33:7960:3"
				},
				"id": 3
			},
			"contracts/faykGovernance.sol": {
				"ast": {
					"absolutePath": "contracts/faykGovernance.sol",
					"exportedSymbols": {
						"Authority": [
							3756
						],
						"Math": [
							1053
						],
						"SafeCast": [
							2808
						],
						"Time": [
							3083
						],
						"faykGovernance": [
							3999
						]
					},
					"id": 4000,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 3758,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:4"
						},
						{
							"absolutePath": "contracts/authority.sol",
							"file": "contracts/authority.sol",
							"id": 3760,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 4000,
							"sourceUnit": 3757,
							"src": "61:50:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 3759,
										"name": "Authority",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 3756,
										"src": "69:9:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/types/Time.sol",
							"file": "@openzeppelin/contracts/utils/types/Time.sol",
							"id": 3761,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 4000,
							"sourceUnit": 3084,
							"src": "113:54:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 3762,
										"name": "Authority",
										"nameLocations": [
											"208:9:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 3756,
										"src": "208:9:4"
									},
									"id": 3763,
									"nodeType": "InheritanceSpecifier",
									"src": "208:9:4"
								}
							],
							"canonicalName": "faykGovernance",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 3999,
							"linearizedBaseContracts": [
								3999,
								3756
							],
							"name": "faykGovernance",
							"nameLocation": "190:14:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"eventSelector": "5c43a67d451cacaddc8309af64192a4ebee009b9cab5eeb59ec1fb77dd3abcbc",
									"id": 3771,
									"name": "AnOfficialWasElected",
									"nameLocation": "260:20:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 3770,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3765,
												"indexed": true,
												"mutability": "mutable",
												"name": "newCaller",
												"nameLocation": "297:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 3771,
												"src": "281:25:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3764,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "281:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3767,
												"indexed": true,
												"mutability": "mutable",
												"name": "peopleName_satrap",
												"nameLocation": "325:17:4",
												"nodeType": "VariableDeclaration",
												"scope": 3771,
												"src": "308:34:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 3766,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "308:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3769,
												"indexed": true,
												"mutability": "mutable",
												"name": "roleId",
												"nameLocation": "359:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 3771,
												"src": "344:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 3768,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "344:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "280:86:4"
									},
									"src": "254:113:4"
								},
								{
									"anonymous": false,
									"eventSelector": "04a5552f2d245eb6039b03d3a4f2aeeae275c3d6dc08931b837b5715fbbe5199",
									"id": 3779,
									"name": "AnOfficialWasConfirmed",
									"nameLocation": "379:22:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 3778,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3773,
												"indexed": true,
												"mutability": "mutable",
												"name": "newCaller",
												"nameLocation": "418:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 3779,
												"src": "402:25:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3772,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "402:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3775,
												"indexed": true,
												"mutability": "mutable",
												"name": "peopleName_satrap",
												"nameLocation": "446:17:4",
												"nodeType": "VariableDeclaration",
												"scope": 3779,
												"src": "429:34:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 3774,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "429:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3777,
												"indexed": true,
												"mutability": "mutable",
												"name": "roleId",
												"nameLocation": "480:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 3779,
												"src": "465:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 3776,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "465:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "401:86:4"
									},
									"src": "373:115:4"
								},
								{
									"canonicalName": "faykGovernance.CallerInfo",
									"id": 3790,
									"members": [
										{
											"constant": false,
											"id": 3781,
											"mutability": "mutable",
											"name": "peopleName_satrap",
											"nameLocation": "535:17:4",
											"nodeType": "VariableDeclaration",
											"scope": 3790,
											"src": "527:25:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 3780,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "527:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 3783,
											"mutability": "mutable",
											"name": "roleId",
											"nameLocation": "687:6:4",
											"nodeType": "VariableDeclaration",
											"scope": 3790,
											"src": "680:13:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint32",
												"typeString": "uint32"
											},
											"typeName": {
												"id": 3782,
												"name": "uint32",
												"nodeType": "ElementaryTypeName",
												"src": "680:6:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 3785,
											"mutability": "mutable",
											"name": "since",
											"nameLocation": "711:5:4",
											"nodeType": "VariableDeclaration",
											"scope": 3790,
											"src": "704:12:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint48",
												"typeString": "uint48"
											},
											"typeName": {
												"id": 3784,
												"name": "uint48",
												"nodeType": "ElementaryTypeName",
												"src": "704:6:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint48",
													"typeString": "uint48"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 3787,
											"mutability": "mutable",
											"name": "EndSession",
											"nameLocation": "734:10:4",
											"nodeType": "VariableDeclaration",
											"scope": 3790,
											"src": "727:17:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint48",
												"typeString": "uint48"
											},
											"typeName": {
												"id": 3786,
												"name": "uint48",
												"nodeType": "ElementaryTypeName",
												"src": "727:6:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint48",
													"typeString": "uint48"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 3789,
											"mutability": "mutable",
											"name": "executeDelay",
											"nameLocation": "762:12:4",
											"nodeType": "VariableDeclaration",
											"scope": 3790,
											"src": "755:19:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint48",
												"typeString": "uint48"
											},
											"typeName": {
												"id": 3788,
												"name": "uint48",
												"nodeType": "ElementaryTypeName",
												"src": "755:6:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint48",
													"typeString": "uint48"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "CallerInfo",
									"nameLocation": "505:10:4",
									"nodeType": "StructDefinition",
									"scope": 3999,
									"src": "498:284:4",
									"visibility": "public"
								},
								{
									"canonicalName": "faykGovernance.TargetConfig",
									"id": 3799,
									"members": [
										{
											"constant": false,
											"id": 3792,
											"mutability": "mutable",
											"name": "roleId",
											"nameLocation": "828:6:4",
											"nodeType": "VariableDeclaration",
											"scope": 3799,
											"src": "821:13:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint32",
												"typeString": "uint32"
											},
											"typeName": {
												"id": 3791,
												"name": "uint32",
												"nodeType": "ElementaryTypeName",
												"src": "821:6:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 3794,
											"mutability": "mutable",
											"name": "peopleName_satrap",
											"nameLocation": "853:17:4",
											"nodeType": "VariableDeclaration",
											"scope": 3799,
											"src": "845:25:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 3793,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "845:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 3796,
											"mutability": "mutable",
											"name": "executeDelay",
											"nameLocation": "888:12:4",
											"nodeType": "VariableDeclaration",
											"scope": 3799,
											"src": "881:19:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint48",
												"typeString": "uint48"
											},
											"typeName": {
												"id": 3795,
												"name": "uint48",
												"nodeType": "ElementaryTypeName",
												"src": "881:6:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint48",
													"typeString": "uint48"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 3798,
											"mutability": "mutable",
											"name": "closed",
											"nameLocation": "916:6:4",
											"nodeType": "VariableDeclaration",
											"scope": 3799,
											"src": "911:11:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 3797,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "911:4:4",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "TargetConfig",
									"nameLocation": "797:12:4",
									"nodeType": "StructDefinition",
									"scope": 3999,
									"src": "790:140:4",
									"visibility": "public"
								},
								{
									"canonicalName": "faykGovernance.Role",
									"id": 3808,
									"members": [
										{
											"constant": false,
											"id": 3801,
											"mutability": "mutable",
											"name": "roleLabel",
											"nameLocation": "969:9:4",
											"nodeType": "VariableDeclaration",
											"scope": 3808,
											"src": "961:17:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 3800,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "961:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 3803,
											"mutability": "mutable",
											"name": "admin",
											"nameLocation": "996:5:4",
											"nodeType": "VariableDeclaration",
											"scope": 3808,
											"src": "989:12:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint32",
												"typeString": "uint32"
											},
											"typeName": {
												"id": 3802,
												"name": "uint32",
												"nodeType": "ElementaryTypeName",
												"src": "989:6:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 3805,
											"mutability": "mutable",
											"name": "guardian",
											"nameLocation": "1019:8:4",
											"nodeType": "VariableDeclaration",
											"scope": 3808,
											"src": "1012:15:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint32",
												"typeString": "uint32"
											},
											"typeName": {
												"id": 3804,
												"name": "uint32",
												"nodeType": "ElementaryTypeName",
												"src": "1012:6:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 3807,
											"mutability": "mutable",
											"name": "periodTime",
											"nameLocation": "1045:10:4",
											"nodeType": "VariableDeclaration",
											"scope": 3808,
											"src": "1038:17:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint48",
												"typeString": "uint48"
											},
											"typeName": {
												"id": 3806,
												"name": "uint48",
												"nodeType": "ElementaryTypeName",
												"src": "1038:6:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint48",
													"typeString": "uint48"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Role",
									"nameLocation": "945:4:4",
									"nodeType": "StructDefinition",
									"scope": 3999,
									"src": "938:125:4",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 3813,
									"mutability": "mutable",
									"name": "_callerInfo",
									"nameLocation": "1128:11:4",
									"nodeType": "VariableDeclaration",
									"scope": 3999,
									"src": "1071:68:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_CallerInfo_$3790_storage_$",
										"typeString": "mapping(address => struct faykGovernance.CallerInfo)"
									},
									"typeName": {
										"id": 3812,
										"keyName": "caller",
										"keyNameLocation": "1087:6:4",
										"keyType": {
											"id": 3809,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1079:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1071:48:4",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_CallerInfo_$3790_storage_$",
											"typeString": "mapping(address => struct faykGovernance.CallerInfo)"
										},
										"valueName": "callerInfo",
										"valueNameLocation": "1108:10:4",
										"valueType": {
											"id": 3811,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 3810,
												"name": "CallerInfo",
												"nameLocations": [
													"1097:10:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 3790,
												"src": "1097:10:4"
											},
											"referencedDeclaration": 3790,
											"src": "1097:10:4",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_CallerInfo_$3790_storage_ptr",
												"typeString": "struct faykGovernance.CallerInfo"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 3819,
									"mutability": "mutable",
									"name": "_connectorMapping",
									"nameLocation": "1250:17:4",
									"nodeType": "VariableDeclaration",
									"scope": 3999,
									"src": "1146:121:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_bytes32_$_t_mapping$_t_bytes32_$_t_address_$_$",
										"typeString": "mapping(bytes32 => mapping(bytes32 => address))"
									},
									"typeName": {
										"id": 3818,
										"keyName": "contractTypeName",
										"keyNameLocation": "1162:16:4",
										"keyType": {
											"id": 3814,
											"name": "bytes32",
											"nodeType": "ElementaryTypeName",
											"src": "1154:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											}
										},
										"nodeType": "Mapping",
										"src": "1146:95:4",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_bytes32_$_t_mapping$_t_bytes32_$_t_address_$_$",
											"typeString": "mapping(bytes32 => mapping(bytes32 => address))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 3817,
											"keyName": "peopleName_satrap",
											"keyNameLocation": "1199:17:4",
											"keyType": {
												"id": 3815,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "1191:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"nodeType": "Mapping",
											"src": "1182:58:4",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_bytes32_$_t_address_$",
												"typeString": "mapping(bytes32 => address)"
											},
											"valueName": "addContract",
											"valueNameLocation": "1228:11:4",
											"valueType": {
												"id": 3816,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1220:7:4",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 3826,
									"mutability": "mutable",
									"name": "_roleinfo",
									"nameLocation": "1361:9:4",
									"nodeType": "VariableDeclaration",
									"scope": 3999,
									"src": "1274:96:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint32_$_t_mapping$_t_bytes32_$_t_struct$_Role_$3808_storage_$_$",
										"typeString": "mapping(uint32 => mapping(bytes32 => struct faykGovernance.Role))"
									},
									"typeName": {
										"id": 3825,
										"keyName": "roleId",
										"keyNameLocation": "1289:6:4",
										"keyType": {
											"id": 3820,
											"name": "uint32",
											"nodeType": "ElementaryTypeName",
											"src": "1282:6:4",
											"typeDescriptions": {
												"typeIdentifier": "t_uint32",
												"typeString": "uint32"
											}
										},
										"nodeType": "Mapping",
										"src": "1274:78:4",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint32_$_t_mapping$_t_bytes32_$_t_struct$_Role_$3808_storage_$_$",
											"typeString": "mapping(uint32 => mapping(bytes32 => struct faykGovernance.Role))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 3824,
											"keyName": "peopleName_satrap",
											"keyNameLocation": "1316:17:4",
											"keyType": {
												"id": 3821,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "1308:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"nodeType": "Mapping",
											"src": "1299:52:4",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Role_$3808_storage_$",
												"typeString": "mapping(bytes32 => struct faykGovernance.Role)"
											},
											"valueName": "roleInfo",
											"valueNameLocation": "1342:8:4",
											"valueType": {
												"id": 3823,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 3822,
													"name": "Role",
													"nameLocations": [
														"1337:4:4"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 3808,
													"src": "1337:4:4"
												},
												"referencedDeclaration": 3808,
												"src": "1337:4:4",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Role_$3808_storage_ptr",
													"typeString": "struct faykGovernance.Role"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 3833,
									"mutability": "mutable",
									"name": "_targets",
									"nameLocation": "1464:8:4",
									"nodeType": "VariableDeclaration",
									"scope": 3999,
									"src": "1377:95:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_bytes4_$_t_struct$_TargetConfig_$3799_storage_$_$",
										"typeString": "mapping(address => mapping(bytes4 => struct faykGovernance.TargetConfig))"
									},
									"typeName": {
										"id": 3832,
										"keyName": "target",
										"keyNameLocation": "1393:6:4",
										"keyType": {
											"id": 3827,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1385:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1377:78:4",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_bytes4_$_t_struct$_TargetConfig_$3799_storage_$_$",
											"typeString": "mapping(address => mapping(bytes4 => struct faykGovernance.TargetConfig))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 3831,
											"keyName": "selector",
											"keyNameLocation": "1418:8:4",
											"keyType": {
												"id": 3828,
												"name": "bytes4",
												"nodeType": "ElementaryTypeName",
												"src": "1411:6:4",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												}
											},
											"nodeType": "Mapping",
											"src": "1403:51:4",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_bytes4_$_t_struct$_TargetConfig_$3799_storage_$",
												"typeString": "mapping(bytes4 => struct faykGovernance.TargetConfig)"
											},
											"valueName": "roleAccess",
											"valueNameLocation": "1443:10:4",
											"valueType": {
												"id": 3830,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 3829,
													"name": "TargetConfig",
													"nameLocations": [
														"1430:12:4"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 3799,
													"src": "1430:12:4"
												},
												"referencedDeclaration": 3799,
												"src": "1430:12:4",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_TargetConfig_$3799_storage_ptr",
													"typeString": "struct faykGovernance.TargetConfig"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 3849,
										"nodeType": "Block",
										"src": "1512:126:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 3844,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 3840,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 3836,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "1531:3:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 3837,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1535:6:4",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "1531:10:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 3838,
																		"name": "getPrimeMinisterAdd",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3587,
																		"src": "1545:19:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 3839,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1545:21:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "1531:35:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"id": 3843,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "!",
																"prefix": true,
																"src": "1570:22:4",
																"subExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 3841,
																		"name": "getPrimeMinisterBan",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3596,
																		"src": "1571:19:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																			"typeString": "function () view returns (bool)"
																		}
																	},
																	"id": 3842,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1571:21:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1531:61:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416363657373206973206e6f742076616c6964",
															"id": 3845,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1594:21:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7ee2f33aca8781826955961850ee0290e9bc9194955de2a97e17ec13b6234440",
																"typeString": "literal_string \"Access is not valid\""
															},
															"value": "Access is not valid"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7ee2f33aca8781826955961850ee0290e9bc9194955de2a97e17ec13b6234440",
																"typeString": "literal_string \"Access is not valid\""
															}
														],
														"id": 3835,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1523:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3846,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1523:93:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3847,
												"nodeType": "ExpressionStatement",
												"src": "1523:93:4"
											},
											{
												"id": 3848,
												"nodeType": "PlaceholderStatement",
												"src": "1629:1:4"
											}
										]
									},
									"id": 3850,
									"name": "onlyPrimeMinister",
									"nameLocation": "1492:17:4",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 3834,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1509:2:4"
									},
									"src": "1483:155:4",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3881,
										"nodeType": "Block",
										"src": "1675:269:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3855,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3852,
														"name": "TimeFirstElection",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3171,
														"src": "1691:17:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint48",
															"typeString": "uint48"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 3853,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "1711:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 3854,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1717:9:4",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "1711:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1691:35:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"expression": {
														"arguments": [
															{
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 3875,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"id": 3871,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 3867,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "1837:3:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 3868,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1841:6:4",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "1837:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 3869,
																			"name": "getPrimeMinisterAdd",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3587,
																			"src": "1851:19:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 3870,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1851:21:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"src": "1837:35:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"id": 3874,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "!",
																	"prefix": true,
																	"src": "1876:22:4",
																	"subExpression": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 3872,
																			"name": "getPrimeMinisterBan",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3596,
																			"src": "1877:19:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																				"typeString": "function () view returns (bool)"
																			}
																		},
																		"id": 3873,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1877:21:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "1837:61:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															{
																"hexValue": "416363657373206973206e6f742076616c6964",
																"id": 3876,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1900:21:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_7ee2f33aca8781826955961850ee0290e9bc9194955de2a97e17ec13b6234440",
																	"typeString": "literal_string \"Access is not valid\""
																},
																"value": "Access is not valid"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																{
																	"typeIdentifier": "t_stringliteral_7ee2f33aca8781826955961850ee0290e9bc9194955de2a97e17ec13b6234440",
																	"typeString": "literal_string \"Access is not valid\""
																}
															],
															"id": 3866,
															"name": "require",
															"nodeType": "Identifier",
															"overloadedDeclarations": [
																4294967278,
																4294967278
															],
															"referencedDeclaration": 4294967278,
															"src": "1829:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																"typeString": "function (bool,string memory) pure"
															}
														},
														"id": 3877,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1829:93:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 3878,
													"nodeType": "ExpressionStatement",
													"src": "1829:93:4"
												},
												"id": 3879,
												"nodeType": "IfStatement",
												"src": "1687:235:4",
												"trueBody": {
													"id": 3865,
													"nodeType": "Block",
													"src": "1728:95:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 3861,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"id": 3857,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "1751:3:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 3858,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "1755:6:4",
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "1751:10:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 3859,
																				"name": "getRepublicAddress",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3427,
																				"src": "1765:18:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																					"typeString": "function () view returns (address)"
																				}
																			},
																			"id": 3860,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1765:20:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "1751:34:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "416363657373206973206e6f742076616c6964",
																		"id": 3862,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1787:21:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_7ee2f33aca8781826955961850ee0290e9bc9194955de2a97e17ec13b6234440",
																			"typeString": "literal_string \"Access is not valid\""
																		},
																		"value": "Access is not valid"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_7ee2f33aca8781826955961850ee0290e9bc9194955de2a97e17ec13b6234440",
																			"typeString": "literal_string \"Access is not valid\""
																		}
																	],
																	"id": 3856,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "1743:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 3863,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1743:66:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 3864,
															"nodeType": "ExpressionStatement",
															"src": "1743:66:4"
														}
													]
												}
											},
											{
												"id": 3880,
												"nodeType": "PlaceholderStatement",
												"src": "1935:1:4"
											}
										]
									},
									"id": 3882,
									"name": "onlyPrimeRepublic",
									"nameLocation": "1655:17:4",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 3851,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1672:2:4"
									},
									"src": "1646:298:4",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3953,
										"nodeType": "Block",
										"src": "2094:514:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 3902,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3897,
														"name": "oldCaller",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3884,
														"src": "2109:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 3900,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2130:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 3899,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2122:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 3898,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2122:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 3901,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2122:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2109:23:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3909,
												"nodeType": "IfStatement",
												"src": "2105:85:4",
												"trueBody": {
													"id": 3908,
													"nodeType": "Block",
													"src": "2134:56:4",
													"statements": [
														{
															"expression": {
																"id": 3906,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "delete",
																"prefix": true,
																"src": "2149:29:4",
																"subExpression": {
																	"baseExpression": {
																		"id": 3903,
																		"name": "_callerInfo",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3813,
																		"src": "2156:11:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_CallerInfo_$3790_storage_$",
																			"typeString": "mapping(address => struct faykGovernance.CallerInfo storage ref)"
																		}
																	},
																	"id": 3905,
																	"indexExpression": {
																		"id": 3904,
																		"name": "oldCaller",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3884,
																		"src": "2168:9:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "2156:22:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_CallerInfo_$3790_storage",
																		"typeString": "struct faykGovernance.CallerInfo storage ref"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 3907,
															"nodeType": "ExpressionStatement",
															"src": "2149:29:4"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 3922,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"id": 3915,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"baseExpression": {
																	"id": 3910,
																	"name": "_callerInfo",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3813,
																	"src": "2205:11:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_CallerInfo_$3790_storage_$",
																		"typeString": "mapping(address => struct faykGovernance.CallerInfo storage ref)"
																	}
																},
																"id": 3912,
																"indexExpression": {
																	"id": 3911,
																	"name": "newCaller",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3886,
																	"src": "2217:9:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2205:22:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_CallerInfo_$3790_storage",
																	"typeString": "struct faykGovernance.CallerInfo storage ref"
																}
															},
															"id": 3913,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2228:17:4",
															"memberName": "peopleName_satrap",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 3781,
															"src": "2205:40:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"id": 3914,
															"name": "peopleName_satrap",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3888,
															"src": "2249:17:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"src": "2205:61:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														},
														"id": 3921,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"baseExpression": {
																	"id": 3916,
																	"name": "_callerInfo",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3813,
																	"src": "2270:11:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_CallerInfo_$3790_storage_$",
																		"typeString": "mapping(address => struct faykGovernance.CallerInfo storage ref)"
																	}
																},
																"id": 3918,
																"indexExpression": {
																	"id": 3917,
																	"name": "newCaller",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3886,
																	"src": "2282:9:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2270:22:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_CallerInfo_$3790_storage",
																	"typeString": "struct faykGovernance.CallerInfo storage ref"
																}
															},
															"id": 3919,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2293:6:4",
															"memberName": "roleId",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 3783,
															"src": "2270:29:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"id": 3920,
															"name": "roleId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3890,
															"src": "2303:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"src": "2270:39:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "2205:104:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 3951,
													"nodeType": "Block",
													"src": "2599:2:4",
													"statements": []
												},
												"id": 3952,
												"nodeType": "IfStatement",
												"src": "2201:400:4",
												"trueBody": {
													"id": 3950,
													"nodeType": "Block",
													"src": "2311:282:4",
													"statements": [
														{
															"expression": {
																"id": 3928,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"baseExpression": {
																			"id": 3923,
																			"name": "_callerInfo",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3813,
																			"src": "2328:11:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_struct$_CallerInfo_$3790_storage_$",
																				"typeString": "mapping(address => struct faykGovernance.CallerInfo storage ref)"
																			}
																		},
																		"id": 3925,
																		"indexExpression": {
																			"id": 3924,
																			"name": "newCaller",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3886,
																			"src": "2340:9:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "2328:22:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_CallerInfo_$3790_storage",
																			"typeString": "struct faykGovernance.CallerInfo storage ref"
																		}
																	},
																	"id": 3926,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "2351:17:4",
																	"memberName": "peopleName_satrap",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 3781,
																	"src": "2328:40:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 3927,
																	"name": "peopleName_satrap",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3888,
																	"src": "2371:17:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"src": "2328:60:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"id": 3929,
															"nodeType": "ExpressionStatement",
															"src": "2328:60:4"
														},
														{
															"expression": {
																"id": 3935,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"baseExpression": {
																			"id": 3930,
																			"name": "_callerInfo",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3813,
																			"src": "2403:11:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_struct$_CallerInfo_$3790_storage_$",
																				"typeString": "mapping(address => struct faykGovernance.CallerInfo storage ref)"
																			}
																		},
																		"id": 3932,
																		"indexExpression": {
																			"id": 3931,
																			"name": "newCaller",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3886,
																			"src": "2415:9:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "2403:22:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_CallerInfo_$3790_storage",
																			"typeString": "struct faykGovernance.CallerInfo storage ref"
																		}
																	},
																	"id": 3933,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "2426:6:4",
																	"memberName": "roleId",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 3783,
																	"src": "2403:29:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 3934,
																	"name": "roleId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3890,
																	"src": "2435:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	}
																},
																"src": "2403:38:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																}
															},
															"id": 3936,
															"nodeType": "ExpressionStatement",
															"src": "2403:38:4"
														},
														{
															"expression": {
																"id": 3942,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"baseExpression": {
																			"id": 3937,
																			"name": "_callerInfo",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3813,
																			"src": "2456:11:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_struct$_CallerInfo_$3790_storage_$",
																				"typeString": "mapping(address => struct faykGovernance.CallerInfo storage ref)"
																			}
																		},
																		"id": 3939,
																		"indexExpression": {
																			"id": 3938,
																			"name": "newCaller",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3886,
																			"src": "2468:9:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "2456:22:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_CallerInfo_$3790_storage",
																			"typeString": "struct faykGovernance.CallerInfo storage ref"
																		}
																	},
																	"id": 3940,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "2479:12:4",
																	"memberName": "executeDelay",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 3789,
																	"src": "2456:35:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint48",
																		"typeString": "uint48"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 3941,
																	"name": "delay",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3892,
																	"src": "2494:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint48",
																		"typeString": "uint48"
																	}
																},
																"src": "2456:43:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint48",
																	"typeString": "uint48"
																}
															},
															"id": 3943,
															"nodeType": "ExpressionStatement",
															"src": "2456:43:4"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 3945,
																		"name": "newCaller",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3886,
																		"src": "2542:9:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 3946,
																		"name": "peopleName_satrap",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3888,
																		"src": "2553:17:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 3947,
																		"name": "roleId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3890,
																		"src": "2572:6:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint32",
																			"typeString": "uint32"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_uint32",
																			"typeString": "uint32"
																		}
																	],
																	"id": 3944,
																	"name": "AnOfficialWasElected",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3771,
																	"src": "2521:20:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_bytes32_$_t_uint32_$returns$__$",
																		"typeString": "function (address,bytes32,uint32)"
																	}
																},
																"id": 3948,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2521:58:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 3949,
															"nodeType": "EmitStatement",
															"src": "2516:63:4"
														}
													]
												}
											}
										]
									},
									"functionSelector": "14c58b51",
									"id": 3954,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 3895,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3894,
												"name": "onlyPrimeRepublic",
												"nameLocations": [
													"2076:17:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 3882,
												"src": "2076:17:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "2076:17:4"
										}
									],
									"name": "setCallerInfo",
									"nameLocation": "1961:13:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3893,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3884,
												"mutability": "mutable",
												"name": "oldCaller",
												"nameLocation": "1983:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 3954,
												"src": "1975:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3883,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1975:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3886,
												"mutability": "mutable",
												"name": "newCaller",
												"nameLocation": "2002:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 3954,
												"src": "1994:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3885,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1994:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3888,
												"mutability": "mutable",
												"name": "peopleName_satrap",
												"nameLocation": "2021:17:4",
												"nodeType": "VariableDeclaration",
												"scope": 3954,
												"src": "2013:25:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 3887,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2013:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3890,
												"mutability": "mutable",
												"name": "roleId",
												"nameLocation": "2047:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 3954,
												"src": "2040:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 3889,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "2040:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3892,
												"mutability": "mutable",
												"name": "delay",
												"nameLocation": "2062:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 3954,
												"src": "2055:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint48",
													"typeString": "uint48"
												},
												"typeName": {
													"id": 3891,
													"name": "uint48",
													"nodeType": "ElementaryTypeName",
													"src": "2055:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint48",
														"typeString": "uint48"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1974:94:4"
									},
									"returnParameters": {
										"id": 3896,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2094:0:4"
									},
									"scope": 3999,
									"src": "1952:656:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3997,
										"nodeType": "Block",
										"src": "2657:307:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 3971,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														},
														"id": 3963,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"baseExpression": {
																	"id": 3957,
																	"name": "_callerInfo",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3813,
																	"src": "2671:11:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_CallerInfo_$3790_storage_$",
																		"typeString": "mapping(address => struct faykGovernance.CallerInfo storage ref)"
																	}
																},
																"id": 3960,
																"indexExpression": {
																	"expression": {
																		"id": 3958,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "2683:3:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 3959,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2687:6:4",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "2683:10:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2671:23:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_CallerInfo_$3790_storage",
																	"typeString": "struct faykGovernance.CallerInfo storage ref"
																}
															},
															"id": 3961,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2695:6:4",
															"memberName": "roleId",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 3783,
															"src": "2671:30:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 3962,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2704:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "2671:34:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint48",
															"typeString": "uint48"
														},
														"id": 3970,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"baseExpression": {
																	"id": 3964,
																	"name": "_callerInfo",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3813,
																	"src": "2709:11:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_CallerInfo_$3790_storage_$",
																		"typeString": "mapping(address => struct faykGovernance.CallerInfo storage ref)"
																	}
																},
																"id": 3967,
																"indexExpression": {
																	"expression": {
																		"id": 3965,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "2721:3:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 3966,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2725:6:4",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "2721:10:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2709:23:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_CallerInfo_$3790_storage",
																	"typeString": "struct faykGovernance.CallerInfo storage ref"
																}
															},
															"id": 3968,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2733:5:4",
															"memberName": "since",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 3785,
															"src": "2709:29:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint48",
																"typeString": "uint48"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 3969,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2742:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "2709:34:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "2671:72:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 3993,
															"name": "AccessOnlyForThePendig",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3103,
															"src": "2932:22:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 3994,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2932:24:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 3995,
													"nodeType": "RevertStatement",
													"src": "2925:31:4"
												},
												"id": 3996,
												"nodeType": "IfStatement",
												"src": "2667:289:4",
												"trueBody": {
													"id": 3992,
													"nodeType": "Block",
													"src": "2745:174:4",
													"statements": [
														{
															"expression": {
																"baseExpression": {
																	"id": 3972,
																	"name": "_callerInfo",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3813,
																	"src": "2756:11:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_CallerInfo_$3790_storage_$",
																		"typeString": "mapping(address => struct faykGovernance.CallerInfo storage ref)"
																	}
																},
																"id": 3975,
																"indexExpression": {
																	"expression": {
																		"id": 3973,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "2768:3:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 3974,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2772:6:4",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "2768:10:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2756:23:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_CallerInfo_$3790_storage",
																	"typeString": "struct faykGovernance.CallerInfo storage ref"
																}
															},
															"id": 3976,
															"nodeType": "ExpressionStatement",
															"src": "2756:23:4"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"expression": {
																			"id": 3978,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "2820:3:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 3979,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2824:6:4",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "2820:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"expression": {
																			"baseExpression": {
																				"id": 3980,
																				"name": "_callerInfo",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3813,
																				"src": "2832:11:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_struct$_CallerInfo_$3790_storage_$",
																					"typeString": "mapping(address => struct faykGovernance.CallerInfo storage ref)"
																				}
																			},
																			"id": 3983,
																			"indexExpression": {
																				"expression": {
																					"id": 3981,
																					"name": "msg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967281,
																					"src": "2844:3:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_message",
																						"typeString": "msg"
																					}
																				},
																				"id": 3982,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "2848:6:4",
																				"memberName": "sender",
																				"nodeType": "MemberAccess",
																				"src": "2844:10:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "2832:23:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_CallerInfo_$3790_storage",
																				"typeString": "struct faykGovernance.CallerInfo storage ref"
																			}
																		},
																		"id": 3984,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2856:17:4",
																		"memberName": "peopleName_satrap",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 3781,
																		"src": "2832:41:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"expression": {
																			"baseExpression": {
																				"id": 3985,
																				"name": "_callerInfo",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3813,
																				"src": "2875:11:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_struct$_CallerInfo_$3790_storage_$",
																					"typeString": "mapping(address => struct faykGovernance.CallerInfo storage ref)"
																				}
																			},
																			"id": 3988,
																			"indexExpression": {
																				"expression": {
																					"id": 3986,
																					"name": "msg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967281,
																					"src": "2887:3:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_message",
																						"typeString": "msg"
																					}
																				},
																				"id": 3987,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "2891:6:4",
																				"memberName": "sender",
																				"nodeType": "MemberAccess",
																				"src": "2887:10:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "2875:23:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_CallerInfo_$3790_storage",
																				"typeString": "struct faykGovernance.CallerInfo storage ref"
																			}
																		},
																		"id": 3989,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2899:6:4",
																		"memberName": "roleId",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 3783,
																		"src": "2875:30:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint32",
																			"typeString": "uint32"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_uint32",
																			"typeString": "uint32"
																		}
																	],
																	"id": 3977,
																	"name": "AnOfficialWasConfirmed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3779,
																	"src": "2797:22:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_bytes32_$_t_uint32_$returns$__$",
																		"typeString": "function (address,bytes32,uint32)"
																	}
																},
																"id": 3990,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2797:109:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 3991,
															"nodeType": "EmitStatement",
															"src": "2792:114:4"
														}
													]
												}
											}
										]
									},
									"functionSelector": "cd01cc28",
									"id": 3998,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferCallerInfo",
									"nameLocation": "2629:18:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3955,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2647:2:4"
									},
									"returnParameters": {
										"id": 3956,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2657:0:4"
									},
									"scope": 3999,
									"src": "2620:344:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 4000,
							"src": "181:2791:4",
							"usedErrors": [
								3101,
								3103,
								3107,
								3111
							],
							"usedEvents": [
								3115,
								3121,
								3125,
								3131,
								3137,
								3141,
								3147,
								3151,
								3155,
								3161,
								3771,
								3779
							]
						}
					],
					"src": "33:2939:4"
				},
				"id": 4
			}
		}
	}
}