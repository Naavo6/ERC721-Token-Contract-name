{
	"id": "02fabd7b7d48d9ef9cc86eae320d43ee",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.20",
	"solcLongVersion": "0.8.20+commit.a1b79de6",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/ERC721TokenContractName.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.20;\r\n\r\n\r\nimport \"@openzeppelin/contracts/utils/Address.sol\";\r\nimport \"@openzeppelin/contracts/utils/Strings.sol\";\r\nimport \"@openzeppelin/contracts/utils/Context.sol\";\r\nimport {IERC721Errors} from \"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\";\r\nimport {IERC721TCNReceiver} from \"contracts/IERc721TokenContractNameReceiver.sol\";\r\n\r\n\r\n\r\n\r\ncontract ERC721TokenContractName is Context, IERC721Errors, IERC721TCNReceiver {\r\n    event Approval(address indexed owner, address indexed approved, uint16 indexed tokenId);\r\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\r\n    event Transfer(address indexed from, address indexed to, uint16 indexed tokenId);\r\n\r\n\r\n    using Address for address;\r\n    using Strings for uint16;\r\n\r\n\r\n    bytes20 private _name;\r\n\r\n\r\n    bytes10 private _symbol;\r\n\r\n    struct MintInfo {\r\n        uint16 maxMinted;\r\n        uint16 currentTokens;\r\n    }\r\n\r\n\r\n\r\n   MintInfo private mintInfo;\r\n\r\n\r\n    address[1201] private _owners;\r\n\r\n    bool[1201] private ban;\r\n\r\n    mapping(address owner => uint16[1201]) private _balanceAndTokId;\r\n\r\n\r\n    mapping(uint16 tokenId => address operator) private _tokenApprovals;\r\n\r\n\r\n    mapping(address owner => mapping(address operator => bool)) private _operatorApprovals;\r\n\r\n\r\n    constructor(bytes20 name_, bytes10 symbol_) {\r\n        _name = name_;\r\n        _symbol = symbol_;\r\n    }\r\n\r\n\r\n    function name() public view returns (bytes20) {\r\n        return _name;\r\n    }\r\n\r\n\r\n    function symbol() public view returns (bytes10) {\r\n        return _symbol;\r\n    }\r\n\r\n\r\n    function balanceOf(address owner) public view returns (uint16) {\r\n        require(owner != address(0),\"The input address cannot be zero\");\r\n        return _balanceAndTokId[owner][0];\r\n    }\r\n\r\n\r\n    function ownerOf(uint16 tokenId) public view returns (address) {\r\n        return _requireOwned(tokenId);\r\n    }\r\n\r\n\r\n    function tokenURI(uint16 tokenId) public view returns (string memory) {\r\n        _requireOwned(tokenId);\r\n        string memory base = _baseURI();\r\n        return bytes(base).length > 0 ? string.concat(base, tokenId.toString()) : \"\";\r\n    }\r\n\r\n\r\n    function approve(address to, uint16 tokenId) public {\r\n        _aprove(to, tokenId, _msgSender());\r\n    }\r\n\r\n    function getApproved(uint16 tokenId) public view virtual returns (address) {\r\n        _requireOwned(tokenId);\r\n\r\n        return _tokenApprovals[tokenId];\r\n    }\r\n\r\n    function setApprovalForAll(address operator, bool approved) public {\r\n        require(_msgSender() != operator, \"The address of the owner and the operator must be different\");\r\n        if (operator == address(0)) {\r\n            revert ERC721InvalidOperator(operator);\r\n        }\r\n        \r\n        _operatorApprovals[_msgSender()][operator] = approved;\r\n         emit ApprovalForAll(_msgSender(), operator, approved);\r\n    }\r\n\r\n\r\n    function isApprovedForAll(address owner, address operator) public view returns (bool) {\r\n        return _operatorApprovals[owner][operator];\r\n    }\r\n\r\n    function transferFrom(address from, address to, uint16 tokenId) public virtual {\r\n        if (to == address(0)) {\r\n            revert ERC721InvalidReceiver(address(0));\r\n        }\r\n\r\n        // Setting an \"auth\" arguments enables the `_isAuthorized` check which verifies that the token exists\r\n        // (from != 0). Therefore, it is not needed to verify that the return value is not 0 here.\r\n        address previousOwner = _update(to, tokenId, _msgSender());\r\n        if (previousOwner != from) {\r\n            revert ERC721IncorrectOwner(from, tokenId, previousOwner);\r\n        }\r\n    }\r\n\r\n    function safeTransferFrom(address from, address to, uint16 tokenId) public {\r\n        safeTransferFrom(from, to, tokenId, \"\");\r\n    }\r\n\r\n    function safeTransferFrom(address from, address to, uint16 tokenId, bytes memory data) public virtual {\r\n        transferFrom(from, to, tokenId);\r\n        _checkOnERC721Received(from, to, tokenId, data);\r\n    }\r\n\r\n\r\n    function _update(address to, uint16 tokenId, address auth) private returns (address) {\r\n\r\n    }\r\n\r\n\r\n    function _aprove(address to, uint16 tokenId, address auth) private {\r\n        address owner = _requireOwned(tokenId);\r\n        require(owner != to, \"The address of the owner and the operator must be different\");\r\n       if (owner != auth && !isApprovedForAll(owner, auth)){\r\n        revert ERC721InvalidApprover(auth);\r\n       }\r\n\r\n        _tokenApprovals[tokenId] = to;\r\n        emit Approval(owner, to, tokenId);\r\n    }\r\n\r\n    \r\n\r\n\r\n    function _requireOwned(uint16 tokenId) private view returns (address) {\r\n        require(0 < tokenId && tokenId <= mintInfo.currentTokens, \"The ID entered is invalid. It must be in this interval 0 < id <= current tokens\"); \r\n        return _owners[tokenId];\r\n    }\r\n\r\n\r\n    function _baseURI() private pure returns (string memory) {\r\n        return \"\";\r\n    }\r\n\r\n    function _checkOnERC721Received(address from, address to, uint16 tokenId, bytes memory data) private {\r\n        if (to.code.length > 0) {\r\n            try IERC721TCNReceiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {\r\n                if (retval != IERC721TCNReceiver.onERC721Received.selector) {\r\n                    revert ERC721InvalidReceiver(to);\r\n                }\r\n            } catch (bytes memory reason) {\r\n                if (reason.length == 0) {\r\n                    revert ERC721InvalidReceiver(to);\r\n                } else {\r\n                    /// @solidity memory-safe-assembly\r\n                    assembly {\r\n                        revert(add(32, reason), mload(reason))\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    function onERC721Received(\r\n        address operator,\r\n        address from,\r\n        uint16 tokenId,\r\n        bytes calldata data\r\n    ) external returns (bytes4){}\r\n\r\n\r\n    \r\n}"
			},
			"contracts/IERc721TokenContractNameReceiver.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.8.20;\r\n\r\n/**\r\n * @title ERC-721 token receiver interface\r\n * @dev Interface for any contract that wants to support safeTransfers\r\n * from ERC-721 asset contracts.\r\n */\r\ninterface IERC721TCNReceiver {\r\n    /**\r\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\r\n     * by `operator` from `from`, this function is called.\r\n     *\r\n     * It must return its Solidity selector to confirm the token transfer.\r\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be\r\n     * reverted.\r\n     *\r\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\r\n     */\r\n    function onERC721Received(\r\n        address operator,\r\n        address from,\r\n        uint16 tokenId,\r\n        bytes calldata data\r\n    ) external returns (bytes4);\r\n}"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`â€™s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`â€™s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`â€™s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Strings.sol)\n\npragma solidity ^0.8.20;\n\nimport {Math} from \"./math/Math.sol\";\nimport {SignedMath} from \"./math/SignedMath.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant HEX_DIGITS = \"0123456789abcdef\";\n    uint8 private constant ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev The `value` string doesn't fit in the specified `length`.\n     */\n    error StringsInsufficientHexLength(uint256 value, uint256 length);\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            /// @solidity memory-safe-assembly\n            assembly {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                /// @solidity memory-safe-assembly\n                assembly {\n                    mstore8(ptr, byte(mod(value, 10), HEX_DIGITS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toStringSigned(int256 value) internal pure returns (string memory) {\n        return string.concat(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value)));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        uint256 localValue = value;\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = HEX_DIGITS[localValue & 0xf];\n            localValue >>= 4;\n        }\n        if (localValue != 0) {\n            revert StringsInsufficientHexLength(value, length);\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n     * representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return bytes(a).length == bytes(b).length && keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Address.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev The ETH balance of the account is not enough to perform the operation.\n     */\n    error AddressInsufficientBalance(address account);\n\n    /**\n     * @dev There's no code at `target` (it is not a contract).\n     */\n    error AddressEmptyCode(address target);\n\n    /**\n     * @dev A call to an address target failed. The target may have reverted.\n     */\n    error FailedInnerCall();\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        if (address(this).balance < amount) {\n            revert AddressInsufficientBalance(address(this));\n        }\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        if (!success) {\n            revert FailedInnerCall();\n        }\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason or custom error, it is bubbled\n     * up by this function (like regular Solidity function calls). However, if\n     * the call reverted with no returned reason, this function reverts with a\n     * {FailedInnerCall} error.\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        if (address(this).balance < value) {\n            revert AddressInsufficientBalance(address(this));\n        }\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n     * was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\n     * unsuccessful call.\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata\n    ) internal view returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            // only check if target is a contract if the call was successful and the return data is empty\n            // otherwise we already know that it was a contract\n            if (returndata.length == 0 && target.code.length == 0) {\n                revert AddressEmptyCode(target);\n            }\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n     * revert reason or with a default {FailedInnerCall} error.\n     */\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}.\n     */\n    function _revert(bytes memory returndata) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert FailedInnerCall();\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // must be unchecked in order to support `n = type(int256).min`\n            return uint256(n >= 0 ? n : -n);\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    /**\n     * @dev Muldiv operation overflow.\n     */\n    error MathOverflowedMulDiv();\n\n    enum Rounding {\n        Floor, // Toward negative infinity\n        Ceil, // Toward positive infinity\n        Trunc, // Toward zero\n        Expand // Away from zero\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds towards infinity instead\n     * of rounding towards zero.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (b == 0) {\n            // Guarantee the same behavior as in a regular Solidity division.\n            return a / b;\n        }\n\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n     * denominator == 0.\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n     * Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0 = x * y; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            if (denominator <= prod1) {\n                revert MathOverflowedMulDiv();\n            }\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\n\n            uint256 twos = denominator & (0 - denominator);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\n            // works in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n     * towards zero.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // â†’ `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // â†’ `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (unsignedRoundsUp(rounding) && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (unsignedRoundsUp(rounding) && 10 ** result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << (result << 3) < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\n     */\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\n        return uint8(rounding) % 2 == 1;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`â€™s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`â€™s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`â€™s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"Address": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								}
							],
							"name": "AddressEmptyCode",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "AddressInsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "FailedInnerCall",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"errors": {
							"AddressEmptyCode(address)": [
								{
									"details": "There's no code at `target` (it is not a contract)."
								}
							],
							"AddressInsufficientBalance(address)": [
								{
									"details": "The ETH balance of the account is not enough to perform the operation."
								}
							],
							"FailedInnerCall()": [
								{
									"details": "A call to an address target failed. The target may have reverted."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Address.sol\":195:6261  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Address.sol\":195:6261  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220dc1ce83ea60e1b632553fae24c0f2ab7a9207d097799c8a0d5a58d7ccdb10b9164736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220dc1ce83ea60e1b632553fae24c0f2ab7a9207d097799c8a0d5a58d7ccdb10b9164736f6c63430008140033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDC SHR 0xE8 RETURNDATACOPY 0xA6 0xE SHL PUSH4 0x2553FAE2 0x4C 0xF 0x2A 0xB7 0xA9 KECCAK256 PUSH30 0x97799C8A0D5A58D7CCDB10B9164736F6C63430008140033000000000000 ",
							"sourceMap": "195:6066:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220dc1ce83ea60e1b632553fae24c0f2ab7a9207d097799c8a0d5a58d7ccdb10b9164736f6c63430008140033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDC SHR 0xE8 RETURNDATACOPY 0xA6 0xE SHL PUSH4 0x2553FAE2 0x4C 0xF 0x2A 0xB7 0xA9 KECCAK256 PUSH30 0x97799C8A0D5A58D7CCDB10B9164736F6C63430008140033000000000000 ",
							"sourceMap": "195:6066:1:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"_revert(bytes memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory)": "infinite",
								"verifyCallResultFromTarget(address,bool,bytes memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 1,
									"value": "B"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "BYTE",
									"source": 1
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "ADDRESS",
									"source": 1
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MSTORE8",
									"source": 1
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220dc1ce83ea60e1b632553fae24c0f2ab7a9207d097799c8a0d5a58d7ccdb10b9164736f6c63430008140033",
									".code": [
										{
											"begin": 195,
											"end": 6261,
											"name": "PUSHDEPLOYADDRESS",
											"source": 1
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "REVERT",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contracts/ERC721TokenContractName.sol",
								"contracts/IERc721TokenContractNameReceiver.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"AddressInsufficientBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"AddressInsufficientBalance(address)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"Strings": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "length",
									"type": "uint256"
								}
							],
							"name": "StringsInsufficientHexLength",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "String operations.",
						"errors": {
							"StringsInsufficientHexLength(uint256,uint256)": [
								{
									"details": "The `value` string doesn't fit in the specified `length`."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Strings.sol\":251:3098  library Strings {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":251:3098  library Strings {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212202f16324ec2eab48f4026b0a3390ff328f7839bb31295ad3f723794aa24ff365664736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212202f16324ec2eab48f4026b0a3390ff328f7839bb31295ad3f723794aa24ff365664736f6c63430008140033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2F AND ORIGIN 0x4E 0xC2 0xEA 0xB4 DUP16 BLOCKHASH 0x26 0xB0 LOG3 CODECOPY 0xF RETURN 0x28 0xF7 DUP4 SWAP12 0xB3 SLT SWAP6 0xAD EXTCODEHASH PUSH19 0x3794AA24FF365664736F6C6343000814003300 ",
							"sourceMap": "251:2847:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212202f16324ec2eab48f4026b0a3390ff328f7839bb31295ad3f723794aa24ff365664736f6c63430008140033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2F AND ORIGIN 0x4E 0xC2 0xEA 0xB4 DUP16 BLOCKHASH 0x26 0xB0 LOG3 CODECOPY 0xF RETURN 0x28 0xF7 DUP4 SWAP12 0xB3 SLT SWAP6 0xAD EXTCODEHASH PUSH19 0x3794AA24FF365664736F6C6343000814003300 ",
							"sourceMap": "251:2847:3:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"equal(string memory,string memory)": "infinite",
								"toHexString(address)": "infinite",
								"toHexString(uint256)": "infinite",
								"toHexString(uint256,uint256)": "infinite",
								"toString(uint256)": "infinite",
								"toStringSigned(int256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 3,
									"value": "B"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "BYTE",
									"source": 3
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "EQ",
									"source": 3
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 3,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 3,
									"value": "24"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "ADDRESS",
									"source": 3
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE8",
									"source": 3
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212202f16324ec2eab48f4026b0a3390ff328f7839bb31295ad3f723794aa24ff365664736f6c63430008140033",
									".code": [
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSHDEPLOYADDRESS",
											"source": 3
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "ADDRESS",
											"source": 3
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "REVERT",
											"source": 3
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contracts/ERC721TokenContractName.sol",
								"contracts/IERc721TokenContractNameReceiver.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"StringsInsufficientHexLength\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"String operations.\",\"errors\":{\"StringsInsufficientHexLength(uint256,uint256)\":[{\"details\":\"The `value` string doesn't fit in the specified `length`.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"Math": {
					"abi": [
						{
							"inputs": [],
							"name": "MathOverflowedMulDiv",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard math utilities missing in the Solidity language.",
						"errors": {
							"MathOverflowedMulDiv()": [
								{
									"details": "Muldiv operation overflow."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/Math.sol\":203:15117  library Math {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":203:15117  library Math {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212204a90bcf65ffb48e9c51d3503f33f51a10bd9a2c31b2d95cf873206fc780da2d364736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212204a90bcf65ffb48e9c51d3503f33f51a10bd9a2c31b2d95cf873206fc780da2d364736f6c63430008140033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4A SWAP1 0xBC 0xF6 PUSH0 0xFB BASEFEE 0xE9 0xC5 SAR CALLDATALOAD SUB RETURN EXTCODEHASH MLOAD LOG1 SIGNEXTEND 0xD9 LOG2 0xC3 SHL 0x2D SWAP6 0xCF DUP8 ORIGIN MOD 0xFC PUSH25 0xDA2D364736F6C634300081400330000000000000000000000 ",
							"sourceMap": "203:14914:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212204a90bcf65ffb48e9c51d3503f33f51a10bd9a2c31b2d95cf873206fc780da2d364736f6c63430008140033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4A SWAP1 0xBC 0xF6 PUSH0 0xFB BASEFEE 0xE9 0xC5 SAR CALLDATALOAD SUB RETURN EXTCODEHASH MLOAD LOG1 SIGNEXTEND 0xD9 LOG2 0xC3 SHL 0x2D SWAP6 0xCF DUP8 ORIGIN MOD 0xFC PUSH25 0xDA2D364736F6C634300081400330000000000000000000000 ",
							"sourceMap": "203:14914:4:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"average(uint256,uint256)": "infinite",
								"ceilDiv(uint256,uint256)": "infinite",
								"log10(uint256)": "infinite",
								"log10(uint256,enum Math.Rounding)": "infinite",
								"log2(uint256)": "infinite",
								"log2(uint256,enum Math.Rounding)": "infinite",
								"log256(uint256)": "infinite",
								"log256(uint256,enum Math.Rounding)": "infinite",
								"max(uint256,uint256)": "infinite",
								"min(uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256,enum Math.Rounding)": "infinite",
								"sqrt(uint256)": "infinite",
								"sqrt(uint256,enum Math.Rounding)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite",
								"unsignedRoundsUp(enum Math.Rounding)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 4,
									"value": "B"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "BYTE",
									"source": 4
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 4,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "ADDRESS",
									"source": 4
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE8",
									"source": 4
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212204a90bcf65ffb48e9c51d3503f33f51a10bd9a2c31b2d95cf873206fc780da2d364736f6c63430008140033",
									".code": [
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSHDEPLOYADDRESS",
											"source": 4
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "REVERT",
											"source": 4
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contracts/ERC721TokenContractName.sol",
								"contracts/IERc721TokenContractNameReceiver.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"MathOverflowedMulDiv\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"errors\":{\"MathOverflowedMulDiv()\":[{\"details\":\"Muldiv operation overflow.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"SignedMath": {
					"abi": [],
					"devdoc": {
						"details": "Standard signed math utilities missing in the Solidity language.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/SignedMath.sol\":216:1263  library SignedMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/SignedMath.sol\":216:1263  library SignedMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220044fef6072ee027e05d8404bd9cda4f0cf185bbbfa2c422bd29b8b68644a106364736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220044fef6072ee027e05d8404bd9cda4f0cf185bbbfa2c422bd29b8b68644a106364736f6c63430008140033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DIV 0x4F 0xEF PUSH1 0x72 0xEE MUL PUSH31 0x5D8404BD9CDA4F0CF185BBBFA2C422BD29B8B68644A106364736F6C634300 ADDMOD EQ STOP CALLER ",
							"sourceMap": "216:1047:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220044fef6072ee027e05d8404bd9cda4f0cf185bbbfa2c422bd29b8b68644a106364736f6c63430008140033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DIV 0x4F 0xEF PUSH1 0x72 0xEE MUL PUSH31 0x5D8404BD9CDA4F0CF185BBBFA2C422BD29B8B68644A106364736F6C634300 ADDMOD EQ STOP CALLER ",
							"sourceMap": "216:1047:5:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"abs(int256)": "infinite",
								"average(int256,int256)": "infinite",
								"max(int256,int256)": "infinite",
								"min(int256,int256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 5,
									"value": "B"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "BYTE",
									"source": 5
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 5,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "ADDRESS",
									"source": 5
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE8",
									"source": 5
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220044fef6072ee027e05d8404bd9cda4f0cf185bbbfa2c422bd29b8b68644a106364736f6c63430008140033",
									".code": [
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSHDEPLOYADDRESS",
											"source": 5
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "REVERT",
											"source": 5
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contracts/ERC721TokenContractName.sol",
								"contracts/IERc721TokenContractNameReceiver.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/ERC721TokenContractName.sol": {
				"ERC721TokenContractName": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes20",
									"name": "name_",
									"type": "bytes20"
								},
								{
									"internalType": "bytes10",
									"name": "symbol_",
									"type": "bytes10"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint16",
									"name": "tokenId",
									"type": "uint16"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint16",
									"name": "tokenId",
									"type": "uint16"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint16",
									"name": "tokenId",
									"type": "uint16"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint16",
									"name": "",
									"type": "uint16"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint16",
									"name": "tokenId",
									"type": "uint16"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "bytes20",
									"name": "",
									"type": "bytes20"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint16",
									"name": "tokenId",
									"type": "uint16"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC721Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint16",
									"name": "tokenId",
									"type": "uint16"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint16",
									"name": "tokenId",
									"type": "uint16"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint16",
									"name": "tokenId",
									"type": "uint16"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "bytes10",
									"name": "",
									"type": "bytes10"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint16",
									"name": "tokenId",
									"type": "uint16"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint16",
									"name": "tokenId",
									"type": "uint16"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`â€™s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {
							"onERC721Received(address,address,uint16,bytes)": {
								"details": "Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/ERC721TokenContractName.sol\":400:5931  contract ERC721TokenContractName is Context, IERC721Errors, IERC721TCNReceiver {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/ERC721TokenContractName.sol\":1340:1444  constructor(bytes20 name_, bytes10 symbol_) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/ERC721TokenContractName.sol\":1403:1408  name_ */\n  dup2\n    /* \"contracts/ERC721TokenContractName.sol\":1395:1400  _name */\n  0x00\n  dup1\n    /* \"contracts/ERC721TokenContractName.sol\":1395:1408  _name = name_ */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0x60\n  shr\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/ERC721TokenContractName.sol\":1429:1436  symbol_ */\n  dup1\n    /* \"contracts/ERC721TokenContractName.sol\":1419:1426  _symbol */\n  0x00\n  0x14\n    /* \"contracts/ERC721TokenContractName.sol\":1419:1436  _symbol = symbol_ */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xb0\n  shr\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/ERC721TokenContractName.sol\":1340:1444  constructor(bytes20 name_, bytes10 symbol_) {... */\n  pop\n  pop\n    /* \"contracts/ERC721TokenContractName.sol\":400:5931  contract ERC721TokenContractName is Context, IERC721Errors, IERC721TCNReceiver {... */\n  jump(tag_6)\n    /* \"#utility.yul\":88:205   */\ntag_8:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:484   */\ntag_10:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:477   */\n  0xffffffffffffffffffffffffffffffffffffffff000000000000000000000000\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:478   */\n  and\n    /* \"#utility.yul\":389:478   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:484   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":490:612   */\ntag_11:\n    /* \"#utility.yul\":563:587   */\n  tag_22\n    /* \"#utility.yul\":581:586   */\n  dup2\n    /* \"#utility.yul\":563:587   */\n  tag_10\n  jump\t// in\ntag_22:\n    /* \"#utility.yul\":556:561   */\n  dup2\n    /* \"#utility.yul\":553:588   */\n  eq\n    /* \"#utility.yul\":543:606   */\n  tag_23\n  jumpi\n    /* \"#utility.yul\":602:603   */\n  0x00\n    /* \"#utility.yul\":599:600   */\n  dup1\n    /* \"#utility.yul\":592:604   */\n  revert\n    /* \"#utility.yul\":543:606   */\ntag_23:\n    /* \"#utility.yul\":490:612   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":618:761   */\ntag_12:\n    /* \"#utility.yul\":675:680   */\n  0x00\n    /* \"#utility.yul\":706:712   */\n  dup2\n    /* \"#utility.yul\":700:713   */\n  mload\n    /* \"#utility.yul\":691:713   */\n  swap1\n  pop\n    /* \"#utility.yul\":722:755   */\n  tag_25\n    /* \"#utility.yul\":749:754   */\n  dup2\n    /* \"#utility.yul\":722:755   */\n  tag_11\n  jump\t// in\ntag_25:\n    /* \"#utility.yul\":618:761   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":767:917   */\ntag_13:\n    /* \"#utility.yul\":804:811   */\n  0x00\n    /* \"#utility.yul\":844:910   */\n  0xffffffffffffffffffff00000000000000000000000000000000000000000000\n    /* \"#utility.yul\":837:842   */\n  dup3\n    /* \"#utility.yul\":833:911   */\n  and\n    /* \"#utility.yul\":822:911   */\n  swap1\n  pop\n    /* \"#utility.yul\":767:917   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":923:1045   */\ntag_14:\n    /* \"#utility.yul\":996:1020   */\n  tag_28\n    /* \"#utility.yul\":1014:1019   */\n  dup2\n    /* \"#utility.yul\":996:1020   */\n  tag_13\n  jump\t// in\ntag_28:\n    /* \"#utility.yul\":989:994   */\n  dup2\n    /* \"#utility.yul\":986:1021   */\n  eq\n    /* \"#utility.yul\":976:1039   */\n  tag_29\n  jumpi\n    /* \"#utility.yul\":1035:1036   */\n  0x00\n    /* \"#utility.yul\":1032:1033   */\n  dup1\n    /* \"#utility.yul\":1025:1037   */\n  revert\n    /* \"#utility.yul\":976:1039   */\ntag_29:\n    /* \"#utility.yul\":923:1045   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1051:1194   */\ntag_15:\n    /* \"#utility.yul\":1108:1113   */\n  0x00\n    /* \"#utility.yul\":1139:1145   */\n  dup2\n    /* \"#utility.yul\":1133:1146   */\n  mload\n    /* \"#utility.yul\":1124:1146   */\n  swap1\n  pop\n    /* \"#utility.yul\":1155:1188   */\n  tag_31\n    /* \"#utility.yul\":1182:1187   */\n  dup2\n    /* \"#utility.yul\":1155:1188   */\n  tag_14\n  jump\t// in\ntag_31:\n    /* \"#utility.yul\":1051:1194   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1200:1707   */\ntag_3:\n    /* \"#utility.yul\":1279:1285   */\n  0x00\n    /* \"#utility.yul\":1287:1293   */\n  dup1\n    /* \"#utility.yul\":1336:1338   */\n  0x40\n    /* \"#utility.yul\":1324:1333   */\n  dup4\n    /* \"#utility.yul\":1315:1322   */\n  dup6\n    /* \"#utility.yul\":1311:1334   */\n  sub\n    /* \"#utility.yul\":1307:1339   */\n  slt\n    /* \"#utility.yul\":1304:1423   */\n  iszero\n  tag_33\n  jumpi\n    /* \"#utility.yul\":1342:1421   */\n  tag_34\n  tag_8\n  jump\t// in\ntag_34:\n    /* \"#utility.yul\":1304:1423   */\ntag_33:\n    /* \"#utility.yul\":1462:1463   */\n  0x00\n    /* \"#utility.yul\":1487:1551   */\n  tag_35\n    /* \"#utility.yul\":1543:1550   */\n  dup6\n    /* \"#utility.yul\":1534:1540   */\n  dup3\n    /* \"#utility.yul\":1523:1532   */\n  dup7\n    /* \"#utility.yul\":1519:1541   */\n  add\n    /* \"#utility.yul\":1487:1551   */\n  tag_12\n  jump\t// in\ntag_35:\n    /* \"#utility.yul\":1477:1551   */\n  swap3\n  pop\n    /* \"#utility.yul\":1433:1561   */\n  pop\n    /* \"#utility.yul\":1600:1602   */\n  0x20\n    /* \"#utility.yul\":1626:1690   */\n  tag_36\n    /* \"#utility.yul\":1682:1689   */\n  dup6\n    /* \"#utility.yul\":1673:1679   */\n  dup3\n    /* \"#utility.yul\":1662:1671   */\n  dup7\n    /* \"#utility.yul\":1658:1680   */\n  add\n    /* \"#utility.yul\":1626:1690   */\n  tag_15\n  jump\t// in\ntag_36:\n    /* \"#utility.yul\":1616:1690   */\n  swap2\n  pop\n    /* \"#utility.yul\":1571:1700   */\n  pop\n    /* \"#utility.yul\":1200:1707   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"contracts/ERC721TokenContractName.sol\":400:5931  contract ERC721TokenContractName is Context, IERC721Errors, IERC721TCNReceiver {... */\ntag_6:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/ERC721TokenContractName.sol\":400:5931  contract ERC721TokenContractName is Context, IERC721Errors, IERC721TCNReceiver {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x95d89b41\n      gt\n      tag_16\n      jumpi\n      dup1\n      0xb1cff380\n      gt\n      tag_17\n      jumpi\n      dup1\n      0xb1cff380\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xdd7d8440\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xe560ca43\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xe985e9c5\n      eq\n      tag_15\n      jumpi\n      jump(tag_2)\n    tag_17:\n      dup1\n      0x95d89b41\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xa22cb465\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xb145ae31\n      eq\n      tag_11\n      jumpi\n      jump(tag_2)\n    tag_16:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x07394401\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x4ec3dcfe\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x82a7cf1e\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x93b871f2\n      eq\n      tag_8\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/ERC721TokenContractName.sol\":1454:1531  function name() public view returns (bytes20) {... */\n    tag_3:\n      tag_18\n      tag_19\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      tag_20\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_20:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ERC721TokenContractName.sol\":3669:3802  function safeTransferFrom(address from, address to, uint16 tokenId) public {... */\n    tag_4:\n      tag_22\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_23\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_23:\n      tag_25\n      jump\t// in\n    tag_22:\n      stop\n        /* \"contracts/ERC721TokenContractName.sol\":3072:3661  function transferFrom(address from, address to, uint16 tokenId) public virtual {... */\n    tag_5:\n      tag_26\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_27\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_27:\n      tag_28\n      jump\t// in\n    tag_26:\n      stop\n        /* \"contracts/ERC721TokenContractName.sol\":1632:1821  function balanceOf(address owner) public view returns (uint16) {... */\n    tag_6:\n      tag_29\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_30\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_30:\n      tag_32\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      tag_33\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_33:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ERC721TokenContractName.sol\":1831:1942  function ownerOf(uint16 tokenId) public view returns (address) {... */\n    tag_7:\n      tag_35\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_36\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_36:\n      tag_38\n      jump\t// in\n    tag_35:\n      mload(0x40)\n      tag_39\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_39:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ERC721TokenContractName.sol\":2315:2475  function getApproved(uint16 tokenId) public view virtual returns (address) {... */\n    tag_8:\n      tag_41\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_42\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_42:\n      tag_43\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      tag_44\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ERC721TokenContractName.sol\":1541:1622  function symbol() public view returns (bytes10) {... */\n    tag_9:\n      tag_45\n      tag_46\n      jump\t// in\n    tag_45:\n      mload(0x40)\n      tag_47\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_47:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ERC721TokenContractName.sol\":2483:2907  function setApprovalForAll(address operator, bool approved) public {... */\n    tag_10:\n      tag_49\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_50\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_50:\n      tag_52\n      jump\t// in\n    tag_49:\n      stop\n        /* \"contracts/ERC721TokenContractName.sol\":3810:4020  function safeTransferFrom(address from, address to, uint16 tokenId, bytes memory data) public virtual {... */\n    tag_11:\n      tag_53\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_54\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_54:\n      tag_56\n      jump\t// in\n    tag_53:\n      stop\n        /* \"contracts/ERC721TokenContractName.sol\":5753:5918  function onERC721Received(... */\n    tag_12:\n      tag_57\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_58\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_58:\n      tag_60\n      jump\t// in\n    tag_57:\n      mload(0x40)\n      tag_61\n      swap2\n      swap1\n      tag_62\n      jump\t// in\n    tag_61:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ERC721TokenContractName.sol\":1952:2192  function tokenURI(uint16 tokenId) public view returns (string memory) {... */\n    tag_13:\n      tag_63\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_64\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_64:\n      tag_65\n      jump\t// in\n    tag_63:\n      mload(0x40)\n      tag_66\n      swap2\n      swap1\n      tag_67\n      jump\t// in\n    tag_66:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ERC721TokenContractName.sol\":2202:2307  function approve(address to, uint16 tokenId) public {... */\n    tag_14:\n      tag_68\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_69\n      swap2\n      swap1\n      tag_70\n      jump\t// in\n    tag_69:\n      tag_71\n      jump\t// in\n    tag_68:\n      stop\n        /* \"contracts/ERC721TokenContractName.sol\":2917:3064  function isApprovedForAll(address owner, address operator) public view returns (bool) {... */\n    tag_15:\n      tag_72\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_73\n      swap2\n      swap1\n      tag_74\n      jump\t// in\n    tag_73:\n      tag_75\n      jump\t// in\n    tag_72:\n      mload(0x40)\n      tag_76\n      swap2\n      swap1\n      tag_77\n      jump\t// in\n    tag_76:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ERC721TokenContractName.sol\":1454:1531  function name() public view returns (bytes20) {... */\n    tag_19:\n        /* \"contracts/ERC721TokenContractName.sol\":1491:1498  bytes20 */\n      0x00\n        /* \"contracts/ERC721TokenContractName.sol\":1518:1523  _name */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0x60\n      shl\n        /* \"contracts/ERC721TokenContractName.sol\":1511:1523  return _name */\n      swap1\n      pop\n        /* \"contracts/ERC721TokenContractName.sol\":1454:1531  function name() public view returns (bytes20) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/ERC721TokenContractName.sol\":3669:3802  function safeTransferFrom(address from, address to, uint16 tokenId) public {... */\n    tag_25:\n        /* \"contracts/ERC721TokenContractName.sol\":3755:3794  safeTransferFrom(from, to, tokenId, \"\") */\n      tag_80\n        /* \"contracts/ERC721TokenContractName.sol\":3772:3776  from */\n      dup4\n        /* \"contracts/ERC721TokenContractName.sol\":3778:3780  to */\n      dup4\n        /* \"contracts/ERC721TokenContractName.sol\":3782:3789  tokenId */\n      dup4\n        /* \"contracts/ERC721TokenContractName.sol\":3755:3794  safeTransferFrom(from, to, tokenId, \"\") */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n        /* \"contracts/ERC721TokenContractName.sol\":3755:3771  safeTransferFrom */\n      tag_56\n        /* \"contracts/ERC721TokenContractName.sol\":3755:3794  safeTransferFrom(from, to, tokenId, \"\") */\n      jump\t// in\n    tag_80:\n        /* \"contracts/ERC721TokenContractName.sol\":3669:3802  function safeTransferFrom(address from, address to, uint16 tokenId) public {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC721TokenContractName.sol\":3072:3661  function transferFrom(address from, address to, uint16 tokenId) public virtual {... */\n    tag_28:\n        /* \"contracts/ERC721TokenContractName.sol\":3180:3181  0 */\n      0x00\n        /* \"contracts/ERC721TokenContractName.sol\":3166:3182  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ERC721TokenContractName.sol\":3166:3168  to */\n      dup3\n        /* \"contracts/ERC721TokenContractName.sol\":3166:3182  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/ERC721TokenContractName.sol\":3162:3251  if (to == address(0)) {... */\n      tag_82\n      jumpi\n        /* \"contracts/ERC721TokenContractName.sol\":3236:3237  0 */\n      0x00\n        /* \"contracts/ERC721TokenContractName.sol\":3206:3239  ERC721InvalidReceiver(address(0)) */\n      mload(0x40)\n      0x64a0ae9200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_83\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_83:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/ERC721TokenContractName.sol\":3162:3251  if (to == address(0)) {... */\n    tag_82:\n        /* \"contracts/ERC721TokenContractName.sol\":3474:3495  address previousOwner */\n      0x00\n        /* \"contracts/ERC721TokenContractName.sol\":3498:3532  _update(to, tokenId, _msgSender()) */\n      tag_84\n        /* \"contracts/ERC721TokenContractName.sol\":3506:3508  to */\n      dup4\n        /* \"contracts/ERC721TokenContractName.sol\":3510:3517  tokenId */\n      dup4\n        /* \"contracts/ERC721TokenContractName.sol\":3519:3531  _msgSender() */\n      tag_85\n        /* \"contracts/ERC721TokenContractName.sol\":3519:3529  _msgSender */\n      tag_86\n        /* \"contracts/ERC721TokenContractName.sol\":3519:3531  _msgSender() */\n      jump\t// in\n    tag_85:\n        /* \"contracts/ERC721TokenContractName.sol\":3498:3505  _update */\n      tag_87\n        /* \"contracts/ERC721TokenContractName.sol\":3498:3532  _update(to, tokenId, _msgSender()) */\n      jump\t// in\n    tag_84:\n        /* \"contracts/ERC721TokenContractName.sol\":3474:3532  address previousOwner = _update(to, tokenId, _msgSender()) */\n      swap1\n      pop\n        /* \"contracts/ERC721TokenContractName.sol\":3564:3568  from */\n      dup4\n        /* \"contracts/ERC721TokenContractName.sol\":3547:3568  previousOwner != from */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ERC721TokenContractName.sol\":3547:3560  previousOwner */\n      dup2\n        /* \"contracts/ERC721TokenContractName.sol\":3547:3568  previousOwner != from */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/ERC721TokenContractName.sol\":3543:3654  if (previousOwner != from) {... */\n      tag_88\n      jumpi\n        /* \"contracts/ERC721TokenContractName.sol\":3613:3617  from */\n      dup4\n        /* \"contracts/ERC721TokenContractName.sol\":3619:3626  tokenId */\n      dup3\n        /* \"contracts/ERC721TokenContractName.sol\":3628:3641  previousOwner */\n      dup3\n        /* \"contracts/ERC721TokenContractName.sol\":3592:3642  ERC721IncorrectOwner(from, tokenId, previousOwner) */\n      mload(0x40)\n      0x64283d7b00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_89\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_90\n      jump\t// in\n    tag_89:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/ERC721TokenContractName.sol\":3543:3654  if (previousOwner != from) {... */\n    tag_88:\n        /* \"contracts/ERC721TokenContractName.sol\":3151:3661  {... */\n      pop\n        /* \"contracts/ERC721TokenContractName.sol\":3072:3661  function transferFrom(address from, address to, uint16 tokenId) public virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC721TokenContractName.sol\":1632:1821  function balanceOf(address owner) public view returns (uint16) {... */\n    tag_32:\n        /* \"contracts/ERC721TokenContractName.sol\":1687:1693  uint16 */\n      0x00\n        /* \"contracts/ERC721TokenContractName.sol\":1731:1732  0 */\n      dup1\n        /* \"contracts/ERC721TokenContractName.sol\":1714:1733  owner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ERC721TokenContractName.sol\":1714:1719  owner */\n      dup3\n        /* \"contracts/ERC721TokenContractName.sol\":1714:1733  owner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/ERC721TokenContractName.sol\":1706:1769  require(owner != address(0),\"The input address cannot be zero\") */\n      tag_92\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_93\n      swap1\n      tag_94\n      jump\t// in\n    tag_93:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_92:\n        /* \"contracts/ERC721TokenContractName.sol\":1787:1803  _balanceAndTokId */\n      0x04d9\n        /* \"contracts/ERC721TokenContractName.sol\":1787:1810  _balanceAndTokId[owner] */\n      0x00\n        /* \"contracts/ERC721TokenContractName.sol\":1804:1809  owner */\n      dup4\n        /* \"contracts/ERC721TokenContractName.sol\":1787:1810  _balanceAndTokId[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/ERC721TokenContractName.sol\":1811:1812  0 */\n      0x00\n        /* \"contracts/ERC721TokenContractName.sol\":1787:1813  _balanceAndTokId[owner][0] */\n      0x04b1\n      dup2\n      lt\n      tag_95\n      jumpi\n      tag_96\n      tag_97\n      jump\t// in\n    tag_96:\n    tag_95:\n      0x10\n      swap2\n      dup3\n      dup3\n      div\n      add\n      swap2\n      swap1\n      mod\n      0x02\n      mul\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffff\n      and\n        /* \"contracts/ERC721TokenContractName.sol\":1780:1813  return _balanceAndTokId[owner][0] */\n      swap1\n      pop\n        /* \"contracts/ERC721TokenContractName.sol\":1632:1821  function balanceOf(address owner) public view returns (uint16) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/ERC721TokenContractName.sol\":1831:1942  function ownerOf(uint16 tokenId) public view returns (address) {... */\n    tag_38:\n        /* \"contracts/ERC721TokenContractName.sol\":1885:1892  address */\n      0x00\n        /* \"contracts/ERC721TokenContractName.sol\":1912:1934  _requireOwned(tokenId) */\n      tag_100\n        /* \"contracts/ERC721TokenContractName.sol\":1926:1933  tokenId */\n      dup3\n        /* \"contracts/ERC721TokenContractName.sol\":1912:1925  _requireOwned */\n      tag_101\n        /* \"contracts/ERC721TokenContractName.sol\":1912:1934  _requireOwned(tokenId) */\n      jump\t// in\n    tag_100:\n        /* \"contracts/ERC721TokenContractName.sol\":1905:1934  return _requireOwned(tokenId) */\n      swap1\n      pop\n        /* \"contracts/ERC721TokenContractName.sol\":1831:1942  function ownerOf(uint16 tokenId) public view returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/ERC721TokenContractName.sol\":2315:2475  function getApproved(uint16 tokenId) public view virtual returns (address) {... */\n    tag_43:\n        /* \"contracts/ERC721TokenContractName.sol\":2381:2388  address */\n      0x00\n        /* \"contracts/ERC721TokenContractName.sol\":2401:2423  _requireOwned(tokenId) */\n      tag_103\n        /* \"contracts/ERC721TokenContractName.sol\":2415:2422  tokenId */\n      dup3\n        /* \"contracts/ERC721TokenContractName.sol\":2401:2414  _requireOwned */\n      tag_101\n        /* \"contracts/ERC721TokenContractName.sol\":2401:2423  _requireOwned(tokenId) */\n      jump\t// in\n    tag_103:\n      pop\n        /* \"contracts/ERC721TokenContractName.sol\":2443:2458  _tokenApprovals */\n      0x04da\n        /* \"contracts/ERC721TokenContractName.sol\":2443:2467  _tokenApprovals[tokenId] */\n      0x00\n        /* \"contracts/ERC721TokenContractName.sol\":2459:2466  tokenId */\n      dup4\n        /* \"contracts/ERC721TokenContractName.sol\":2443:2467  _tokenApprovals[tokenId] */\n      0xffff\n      and\n      0xffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ERC721TokenContractName.sol\":2436:2467  return _tokenApprovals[tokenId] */\n      swap1\n      pop\n        /* \"contracts/ERC721TokenContractName.sol\":2315:2475  function getApproved(uint16 tokenId) public view virtual returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/ERC721TokenContractName.sol\":1541:1622  function symbol() public view returns (bytes10) {... */\n    tag_46:\n        /* \"contracts/ERC721TokenContractName.sol\":1580:1587  bytes10 */\n      0x00\n        /* \"contracts/ERC721TokenContractName.sol\":1607:1614  _symbol */\n      dup1\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xb0\n      shl\n        /* \"contracts/ERC721TokenContractName.sol\":1600:1614  return _symbol */\n      swap1\n      pop\n        /* \"contracts/ERC721TokenContractName.sol\":1541:1622  function symbol() public view returns (bytes10) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/ERC721TokenContractName.sol\":2483:2907  function setApprovalForAll(address operator, bool approved) public {... */\n    tag_52:\n        /* \"contracts/ERC721TokenContractName.sol\":2585:2593  operator */\n      dup2\n        /* \"contracts/ERC721TokenContractName.sol\":2569:2593  _msgSender() != operator */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ERC721TokenContractName.sol\":2569:2581  _msgSender() */\n      tag_106\n        /* \"contracts/ERC721TokenContractName.sol\":2569:2579  _msgSender */\n      tag_86\n        /* \"contracts/ERC721TokenContractName.sol\":2569:2581  _msgSender() */\n      jump\t// in\n    tag_106:\n        /* \"contracts/ERC721TokenContractName.sol\":2569:2593  _msgSender() != operator */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/ERC721TokenContractName.sol\":2561:2657  require(_msgSender() != operator, \"The address of the owner and the operator must be different\") */\n      tag_107\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_108\n      swap1\n      tag_109\n      jump\t// in\n    tag_108:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_107:\n        /* \"contracts/ERC721TokenContractName.sol\":2692:2693  0 */\n      0x00\n        /* \"contracts/ERC721TokenContractName.sol\":2672:2694  operator == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ERC721TokenContractName.sol\":2672:2680  operator */\n      dup3\n        /* \"contracts/ERC721TokenContractName.sol\":2672:2694  operator == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/ERC721TokenContractName.sol\":2668:2761  if (operator == address(0)) {... */\n      tag_110\n      jumpi\n        /* \"contracts/ERC721TokenContractName.sol\":2740:2748  operator */\n      dup2\n        /* \"contracts/ERC721TokenContractName.sol\":2718:2749  ERC721InvalidOperator(operator) */\n      mload(0x40)\n      0x5b08ba1800000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_111\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_111:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/ERC721TokenContractName.sol\":2668:2761  if (operator == address(0)) {... */\n    tag_110:\n        /* \"contracts/ERC721TokenContractName.sol\":2826:2834  approved */\n      dup1\n        /* \"contracts/ERC721TokenContractName.sol\":2781:2799  _operatorApprovals */\n      0x04db\n        /* \"contracts/ERC721TokenContractName.sol\":2781:2813  _operatorApprovals[_msgSender()] */\n      0x00\n        /* \"contracts/ERC721TokenContractName.sol\":2800:2812  _msgSender() */\n      tag_112\n        /* \"contracts/ERC721TokenContractName.sol\":2800:2810  _msgSender */\n      tag_86\n        /* \"contracts/ERC721TokenContractName.sol\":2800:2812  _msgSender() */\n      jump\t// in\n    tag_112:\n        /* \"contracts/ERC721TokenContractName.sol\":2781:2813  _operatorApprovals[_msgSender()] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/ERC721TokenContractName.sol\":2781:2823  _operatorApprovals[_msgSender()][operator] */\n      0x00\n        /* \"contracts/ERC721TokenContractName.sol\":2814:2822  operator */\n      dup5\n        /* \"contracts/ERC721TokenContractName.sol\":2781:2823  _operatorApprovals[_msgSender()][operator] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/ERC721TokenContractName.sol\":2781:2834  _operatorApprovals[_msgSender()][operator] = approved */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/ERC721TokenContractName.sol\":2880:2888  operator */\n      dup2\n        /* \"contracts/ERC721TokenContractName.sol\":2851:2899  ApprovalForAll(_msgSender(), operator, approved) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ERC721TokenContractName.sol\":2866:2878  _msgSender() */\n      tag_113\n        /* \"contracts/ERC721TokenContractName.sol\":2866:2876  _msgSender */\n      tag_86\n        /* \"contracts/ERC721TokenContractName.sol\":2866:2878  _msgSender() */\n      jump\t// in\n    tag_113:\n        /* \"contracts/ERC721TokenContractName.sol\":2851:2899  ApprovalForAll(_msgSender(), operator, approved) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31\n        /* \"contracts/ERC721TokenContractName.sol\":2890:2898  approved */\n      dup4\n        /* \"contracts/ERC721TokenContractName.sol\":2851:2899  ApprovalForAll(_msgSender(), operator, approved) */\n      mload(0x40)\n      tag_114\n      swap2\n      swap1\n      tag_77\n      jump\t// in\n    tag_114:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/ERC721TokenContractName.sol\":2483:2907  function setApprovalForAll(address operator, bool approved) public {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC721TokenContractName.sol\":3810:4020  function safeTransferFrom(address from, address to, uint16 tokenId, bytes memory data) public virtual {... */\n    tag_56:\n        /* \"contracts/ERC721TokenContractName.sol\":3923:3954  transferFrom(from, to, tokenId) */\n      tag_116\n        /* \"contracts/ERC721TokenContractName.sol\":3936:3940  from */\n      dup5\n        /* \"contracts/ERC721TokenContractName.sol\":3942:3944  to */\n      dup5\n        /* \"contracts/ERC721TokenContractName.sol\":3946:3953  tokenId */\n      dup5\n        /* \"contracts/ERC721TokenContractName.sol\":3923:3935  transferFrom */\n      tag_28\n        /* \"contracts/ERC721TokenContractName.sol\":3923:3954  transferFrom(from, to, tokenId) */\n      jump\t// in\n    tag_116:\n        /* \"contracts/ERC721TokenContractName.sol\":3965:4012  _checkOnERC721Received(from, to, tokenId, data) */\n      tag_117\n        /* \"contracts/ERC721TokenContractName.sol\":3988:3992  from */\n      dup5\n        /* \"contracts/ERC721TokenContractName.sol\":3994:3996  to */\n      dup5\n        /* \"contracts/ERC721TokenContractName.sol\":3998:4005  tokenId */\n      dup5\n        /* \"contracts/ERC721TokenContractName.sol\":4007:4011  data */\n      dup5\n        /* \"contracts/ERC721TokenContractName.sol\":3965:3987  _checkOnERC721Received */\n      tag_118\n        /* \"contracts/ERC721TokenContractName.sol\":3965:4012  _checkOnERC721Received(from, to, tokenId, data) */\n      jump\t// in\n    tag_117:\n        /* \"contracts/ERC721TokenContractName.sol\":3810:4020  function safeTransferFrom(address from, address to, uint16 tokenId, bytes memory data) public virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC721TokenContractName.sol\":5753:5918  function onERC721Received(... */\n    tag_60:\n        /* \"contracts/ERC721TokenContractName.sol\":5909:5915  bytes4 */\n      0x00\n        /* \"contracts/ERC721TokenContractName.sol\":5753:5918  function onERC721Received(... */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC721TokenContractName.sol\":1952:2192  function tokenURI(uint16 tokenId) public view returns (string memory) {... */\n    tag_65:\n        /* \"contracts/ERC721TokenContractName.sol\":2007:2020  string memory */\n      0x60\n        /* \"contracts/ERC721TokenContractName.sol\":2033:2055  _requireOwned(tokenId) */\n      tag_121\n        /* \"contracts/ERC721TokenContractName.sol\":2047:2054  tokenId */\n      dup3\n        /* \"contracts/ERC721TokenContractName.sol\":2033:2046  _requireOwned */\n      tag_101\n        /* \"contracts/ERC721TokenContractName.sol\":2033:2055  _requireOwned(tokenId) */\n      jump\t// in\n    tag_121:\n      pop\n        /* \"contracts/ERC721TokenContractName.sol\":2066:2084  string memory base */\n      0x00\n        /* \"contracts/ERC721TokenContractName.sol\":2087:2097  _baseURI() */\n      tag_122\n        /* \"contracts/ERC721TokenContractName.sol\":2087:2095  _baseURI */\n      tag_123\n        /* \"contracts/ERC721TokenContractName.sol\":2087:2097  _baseURI() */\n      jump\t// in\n    tag_122:\n        /* \"contracts/ERC721TokenContractName.sol\":2066:2097  string memory base = _baseURI() */\n      swap1\n      pop\n        /* \"contracts/ERC721TokenContractName.sol\":2136:2137  0 */\n      0x00\n        /* \"contracts/ERC721TokenContractName.sol\":2121:2125  base */\n      dup2\n        /* \"contracts/ERC721TokenContractName.sol\":2115:2133  bytes(base).length */\n      mload\n        /* \"contracts/ERC721TokenContractName.sol\":2115:2137  bytes(base).length > 0 */\n      gt\n        /* \"contracts/ERC721TokenContractName.sol\":2115:2184  bytes(base).length > 0 ? string.concat(base, tokenId.toString()) : \"\" */\n      tag_124\n      jumpi\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n      jump(tag_125)\n    tag_124:\n        /* \"contracts/ERC721TokenContractName.sol\":2154:2158  base */\n      dup1\n        /* \"contracts/ERC721TokenContractName.sol\":2160:2178  tokenId.toString() */\n      tag_126\n        /* \"contracts/ERC721TokenContractName.sol\":2160:2167  tokenId */\n      dup5\n        /* \"contracts/ERC721TokenContractName.sol\":2160:2176  tokenId.toString */\n      0xffff\n      and\n      tag_127\n        /* \"contracts/ERC721TokenContractName.sol\":2160:2178  tokenId.toString() */\n      jump\t// in\n    tag_126:\n        /* \"contracts/ERC721TokenContractName.sol\":2140:2179  string.concat(base, tokenId.toString()) */\n      add(0x20, mload(0x40))\n      tag_128\n      swap3\n      swap2\n      swap1\n      tag_129\n      jump\t// in\n    tag_128:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"contracts/ERC721TokenContractName.sol\":2115:2184  bytes(base).length > 0 ? string.concat(base, tokenId.toString()) : \"\" */\n    tag_125:\n        /* \"contracts/ERC721TokenContractName.sol\":2108:2184  return bytes(base).length > 0 ? string.concat(base, tokenId.toString()) : \"\" */\n      swap2\n      pop\n      pop\n        /* \"contracts/ERC721TokenContractName.sol\":1952:2192  function tokenURI(uint16 tokenId) public view returns (string memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/ERC721TokenContractName.sol\":2202:2307  function approve(address to, uint16 tokenId) public {... */\n    tag_71:\n        /* \"contracts/ERC721TokenContractName.sol\":2265:2299  _aprove(to, tokenId, _msgSender()) */\n      tag_131\n        /* \"contracts/ERC721TokenContractName.sol\":2273:2275  to */\n      dup3\n        /* \"contracts/ERC721TokenContractName.sol\":2277:2284  tokenId */\n      dup3\n        /* \"contracts/ERC721TokenContractName.sol\":2286:2298  _msgSender() */\n      tag_132\n        /* \"contracts/ERC721TokenContractName.sol\":2286:2296  _msgSender */\n      tag_86\n        /* \"contracts/ERC721TokenContractName.sol\":2286:2298  _msgSender() */\n      jump\t// in\n    tag_132:\n        /* \"contracts/ERC721TokenContractName.sol\":2265:2272  _aprove */\n      tag_133\n        /* \"contracts/ERC721TokenContractName.sol\":2265:2299  _aprove(to, tokenId, _msgSender()) */\n      jump\t// in\n    tag_131:\n        /* \"contracts/ERC721TokenContractName.sol\":2202:2307  function approve(address to, uint16 tokenId) public {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC721TokenContractName.sol\":2917:3064  function isApprovedForAll(address owner, address operator) public view returns (bool) {... */\n    tag_75:\n        /* \"contracts/ERC721TokenContractName.sol\":2997:3001  bool */\n      0x00\n        /* \"contracts/ERC721TokenContractName.sol\":3021:3039  _operatorApprovals */\n      0x04db\n        /* \"contracts/ERC721TokenContractName.sol\":3021:3046  _operatorApprovals[owner] */\n      0x00\n        /* \"contracts/ERC721TokenContractName.sol\":3040:3045  owner */\n      dup5\n        /* \"contracts/ERC721TokenContractName.sol\":3021:3046  _operatorApprovals[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/ERC721TokenContractName.sol\":3021:3056  _operatorApprovals[owner][operator] */\n      0x00\n        /* \"contracts/ERC721TokenContractName.sol\":3047:3055  operator */\n      dup4\n        /* \"contracts/ERC721TokenContractName.sol\":3021:3056  _operatorApprovals[owner][operator] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/ERC721TokenContractName.sol\":3014:3056  return _operatorApprovals[owner][operator] */\n      swap1\n      pop\n        /* \"contracts/ERC721TokenContractName.sol\":2917:3064  function isApprovedForAll(address owner, address operator) public view returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_86:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/ERC721TokenContractName.sol\":4030:4125  function _update(address to, uint16 tokenId, address auth) private returns (address) {... */\n    tag_87:\n        /* \"contracts/ERC721TokenContractName.sol\":4106:4113  address */\n      0x00\n        /* \"contracts/ERC721TokenContractName.sol\":4030:4125  function _update(address to, uint16 tokenId, address auth) private returns (address) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC721TokenContractName.sol\":4574:4838  function _requireOwned(uint16 tokenId) private view returns (address) {... */\n    tag_101:\n        /* \"contracts/ERC721TokenContractName.sol\":4635:4642  address */\n      0x00\n        /* \"contracts/ERC721TokenContractName.sol\":4667:4674  tokenId */\n      dup2\n        /* \"contracts/ERC721TokenContractName.sol\":4663:4674  0 < tokenId */\n      0xffff\n      and\n        /* \"contracts/ERC721TokenContractName.sol\":4663:4664  0 */\n      0x00\n        /* \"contracts/ERC721TokenContractName.sol\":4663:4674  0 < tokenId */\n      lt\n        /* \"contracts/ERC721TokenContractName.sol\":4663:4711  0 < tokenId && tokenId <= mintInfo.currentTokens */\n      dup1\n      iszero\n      tag_138\n      jumpi\n      pop\n        /* \"contracts/ERC721TokenContractName.sol\":4689:4697  mintInfo */\n      0x01\n        /* \"contracts/ERC721TokenContractName.sol\":4689:4711  mintInfo.currentTokens */\n      0x00\n      add\n      0x02\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffff\n      and\n        /* \"contracts/ERC721TokenContractName.sol\":4678:4711  tokenId <= mintInfo.currentTokens */\n      0xffff\n      and\n        /* \"contracts/ERC721TokenContractName.sol\":4678:4685  tokenId */\n      dup3\n        /* \"contracts/ERC721TokenContractName.sol\":4678:4711  tokenId <= mintInfo.currentTokens */\n      0xffff\n      and\n      gt\n      iszero\n        /* \"contracts/ERC721TokenContractName.sol\":4663:4711  0 < tokenId && tokenId <= mintInfo.currentTokens */\n    tag_138:\n        /* \"contracts/ERC721TokenContractName.sol\":4655:4795  require(0 < tokenId && tokenId <= mintInfo.currentTokens, \"The ID entered is invalid. It must be in this interval 0 < id <= current tokens\") */\n      tag_139\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_140\n      swap1\n      tag_141\n      jump\t// in\n    tag_140:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_139:\n        /* \"contracts/ERC721TokenContractName.sol\":4814:4821  _owners */\n      0x02\n        /* \"contracts/ERC721TokenContractName.sol\":4822:4829  tokenId */\n      dup3\n        /* \"contracts/ERC721TokenContractName.sol\":4814:4830  _owners[tokenId] */\n      0xffff\n      and\n      0x04b1\n      dup2\n      lt\n      tag_142\n      jumpi\n      tag_143\n      tag_97\n      jump\t// in\n    tag_143:\n    tag_142:\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ERC721TokenContractName.sol\":4807:4830  return _owners[tokenId] */\n      swap1\n      pop\n        /* \"contracts/ERC721TokenContractName.sol\":4574:4838  function _requireOwned(uint16 tokenId) private view returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/ERC721TokenContractName.sol\":4941:5745  function _checkOnERC721Received(address from, address to, uint16 tokenId, bytes memory data) private {... */\n    tag_118:\n        /* \"contracts/ERC721TokenContractName.sol\":5074:5075  0 */\n      0x00\n        /* \"contracts/ERC721TokenContractName.sol\":5057:5059  to */\n      dup4\n        /* \"contracts/ERC721TokenContractName.sol\":5057:5071  to.code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"contracts/ERC721TokenContractName.sol\":5057:5075  to.code.length > 0 */\n      gt\n        /* \"contracts/ERC721TokenContractName.sol\":5053:5738  if (to.code.length > 0) {... */\n      iszero\n      tag_146\n      jumpi\n        /* \"contracts/ERC721TokenContractName.sol\":5115:5117  to */\n      dup3\n        /* \"contracts/ERC721TokenContractName.sol\":5096:5135  IERC721TCNReceiver(to).onERC721Received */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xb1cff380\n        /* \"contracts/ERC721TokenContractName.sol\":5136:5148  _msgSender() */\n      tag_147\n        /* \"contracts/ERC721TokenContractName.sol\":5136:5146  _msgSender */\n      tag_86\n        /* \"contracts/ERC721TokenContractName.sol\":5136:5148  _msgSender() */\n      jump\t// in\n    tag_147:\n        /* \"contracts/ERC721TokenContractName.sol\":5150:5154  from */\n      dup7\n        /* \"contracts/ERC721TokenContractName.sol\":5156:5163  tokenId */\n      dup6\n        /* \"contracts/ERC721TokenContractName.sol\":5165:5169  data */\n      dup6\n        /* \"contracts/ERC721TokenContractName.sol\":5096:5170  IERC721TCNReceiver(to).onERC721Received(_msgSender(), from, tokenId, data) */\n      mload(0x40)\n      dup6\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_148\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_149\n      jump\t// in\n    tag_148:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_150\n      jumpi\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_151\n      swap2\n      swap1\n      tag_152\n      jump\t// in\n    tag_151:\n      0x01\n    tag_150:\n        /* \"contracts/ERC721TokenContractName.sol\":5092:5727  try IERC721TCNReceiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {... */\n      tag_153\n      jumpi\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_158\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_157)\n    tag_158:\n      0x60\n      swap2\n      pop\n    tag_157:\n      pop\n        /* \"contracts/ERC721TokenContractName.sol\":5433:5434  0 */\n      0x00\n        /* \"contracts/ERC721TokenContractName.sol\":5416:5422  reason */\n      dup2\n        /* \"contracts/ERC721TokenContractName.sol\":5416:5429  reason.length */\n      mload\n        /* \"contracts/ERC721TokenContractName.sol\":5416:5434  reason.length == 0 */\n      sub\n        /* \"contracts/ERC721TokenContractName.sol\":5412:5712  if (reason.length == 0) {... */\n      tag_159\n      jumpi\n        /* \"contracts/ERC721TokenContractName.sol\":5488:5490  to */\n      dup4\n        /* \"contracts/ERC721TokenContractName.sol\":5466:5491  ERC721InvalidReceiver(to) */\n      mload(0x40)\n      0x64a0ae9200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_160\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_160:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/ERC721TokenContractName.sol\":5412:5712  if (reason.length == 0) {... */\n    tag_159:\n        /* \"contracts/ERC721TokenContractName.sol\":5662:5668  reason */\n      dup1\n        /* \"contracts/ERC721TokenContractName.sol\":5656:5669  mload(reason) */\n      mload\n        /* \"contracts/ERC721TokenContractName.sol\":5647:5653  reason */\n      dup2\n        /* \"contracts/ERC721TokenContractName.sol\":5643:5645  32 */\n      0x20\n        /* \"contracts/ERC721TokenContractName.sol\":5639:5654  add(32, reason) */\n      add\n        /* \"contracts/ERC721TokenContractName.sol\":5632:5670  revert(add(32, reason), mload(reason)) */\n      revert\n        /* \"contracts/ERC721TokenContractName.sol\":5092:5727  try IERC721TCNReceiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {... */\n    tag_153:\n        /* \"contracts/ERC721TokenContractName.sol\":5228:5272  IERC721TCNReceiver.onERC721Received.selector */\n      shl(0xe0, 0xb1cff380)\n        /* \"contracts/ERC721TokenContractName.sol\":5218:5272  retval != IERC721TCNReceiver.onERC721Received.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"contracts/ERC721TokenContractName.sol\":5218:5224  retval */\n      dup2\n        /* \"contracts/ERC721TokenContractName.sol\":5218:5272  retval != IERC721TCNReceiver.onERC721Received.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"contracts/ERC721TokenContractName.sol\":5214:5349  if (retval != IERC721TCNReceiver.onERC721Received.selector) {... */\n      tag_163\n      jumpi\n        /* \"contracts/ERC721TokenContractName.sol\":5326:5328  to */\n      dup4\n        /* \"contracts/ERC721TokenContractName.sol\":5304:5329  ERC721InvalidReceiver(to) */\n      mload(0x40)\n      0x64a0ae9200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_164\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_164:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/ERC721TokenContractName.sol\":5214:5349  if (retval != IERC721TCNReceiver.onERC721Received.selector) {... */\n    tag_163:\n        /* \"contracts/ERC721TokenContractName.sol\":5171:5364  returns (bytes4 retval) {... */\n      pop\n        /* \"contracts/ERC721TokenContractName.sol\":5053:5738  if (to.code.length > 0) {... */\n    tag_146:\n        /* \"contracts/ERC721TokenContractName.sol\":4941:5745  function _checkOnERC721Received(address from, address to, uint16 tokenId, bytes memory data) private {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC721TokenContractName.sol\":4848:4933  function _baseURI() private pure returns (string memory) {... */\n    tag_123:\n        /* \"contracts/ERC721TokenContractName.sol\":4890:4903  string memory */\n      0x60\n        /* \"contracts/ERC721TokenContractName.sol\":4916:4925  return \"\" */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n      swap1\n      pop\n        /* \"contracts/ERC721TokenContractName.sol\":4848:4933  function _baseURI() private pure returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":637:1335  function toString(uint256 value) internal pure returns (string memory) {... */\n    tag_127:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":693:706  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":742:756  uint256 length */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":779:780  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":759:776  Math.log10(value) */\n      tag_167\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":770:775  value */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":759:769  Math.log10 */\n      tag_168\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":759:776  Math.log10(value) */\n      jump\t// in\n    tag_167:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":759:780  Math.log10(value) + 1 */\n      add\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":742:780  uint256 length = Math.log10(value) + 1 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":794:814  string memory buffer */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":828:834  length */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":817:835  new string(length) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_169\n      jumpi\n      tag_170\n      tag_171\n      jump\t// in\n    tag_170:\n    tag_169:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x1f\n      add\n      not(0x1f)\n      and\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_172\n      jumpi\n      dup2\n      0x20\n      add\n      0x01\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      dup1\n      dup3\n      add\n      swap2\n      pop\n      pop\n      swap1\n      pop\n    tag_172:\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":794:835  string memory buffer = new string(length) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":849:860  uint256 ptr */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":975:981  length */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":971:973  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":967:982  add(32, length) */\n      add\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":959:965  buffer */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":955:983  add(buffer, add(32, length)) */\n      add\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":948:983  ptr := add(buffer, add(32, length)) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1010:1292  while (true) {... */\n    tag_173:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1017:1021  true */\n      0x01\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1010:1292  while (true) {... */\n      iszero\n      tag_174\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1041:1046  ptr-- */\n      dup1\n      dup1\n      0x01\n      swap1\n      sub\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1180:1190  HEX_DIGITS */\n      0x3031323334353637383961626364656600000000000000000000000000000000\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1175:1177  10 */\n      0x0a\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1168:1173  value */\n      dup7\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1164:1178  mod(value, 10) */\n      mod\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1159:1191  byte(mod(value, 10), HEX_DIGITS) */\n      byte\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1154:1157  ptr */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1146:1192  mstore8(ptr, byte(mod(value, 10), HEX_DIGITS)) */\n      mstore8\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1236:1238  10 */\n      0x0a\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1227:1238  value /= 10 */\n      dup6\n      dup2\n      tag_175\n      jumpi\n      tag_176\n      tag_177\n      jump\t// in\n    tag_176:\n    tag_175:\n      div\n      swap5\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1269:1270  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1260:1265  value */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1260:1270  value == 0 */\n      sub\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1010:1292  while (true) {... */\n      tag_173\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1256:1277  if (value == 0) break */\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1010:1292  while (true) {... */\n    tag_174:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1312:1318  buffer */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1305:1318  return buffer */\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":637:1335  function toString(uint256 value) internal pure returns (string memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/ERC721TokenContractName.sol\":4135:4556  function _aprove(address to, uint16 tokenId, address auth) private {... */\n    tag_133:\n        /* \"contracts/ERC721TokenContractName.sol\":4213:4226  address owner */\n      0x00\n        /* \"contracts/ERC721TokenContractName.sol\":4229:4251  _requireOwned(tokenId) */\n      tag_180\n        /* \"contracts/ERC721TokenContractName.sol\":4243:4250  tokenId */\n      dup4\n        /* \"contracts/ERC721TokenContractName.sol\":4229:4242  _requireOwned */\n      tag_101\n        /* \"contracts/ERC721TokenContractName.sol\":4229:4251  _requireOwned(tokenId) */\n      jump\t// in\n    tag_180:\n        /* \"contracts/ERC721TokenContractName.sol\":4213:4251  address owner = _requireOwned(tokenId) */\n      swap1\n      pop\n        /* \"contracts/ERC721TokenContractName.sol\":4279:4281  to */\n      dup4\n        /* \"contracts/ERC721TokenContractName.sol\":4270:4281  owner != to */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ERC721TokenContractName.sol\":4270:4275  owner */\n      dup2\n        /* \"contracts/ERC721TokenContractName.sol\":4270:4281  owner != to */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/ERC721TokenContractName.sol\":4262:4345  require(owner != to, \"The address of the owner and the operator must be different\") */\n      tag_181\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_182\n      swap1\n      tag_109\n      jump\t// in\n    tag_182:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_181:\n        /* \"contracts/ERC721TokenContractName.sol\":4368:4372  auth */\n      dup2\n        /* \"contracts/ERC721TokenContractName.sol\":4359:4372  owner != auth */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ERC721TokenContractName.sol\":4359:4364  owner */\n      dup2\n        /* \"contracts/ERC721TokenContractName.sol\":4359:4372  owner != auth */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/ERC721TokenContractName.sol\":4359:4406  owner != auth && !isApprovedForAll(owner, auth) */\n      dup1\n      iszero\n      tag_183\n      jumpi\n      pop\n        /* \"contracts/ERC721TokenContractName.sol\":4377:4406  isApprovedForAll(owner, auth) */\n      tag_184\n        /* \"contracts/ERC721TokenContractName.sol\":4394:4399  owner */\n      dup2\n        /* \"contracts/ERC721TokenContractName.sol\":4401:4405  auth */\n      dup4\n        /* \"contracts/ERC721TokenContractName.sol\":4377:4393  isApprovedForAll */\n      tag_75\n        /* \"contracts/ERC721TokenContractName.sol\":4377:4406  isApprovedForAll(owner, auth) */\n      jump\t// in\n    tag_184:\n        /* \"contracts/ERC721TokenContractName.sol\":4376:4406  !isApprovedForAll(owner, auth) */\n      iszero\n        /* \"contracts/ERC721TokenContractName.sol\":4359:4406  owner != auth && !isApprovedForAll(owner, auth) */\n    tag_183:\n        /* \"contracts/ERC721TokenContractName.sol\":4355:4463  if (owner != auth && !isApprovedForAll(owner, auth)){... */\n      iszero\n      tag_185\n      jumpi\n        /* \"contracts/ERC721TokenContractName.sol\":4447:4451  auth */\n      dup2\n        /* \"contracts/ERC721TokenContractName.sol\":4425:4452  ERC721InvalidApprover(auth) */\n      mload(0x40)\n      0xa9fbf51f00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_186\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_186:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/ERC721TokenContractName.sol\":4355:4463  if (owner != auth && !isApprovedForAll(owner, auth)){... */\n    tag_185:\n        /* \"contracts/ERC721TokenContractName.sol\":4502:4504  to */\n      dup4\n        /* \"contracts/ERC721TokenContractName.sol\":4475:4490  _tokenApprovals */\n      0x04da\n        /* \"contracts/ERC721TokenContractName.sol\":4475:4499  _tokenApprovals[tokenId] */\n      0x00\n        /* \"contracts/ERC721TokenContractName.sol\":4491:4498  tokenId */\n      dup6\n        /* \"contracts/ERC721TokenContractName.sol\":4475:4499  _tokenApprovals[tokenId] */\n      0xffff\n      and\n      0xffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/ERC721TokenContractName.sol\":4475:4504  _tokenApprovals[tokenId] = to */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/ERC721TokenContractName.sol\":4540:4547  tokenId */\n      dup3\n        /* \"contracts/ERC721TokenContractName.sol\":4520:4548  Approval(owner, to, tokenId) */\n      0xffff\n      and\n        /* \"contracts/ERC721TokenContractName.sol\":4536:4538  to */\n      dup5\n        /* \"contracts/ERC721TokenContractName.sol\":4520:4548  Approval(owner, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ERC721TokenContractName.sol\":4529:4534  owner */\n      dup3\n        /* \"contracts/ERC721TokenContractName.sol\":4520:4548  Approval(owner, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x0a9d294fd4bd42bb30e96cba2b478d149a783fba3c729b1e5c42bec89d95b85a\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"contracts/ERC721TokenContractName.sol\":4202:4556  {... */\n      pop\n        /* \"contracts/ERC721TokenContractName.sol\":4135:4556  function _aprove(address to, uint16 tokenId, address auth) private {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12214:13130  function log10(uint256 value) internal pure returns (uint256) {... */\n    tag_168:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12267:12274  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12286:12300  uint256 result */\n      dup1\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12303:12304  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12286:12304  uint256 result = 0 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12351:12359  10 ** 64 */\n      0x184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12342:12347  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12342:12359  value >= 10 ** 64 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12338:12441  if (value >= 10 ** 64) {... */\n      tag_188\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12388:12396  10 ** 64 */\n      0x184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12379:12396  value /= 10 ** 64 */\n      dup4\n      dup2\n      tag_189\n      jumpi\n      tag_190\n      tag_177\n      jump\t// in\n    tag_190:\n    tag_189:\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12424:12426  64 */\n      0x40\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12414:12426  result += 64 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12338:12441  if (value >= 10 ** 64) {... */\n    tag_188:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12467:12475  10 ** 32 */\n      0x04ee2d6d415b85acef8100000000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12458:12463  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12458:12475  value >= 10 ** 32 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12454:12557  if (value >= 10 ** 32) {... */\n      tag_191\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12504:12512  10 ** 32 */\n      0x04ee2d6d415b85acef8100000000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12495:12512  value /= 10 ** 32 */\n      dup4\n      dup2\n      tag_192\n      jumpi\n      tag_193\n      tag_177\n      jump\t// in\n    tag_193:\n    tag_192:\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12540:12542  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12530:12542  result += 32 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12454:12557  if (value >= 10 ** 32) {... */\n    tag_191:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12583:12591  10 ** 16 */\n      0x2386f26fc10000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12574:12579  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12574:12591  value >= 10 ** 16 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12570:12673  if (value >= 10 ** 16) {... */\n      tag_194\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12620:12628  10 ** 16 */\n      0x2386f26fc10000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12611:12628  value /= 10 ** 16 */\n      dup4\n      dup2\n      tag_195\n      jumpi\n      tag_196\n      tag_177\n      jump\t// in\n    tag_196:\n    tag_195:\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12656:12658  16 */\n      0x10\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12646:12658  result += 16 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12570:12673  if (value >= 10 ** 16) {... */\n    tag_194:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12699:12706  10 ** 8 */\n      0x05f5e100\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12690:12695  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12690:12706  value >= 10 ** 8 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12686:12786  if (value >= 10 ** 8) {... */\n      tag_197\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12735:12742  10 ** 8 */\n      0x05f5e100\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12726:12742  value /= 10 ** 8 */\n      dup4\n      dup2\n      tag_198\n      jumpi\n      tag_199\n      tag_177\n      jump\t// in\n    tag_199:\n    tag_198:\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12770:12771  8 */\n      0x08\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12760:12771  result += 8 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12686:12786  if (value >= 10 ** 8) {... */\n    tag_197:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12812:12819  10 ** 4 */\n      0x2710\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12803:12808  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12803:12819  value >= 10 ** 4 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12799:12899  if (value >= 10 ** 4) {... */\n      tag_200\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12848:12855  10 ** 4 */\n      0x2710\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12839:12855  value /= 10 ** 4 */\n      dup4\n      dup2\n      tag_201\n      jumpi\n      tag_202\n      tag_177\n      jump\t// in\n    tag_202:\n    tag_201:\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12883:12884  4 */\n      0x04\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12873:12884  result += 4 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12799:12899  if (value >= 10 ** 4) {... */\n    tag_200:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12925:12932  10 ** 2 */\n      0x64\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12916:12921  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12916:12932  value >= 10 ** 2 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12912:13012  if (value >= 10 ** 2) {... */\n      tag_203\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12961:12968  10 ** 2 */\n      0x64\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12952:12968  value /= 10 ** 2 */\n      dup4\n      dup2\n      tag_204\n      jumpi\n      tag_205\n      tag_177\n      jump\t// in\n    tag_205:\n    tag_204:\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12996:12997  2 */\n      0x02\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12986:12997  result += 2 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12912:13012  if (value >= 10 ** 2) {... */\n    tag_203:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13038:13045  10 ** 1 */\n      0x0a\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13029:13034  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13029:13045  value >= 10 ** 1 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13025:13091  if (value >= 10 ** 1) {... */\n      tag_206\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13075:13076  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13065:13076  result += 1 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13025:13091  if (value >= 10 ** 1) {... */\n    tag_206:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13117:13123  result */\n      dup1\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13110:13123  return result */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12214:13130  function log10(uint256 value) internal pure returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:157   */\n    tag_207:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":84:150   */\n      0xffffffffffffffffffffffffffffffffffffffff000000000000000000000000\n        /* \"#utility.yul\":77:82   */\n      dup3\n        /* \"#utility.yul\":73:151   */\n      and\n        /* \"#utility.yul\":62:151   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:157   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":163:281   */\n    tag_208:\n        /* \"#utility.yul\":250:274   */\n      tag_265\n        /* \"#utility.yul\":268:273   */\n      dup2\n        /* \"#utility.yul\":250:274   */\n      tag_207\n      jump\t// in\n    tag_265:\n        /* \"#utility.yul\":245:248   */\n      dup3\n        /* \"#utility.yul\":238:275   */\n      mstore\n        /* \"#utility.yul\":163:281   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":287:509   */\n    tag_21:\n        /* \"#utility.yul\":380:384   */\n      0x00\n        /* \"#utility.yul\":418:420   */\n      0x20\n        /* \"#utility.yul\":407:416   */\n      dup3\n        /* \"#utility.yul\":403:421   */\n      add\n        /* \"#utility.yul\":395:421   */\n      swap1\n      pop\n        /* \"#utility.yul\":431:502   */\n      tag_267\n        /* \"#utility.yul\":499:500   */\n      0x00\n        /* \"#utility.yul\":488:497   */\n      dup4\n        /* \"#utility.yul\":484:501   */\n      add\n        /* \"#utility.yul\":475:481   */\n      dup5\n        /* \"#utility.yul\":431:502   */\n      tag_208\n      jump\t// in\n    tag_267:\n        /* \"#utility.yul\":287:509   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":515:590   */\n    tag_209:\n        /* \"#utility.yul\":548:554   */\n      0x00\n        /* \"#utility.yul\":581:583   */\n      0x40\n        /* \"#utility.yul\":575:584   */\n      mload\n        /* \"#utility.yul\":565:584   */\n      swap1\n      pop\n        /* \"#utility.yul\":515:590   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":596:713   */\n    tag_210:\n        /* \"#utility.yul\":705:706   */\n      0x00\n        /* \"#utility.yul\":702:703   */\n      dup1\n        /* \"#utility.yul\":695:707   */\n      revert\n        /* \"#utility.yul\":719:836   */\n    tag_211:\n        /* \"#utility.yul\":828:829   */\n      0x00\n        /* \"#utility.yul\":825:826   */\n      dup1\n        /* \"#utility.yul\":818:830   */\n      revert\n        /* \"#utility.yul\":842:968   */\n    tag_212:\n        /* \"#utility.yul\":879:886   */\n      0x00\n        /* \"#utility.yul\":919:961   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":912:917   */\n      dup3\n        /* \"#utility.yul\":908:962   */\n      and\n        /* \"#utility.yul\":897:962   */\n      swap1\n      pop\n        /* \"#utility.yul\":842:968   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":974:1070   */\n    tag_213:\n        /* \"#utility.yul\":1011:1018   */\n      0x00\n        /* \"#utility.yul\":1040:1064   */\n      tag_273\n        /* \"#utility.yul\":1058:1063   */\n      dup3\n        /* \"#utility.yul\":1040:1064   */\n      tag_212\n      jump\t// in\n    tag_273:\n        /* \"#utility.yul\":1029:1064   */\n      swap1\n      pop\n        /* \"#utility.yul\":974:1070   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1076:1198   */\n    tag_214:\n        /* \"#utility.yul\":1149:1173   */\n      tag_275\n        /* \"#utility.yul\":1167:1172   */\n      dup2\n        /* \"#utility.yul\":1149:1173   */\n      tag_213\n      jump\t// in\n    tag_275:\n        /* \"#utility.yul\":1142:1147   */\n      dup2\n        /* \"#utility.yul\":1139:1174   */\n      eq\n        /* \"#utility.yul\":1129:1192   */\n      tag_276\n      jumpi\n        /* \"#utility.yul\":1188:1189   */\n      0x00\n        /* \"#utility.yul\":1185:1186   */\n      dup1\n        /* \"#utility.yul\":1178:1190   */\n      revert\n        /* \"#utility.yul\":1129:1192   */\n    tag_276:\n        /* \"#utility.yul\":1076:1198   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1204:1343   */\n    tag_215:\n        /* \"#utility.yul\":1250:1255   */\n      0x00\n        /* \"#utility.yul\":1288:1294   */\n      dup2\n        /* \"#utility.yul\":1275:1295   */\n      calldataload\n        /* \"#utility.yul\":1266:1295   */\n      swap1\n      pop\n        /* \"#utility.yul\":1304:1337   */\n      tag_278\n        /* \"#utility.yul\":1331:1336   */\n      dup2\n        /* \"#utility.yul\":1304:1337   */\n      tag_214\n      jump\t// in\n    tag_278:\n        /* \"#utility.yul\":1204:1343   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1349:1438   */\n    tag_216:\n        /* \"#utility.yul\":1385:1392   */\n      0x00\n        /* \"#utility.yul\":1425:1431   */\n      0xffff\n        /* \"#utility.yul\":1418:1423   */\n      dup3\n        /* \"#utility.yul\":1414:1432   */\n      and\n        /* \"#utility.yul\":1403:1432   */\n      swap1\n      pop\n        /* \"#utility.yul\":1349:1438   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1444:1564   */\n    tag_217:\n        /* \"#utility.yul\":1516:1539   */\n      tag_281\n        /* \"#utility.yul\":1533:1538   */\n      dup2\n        /* \"#utility.yul\":1516:1539   */\n      tag_216\n      jump\t// in\n    tag_281:\n        /* \"#utility.yul\":1509:1514   */\n      dup2\n        /* \"#utility.yul\":1506:1540   */\n      eq\n        /* \"#utility.yul\":1496:1558   */\n      tag_282\n      jumpi\n        /* \"#utility.yul\":1554:1555   */\n      0x00\n        /* \"#utility.yul\":1551:1552   */\n      dup1\n        /* \"#utility.yul\":1544:1556   */\n      revert\n        /* \"#utility.yul\":1496:1558   */\n    tag_282:\n        /* \"#utility.yul\":1444:1564   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1570:1707   */\n    tag_218:\n        /* \"#utility.yul\":1615:1620   */\n      0x00\n        /* \"#utility.yul\":1653:1659   */\n      dup2\n        /* \"#utility.yul\":1640:1660   */\n      calldataload\n        /* \"#utility.yul\":1631:1660   */\n      swap1\n      pop\n        /* \"#utility.yul\":1669:1701   */\n      tag_284\n        /* \"#utility.yul\":1695:1700   */\n      dup2\n        /* \"#utility.yul\":1669:1701   */\n      tag_217\n      jump\t// in\n    tag_284:\n        /* \"#utility.yul\":1570:1707   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1713:2330   */\n    tag_24:\n        /* \"#utility.yul\":1789:1795   */\n      0x00\n        /* \"#utility.yul\":1797:1803   */\n      dup1\n        /* \"#utility.yul\":1805:1811   */\n      0x00\n        /* \"#utility.yul\":1854:1856   */\n      0x60\n        /* \"#utility.yul\":1842:1851   */\n      dup5\n        /* \"#utility.yul\":1833:1840   */\n      dup7\n        /* \"#utility.yul\":1829:1852   */\n      sub\n        /* \"#utility.yul\":1825:1857   */\n      slt\n        /* \"#utility.yul\":1822:1941   */\n      iszero\n      tag_286\n      jumpi\n        /* \"#utility.yul\":1860:1939   */\n      tag_287\n      tag_210\n      jump\t// in\n    tag_287:\n        /* \"#utility.yul\":1822:1941   */\n    tag_286:\n        /* \"#utility.yul\":1980:1981   */\n      0x00\n        /* \"#utility.yul\":2005:2058   */\n      tag_288\n        /* \"#utility.yul\":2050:2057   */\n      dup7\n        /* \"#utility.yul\":2041:2047   */\n      dup3\n        /* \"#utility.yul\":2030:2039   */\n      dup8\n        /* \"#utility.yul\":2026:2048   */\n      add\n        /* \"#utility.yul\":2005:2058   */\n      tag_215\n      jump\t// in\n    tag_288:\n        /* \"#utility.yul\":1995:2058   */\n      swap4\n      pop\n        /* \"#utility.yul\":1951:2068   */\n      pop\n        /* \"#utility.yul\":2107:2109   */\n      0x20\n        /* \"#utility.yul\":2133:2186   */\n      tag_289\n        /* \"#utility.yul\":2178:2185   */\n      dup7\n        /* \"#utility.yul\":2169:2175   */\n      dup3\n        /* \"#utility.yul\":2158:2167   */\n      dup8\n        /* \"#utility.yul\":2154:2176   */\n      add\n        /* \"#utility.yul\":2133:2186   */\n      tag_215\n      jump\t// in\n    tag_289:\n        /* \"#utility.yul\":2123:2186   */\n      swap3\n      pop\n        /* \"#utility.yul\":2078:2196   */\n      pop\n        /* \"#utility.yul\":2235:2237   */\n      0x40\n        /* \"#utility.yul\":2261:2313   */\n      tag_290\n        /* \"#utility.yul\":2305:2312   */\n      dup7\n        /* \"#utility.yul\":2296:2302   */\n      dup3\n        /* \"#utility.yul\":2285:2294   */\n      dup8\n        /* \"#utility.yul\":2281:2303   */\n      add\n        /* \"#utility.yul\":2261:2313   */\n      tag_218\n      jump\t// in\n    tag_290:\n        /* \"#utility.yul\":2251:2313   */\n      swap2\n      pop\n        /* \"#utility.yul\":2206:2323   */\n      pop\n        /* \"#utility.yul\":1713:2330   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":2336:2665   */\n    tag_31:\n        /* \"#utility.yul\":2395:2401   */\n      0x00\n        /* \"#utility.yul\":2444:2446   */\n      0x20\n        /* \"#utility.yul\":2432:2441   */\n      dup3\n        /* \"#utility.yul\":2423:2430   */\n      dup5\n        /* \"#utility.yul\":2419:2442   */\n      sub\n        /* \"#utility.yul\":2415:2447   */\n      slt\n        /* \"#utility.yul\":2412:2531   */\n      iszero\n      tag_292\n      jumpi\n        /* \"#utility.yul\":2450:2529   */\n      tag_293\n      tag_210\n      jump\t// in\n    tag_293:\n        /* \"#utility.yul\":2412:2531   */\n    tag_292:\n        /* \"#utility.yul\":2570:2571   */\n      0x00\n        /* \"#utility.yul\":2595:2648   */\n      tag_294\n        /* \"#utility.yul\":2640:2647   */\n      dup5\n        /* \"#utility.yul\":2631:2637   */\n      dup3\n        /* \"#utility.yul\":2620:2629   */\n      dup6\n        /* \"#utility.yul\":2616:2638   */\n      add\n        /* \"#utility.yul\":2595:2648   */\n      tag_215\n      jump\t// in\n    tag_294:\n        /* \"#utility.yul\":2585:2648   */\n      swap2\n      pop\n        /* \"#utility.yul\":2541:2658   */\n      pop\n        /* \"#utility.yul\":2336:2665   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2671:2786   */\n    tag_219:\n        /* \"#utility.yul\":2756:2779   */\n      tag_296\n        /* \"#utility.yul\":2773:2778   */\n      dup2\n        /* \"#utility.yul\":2756:2779   */\n      tag_216\n      jump\t// in\n    tag_296:\n        /* \"#utility.yul\":2751:2754   */\n      dup3\n        /* \"#utility.yul\":2744:2780   */\n      mstore\n        /* \"#utility.yul\":2671:2786   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2792:3010   */\n    tag_34:\n        /* \"#utility.yul\":2883:2887   */\n      0x00\n        /* \"#utility.yul\":2921:2923   */\n      0x20\n        /* \"#utility.yul\":2910:2919   */\n      dup3\n        /* \"#utility.yul\":2906:2924   */\n      add\n        /* \"#utility.yul\":2898:2924   */\n      swap1\n      pop\n        /* \"#utility.yul\":2934:3003   */\n      tag_298\n        /* \"#utility.yul\":3000:3001   */\n      0x00\n        /* \"#utility.yul\":2989:2998   */\n      dup4\n        /* \"#utility.yul\":2985:3002   */\n      add\n        /* \"#utility.yul\":2976:2982   */\n      dup5\n        /* \"#utility.yul\":2934:3003   */\n      tag_219\n      jump\t// in\n    tag_298:\n        /* \"#utility.yul\":2792:3010   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3016:3343   */\n    tag_37:\n        /* \"#utility.yul\":3074:3080   */\n      0x00\n        /* \"#utility.yul\":3123:3125   */\n      0x20\n        /* \"#utility.yul\":3111:3120   */\n      dup3\n        /* \"#utility.yul\":3102:3109   */\n      dup5\n        /* \"#utility.yul\":3098:3121   */\n      sub\n        /* \"#utility.yul\":3094:3126   */\n      slt\n        /* \"#utility.yul\":3091:3210   */\n      iszero\n      tag_300\n      jumpi\n        /* \"#utility.yul\":3129:3208   */\n      tag_301\n      tag_210\n      jump\t// in\n    tag_301:\n        /* \"#utility.yul\":3091:3210   */\n    tag_300:\n        /* \"#utility.yul\":3249:3250   */\n      0x00\n        /* \"#utility.yul\":3274:3326   */\n      tag_302\n        /* \"#utility.yul\":3318:3325   */\n      dup5\n        /* \"#utility.yul\":3309:3315   */\n      dup3\n        /* \"#utility.yul\":3298:3307   */\n      dup6\n        /* \"#utility.yul\":3294:3316   */\n      add\n        /* \"#utility.yul\":3274:3326   */\n      tag_218\n      jump\t// in\n    tag_302:\n        /* \"#utility.yul\":3264:3326   */\n      swap2\n      pop\n        /* \"#utility.yul\":3220:3336   */\n      pop\n        /* \"#utility.yul\":3016:3343   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3349:3467   */\n    tag_220:\n        /* \"#utility.yul\":3436:3460   */\n      tag_304\n        /* \"#utility.yul\":3454:3459   */\n      dup2\n        /* \"#utility.yul\":3436:3460   */\n      tag_213\n      jump\t// in\n    tag_304:\n        /* \"#utility.yul\":3431:3434   */\n      dup3\n        /* \"#utility.yul\":3424:3461   */\n      mstore\n        /* \"#utility.yul\":3349:3467   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3473:3695   */\n    tag_40:\n        /* \"#utility.yul\":3566:3570   */\n      0x00\n        /* \"#utility.yul\":3604:3606   */\n      0x20\n        /* \"#utility.yul\":3593:3602   */\n      dup3\n        /* \"#utility.yul\":3589:3607   */\n      add\n        /* \"#utility.yul\":3581:3607   */\n      swap1\n      pop\n        /* \"#utility.yul\":3617:3688   */\n      tag_306\n        /* \"#utility.yul\":3685:3686   */\n      0x00\n        /* \"#utility.yul\":3674:3683   */\n      dup4\n        /* \"#utility.yul\":3670:3687   */\n      add\n        /* \"#utility.yul\":3661:3667   */\n      dup5\n        /* \"#utility.yul\":3617:3688   */\n      tag_220\n      jump\t// in\n    tag_306:\n        /* \"#utility.yul\":3473:3695   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3701:3851   */\n    tag_221:\n        /* \"#utility.yul\":3738:3745   */\n      0x00\n        /* \"#utility.yul\":3778:3844   */\n      0xffffffffffffffffffff00000000000000000000000000000000000000000000\n        /* \"#utility.yul\":3771:3776   */\n      dup3\n        /* \"#utility.yul\":3767:3845   */\n      and\n        /* \"#utility.yul\":3756:3845   */\n      swap1\n      pop\n        /* \"#utility.yul\":3701:3851   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3857:3975   */\n    tag_222:\n        /* \"#utility.yul\":3944:3968   */\n      tag_309\n        /* \"#utility.yul\":3962:3967   */\n      dup2\n        /* \"#utility.yul\":3944:3968   */\n      tag_221\n      jump\t// in\n    tag_309:\n        /* \"#utility.yul\":3939:3942   */\n      dup3\n        /* \"#utility.yul\":3932:3969   */\n      mstore\n        /* \"#utility.yul\":3857:3975   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3981:4203   */\n    tag_48:\n        /* \"#utility.yul\":4074:4078   */\n      0x00\n        /* \"#utility.yul\":4112:4114   */\n      0x20\n        /* \"#utility.yul\":4101:4110   */\n      dup3\n        /* \"#utility.yul\":4097:4115   */\n      add\n        /* \"#utility.yul\":4089:4115   */\n      swap1\n      pop\n        /* \"#utility.yul\":4125:4196   */\n      tag_311\n        /* \"#utility.yul\":4193:4194   */\n      0x00\n        /* \"#utility.yul\":4182:4191   */\n      dup4\n        /* \"#utility.yul\":4178:4195   */\n      add\n        /* \"#utility.yul\":4169:4175   */\n      dup5\n        /* \"#utility.yul\":4125:4196   */\n      tag_222\n      jump\t// in\n    tag_311:\n        /* \"#utility.yul\":3981:4203   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4209:4299   */\n    tag_223:\n        /* \"#utility.yul\":4243:4250   */\n      0x00\n        /* \"#utility.yul\":4286:4291   */\n      dup2\n        /* \"#utility.yul\":4279:4292   */\n      iszero\n        /* \"#utility.yul\":4272:4293   */\n      iszero\n        /* \"#utility.yul\":4261:4293   */\n      swap1\n      pop\n        /* \"#utility.yul\":4209:4299   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4305:4421   */\n    tag_224:\n        /* \"#utility.yul\":4375:4396   */\n      tag_314\n        /* \"#utility.yul\":4390:4395   */\n      dup2\n        /* \"#utility.yul\":4375:4396   */\n      tag_223\n      jump\t// in\n    tag_314:\n        /* \"#utility.yul\":4368:4373   */\n      dup2\n        /* \"#utility.yul\":4365:4397   */\n      eq\n        /* \"#utility.yul\":4355:4415   */\n      tag_315\n      jumpi\n        /* \"#utility.yul\":4411:4412   */\n      0x00\n        /* \"#utility.yul\":4408:4409   */\n      dup1\n        /* \"#utility.yul\":4401:4413   */\n      revert\n        /* \"#utility.yul\":4355:4415   */\n    tag_315:\n        /* \"#utility.yul\":4305:4421   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4427:4560   */\n    tag_225:\n        /* \"#utility.yul\":4470:4475   */\n      0x00\n        /* \"#utility.yul\":4508:4514   */\n      dup2\n        /* \"#utility.yul\":4495:4515   */\n      calldataload\n        /* \"#utility.yul\":4486:4515   */\n      swap1\n      pop\n        /* \"#utility.yul\":4524:4554   */\n      tag_317\n        /* \"#utility.yul\":4548:4553   */\n      dup2\n        /* \"#utility.yul\":4524:4554   */\n      tag_224\n      jump\t// in\n    tag_317:\n        /* \"#utility.yul\":4427:4560   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4566:5034   */\n    tag_51:\n        /* \"#utility.yul\":4631:4637   */\n      0x00\n        /* \"#utility.yul\":4639:4645   */\n      dup1\n        /* \"#utility.yul\":4688:4690   */\n      0x40\n        /* \"#utility.yul\":4676:4685   */\n      dup4\n        /* \"#utility.yul\":4667:4674   */\n      dup6\n        /* \"#utility.yul\":4663:4686   */\n      sub\n        /* \"#utility.yul\":4659:4691   */\n      slt\n        /* \"#utility.yul\":4656:4775   */\n      iszero\n      tag_319\n      jumpi\n        /* \"#utility.yul\":4694:4773   */\n      tag_320\n      tag_210\n      jump\t// in\n    tag_320:\n        /* \"#utility.yul\":4656:4775   */\n    tag_319:\n        /* \"#utility.yul\":4814:4815   */\n      0x00\n        /* \"#utility.yul\":4839:4892   */\n      tag_321\n        /* \"#utility.yul\":4884:4891   */\n      dup6\n        /* \"#utility.yul\":4875:4881   */\n      dup3\n        /* \"#utility.yul\":4864:4873   */\n      dup7\n        /* \"#utility.yul\":4860:4882   */\n      add\n        /* \"#utility.yul\":4839:4892   */\n      tag_215\n      jump\t// in\n    tag_321:\n        /* \"#utility.yul\":4829:4892   */\n      swap3\n      pop\n        /* \"#utility.yul\":4785:4902   */\n      pop\n        /* \"#utility.yul\":4941:4943   */\n      0x20\n        /* \"#utility.yul\":4967:5017   */\n      tag_322\n        /* \"#utility.yul\":5009:5016   */\n      dup6\n        /* \"#utility.yul\":5000:5006   */\n      dup3\n        /* \"#utility.yul\":4989:4998   */\n      dup7\n        /* \"#utility.yul\":4985:5007   */\n      add\n        /* \"#utility.yul\":4967:5017   */\n      tag_225\n      jump\t// in\n    tag_322:\n        /* \"#utility.yul\":4957:5017   */\n      swap2\n      pop\n        /* \"#utility.yul\":4912:5027   */\n      pop\n        /* \"#utility.yul\":4566:5034   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5040:5157   */\n    tag_226:\n        /* \"#utility.yul\":5149:5150   */\n      0x00\n        /* \"#utility.yul\":5146:5147   */\n      dup1\n        /* \"#utility.yul\":5139:5151   */\n      revert\n        /* \"#utility.yul\":5163:5280   */\n    tag_227:\n        /* \"#utility.yul\":5272:5273   */\n      0x00\n        /* \"#utility.yul\":5269:5270   */\n      dup1\n        /* \"#utility.yul\":5262:5274   */\n      revert\n        /* \"#utility.yul\":5286:5388   */\n    tag_228:\n        /* \"#utility.yul\":5327:5333   */\n      0x00\n        /* \"#utility.yul\":5378:5380   */\n      0x1f\n        /* \"#utility.yul\":5374:5381   */\n      not\n        /* \"#utility.yul\":5369:5371   */\n      0x1f\n        /* \"#utility.yul\":5362:5367   */\n      dup4\n        /* \"#utility.yul\":5358:5372   */\n      add\n        /* \"#utility.yul\":5354:5382   */\n      and\n        /* \"#utility.yul\":5344:5382   */\n      swap1\n      pop\n        /* \"#utility.yul\":5286:5388   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5394:5574   */\n    tag_171:\n        /* \"#utility.yul\":5442:5519   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":5439:5440   */\n      0x00\n        /* \"#utility.yul\":5432:5520   */\n      mstore\n        /* \"#utility.yul\":5539:5543   */\n      0x41\n        /* \"#utility.yul\":5536:5537   */\n      0x04\n        /* \"#utility.yul\":5529:5544   */\n      mstore\n        /* \"#utility.yul\":5563:5567   */\n      0x24\n        /* \"#utility.yul\":5560:5561   */\n      0x00\n        /* \"#utility.yul\":5553:5568   */\n      revert\n        /* \"#utility.yul\":5580:5861   */\n    tag_229:\n        /* \"#utility.yul\":5663:5690   */\n      tag_328\n        /* \"#utility.yul\":5685:5689   */\n      dup3\n        /* \"#utility.yul\":5663:5690   */\n      tag_228\n      jump\t// in\n    tag_328:\n        /* \"#utility.yul\":5655:5661   */\n      dup2\n        /* \"#utility.yul\":5651:5691   */\n      add\n        /* \"#utility.yul\":5793:5799   */\n      dup2\n        /* \"#utility.yul\":5781:5791   */\n      dup2\n        /* \"#utility.yul\":5778:5800   */\n      lt\n        /* \"#utility.yul\":5757:5775   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":5745:5755   */\n      dup3\n        /* \"#utility.yul\":5742:5776   */\n      gt\n        /* \"#utility.yul\":5739:5801   */\n      or\n        /* \"#utility.yul\":5736:5824   */\n      iszero\n      tag_329\n      jumpi\n        /* \"#utility.yul\":5804:5822   */\n      tag_330\n      tag_171\n      jump\t// in\n    tag_330:\n        /* \"#utility.yul\":5736:5824   */\n    tag_329:\n        /* \"#utility.yul\":5844:5854   */\n      dup1\n        /* \"#utility.yul\":5840:5842   */\n      0x40\n        /* \"#utility.yul\":5833:5855   */\n      mstore\n        /* \"#utility.yul\":5623:5861   */\n      pop\n        /* \"#utility.yul\":5580:5861   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5867:5996   */\n    tag_230:\n        /* \"#utility.yul\":5901:5907   */\n      0x00\n        /* \"#utility.yul\":5928:5948   */\n      tag_332\n      tag_209\n      jump\t// in\n    tag_332:\n        /* \"#utility.yul\":5918:5948   */\n      swap1\n      pop\n        /* \"#utility.yul\":5957:5990   */\n      tag_333\n        /* \"#utility.yul\":5985:5989   */\n      dup3\n        /* \"#utility.yul\":5977:5983   */\n      dup3\n        /* \"#utility.yul\":5957:5990   */\n      tag_229\n      jump\t// in\n    tag_333:\n        /* \"#utility.yul\":5867:5996   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6002:6309   */\n    tag_231:\n        /* \"#utility.yul\":6063:6067   */\n      0x00\n        /* \"#utility.yul\":6153:6171   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":6145:6151   */\n      dup3\n        /* \"#utility.yul\":6142:6172   */\n      gt\n        /* \"#utility.yul\":6139:6195   */\n      iszero\n      tag_335\n      jumpi\n        /* \"#utility.yul\":6175:6193   */\n      tag_336\n      tag_171\n      jump\t// in\n    tag_336:\n        /* \"#utility.yul\":6139:6195   */\n    tag_335:\n        /* \"#utility.yul\":6213:6242   */\n      tag_337\n        /* \"#utility.yul\":6235:6241   */\n      dup3\n        /* \"#utility.yul\":6213:6242   */\n      tag_228\n      jump\t// in\n    tag_337:\n        /* \"#utility.yul\":6205:6242   */\n      swap1\n      pop\n        /* \"#utility.yul\":6297:6301   */\n      0x20\n        /* \"#utility.yul\":6291:6295   */\n      dup2\n        /* \"#utility.yul\":6287:6302   */\n      add\n        /* \"#utility.yul\":6279:6302   */\n      swap1\n      pop\n        /* \"#utility.yul\":6002:6309   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6315:6461   */\n    tag_232:\n        /* \"#utility.yul\":6412:6418   */\n      dup3\n        /* \"#utility.yul\":6407:6410   */\n      dup2\n        /* \"#utility.yul\":6402:6405   */\n      dup4\n        /* \"#utility.yul\":6389:6419   */\n      calldatacopy\n        /* \"#utility.yul\":6453:6454   */\n      0x00\n        /* \"#utility.yul\":6444:6450   */\n      dup4\n        /* \"#utility.yul\":6439:6442   */\n      dup4\n        /* \"#utility.yul\":6435:6451   */\n      add\n        /* \"#utility.yul\":6428:6455   */\n      mstore\n        /* \"#utility.yul\":6315:6461   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6467:6890   */\n    tag_233:\n        /* \"#utility.yul\":6544:6549   */\n      0x00\n        /* \"#utility.yul\":6569:6634   */\n      tag_340\n        /* \"#utility.yul\":6585:6633   */\n      tag_341\n        /* \"#utility.yul\":6626:6632   */\n      dup5\n        /* \"#utility.yul\":6585:6633   */\n      tag_231\n      jump\t// in\n    tag_341:\n        /* \"#utility.yul\":6569:6634   */\n      tag_230\n      jump\t// in\n    tag_340:\n        /* \"#utility.yul\":6560:6634   */\n      swap1\n      pop\n        /* \"#utility.yul\":6657:6663   */\n      dup3\n        /* \"#utility.yul\":6650:6655   */\n      dup2\n        /* \"#utility.yul\":6643:6664   */\n      mstore\n        /* \"#utility.yul\":6695:6699   */\n      0x20\n        /* \"#utility.yul\":6688:6693   */\n      dup2\n        /* \"#utility.yul\":6684:6700   */\n      add\n        /* \"#utility.yul\":6733:6736   */\n      dup5\n        /* \"#utility.yul\":6724:6730   */\n      dup5\n        /* \"#utility.yul\":6719:6722   */\n      dup5\n        /* \"#utility.yul\":6715:6731   */\n      add\n        /* \"#utility.yul\":6712:6737   */\n      gt\n        /* \"#utility.yul\":6709:6821   */\n      iszero\n      tag_342\n      jumpi\n        /* \"#utility.yul\":6740:6819   */\n      tag_343\n      tag_227\n      jump\t// in\n    tag_343:\n        /* \"#utility.yul\":6709:6821   */\n    tag_342:\n        /* \"#utility.yul\":6830:6884   */\n      tag_344\n        /* \"#utility.yul\":6877:6883   */\n      dup5\n        /* \"#utility.yul\":6872:6875   */\n      dup3\n        /* \"#utility.yul\":6867:6870   */\n      dup6\n        /* \"#utility.yul\":6830:6884   */\n      tag_232\n      jump\t// in\n    tag_344:\n        /* \"#utility.yul\":6550:6890   */\n      pop\n        /* \"#utility.yul\":6467:6890   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6909:7247   */\n    tag_234:\n        /* \"#utility.yul\":6964:6969   */\n      0x00\n        /* \"#utility.yul\":7013:7016   */\n      dup3\n        /* \"#utility.yul\":7006:7010   */\n      0x1f\n        /* \"#utility.yul\":6998:7004   */\n      dup4\n        /* \"#utility.yul\":6994:7011   */\n      add\n        /* \"#utility.yul\":6990:7017   */\n      slt\n        /* \"#utility.yul\":6980:7102   */\n      tag_346\n      jumpi\n        /* \"#utility.yul\":7021:7100   */\n      tag_347\n      tag_226\n      jump\t// in\n    tag_347:\n        /* \"#utility.yul\":6980:7102   */\n    tag_346:\n        /* \"#utility.yul\":7138:7144   */\n      dup2\n        /* \"#utility.yul\":7125:7145   */\n      calldataload\n        /* \"#utility.yul\":7163:7241   */\n      tag_348\n        /* \"#utility.yul\":7237:7240   */\n      dup5\n        /* \"#utility.yul\":7229:7235   */\n      dup3\n        /* \"#utility.yul\":7222:7226   */\n      0x20\n        /* \"#utility.yul\":7214:7220   */\n      dup7\n        /* \"#utility.yul\":7210:7227   */\n      add\n        /* \"#utility.yul\":7163:7241   */\n      tag_233\n      jump\t// in\n    tag_348:\n        /* \"#utility.yul\":7154:7241   */\n      swap2\n      pop\n        /* \"#utility.yul\":6970:7247   */\n      pop\n        /* \"#utility.yul\":6909:7247   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7253:8194   */\n    tag_55:\n        /* \"#utility.yul\":7347:7353   */\n      0x00\n        /* \"#utility.yul\":7355:7361   */\n      dup1\n        /* \"#utility.yul\":7363:7369   */\n      0x00\n        /* \"#utility.yul\":7371:7377   */\n      dup1\n        /* \"#utility.yul\":7420:7423   */\n      0x80\n        /* \"#utility.yul\":7408:7417   */\n      dup6\n        /* \"#utility.yul\":7399:7406   */\n      dup8\n        /* \"#utility.yul\":7395:7418   */\n      sub\n        /* \"#utility.yul\":7391:7424   */\n      slt\n        /* \"#utility.yul\":7388:7508   */\n      iszero\n      tag_350\n      jumpi\n        /* \"#utility.yul\":7427:7506   */\n      tag_351\n      tag_210\n      jump\t// in\n    tag_351:\n        /* \"#utility.yul\":7388:7508   */\n    tag_350:\n        /* \"#utility.yul\":7547:7548   */\n      0x00\n        /* \"#utility.yul\":7572:7625   */\n      tag_352\n        /* \"#utility.yul\":7617:7624   */\n      dup8\n        /* \"#utility.yul\":7608:7614   */\n      dup3\n        /* \"#utility.yul\":7597:7606   */\n      dup9\n        /* \"#utility.yul\":7593:7615   */\n      add\n        /* \"#utility.yul\":7572:7625   */\n      tag_215\n      jump\t// in\n    tag_352:\n        /* \"#utility.yul\":7562:7625   */\n      swap5\n      pop\n        /* \"#utility.yul\":7518:7635   */\n      pop\n        /* \"#utility.yul\":7674:7676   */\n      0x20\n        /* \"#utility.yul\":7700:7753   */\n      tag_353\n        /* \"#utility.yul\":7745:7752   */\n      dup8\n        /* \"#utility.yul\":7736:7742   */\n      dup3\n        /* \"#utility.yul\":7725:7734   */\n      dup9\n        /* \"#utility.yul\":7721:7743   */\n      add\n        /* \"#utility.yul\":7700:7753   */\n      tag_215\n      jump\t// in\n    tag_353:\n        /* \"#utility.yul\":7690:7753   */\n      swap4\n      pop\n        /* \"#utility.yul\":7645:7763   */\n      pop\n        /* \"#utility.yul\":7802:7804   */\n      0x40\n        /* \"#utility.yul\":7828:7880   */\n      tag_354\n        /* \"#utility.yul\":7872:7879   */\n      dup8\n        /* \"#utility.yul\":7863:7869   */\n      dup3\n        /* \"#utility.yul\":7852:7861   */\n      dup9\n        /* \"#utility.yul\":7848:7870   */\n      add\n        /* \"#utility.yul\":7828:7880   */\n      tag_218\n      jump\t// in\n    tag_354:\n        /* \"#utility.yul\":7818:7880   */\n      swap3\n      pop\n        /* \"#utility.yul\":7773:7890   */\n      pop\n        /* \"#utility.yul\":7957:7959   */\n      0x60\n        /* \"#utility.yul\":7946:7955   */\n      dup6\n        /* \"#utility.yul\":7942:7960   */\n      add\n        /* \"#utility.yul\":7929:7961   */\n      calldataload\n        /* \"#utility.yul\":7988:8006   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":7980:7986   */\n      dup2\n        /* \"#utility.yul\":7977:8007   */\n      gt\n        /* \"#utility.yul\":7974:8091   */\n      iszero\n      tag_355\n      jumpi\n        /* \"#utility.yul\":8010:8089   */\n      tag_356\n      tag_211\n      jump\t// in\n    tag_356:\n        /* \"#utility.yul\":7974:8091   */\n    tag_355:\n        /* \"#utility.yul\":8115:8177   */\n      tag_357\n        /* \"#utility.yul\":8169:8176   */\n      dup8\n        /* \"#utility.yul\":8160:8166   */\n      dup3\n        /* \"#utility.yul\":8149:8158   */\n      dup9\n        /* \"#utility.yul\":8145:8167   */\n      add\n        /* \"#utility.yul\":8115:8177   */\n      tag_234\n      jump\t// in\n    tag_357:\n        /* \"#utility.yul\":8105:8177   */\n      swap2\n      pop\n        /* \"#utility.yul\":7900:8187   */\n      pop\n        /* \"#utility.yul\":7253:8194   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8200:8317   */\n    tag_235:\n        /* \"#utility.yul\":8309:8310   */\n      0x00\n        /* \"#utility.yul\":8306:8307   */\n      dup1\n        /* \"#utility.yul\":8299:8311   */\n      revert\n        /* \"#utility.yul\":8323:8440   */\n    tag_236:\n        /* \"#utility.yul\":8432:8433   */\n      0x00\n        /* \"#utility.yul\":8429:8430   */\n      dup1\n        /* \"#utility.yul\":8422:8434   */\n      revert\n        /* \"#utility.yul\":8459:9011   */\n    tag_237:\n        /* \"#utility.yul\":8516:8524   */\n      0x00\n        /* \"#utility.yul\":8526:8532   */\n      dup1\n        /* \"#utility.yul\":8576:8579   */\n      dup4\n        /* \"#utility.yul\":8569:8573   */\n      0x1f\n        /* \"#utility.yul\":8561:8567   */\n      dup5\n        /* \"#utility.yul\":8557:8574   */\n      add\n        /* \"#utility.yul\":8553:8580   */\n      slt\n        /* \"#utility.yul\":8543:8665   */\n      tag_361\n      jumpi\n        /* \"#utility.yul\":8584:8663   */\n      tag_362\n      tag_226\n      jump\t// in\n    tag_362:\n        /* \"#utility.yul\":8543:8665   */\n    tag_361:\n        /* \"#utility.yul\":8697:8703   */\n      dup3\n        /* \"#utility.yul\":8684:8704   */\n      calldataload\n        /* \"#utility.yul\":8674:8704   */\n      swap1\n      pop\n        /* \"#utility.yul\":8727:8745   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":8719:8725   */\n      dup2\n        /* \"#utility.yul\":8716:8746   */\n      gt\n        /* \"#utility.yul\":8713:8830   */\n      iszero\n      tag_363\n      jumpi\n        /* \"#utility.yul\":8749:8828   */\n      tag_364\n      tag_235\n      jump\t// in\n    tag_364:\n        /* \"#utility.yul\":8713:8830   */\n    tag_363:\n        /* \"#utility.yul\":8863:8867   */\n      0x20\n        /* \"#utility.yul\":8855:8861   */\n      dup4\n        /* \"#utility.yul\":8851:8868   */\n      add\n        /* \"#utility.yul\":8839:8868   */\n      swap2\n      pop\n        /* \"#utility.yul\":8917:8920   */\n      dup4\n        /* \"#utility.yul\":8909:8913   */\n      0x01\n        /* \"#utility.yul\":8901:8907   */\n      dup3\n        /* \"#utility.yul\":8897:8914   */\n      mul\n        /* \"#utility.yul\":8887:8895   */\n      dup4\n        /* \"#utility.yul\":8883:8915   */\n      add\n        /* \"#utility.yul\":8880:8921   */\n      gt\n        /* \"#utility.yul\":8877:9005   */\n      iszero\n      tag_365\n      jumpi\n        /* \"#utility.yul\":8924:9003   */\n      tag_366\n      tag_236\n      jump\t// in\n    tag_366:\n        /* \"#utility.yul\":8877:9005   */\n    tag_365:\n        /* \"#utility.yul\":8459:9011   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9017:9978   */\n    tag_59:\n        /* \"#utility.yul\":9113:9119   */\n      0x00\n        /* \"#utility.yul\":9121:9127   */\n      dup1\n        /* \"#utility.yul\":9129:9135   */\n      0x00\n        /* \"#utility.yul\":9137:9143   */\n      dup1\n        /* \"#utility.yul\":9145:9151   */\n      0x00\n        /* \"#utility.yul\":9194:9197   */\n      0x80\n        /* \"#utility.yul\":9182:9191   */\n      dup7\n        /* \"#utility.yul\":9173:9180   */\n      dup9\n        /* \"#utility.yul\":9169:9192   */\n      sub\n        /* \"#utility.yul\":9165:9198   */\n      slt\n        /* \"#utility.yul\":9162:9282   */\n      iszero\n      tag_368\n      jumpi\n        /* \"#utility.yul\":9201:9280   */\n      tag_369\n      tag_210\n      jump\t// in\n    tag_369:\n        /* \"#utility.yul\":9162:9282   */\n    tag_368:\n        /* \"#utility.yul\":9321:9322   */\n      0x00\n        /* \"#utility.yul\":9346:9399   */\n      tag_370\n        /* \"#utility.yul\":9391:9398   */\n      dup9\n        /* \"#utility.yul\":9382:9388   */\n      dup3\n        /* \"#utility.yul\":9371:9380   */\n      dup10\n        /* \"#utility.yul\":9367:9389   */\n      add\n        /* \"#utility.yul\":9346:9399   */\n      tag_215\n      jump\t// in\n    tag_370:\n        /* \"#utility.yul\":9336:9399   */\n      swap6\n      pop\n        /* \"#utility.yul\":9292:9409   */\n      pop\n        /* \"#utility.yul\":9448:9450   */\n      0x20\n        /* \"#utility.yul\":9474:9527   */\n      tag_371\n        /* \"#utility.yul\":9519:9526   */\n      dup9\n        /* \"#utility.yul\":9510:9516   */\n      dup3\n        /* \"#utility.yul\":9499:9508   */\n      dup10\n        /* \"#utility.yul\":9495:9517   */\n      add\n        /* \"#utility.yul\":9474:9527   */\n      tag_215\n      jump\t// in\n    tag_371:\n        /* \"#utility.yul\":9464:9527   */\n      swap5\n      pop\n        /* \"#utility.yul\":9419:9537   */\n      pop\n        /* \"#utility.yul\":9576:9578   */\n      0x40\n        /* \"#utility.yul\":9602:9654   */\n      tag_372\n        /* \"#utility.yul\":9646:9653   */\n      dup9\n        /* \"#utility.yul\":9637:9643   */\n      dup3\n        /* \"#utility.yul\":9626:9635   */\n      dup10\n        /* \"#utility.yul\":9622:9644   */\n      add\n        /* \"#utility.yul\":9602:9654   */\n      tag_218\n      jump\t// in\n    tag_372:\n        /* \"#utility.yul\":9592:9654   */\n      swap4\n      pop\n        /* \"#utility.yul\":9547:9664   */\n      pop\n        /* \"#utility.yul\":9731:9733   */\n      0x60\n        /* \"#utility.yul\":9720:9729   */\n      dup7\n        /* \"#utility.yul\":9716:9734   */\n      add\n        /* \"#utility.yul\":9703:9735   */\n      calldataload\n        /* \"#utility.yul\":9762:9780   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":9754:9760   */\n      dup2\n        /* \"#utility.yul\":9751:9781   */\n      gt\n        /* \"#utility.yul\":9748:9865   */\n      iszero\n      tag_373\n      jumpi\n        /* \"#utility.yul\":9784:9863   */\n      tag_374\n      tag_211\n      jump\t// in\n    tag_374:\n        /* \"#utility.yul\":9748:9865   */\n    tag_373:\n        /* \"#utility.yul\":9897:9961   */\n      tag_375\n        /* \"#utility.yul\":9953:9960   */\n      dup9\n        /* \"#utility.yul\":9944:9950   */\n      dup3\n        /* \"#utility.yul\":9933:9942   */\n      dup10\n        /* \"#utility.yul\":9929:9951   */\n      add\n        /* \"#utility.yul\":9897:9961   */\n      tag_237\n      jump\t// in\n    tag_375:\n        /* \"#utility.yul\":9879:9961   */\n      swap3\n      pop\n      swap3\n      pop\n        /* \"#utility.yul\":9674:9971   */\n      pop\n        /* \"#utility.yul\":9017:9978   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      swap1\n      swap4\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9984:10133   */\n    tag_238:\n        /* \"#utility.yul\":10020:10027   */\n      0x00\n        /* \"#utility.yul\":10060:10126   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":10053:10058   */\n      dup3\n        /* \"#utility.yul\":10049:10127   */\n      and\n        /* \"#utility.yul\":10038:10127   */\n      swap1\n      pop\n        /* \"#utility.yul\":9984:10133   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10139:10254   */\n    tag_239:\n        /* \"#utility.yul\":10224:10247   */\n      tag_378\n        /* \"#utility.yul\":10241:10246   */\n      dup2\n        /* \"#utility.yul\":10224:10247   */\n      tag_238\n      jump\t// in\n    tag_378:\n        /* \"#utility.yul\":10219:10222   */\n      dup3\n        /* \"#utility.yul\":10212:10248   */\n      mstore\n        /* \"#utility.yul\":10139:10254   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10260:10478   */\n    tag_62:\n        /* \"#utility.yul\":10351:10355   */\n      0x00\n        /* \"#utility.yul\":10389:10391   */\n      0x20\n        /* \"#utility.yul\":10378:10387   */\n      dup3\n        /* \"#utility.yul\":10374:10392   */\n      add\n        /* \"#utility.yul\":10366:10392   */\n      swap1\n      pop\n        /* \"#utility.yul\":10402:10471   */\n      tag_380\n        /* \"#utility.yul\":10468:10469   */\n      0x00\n        /* \"#utility.yul\":10457:10466   */\n      dup4\n        /* \"#utility.yul\":10453:10470   */\n      add\n        /* \"#utility.yul\":10444:10450   */\n      dup5\n        /* \"#utility.yul\":10402:10471   */\n      tag_239\n      jump\t// in\n    tag_380:\n        /* \"#utility.yul\":10260:10478   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10484:10583   */\n    tag_240:\n        /* \"#utility.yul\":10536:10542   */\n      0x00\n        /* \"#utility.yul\":10570:10575   */\n      dup2\n        /* \"#utility.yul\":10564:10576   */\n      mload\n        /* \"#utility.yul\":10554:10576   */\n      swap1\n      pop\n        /* \"#utility.yul\":10484:10583   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10589:10758   */\n    tag_241:\n        /* \"#utility.yul\":10673:10684   */\n      0x00\n        /* \"#utility.yul\":10707:10713   */\n      dup3\n        /* \"#utility.yul\":10702:10705   */\n      dup3\n        /* \"#utility.yul\":10695:10714   */\n      mstore\n        /* \"#utility.yul\":10747:10751   */\n      0x20\n        /* \"#utility.yul\":10742:10745   */\n      dup3\n        /* \"#utility.yul\":10738:10752   */\n      add\n        /* \"#utility.yul\":10723:10752   */\n      swap1\n      pop\n        /* \"#utility.yul\":10589:10758   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10764:11010   */\n    tag_242:\n        /* \"#utility.yul\":10845:10846   */\n      0x00\n        /* \"#utility.yul\":10855:10968   */\n    tag_384:\n        /* \"#utility.yul\":10869:10875   */\n      dup4\n        /* \"#utility.yul\":10866:10867   */\n      dup2\n        /* \"#utility.yul\":10863:10876   */\n      lt\n        /* \"#utility.yul\":10855:10968   */\n      iszero\n      tag_386\n      jumpi\n        /* \"#utility.yul\":10954:10955   */\n      dup1\n        /* \"#utility.yul\":10949:10952   */\n      dup3\n        /* \"#utility.yul\":10945:10956   */\n      add\n        /* \"#utility.yul\":10939:10957   */\n      mload\n        /* \"#utility.yul\":10935:10936   */\n      dup2\n        /* \"#utility.yul\":10930:10933   */\n      dup5\n        /* \"#utility.yul\":10926:10937   */\n      add\n        /* \"#utility.yul\":10919:10958   */\n      mstore\n        /* \"#utility.yul\":10891:10893   */\n      0x20\n        /* \"#utility.yul\":10888:10889   */\n      dup2\n        /* \"#utility.yul\":10884:10894   */\n      add\n        /* \"#utility.yul\":10879:10894   */\n      swap1\n      pop\n        /* \"#utility.yul\":10855:10968   */\n      jump(tag_384)\n    tag_386:\n        /* \"#utility.yul\":11002:11003   */\n      0x00\n        /* \"#utility.yul\":10993:10999   */\n      dup5\n        /* \"#utility.yul\":10988:10991   */\n      dup5\n        /* \"#utility.yul\":10984:11000   */\n      add\n        /* \"#utility.yul\":10977:11004   */\n      mstore\n        /* \"#utility.yul\":10826:11010   */\n      pop\n        /* \"#utility.yul\":10764:11010   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11016:11393   */\n    tag_243:\n        /* \"#utility.yul\":11104:11107   */\n      0x00\n        /* \"#utility.yul\":11132:11171   */\n      tag_388\n        /* \"#utility.yul\":11165:11170   */\n      dup3\n        /* \"#utility.yul\":11132:11171   */\n      tag_240\n      jump\t// in\n    tag_388:\n        /* \"#utility.yul\":11187:11258   */\n      tag_389\n        /* \"#utility.yul\":11251:11257   */\n      dup2\n        /* \"#utility.yul\":11246:11249   */\n      dup6\n        /* \"#utility.yul\":11187:11258   */\n      tag_241\n      jump\t// in\n    tag_389:\n        /* \"#utility.yul\":11180:11258   */\n      swap4\n      pop\n        /* \"#utility.yul\":11267:11332   */\n      tag_390\n        /* \"#utility.yul\":11325:11331   */\n      dup2\n        /* \"#utility.yul\":11320:11323   */\n      dup6\n        /* \"#utility.yul\":11313:11317   */\n      0x20\n        /* \"#utility.yul\":11306:11311   */\n      dup7\n        /* \"#utility.yul\":11302:11318   */\n      add\n        /* \"#utility.yul\":11267:11332   */\n      tag_242\n      jump\t// in\n    tag_390:\n        /* \"#utility.yul\":11357:11386   */\n      tag_391\n        /* \"#utility.yul\":11379:11385   */\n      dup2\n        /* \"#utility.yul\":11357:11386   */\n      tag_228\n      jump\t// in\n    tag_391:\n        /* \"#utility.yul\":11352:11355   */\n      dup5\n        /* \"#utility.yul\":11348:11387   */\n      add\n        /* \"#utility.yul\":11341:11387   */\n      swap2\n      pop\n        /* \"#utility.yul\":11108:11393   */\n      pop\n        /* \"#utility.yul\":11016:11393   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11399:11712   */\n    tag_67:\n        /* \"#utility.yul\":11512:11516   */\n      0x00\n        /* \"#utility.yul\":11550:11552   */\n      0x20\n        /* \"#utility.yul\":11539:11548   */\n      dup3\n        /* \"#utility.yul\":11535:11553   */\n      add\n        /* \"#utility.yul\":11527:11553   */\n      swap1\n      pop\n        /* \"#utility.yul\":11599:11608   */\n      dup2\n        /* \"#utility.yul\":11593:11597   */\n      dup2\n        /* \"#utility.yul\":11589:11609   */\n      sub\n        /* \"#utility.yul\":11585:11586   */\n      0x00\n        /* \"#utility.yul\":11574:11583   */\n      dup4\n        /* \"#utility.yul\":11570:11587   */\n      add\n        /* \"#utility.yul\":11563:11610   */\n      mstore\n        /* \"#utility.yul\":11627:11705   */\n      tag_393\n        /* \"#utility.yul\":11700:11704   */\n      dup2\n        /* \"#utility.yul\":11691:11697   */\n      dup5\n        /* \"#utility.yul\":11627:11705   */\n      tag_243\n      jump\t// in\n    tag_393:\n        /* \"#utility.yul\":11619:11705   */\n      swap1\n      pop\n        /* \"#utility.yul\":11399:11712   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11718:12190   */\n    tag_70:\n        /* \"#utility.yul\":11785:11791   */\n      0x00\n        /* \"#utility.yul\":11793:11799   */\n      dup1\n        /* \"#utility.yul\":11842:11844   */\n      0x40\n        /* \"#utility.yul\":11830:11839   */\n      dup4\n        /* \"#utility.yul\":11821:11828   */\n      dup6\n        /* \"#utility.yul\":11817:11840   */\n      sub\n        /* \"#utility.yul\":11813:11845   */\n      slt\n        /* \"#utility.yul\":11810:11929   */\n      iszero\n      tag_395\n      jumpi\n        /* \"#utility.yul\":11848:11927   */\n      tag_396\n      tag_210\n      jump\t// in\n    tag_396:\n        /* \"#utility.yul\":11810:11929   */\n    tag_395:\n        /* \"#utility.yul\":11968:11969   */\n      0x00\n        /* \"#utility.yul\":11993:12046   */\n      tag_397\n        /* \"#utility.yul\":12038:12045   */\n      dup6\n        /* \"#utility.yul\":12029:12035   */\n      dup3\n        /* \"#utility.yul\":12018:12027   */\n      dup7\n        /* \"#utility.yul\":12014:12036   */\n      add\n        /* \"#utility.yul\":11993:12046   */\n      tag_215\n      jump\t// in\n    tag_397:\n        /* \"#utility.yul\":11983:12046   */\n      swap3\n      pop\n        /* \"#utility.yul\":11939:12056   */\n      pop\n        /* \"#utility.yul\":12095:12097   */\n      0x20\n        /* \"#utility.yul\":12121:12173   */\n      tag_398\n        /* \"#utility.yul\":12165:12172   */\n      dup6\n        /* \"#utility.yul\":12156:12162   */\n      dup3\n        /* \"#utility.yul\":12145:12154   */\n      dup7\n        /* \"#utility.yul\":12141:12163   */\n      add\n        /* \"#utility.yul\":12121:12173   */\n      tag_218\n      jump\t// in\n    tag_398:\n        /* \"#utility.yul\":12111:12173   */\n      swap2\n      pop\n        /* \"#utility.yul\":12066:12183   */\n      pop\n        /* \"#utility.yul\":11718:12190   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12196:12670   */\n    tag_74:\n        /* \"#utility.yul\":12264:12270   */\n      0x00\n        /* \"#utility.yul\":12272:12278   */\n      dup1\n        /* \"#utility.yul\":12321:12323   */\n      0x40\n        /* \"#utility.yul\":12309:12318   */\n      dup4\n        /* \"#utility.yul\":12300:12307   */\n      dup6\n        /* \"#utility.yul\":12296:12319   */\n      sub\n        /* \"#utility.yul\":12292:12324   */\n      slt\n        /* \"#utility.yul\":12289:12408   */\n      iszero\n      tag_400\n      jumpi\n        /* \"#utility.yul\":12327:12406   */\n      tag_401\n      tag_210\n      jump\t// in\n    tag_401:\n        /* \"#utility.yul\":12289:12408   */\n    tag_400:\n        /* \"#utility.yul\":12447:12448   */\n      0x00\n        /* \"#utility.yul\":12472:12525   */\n      tag_402\n        /* \"#utility.yul\":12517:12524   */\n      dup6\n        /* \"#utility.yul\":12508:12514   */\n      dup3\n        /* \"#utility.yul\":12497:12506   */\n      dup7\n        /* \"#utility.yul\":12493:12515   */\n      add\n        /* \"#utility.yul\":12472:12525   */\n      tag_215\n      jump\t// in\n    tag_402:\n        /* \"#utility.yul\":12462:12525   */\n      swap3\n      pop\n        /* \"#utility.yul\":12418:12535   */\n      pop\n        /* \"#utility.yul\":12574:12576   */\n      0x20\n        /* \"#utility.yul\":12600:12653   */\n      tag_403\n        /* \"#utility.yul\":12645:12652   */\n      dup6\n        /* \"#utility.yul\":12636:12642   */\n      dup3\n        /* \"#utility.yul\":12625:12634   */\n      dup7\n        /* \"#utility.yul\":12621:12643   */\n      add\n        /* \"#utility.yul\":12600:12653   */\n      tag_215\n      jump\t// in\n    tag_403:\n        /* \"#utility.yul\":12590:12653   */\n      swap2\n      pop\n        /* \"#utility.yul\":12545:12663   */\n      pop\n        /* \"#utility.yul\":12196:12670   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12676:12785   */\n    tag_244:\n        /* \"#utility.yul\":12757:12778   */\n      tag_405\n        /* \"#utility.yul\":12772:12777   */\n      dup2\n        /* \"#utility.yul\":12757:12778   */\n      tag_223\n      jump\t// in\n    tag_405:\n        /* \"#utility.yul\":12752:12755   */\n      dup3\n        /* \"#utility.yul\":12745:12779   */\n      mstore\n        /* \"#utility.yul\":12676:12785   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12791:13001   */\n    tag_77:\n        /* \"#utility.yul\":12878:12882   */\n      0x00\n        /* \"#utility.yul\":12916:12918   */\n      0x20\n        /* \"#utility.yul\":12905:12914   */\n      dup3\n        /* \"#utility.yul\":12901:12919   */\n      add\n        /* \"#utility.yul\":12893:12919   */\n      swap1\n      pop\n        /* \"#utility.yul\":12929:12994   */\n      tag_407\n        /* \"#utility.yul\":12991:12992   */\n      0x00\n        /* \"#utility.yul\":12980:12989   */\n      dup4\n        /* \"#utility.yul\":12976:12993   */\n      add\n        /* \"#utility.yul\":12967:12973   */\n      dup5\n        /* \"#utility.yul\":12929:12994   */\n      tag_244\n      jump\t// in\n    tag_407:\n        /* \"#utility.yul\":12791:13001   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13007:13084   */\n    tag_245:\n        /* \"#utility.yul\":13044:13051   */\n      0x00\n        /* \"#utility.yul\":13073:13078   */\n      dup2\n        /* \"#utility.yul\":13062:13078   */\n      swap1\n      pop\n        /* \"#utility.yul\":13007:13084   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13090:13150   */\n    tag_246:\n        /* \"#utility.yul\":13118:13121   */\n      0x00\n        /* \"#utility.yul\":13139:13144   */\n      dup2\n        /* \"#utility.yul\":13132:13144   */\n      swap1\n      pop\n        /* \"#utility.yul\":13090:13150   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13156:13296   */\n    tag_247:\n        /* \"#utility.yul\":13205:13214   */\n      0x00\n        /* \"#utility.yul\":13238:13290   */\n      tag_411\n        /* \"#utility.yul\":13256:13289   */\n      tag_412\n        /* \"#utility.yul\":13265:13288   */\n      tag_413\n        /* \"#utility.yul\":13282:13287   */\n      dup5\n        /* \"#utility.yul\":13265:13288   */\n      tag_216\n      jump\t// in\n    tag_413:\n        /* \"#utility.yul\":13256:13289   */\n      tag_246\n      jump\t// in\n    tag_412:\n        /* \"#utility.yul\":13238:13290   */\n      tag_245\n      jump\t// in\n    tag_411:\n        /* \"#utility.yul\":13225:13290   */\n      swap1\n      pop\n        /* \"#utility.yul\":13156:13296   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13302:13431   */\n    tag_248:\n        /* \"#utility.yul\":13388:13424   */\n      tag_415\n        /* \"#utility.yul\":13418:13423   */\n      dup2\n        /* \"#utility.yul\":13388:13424   */\n      tag_247\n      jump\t// in\n    tag_415:\n        /* \"#utility.yul\":13383:13386   */\n      dup3\n        /* \"#utility.yul\":13376:13425   */\n      mstore\n        /* \"#utility.yul\":13302:13431   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13437:13877   */\n    tag_90:\n        /* \"#utility.yul\":13585:13589   */\n      0x00\n        /* \"#utility.yul\":13623:13625   */\n      0x60\n        /* \"#utility.yul\":13612:13621   */\n      dup3\n        /* \"#utility.yul\":13608:13626   */\n      add\n        /* \"#utility.yul\":13600:13626   */\n      swap1\n      pop\n        /* \"#utility.yul\":13636:13707   */\n      tag_417\n        /* \"#utility.yul\":13704:13705   */\n      0x00\n        /* \"#utility.yul\":13693:13702   */\n      dup4\n        /* \"#utility.yul\":13689:13706   */\n      add\n        /* \"#utility.yul\":13680:13686   */\n      dup7\n        /* \"#utility.yul\":13636:13707   */\n      tag_220\n      jump\t// in\n    tag_417:\n        /* \"#utility.yul\":13717:13788   */\n      tag_418\n        /* \"#utility.yul\":13784:13786   */\n      0x20\n        /* \"#utility.yul\":13773:13782   */\n      dup4\n        /* \"#utility.yul\":13769:13787   */\n      add\n        /* \"#utility.yul\":13760:13766   */\n      dup6\n        /* \"#utility.yul\":13717:13788   */\n      tag_248\n      jump\t// in\n    tag_418:\n        /* \"#utility.yul\":13798:13870   */\n      tag_419\n        /* \"#utility.yul\":13866:13868   */\n      0x40\n        /* \"#utility.yul\":13855:13864   */\n      dup4\n        /* \"#utility.yul\":13851:13869   */\n      add\n        /* \"#utility.yul\":13842:13848   */\n      dup5\n        /* \"#utility.yul\":13798:13870   */\n      tag_220\n      jump\t// in\n    tag_419:\n        /* \"#utility.yul\":13437:13877   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13883:14065   */\n    tag_249:\n        /* \"#utility.yul\":14023:14057   */\n      0x54686520696e70757420616464726573732063616e6e6f74206265207a65726f\n        /* \"#utility.yul\":14019:14020   */\n      0x00\n        /* \"#utility.yul\":14011:14017   */\n      dup3\n        /* \"#utility.yul\":14007:14021   */\n      add\n        /* \"#utility.yul\":14000:14058   */\n      mstore\n        /* \"#utility.yul\":13883:14065   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14071:14437   */\n    tag_250:\n        /* \"#utility.yul\":14213:14216   */\n      0x00\n        /* \"#utility.yul\":14234:14301   */\n      tag_422\n        /* \"#utility.yul\":14298:14300   */\n      0x20\n        /* \"#utility.yul\":14293:14296   */\n      dup4\n        /* \"#utility.yul\":14234:14301   */\n      tag_241\n      jump\t// in\n    tag_422:\n        /* \"#utility.yul\":14227:14301   */\n      swap2\n      pop\n        /* \"#utility.yul\":14310:14403   */\n      tag_423\n        /* \"#utility.yul\":14399:14402   */\n      dup3\n        /* \"#utility.yul\":14310:14403   */\n      tag_249\n      jump\t// in\n    tag_423:\n        /* \"#utility.yul\":14428:14430   */\n      0x20\n        /* \"#utility.yul\":14423:14426   */\n      dup3\n        /* \"#utility.yul\":14419:14431   */\n      add\n        /* \"#utility.yul\":14412:14431   */\n      swap1\n      pop\n        /* \"#utility.yul\":14071:14437   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14443:14862   */\n    tag_94:\n        /* \"#utility.yul\":14609:14613   */\n      0x00\n        /* \"#utility.yul\":14647:14649   */\n      0x20\n        /* \"#utility.yul\":14636:14645   */\n      dup3\n        /* \"#utility.yul\":14632:14650   */\n      add\n        /* \"#utility.yul\":14624:14650   */\n      swap1\n      pop\n        /* \"#utility.yul\":14696:14705   */\n      dup2\n        /* \"#utility.yul\":14690:14694   */\n      dup2\n        /* \"#utility.yul\":14686:14706   */\n      sub\n        /* \"#utility.yul\":14682:14683   */\n      0x00\n        /* \"#utility.yul\":14671:14680   */\n      dup4\n        /* \"#utility.yul\":14667:14684   */\n      add\n        /* \"#utility.yul\":14660:14707   */\n      mstore\n        /* \"#utility.yul\":14724:14855   */\n      tag_425\n        /* \"#utility.yul\":14850:14854   */\n      dup2\n        /* \"#utility.yul\":14724:14855   */\n      tag_250\n      jump\t// in\n    tag_425:\n        /* \"#utility.yul\":14716:14855   */\n      swap1\n      pop\n        /* \"#utility.yul\":14443:14862   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14868:15048   */\n    tag_97:\n        /* \"#utility.yul\":14916:14993   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":14913:14914   */\n      0x00\n        /* \"#utility.yul\":14906:14994   */\n      mstore\n        /* \"#utility.yul\":15013:15017   */\n      0x32\n        /* \"#utility.yul\":15010:15011   */\n      0x04\n        /* \"#utility.yul\":15003:15018   */\n      mstore\n        /* \"#utility.yul\":15037:15041   */\n      0x24\n        /* \"#utility.yul\":15034:15035   */\n      0x00\n        /* \"#utility.yul\":15027:15042   */\n      revert\n        /* \"#utility.yul\":15054:15300   */\n    tag_251:\n        /* \"#utility.yul\":15194:15228   */\n      0x5468652061646472657373206f6620746865206f776e657220616e6420746865\n        /* \"#utility.yul\":15190:15191   */\n      0x00\n        /* \"#utility.yul\":15182:15188   */\n      dup3\n        /* \"#utility.yul\":15178:15192   */\n      add\n        /* \"#utility.yul\":15171:15229   */\n      mstore\n        /* \"#utility.yul\":15263:15292   */\n      0x206f70657261746f72206d75737420626520646966666572656e740000000000\n        /* \"#utility.yul\":15258:15260   */\n      0x20\n        /* \"#utility.yul\":15250:15256   */\n      dup3\n        /* \"#utility.yul\":15246:15261   */\n      add\n        /* \"#utility.yul\":15239:15293   */\n      mstore\n        /* \"#utility.yul\":15054:15300   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15306:15672   */\n    tag_252:\n        /* \"#utility.yul\":15448:15451   */\n      0x00\n        /* \"#utility.yul\":15469:15536   */\n      tag_429\n        /* \"#utility.yul\":15533:15535   */\n      0x3b\n        /* \"#utility.yul\":15528:15531   */\n      dup4\n        /* \"#utility.yul\":15469:15536   */\n      tag_241\n      jump\t// in\n    tag_429:\n        /* \"#utility.yul\":15462:15536   */\n      swap2\n      pop\n        /* \"#utility.yul\":15545:15638   */\n      tag_430\n        /* \"#utility.yul\":15634:15637   */\n      dup3\n        /* \"#utility.yul\":15545:15638   */\n      tag_251\n      jump\t// in\n    tag_430:\n        /* \"#utility.yul\":15663:15665   */\n      0x40\n        /* \"#utility.yul\":15658:15661   */\n      dup3\n        /* \"#utility.yul\":15654:15666   */\n      add\n        /* \"#utility.yul\":15647:15666   */\n      swap1\n      pop\n        /* \"#utility.yul\":15306:15672   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15678:16097   */\n    tag_109:\n        /* \"#utility.yul\":15844:15848   */\n      0x00\n        /* \"#utility.yul\":15882:15884   */\n      0x20\n        /* \"#utility.yul\":15871:15880   */\n      dup3\n        /* \"#utility.yul\":15867:15885   */\n      add\n        /* \"#utility.yul\":15859:15885   */\n      swap1\n      pop\n        /* \"#utility.yul\":15931:15940   */\n      dup2\n        /* \"#utility.yul\":15925:15929   */\n      dup2\n        /* \"#utility.yul\":15921:15941   */\n      sub\n        /* \"#utility.yul\":15917:15918   */\n      0x00\n        /* \"#utility.yul\":15906:15915   */\n      dup4\n        /* \"#utility.yul\":15902:15919   */\n      add\n        /* \"#utility.yul\":15895:15942   */\n      mstore\n        /* \"#utility.yul\":15959:16090   */\n      tag_432\n        /* \"#utility.yul\":16085:16089   */\n      dup2\n        /* \"#utility.yul\":15959:16090   */\n      tag_252\n      jump\t// in\n    tag_432:\n        /* \"#utility.yul\":15951:16090   */\n      swap1\n      pop\n        /* \"#utility.yul\":15678:16097   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16103:16251   */\n    tag_253:\n        /* \"#utility.yul\":16205:16216   */\n      0x00\n        /* \"#utility.yul\":16242:16245   */\n      dup2\n        /* \"#utility.yul\":16227:16245   */\n      swap1\n      pop\n        /* \"#utility.yul\":16103:16251   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16257:16647   */\n    tag_254:\n        /* \"#utility.yul\":16363:16366   */\n      0x00\n        /* \"#utility.yul\":16391:16430   */\n      tag_435\n        /* \"#utility.yul\":16424:16429   */\n      dup3\n        /* \"#utility.yul\":16391:16430   */\n      tag_240\n      jump\t// in\n    tag_435:\n        /* \"#utility.yul\":16446:16535   */\n      tag_436\n        /* \"#utility.yul\":16528:16534   */\n      dup2\n        /* \"#utility.yul\":16523:16526   */\n      dup6\n        /* \"#utility.yul\":16446:16535   */\n      tag_253\n      jump\t// in\n    tag_436:\n        /* \"#utility.yul\":16439:16535   */\n      swap4\n      pop\n        /* \"#utility.yul\":16544:16609   */\n      tag_437\n        /* \"#utility.yul\":16602:16608   */\n      dup2\n        /* \"#utility.yul\":16597:16600   */\n      dup6\n        /* \"#utility.yul\":16590:16594   */\n      0x20\n        /* \"#utility.yul\":16583:16588   */\n      dup7\n        /* \"#utility.yul\":16579:16595   */\n      add\n        /* \"#utility.yul\":16544:16609   */\n      tag_242\n      jump\t// in\n    tag_437:\n        /* \"#utility.yul\":16634:16640   */\n      dup1\n        /* \"#utility.yul\":16629:16632   */\n      dup5\n        /* \"#utility.yul\":16625:16641   */\n      add\n        /* \"#utility.yul\":16618:16641   */\n      swap2\n      pop\n        /* \"#utility.yul\":16367:16647   */\n      pop\n        /* \"#utility.yul\":16257:16647   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16653:17088   */\n    tag_129:\n        /* \"#utility.yul\":16833:16836   */\n      0x00\n        /* \"#utility.yul\":16855:16950   */\n      tag_439\n        /* \"#utility.yul\":16946:16949   */\n      dup3\n        /* \"#utility.yul\":16937:16943   */\n      dup6\n        /* \"#utility.yul\":16855:16950   */\n      tag_254\n      jump\t// in\n    tag_439:\n        /* \"#utility.yul\":16848:16950   */\n      swap2\n      pop\n        /* \"#utility.yul\":16967:17062   */\n      tag_440\n        /* \"#utility.yul\":17058:17061   */\n      dup3\n        /* \"#utility.yul\":17049:17055   */\n      dup5\n        /* \"#utility.yul\":16967:17062   */\n      tag_254\n      jump\t// in\n    tag_440:\n        /* \"#utility.yul\":16960:17062   */\n      swap2\n      pop\n        /* \"#utility.yul\":17079:17082   */\n      dup2\n        /* \"#utility.yul\":17072:17082   */\n      swap1\n      pop\n        /* \"#utility.yul\":16653:17088   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17094:17397   */\n    tag_255:\n        /* \"#utility.yul\":17234:17268   */\n      0x54686520494420656e746572656420697320696e76616c69642e204974206d75\n        /* \"#utility.yul\":17230:17231   */\n      0x00\n        /* \"#utility.yul\":17222:17228   */\n      dup3\n        /* \"#utility.yul\":17218:17232   */\n      add\n        /* \"#utility.yul\":17211:17269   */\n      mstore\n        /* \"#utility.yul\":17303:17337   */\n      0x737420626520696e207468697320696e74657276616c2030203c206964203c3d\n        /* \"#utility.yul\":17298:17300   */\n      0x20\n        /* \"#utility.yul\":17290:17296   */\n      dup3\n        /* \"#utility.yul\":17286:17301   */\n      add\n        /* \"#utility.yul\":17279:17338   */\n      mstore\n        /* \"#utility.yul\":17372:17389   */\n      0x2063757272656e7420746f6b656e730000000000000000000000000000000000\n        /* \"#utility.yul\":17367:17369   */\n      0x40\n        /* \"#utility.yul\":17359:17365   */\n      dup3\n        /* \"#utility.yul\":17355:17370   */\n      add\n        /* \"#utility.yul\":17348:17390   */\n      mstore\n        /* \"#utility.yul\":17094:17397   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17403:17769   */\n    tag_256:\n        /* \"#utility.yul\":17545:17548   */\n      0x00\n        /* \"#utility.yul\":17566:17633   */\n      tag_443\n        /* \"#utility.yul\":17630:17632   */\n      0x4f\n        /* \"#utility.yul\":17625:17628   */\n      dup4\n        /* \"#utility.yul\":17566:17633   */\n      tag_241\n      jump\t// in\n    tag_443:\n        /* \"#utility.yul\":17559:17633   */\n      swap2\n      pop\n        /* \"#utility.yul\":17642:17735   */\n      tag_444\n        /* \"#utility.yul\":17731:17734   */\n      dup3\n        /* \"#utility.yul\":17642:17735   */\n      tag_255\n      jump\t// in\n    tag_444:\n        /* \"#utility.yul\":17760:17762   */\n      0x60\n        /* \"#utility.yul\":17755:17758   */\n      dup3\n        /* \"#utility.yul\":17751:17763   */\n      add\n        /* \"#utility.yul\":17744:17763   */\n      swap1\n      pop\n        /* \"#utility.yul\":17403:17769   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17775:18194   */\n    tag_141:\n        /* \"#utility.yul\":17941:17945   */\n      0x00\n        /* \"#utility.yul\":17979:17981   */\n      0x20\n        /* \"#utility.yul\":17968:17977   */\n      dup3\n        /* \"#utility.yul\":17964:17982   */\n      add\n        /* \"#utility.yul\":17956:17982   */\n      swap1\n      pop\n        /* \"#utility.yul\":18028:18037   */\n      dup2\n        /* \"#utility.yul\":18022:18026   */\n      dup2\n        /* \"#utility.yul\":18018:18038   */\n      sub\n        /* \"#utility.yul\":18014:18015   */\n      0x00\n        /* \"#utility.yul\":18003:18012   */\n      dup4\n        /* \"#utility.yul\":17999:18016   */\n      add\n        /* \"#utility.yul\":17992:18039   */\n      mstore\n        /* \"#utility.yul\":18056:18187   */\n      tag_446\n        /* \"#utility.yul\":18182:18186   */\n      dup2\n        /* \"#utility.yul\":18056:18187   */\n      tag_256\n      jump\t// in\n    tag_446:\n        /* \"#utility.yul\":18048:18187   */\n      swap1\n      pop\n        /* \"#utility.yul\":17775:18194   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18200:18298   */\n    tag_257:\n        /* \"#utility.yul\":18251:18257   */\n      0x00\n        /* \"#utility.yul\":18285:18290   */\n      dup2\n        /* \"#utility.yul\":18279:18291   */\n      mload\n        /* \"#utility.yul\":18269:18291   */\n      swap1\n      pop\n        /* \"#utility.yul\":18200:18298   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18304:18472   */\n    tag_258:\n        /* \"#utility.yul\":18387:18398   */\n      0x00\n        /* \"#utility.yul\":18421:18427   */\n      dup3\n        /* \"#utility.yul\":18416:18419   */\n      dup3\n        /* \"#utility.yul\":18409:18428   */\n      mstore\n        /* \"#utility.yul\":18461:18465   */\n      0x20\n        /* \"#utility.yul\":18456:18459   */\n      dup3\n        /* \"#utility.yul\":18452:18466   */\n      add\n        /* \"#utility.yul\":18437:18466   */\n      swap1\n      pop\n        /* \"#utility.yul\":18304:18472   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18478:18851   */\n    tag_259:\n        /* \"#utility.yul\":18564:18567   */\n      0x00\n        /* \"#utility.yul\":18592:18630   */\n      tag_450\n        /* \"#utility.yul\":18624:18629   */\n      dup3\n        /* \"#utility.yul\":18592:18630   */\n      tag_257\n      jump\t// in\n    tag_450:\n        /* \"#utility.yul\":18646:18716   */\n      tag_451\n        /* \"#utility.yul\":18709:18715   */\n      dup2\n        /* \"#utility.yul\":18704:18707   */\n      dup6\n        /* \"#utility.yul\":18646:18716   */\n      tag_258\n      jump\t// in\n    tag_451:\n        /* \"#utility.yul\":18639:18716   */\n      swap4\n      pop\n        /* \"#utility.yul\":18725:18790   */\n      tag_452\n        /* \"#utility.yul\":18783:18789   */\n      dup2\n        /* \"#utility.yul\":18778:18781   */\n      dup6\n        /* \"#utility.yul\":18771:18775   */\n      0x20\n        /* \"#utility.yul\":18764:18769   */\n      dup7\n        /* \"#utility.yul\":18760:18776   */\n      add\n        /* \"#utility.yul\":18725:18790   */\n      tag_242\n      jump\t// in\n    tag_452:\n        /* \"#utility.yul\":18815:18844   */\n      tag_453\n        /* \"#utility.yul\":18837:18843   */\n      dup2\n        /* \"#utility.yul\":18815:18844   */\n      tag_228\n      jump\t// in\n    tag_453:\n        /* \"#utility.yul\":18810:18813   */\n      dup5\n        /* \"#utility.yul\":18806:18845   */\n      add\n        /* \"#utility.yul\":18799:18845   */\n      swap2\n      pop\n        /* \"#utility.yul\":18568:18851   */\n      pop\n        /* \"#utility.yul\":18478:18851   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18857:19493   */\n    tag_149:\n        /* \"#utility.yul\":19050:19054   */\n      0x00\n        /* \"#utility.yul\":19088:19091   */\n      0x80\n        /* \"#utility.yul\":19077:19086   */\n      dup3\n        /* \"#utility.yul\":19073:19092   */\n      add\n        /* \"#utility.yul\":19065:19092   */\n      swap1\n      pop\n        /* \"#utility.yul\":19102:19173   */\n      tag_455\n        /* \"#utility.yul\":19170:19171   */\n      0x00\n        /* \"#utility.yul\":19159:19168   */\n      dup4\n        /* \"#utility.yul\":19155:19172   */\n      add\n        /* \"#utility.yul\":19146:19152   */\n      dup8\n        /* \"#utility.yul\":19102:19173   */\n      tag_220\n      jump\t// in\n    tag_455:\n        /* \"#utility.yul\":19183:19255   */\n      tag_456\n        /* \"#utility.yul\":19251:19253   */\n      0x20\n        /* \"#utility.yul\":19240:19249   */\n      dup4\n        /* \"#utility.yul\":19236:19254   */\n      add\n        /* \"#utility.yul\":19227:19233   */\n      dup7\n        /* \"#utility.yul\":19183:19255   */\n      tag_220\n      jump\t// in\n    tag_456:\n        /* \"#utility.yul\":19265:19335   */\n      tag_457\n        /* \"#utility.yul\":19331:19333   */\n      0x40\n        /* \"#utility.yul\":19320:19329   */\n      dup4\n        /* \"#utility.yul\":19316:19334   */\n      add\n        /* \"#utility.yul\":19307:19313   */\n      dup6\n        /* \"#utility.yul\":19265:19335   */\n      tag_219\n      jump\t// in\n    tag_457:\n        /* \"#utility.yul\":19382:19391   */\n      dup2\n        /* \"#utility.yul\":19376:19380   */\n      dup2\n        /* \"#utility.yul\":19372:19392   */\n      sub\n        /* \"#utility.yul\":19367:19369   */\n      0x60\n        /* \"#utility.yul\":19356:19365   */\n      dup4\n        /* \"#utility.yul\":19352:19370   */\n      add\n        /* \"#utility.yul\":19345:19393   */\n      mstore\n        /* \"#utility.yul\":19410:19486   */\n      tag_458\n        /* \"#utility.yul\":19481:19485   */\n      dup2\n        /* \"#utility.yul\":19472:19478   */\n      dup5\n        /* \"#utility.yul\":19410:19486   */\n      tag_259\n      jump\t// in\n    tag_458:\n        /* \"#utility.yul\":19402:19486   */\n      swap1\n      pop\n        /* \"#utility.yul\":18857:19493   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19499:19619   */\n    tag_260:\n        /* \"#utility.yul\":19571:19594   */\n      tag_460\n        /* \"#utility.yul\":19588:19593   */\n      dup2\n        /* \"#utility.yul\":19571:19594   */\n      tag_238\n      jump\t// in\n    tag_460:\n        /* \"#utility.yul\":19564:19569   */\n      dup2\n        /* \"#utility.yul\":19561:19595   */\n      eq\n        /* \"#utility.yul\":19551:19613   */\n      tag_461\n      jumpi\n        /* \"#utility.yul\":19609:19610   */\n      0x00\n        /* \"#utility.yul\":19606:19607   */\n      dup1\n        /* \"#utility.yul\":19599:19611   */\n      revert\n        /* \"#utility.yul\":19551:19613   */\n    tag_461:\n        /* \"#utility.yul\":19499:19619   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19625:19766   */\n    tag_261:\n        /* \"#utility.yul\":19681:19686   */\n      0x00\n        /* \"#utility.yul\":19712:19718   */\n      dup2\n        /* \"#utility.yul\":19706:19719   */\n      mload\n        /* \"#utility.yul\":19697:19719   */\n      swap1\n      pop\n        /* \"#utility.yul\":19728:19760   */\n      tag_463\n        /* \"#utility.yul\":19754:19759   */\n      dup2\n        /* \"#utility.yul\":19728:19760   */\n      tag_260\n      jump\t// in\n    tag_463:\n        /* \"#utility.yul\":19625:19766   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19772:20121   */\n    tag_152:\n        /* \"#utility.yul\":19841:19847   */\n      0x00\n        /* \"#utility.yul\":19890:19892   */\n      0x20\n        /* \"#utility.yul\":19878:19887   */\n      dup3\n        /* \"#utility.yul\":19869:19876   */\n      dup5\n        /* \"#utility.yul\":19865:19888   */\n      sub\n        /* \"#utility.yul\":19861:19893   */\n      slt\n        /* \"#utility.yul\":19858:19977   */\n      iszero\n      tag_465\n      jumpi\n        /* \"#utility.yul\":19896:19975   */\n      tag_466\n      tag_210\n      jump\t// in\n    tag_466:\n        /* \"#utility.yul\":19858:19977   */\n    tag_465:\n        /* \"#utility.yul\":20016:20017   */\n      0x00\n        /* \"#utility.yul\":20041:20104   */\n      tag_467\n        /* \"#utility.yul\":20096:20103   */\n      dup5\n        /* \"#utility.yul\":20087:20093   */\n      dup3\n        /* \"#utility.yul\":20076:20085   */\n      dup6\n        /* \"#utility.yul\":20072:20094   */\n      add\n        /* \"#utility.yul\":20041:20104   */\n      tag_261\n      jump\t// in\n    tag_467:\n        /* \"#utility.yul\":20031:20104   */\n      swap2\n      pop\n        /* \"#utility.yul\":19987:20114   */\n      pop\n        /* \"#utility.yul\":19772:20121   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20127:20307   */\n    tag_177:\n        /* \"#utility.yul\":20175:20252   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":20172:20173   */\n      0x00\n        /* \"#utility.yul\":20165:20253   */\n      mstore\n        /* \"#utility.yul\":20272:20276   */\n      0x12\n        /* \"#utility.yul\":20269:20270   */\n      0x04\n        /* \"#utility.yul\":20262:20277   */\n      mstore\n        /* \"#utility.yul\":20296:20300   */\n      0x24\n        /* \"#utility.yul\":20293:20294   */\n      0x00\n        /* \"#utility.yul\":20286:20301   */\n      revert\n\n    auxdata: 0xa26469706673582212204fa5920854627380dd1ba995d41bcfa20d16680a2fbd3ade2db9287825664e1d64736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1930": {
									"entryPoint": null,
									"id": 1930,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_t_bytes10_fromMemory": {
									"entryPoint": 303,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes20_fromMemory": {
									"entryPoint": 213,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes20t_bytes10_fromMemory": {
									"entryPoint": 325,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_bytes10": {
									"entryPoint": 235,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes20": {
									"entryPoint": 145,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 141,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_bytes10": {
									"entryPoint": 278,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes20": {
									"entryPoint": 188,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1710:8",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:8"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:8"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:8",
														"type": ""
													}
												],
												"src": "7:75:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:8"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:8"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:105:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:89:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "411:66:8",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "400:78:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:8",
														"type": ""
													}
												],
												"src": "334:150:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "533:79:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "590:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "599:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "602:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "592:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "592:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "592:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "556:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "581:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes20",
																					"nodeType": "YulIdentifier",
																					"src": "563:17:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "563:24:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "553:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "553:35:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "546:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "546:43:8"
															},
															"nodeType": "YulIf",
															"src": "543:63:8"
														}
													]
												},
												"name": "validator_revert_t_bytes20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "526:5:8",
														"type": ""
													}
												],
												"src": "490:122:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "681:80:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "691:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "706:6:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "700:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "700:13:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "691:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "749:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes20",
																	"nodeType": "YulIdentifier",
																	"src": "722:26:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "722:33:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "722:33:8"
														}
													]
												},
												"name": "abi_decode_t_bytes20_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "659:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "667:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "675:5:8",
														"type": ""
													}
												],
												"src": "618:143:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "812:105:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "822:89:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "837:5:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "844:66:8",
																		"type": "",
																		"value": "0xffffffffffffffffffff00000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "833:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "833:78:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "822:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "794:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "804:7:8",
														"type": ""
													}
												],
												"src": "767:150:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "966:79:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1023:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1032:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1035:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1025:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1025:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1025:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "989:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1014:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes10",
																					"nodeType": "YulIdentifier",
																					"src": "996:17:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "996:24:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "986:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "986:35:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "979:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "979:43:8"
															},
															"nodeType": "YulIf",
															"src": "976:63:8"
														}
													]
												},
												"name": "validator_revert_t_bytes10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "959:5:8",
														"type": ""
													}
												],
												"src": "923:122:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1114:80:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1124:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1139:6:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1133:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1133:13:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1124:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1182:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes10",
																	"nodeType": "YulIdentifier",
																	"src": "1155:26:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1155:33:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1155:33:8"
														}
													]
												},
												"name": "abi_decode_t_bytes10_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1092:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1100:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1108:5:8",
														"type": ""
													}
												],
												"src": "1051:143:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1294:413:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1340:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1342:77:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1342:79:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1342:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1315:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1324:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1311:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1311:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1336:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1307:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1307:32:8"
															},
															"nodeType": "YulIf",
															"src": "1304:119:8"
														},
														{
															"nodeType": "YulBlock",
															"src": "1433:128:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1448:15:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1462:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1452:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1477:74:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1523:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1534:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1519:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1519:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1543:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes20_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1487:31:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1487:64:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1477:6:8"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1571:129:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1586:16:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1600:2:8",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1590:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1616:74:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1662:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1673:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1658:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1658:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1682:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes10_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1626:31:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1626:64:8"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "1616:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes20t_bytes10_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1256:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1267:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1279:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1287:6:8",
														"type": ""
													}
												],
												"src": "1200:507:8"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes20(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes20(value) {\n        if iszero(eq(value, cleanup_t_bytes20(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes20_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes20(value)\n    }\n\n    function cleanup_t_bytes10(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffff00000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes10(value) {\n        if iszero(eq(value, cleanup_t_bytes10(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes10_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes10(value)\n    }\n\n    function abi_decode_tuple_t_bytes20t_bytes10_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes20_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bytes10_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 8,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801562000010575f80fd5b5060405162001b3238038062001b32833981810160405281019062000036919062000145565b815f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908360601c0217905550805f60146101000a81548169ffffffffffffffffffff021916908360b01c021790555050506200018a565b5f80fd5b5f7fffffffffffffffffffffffffffffffffffffffff00000000000000000000000082169050919050565b620000c78162000091565b8114620000d2575f80fd5b50565b5f81519050620000e581620000bc565b92915050565b5f7fffffffffffffffffffff0000000000000000000000000000000000000000000082169050919050565b6200012181620000eb565b81146200012c575f80fd5b50565b5f815190506200013f8162000116565b92915050565b5f80604083850312156200015e576200015d6200008d565b5b5f6200016d85828601620000d5565b925050602062000180858286016200012f565b9150509250929050565b61199a80620001985f395ff3fe608060405234801561000f575f80fd5b50600436106100cd575f3560e01c806395d89b411161008a578063b1cff38011610064578063b1cff3801461020d578063dd7d84401461023d578063e560ca431461026d578063e985e9c514610289576100cd565b806395d89b41146101b7578063a22cb465146101d5578063b145ae31146101f1576100cd565b806306fdde03146100d157806307394401146100ef5780634ec3dcfe1461010b57806370a082311461012757806382a7cf1e1461015757806393b871f214610187575b5f80fd5b6100d96102b9565b6040516100e69190610ef6565b60405180910390f35b61010960048036038101906101049190610fb1565b6102cd565b005b61012560048036038101906101209190610fb1565b6102ec565b005b610141600480360381019061013c9190611001565b6103eb565b60405161014e919061103b565b60405180910390f35b610171600480360381019061016c9190611054565b6104cc565b60405161017e919061108e565b60405180910390f35b6101a1600480360381019061019c9190611054565b6104dd565b6040516101ae919061108e565b60405180910390f35b6101bf610529565b6040516101cc91906110e1565b60405180910390f35b6101ef60048036038101906101ea919061112f565b61053e565b005b61020b600480360381019061020691906112a9565b61072a565b005b61022760048036038101906102229190611386565b610747565b6040516102349190611444565b60405180910390f35b61025760048036038101906102529190611054565b610751565b60405161026491906114d7565b60405180910390f35b610287600480360381019061028291906114f7565b6107bb565b005b6102a3600480360381019061029e9190611535565b6107d1565b6040516102b09190611582565b60405180910390f35b5f805f9054906101000a900460601b905090565b6102e783838360405180602001604052805f81525061072a565b505050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361035c575f6040517f64a0ae92000000000000000000000000000000000000000000000000000000008152600401610353919061108e565b60405180910390fd5b5f61036f838361036a610860565b610867565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146103e5578382826040517f64283d7b0000000000000000000000000000000000000000000000000000000081526004016103dc939291906115dd565b60405180910390fd5b50505050565b5f8073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361045a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104519061165c565b60405180910390fd5b6104d95f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6104b181106104ab576104aa61167a565b5b601091828204019190066002029054906101000a900461ffff169050919050565b5f6104d68261086f565b9050919050565b5f6104e78261086f565b506104da5f8361ffff1661ffff1681526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b5f8060149054906101000a900460b01b905090565b8173ffffffffffffffffffffffffffffffffffffffff1661055d610860565b73ffffffffffffffffffffffffffffffffffffffff16036105b3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105aa90611717565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361062357816040517f5b08ba1800000000000000000000000000000000000000000000000000000000815260040161061a919061108e565b60405180910390fd5b806104db5f610630610860565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff166106d9610860565b73ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c318360405161071e9190611582565b60405180910390a35050565b6107358484846102ec565b6107418484848461091d565b50505050565b5f95945050505050565b606061075c8261086f565b505f610766610acf565b90505f8151116107845760405180602001604052805f8152506107b3565b806107928461ffff16610ae5565b6040516020016107a392919061176f565b6040516020818303038152906040525b915050919050565b6107cd82826107c8610860565b610baf565b5050565b5f6104db5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905092915050565b5f33905090565b5f9392505050565b5f8161ffff165f10801561089d575060015f0160029054906101000a900461ffff1661ffff168261ffff1611155b6108dc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108d390611828565b60405180910390fd5b60028261ffff166104b181106108f5576108f461167a565b5b015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b5f8373ffffffffffffffffffffffffffffffffffffffff163b1115610ac9578273ffffffffffffffffffffffffffffffffffffffff1663b1cff380610960610860565b8685856040518563ffffffff1660e01b81526004016109829493929190611898565b6020604051808303815f875af19250505080156109bd57506040513d601f19601f820116820180604052508101906109ba919061190c565b60015b610a3e573d805f81146109eb576040519150601f19603f3d011682016040523d82523d5f602084013e6109f0565b606091505b505f815103610a3657836040517f64a0ae92000000000000000000000000000000000000000000000000000000008152600401610a2d919061108e565b60405180910390fd5b805181602001fd5b63b1cff38060e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614610ac757836040517f64a0ae92000000000000000000000000000000000000000000000000000000008152600401610abe919061108e565b60405180910390fd5b505b50505050565b606060405180602001604052805f815250905090565b60605f6001610af384610d6b565b0190505f8167ffffffffffffffff811115610b1157610b10611185565b5b6040519080825280601f01601f191660200182016040528015610b435781602001600182028036833780820191505090505b5090505f82602001820190505b600115610ba4578080600190039150507f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a8581610b9957610b98611937565b5b0494505f8503610b50575b819350505050919050565b5f610bb98361086f565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610c29576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c2090611717565b60405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614158015610c6c5750610c6a81836107d1565b155b15610cae57816040517fa9fbf51f000000000000000000000000000000000000000000000000000000008152600401610ca5919061108e565b60405180910390fd5b836104da5f8561ffff1661ffff1681526020019081526020015f205f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508261ffff168473ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f0a9d294fd4bd42bb30e96cba2b478d149a783fba3c729b1e5c42bec89d95b85a60405160405180910390a450505050565b5f805f90507a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008310610dc7577a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008381610dbd57610dbc611937565b5b0492506040810190505b6d04ee2d6d415b85acef81000000008310610e04576d04ee2d6d415b85acef81000000008381610dfa57610df9611937565b5b0492506020810190505b662386f26fc100008310610e3357662386f26fc100008381610e2957610e28611937565b5b0492506010810190505b6305f5e1008310610e5c576305f5e1008381610e5257610e51611937565b5b0492506008810190505b6127108310610e81576127108381610e7757610e76611937565b5b0492506004810190505b60648310610ea45760648381610e9a57610e99611937565b5b0492506002810190505b600a8310610eb3576001810190505b80915050919050565b5f7fffffffffffffffffffffffffffffffffffffffff00000000000000000000000082169050919050565b610ef081610ebc565b82525050565b5f602082019050610f095f830184610ee7565b92915050565b5f604051905090565b5f80fd5b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610f4982610f20565b9050919050565b610f5981610f3f565b8114610f63575f80fd5b50565b5f81359050610f7481610f50565b92915050565b5f61ffff82169050919050565b610f9081610f7a565b8114610f9a575f80fd5b50565b5f81359050610fab81610f87565b92915050565b5f805f60608486031215610fc857610fc7610f18565b5b5f610fd586828701610f66565b9350506020610fe686828701610f66565b9250506040610ff786828701610f9d565b9150509250925092565b5f6020828403121561101657611015610f18565b5b5f61102384828501610f66565b91505092915050565b61103581610f7a565b82525050565b5f60208201905061104e5f83018461102c565b92915050565b5f6020828403121561106957611068610f18565b5b5f61107684828501610f9d565b91505092915050565b61108881610f3f565b82525050565b5f6020820190506110a15f83018461107f565b92915050565b5f7fffffffffffffffffffff0000000000000000000000000000000000000000000082169050919050565b6110db816110a7565b82525050565b5f6020820190506110f45f8301846110d2565b92915050565b5f8115159050919050565b61110e816110fa565b8114611118575f80fd5b50565b5f8135905061112981611105565b92915050565b5f806040838503121561114557611144610f18565b5b5f61115285828601610f66565b92505060206111638582860161111b565b9150509250929050565b5f80fd5b5f80fd5b5f601f19601f8301169050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b6111bb82611175565b810181811067ffffffffffffffff821117156111da576111d9611185565b5b80604052505050565b5f6111ec610f0f565b90506111f882826111b2565b919050565b5f67ffffffffffffffff82111561121757611216611185565b5b61122082611175565b9050602081019050919050565b828183375f83830152505050565b5f61124d611248846111fd565b6111e3565b90508281526020810184848401111561126957611268611171565b5b61127484828561122d565b509392505050565b5f82601f8301126112905761128f61116d565b5b81356112a084826020860161123b565b91505092915050565b5f805f80608085870312156112c1576112c0610f18565b5b5f6112ce87828801610f66565b94505060206112df87828801610f66565b93505060406112f087828801610f9d565b925050606085013567ffffffffffffffff81111561131157611310610f1c565b5b61131d8782880161127c565b91505092959194509250565b5f80fd5b5f80fd5b5f8083601f8401126113465761134561116d565b5b8235905067ffffffffffffffff81111561136357611362611329565b5b60208301915083600182028301111561137f5761137e61132d565b5b9250929050565b5f805f805f6080868803121561139f5761139e610f18565b5b5f6113ac88828901610f66565b95505060206113bd88828901610f66565b94505060406113ce88828901610f9d565b935050606086013567ffffffffffffffff8111156113ef576113ee610f1c565b5b6113fb88828901611331565b92509250509295509295909350565b5f7fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b61143e8161140a565b82525050565b5f6020820190506114575f830184611435565b92915050565b5f81519050919050565b5f82825260208201905092915050565b5f5b83811015611494578082015181840152602081019050611479565b5f8484015250505050565b5f6114a98261145d565b6114b38185611467565b93506114c3818560208601611477565b6114cc81611175565b840191505092915050565b5f6020820190508181035f8301526114ef818461149f565b905092915050565b5f806040838503121561150d5761150c610f18565b5b5f61151a85828601610f66565b925050602061152b85828601610f9d565b9150509250929050565b5f806040838503121561154b5761154a610f18565b5b5f61155885828601610f66565b925050602061156985828601610f66565b9150509250929050565b61157c816110fa565b82525050565b5f6020820190506115955f830184611573565b92915050565b5f819050919050565b5f819050919050565b5f6115c76115c26115bd84610f7a565b6115a4565b61159b565b9050919050565b6115d7816115ad565b82525050565b5f6060820190506115f05f83018661107f565b6115fd60208301856115ce565b61160a604083018461107f565b949350505050565b7f54686520696e70757420616464726573732063616e6e6f74206265207a65726f5f82015250565b5f611646602083611467565b915061165182611612565b602082019050919050565b5f6020820190508181035f8301526116738161163a565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b7f5468652061646472657373206f6620746865206f776e657220616e64207468655f8201527f206f70657261746f72206d75737420626520646966666572656e740000000000602082015250565b5f611701603b83611467565b915061170c826116a7565b604082019050919050565b5f6020820190508181035f83015261172e816116f5565b9050919050565b5f81905092915050565b5f6117498261145d565b6117538185611735565b9350611763818560208601611477565b80840191505092915050565b5f61177a828561173f565b9150611786828461173f565b91508190509392505050565b7f54686520494420656e746572656420697320696e76616c69642e204974206d755f8201527f737420626520696e207468697320696e74657276616c2030203c206964203c3d60208201527f2063757272656e7420746f6b656e730000000000000000000000000000000000604082015250565b5f611812604f83611467565b915061181d82611792565b606082019050919050565b5f6020820190508181035f83015261183f81611806565b9050919050565b5f81519050919050565b5f82825260208201905092915050565b5f61186a82611846565b6118748185611850565b9350611884818560208601611477565b61188d81611175565b840191505092915050565b5f6080820190506118ab5f83018761107f565b6118b8602083018661107f565b6118c5604083018561102c565b81810360608301526118d78184611860565b905095945050505050565b6118eb8161140a565b81146118f5575f80fd5b50565b5f81519050611906816118e2565b92915050565b5f6020828403121561192157611920610f18565b5b5f61192e848285016118f8565b91505092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffdfea26469706673582212204fa5920854627380dd1ba995d41bcfa20d16680a2fbd3ade2db9287825664e1d64736f6c63430008140033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x10 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x1B32 CODESIZE SUB DUP1 PUSH3 0x1B32 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x36 SWAP2 SWAP1 PUSH3 0x145 JUMP JUMPDEST DUP2 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH1 0x60 SHR MUL OR SWAP1 SSTORE POP DUP1 PUSH0 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH10 0xFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH1 0xB0 SHR MUL OR SWAP1 SSTORE POP POP POP PUSH3 0x18A JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0xC7 DUP2 PUSH3 0x91 JUMP JUMPDEST DUP2 EQ PUSH3 0xD2 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH3 0xE5 DUP2 PUSH3 0xBC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH32 0xFFFFFFFFFFFFFFFFFFFF00000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x121 DUP2 PUSH3 0xEB JUMP JUMPDEST DUP2 EQ PUSH3 0x12C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH3 0x13F DUP2 PUSH3 0x116 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x15E JUMPI PUSH3 0x15D PUSH3 0x8D JUMP JUMPDEST JUMPDEST PUSH0 PUSH3 0x16D DUP6 DUP3 DUP7 ADD PUSH3 0xD5 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH3 0x180 DUP6 DUP3 DUP7 ADD PUSH3 0x12F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x199A DUP1 PUSH3 0x198 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCD JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x95D89B41 GT PUSH2 0x8A JUMPI DUP1 PUSH4 0xB1CFF380 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xB1CFF380 EQ PUSH2 0x20D JUMPI DUP1 PUSH4 0xDD7D8440 EQ PUSH2 0x23D JUMPI DUP1 PUSH4 0xE560CA43 EQ PUSH2 0x26D JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x289 JUMPI PUSH2 0xCD JUMP JUMPDEST DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1B7 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x1D5 JUMPI DUP1 PUSH4 0xB145AE31 EQ PUSH2 0x1F1 JUMPI PUSH2 0xCD JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xD1 JUMPI DUP1 PUSH4 0x7394401 EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x4EC3DCFE EQ PUSH2 0x10B JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x127 JUMPI DUP1 PUSH4 0x82A7CF1E EQ PUSH2 0x157 JUMPI DUP1 PUSH4 0x93B871F2 EQ PUSH2 0x187 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xD9 PUSH2 0x2B9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE6 SWAP2 SWAP1 PUSH2 0xEF6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x109 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x104 SWAP2 SWAP1 PUSH2 0xFB1 JUMP JUMPDEST PUSH2 0x2CD JUMP JUMPDEST STOP JUMPDEST PUSH2 0x125 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x120 SWAP2 SWAP1 PUSH2 0xFB1 JUMP JUMPDEST PUSH2 0x2EC JUMP JUMPDEST STOP JUMPDEST PUSH2 0x141 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x13C SWAP2 SWAP1 PUSH2 0x1001 JUMP JUMPDEST PUSH2 0x3EB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14E SWAP2 SWAP1 PUSH2 0x103B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x171 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x16C SWAP2 SWAP1 PUSH2 0x1054 JUMP JUMPDEST PUSH2 0x4CC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x17E SWAP2 SWAP1 PUSH2 0x108E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x19C SWAP2 SWAP1 PUSH2 0x1054 JUMP JUMPDEST PUSH2 0x4DD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1AE SWAP2 SWAP1 PUSH2 0x108E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1BF PUSH2 0x529 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1CC SWAP2 SWAP1 PUSH2 0x10E1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1EF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1EA SWAP2 SWAP1 PUSH2 0x112F JUMP JUMPDEST PUSH2 0x53E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x20B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x206 SWAP2 SWAP1 PUSH2 0x12A9 JUMP JUMPDEST PUSH2 0x72A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x227 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x222 SWAP2 SWAP1 PUSH2 0x1386 JUMP JUMPDEST PUSH2 0x747 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x234 SWAP2 SWAP1 PUSH2 0x1444 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x257 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x252 SWAP2 SWAP1 PUSH2 0x1054 JUMP JUMPDEST PUSH2 0x751 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x264 SWAP2 SWAP1 PUSH2 0x14D7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x287 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x282 SWAP2 SWAP1 PUSH2 0x14F7 JUMP JUMPDEST PUSH2 0x7BB JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2A3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x29E SWAP2 SWAP1 PUSH2 0x1535 JUMP JUMPDEST PUSH2 0x7D1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B0 SWAP2 SWAP1 PUSH2 0x1582 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x60 SHL SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x2E7 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0x72A JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x35C JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x353 SWAP2 SWAP1 PUSH2 0x108E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x36F DUP4 DUP4 PUSH2 0x36A PUSH2 0x860 JUMP JUMPDEST PUSH2 0x867 JUMP JUMPDEST SWAP1 POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x3E5 JUMPI DUP4 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH32 0x64283D7B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3DC SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x15DD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x45A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x451 SWAP1 PUSH2 0x165C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x4D9 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x4B1 DUP2 LT PUSH2 0x4AB JUMPI PUSH2 0x4AA PUSH2 0x167A JUMP JUMPDEST JUMPDEST PUSH1 0x10 SWAP2 DUP3 DUP3 DIV ADD SWAP2 SWAP1 MOD PUSH1 0x2 MUL SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH2 0xFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x4D6 DUP3 PUSH2 0x86F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x4E7 DUP3 PUSH2 0x86F JUMP JUMPDEST POP PUSH2 0x4DA PUSH0 DUP4 PUSH2 0xFFFF AND PUSH2 0xFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xB0 SHL SWAP1 POP SWAP1 JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x55D PUSH2 0x860 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x5B3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5AA SWAP1 PUSH2 0x1717 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x623 JUMPI DUP2 PUSH1 0x40 MLOAD PUSH32 0x5B08BA1800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x61A SWAP2 SWAP1 PUSH2 0x108E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH2 0x4DB PUSH0 PUSH2 0x630 PUSH2 0x860 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x6D9 PUSH2 0x860 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0x71E SWAP2 SWAP1 PUSH2 0x1582 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x735 DUP5 DUP5 DUP5 PUSH2 0x2EC JUMP JUMPDEST PUSH2 0x741 DUP5 DUP5 DUP5 DUP5 PUSH2 0x91D JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x75C DUP3 PUSH2 0x86F JUMP JUMPDEST POP PUSH0 PUSH2 0x766 PUSH2 0xACF JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 MLOAD GT PUSH2 0x784 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0x7B3 JUMP JUMPDEST DUP1 PUSH2 0x792 DUP5 PUSH2 0xFFFF AND PUSH2 0xAE5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x7A3 SWAP3 SWAP2 SWAP1 PUSH2 0x176F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x7CD DUP3 DUP3 PUSH2 0x7C8 PUSH2 0x860 JUMP JUMPDEST PUSH2 0xBAF JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH2 0x4DB PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 PUSH2 0xFFFF AND PUSH0 LT DUP1 ISZERO PUSH2 0x89D JUMPI POP PUSH1 0x1 PUSH0 ADD PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH2 0xFFFF AND PUSH2 0xFFFF AND DUP3 PUSH2 0xFFFF AND GT ISZERO JUMPDEST PUSH2 0x8DC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8D3 SWAP1 PUSH2 0x1828 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 DUP3 PUSH2 0xFFFF AND PUSH2 0x4B1 DUP2 LT PUSH2 0x8F5 JUMPI PUSH2 0x8F4 PUSH2 0x167A JUMP JUMPDEST JUMPDEST ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT ISZERO PUSH2 0xAC9 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xB1CFF380 PUSH2 0x960 PUSH2 0x860 JUMP JUMPDEST DUP7 DUP6 DUP6 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x982 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1898 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x9BD JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x9BA SWAP2 SWAP1 PUSH2 0x190C JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xA3E JUMPI RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x9EB JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x9F0 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH0 DUP2 MLOAD SUB PUSH2 0xA36 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA2D SWAP2 SWAP1 PUSH2 0x108E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0xB1CFF380 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0xAC7 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xABE SWAP2 SWAP1 PUSH2 0x108E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH1 0x1 PUSH2 0xAF3 DUP5 PUSH2 0xD6B JUMP JUMPDEST ADD SWAP1 POP PUSH0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xB11 JUMPI PUSH2 0xB10 PUSH2 0x1185 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xB43 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 DUP3 PUSH1 0x20 ADD DUP3 ADD SWAP1 POP JUMPDEST PUSH1 0x1 ISZERO PUSH2 0xBA4 JUMPI DUP1 DUP1 PUSH1 0x1 SWAP1 SUB SWAP2 POP POP PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DUP2 PUSH2 0xB99 JUMPI PUSH2 0xB98 PUSH2 0x1937 JUMP JUMPDEST JUMPDEST DIV SWAP5 POP PUSH0 DUP6 SUB PUSH2 0xB50 JUMPI JUMPDEST DUP2 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xBB9 DUP4 PUSH2 0x86F JUMP JUMPDEST SWAP1 POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xC29 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC20 SWAP1 PUSH2 0x1717 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0xC6C JUMPI POP PUSH2 0xC6A DUP2 DUP4 PUSH2 0x7D1 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0xCAE JUMPI DUP2 PUSH1 0x40 MLOAD PUSH32 0xA9FBF51F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCA5 SWAP2 SWAP1 PUSH2 0x108E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP4 PUSH2 0x4DA PUSH0 DUP6 PUSH2 0xFFFF AND PUSH2 0xFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP3 PUSH2 0xFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xA9D294FD4BD42BB30E96CBA2B478D149A783FBA3C729B1E5C42BEC89D95B85A PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 POP PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 LT PUSH2 0xDC7 JUMPI PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 DUP2 PUSH2 0xDBD JUMPI PUSH2 0xDBC PUSH2 0x1937 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x40 DUP2 ADD SWAP1 POP JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0xE04 JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DUP2 PUSH2 0xDFA JUMPI PUSH2 0xDF9 PUSH2 0x1937 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x20 DUP2 ADD SWAP1 POP JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0xE33 JUMPI PUSH7 0x2386F26FC10000 DUP4 DUP2 PUSH2 0xE29 JUMPI PUSH2 0xE28 PUSH2 0x1937 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x10 DUP2 ADD SWAP1 POP JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0xE5C JUMPI PUSH4 0x5F5E100 DUP4 DUP2 PUSH2 0xE52 JUMPI PUSH2 0xE51 PUSH2 0x1937 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x8 DUP2 ADD SWAP1 POP JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0xE81 JUMPI PUSH2 0x2710 DUP4 DUP2 PUSH2 0xE77 JUMPI PUSH2 0xE76 PUSH2 0x1937 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x4 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0xEA4 JUMPI PUSH1 0x64 DUP4 DUP2 PUSH2 0xE9A JUMPI PUSH2 0xE99 PUSH2 0x1937 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x2 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0xEB3 JUMPI PUSH1 0x1 DUP2 ADD SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xEF0 DUP2 PUSH2 0xEBC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xF09 PUSH0 DUP4 ADD DUP5 PUSH2 0xEE7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xF49 DUP3 PUSH2 0xF20 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF59 DUP2 PUSH2 0xF3F JUMP JUMPDEST DUP2 EQ PUSH2 0xF63 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xF74 DUP2 PUSH2 0xF50 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF90 DUP2 PUSH2 0xF7A JUMP JUMPDEST DUP2 EQ PUSH2 0xF9A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xFAB DUP2 PUSH2 0xF87 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xFC8 JUMPI PUSH2 0xFC7 PUSH2 0xF18 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xFD5 DUP7 DUP3 DUP8 ADD PUSH2 0xF66 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xFE6 DUP7 DUP3 DUP8 ADD PUSH2 0xF66 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xFF7 DUP7 DUP3 DUP8 ADD PUSH2 0xF9D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1016 JUMPI PUSH2 0x1015 PUSH2 0xF18 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1023 DUP5 DUP3 DUP6 ADD PUSH2 0xF66 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1035 DUP2 PUSH2 0xF7A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x104E PUSH0 DUP4 ADD DUP5 PUSH2 0x102C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1069 JUMPI PUSH2 0x1068 PUSH2 0xF18 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1076 DUP5 DUP3 DUP6 ADD PUSH2 0xF9D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1088 DUP2 PUSH2 0xF3F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x10A1 PUSH0 DUP4 ADD DUP5 PUSH2 0x107F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH32 0xFFFFFFFFFFFFFFFFFFFF00000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x10DB DUP2 PUSH2 0x10A7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x10F4 PUSH0 DUP4 ADD DUP5 PUSH2 0x10D2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x110E DUP2 PUSH2 0x10FA JUMP JUMPDEST DUP2 EQ PUSH2 0x1118 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1129 DUP2 PUSH2 0x1105 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1145 JUMPI PUSH2 0x1144 PUSH2 0xF18 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1152 DUP6 DUP3 DUP7 ADD PUSH2 0xF66 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1163 DUP6 DUP3 DUP7 ADD PUSH2 0x111B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x11BB DUP3 PUSH2 0x1175 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x11DA JUMPI PUSH2 0x11D9 PUSH2 0x1185 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x11EC PUSH2 0xF0F JUMP JUMPDEST SWAP1 POP PUSH2 0x11F8 DUP3 DUP3 PUSH2 0x11B2 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1217 JUMPI PUSH2 0x1216 PUSH2 0x1185 JUMP JUMPDEST JUMPDEST PUSH2 0x1220 DUP3 PUSH2 0x1175 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x124D PUSH2 0x1248 DUP5 PUSH2 0x11FD JUMP JUMPDEST PUSH2 0x11E3 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1269 JUMPI PUSH2 0x1268 PUSH2 0x1171 JUMP JUMPDEST JUMPDEST PUSH2 0x1274 DUP5 DUP3 DUP6 PUSH2 0x122D JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1290 JUMPI PUSH2 0x128F PUSH2 0x116D JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x12A0 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x123B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x12C1 JUMPI PUSH2 0x12C0 PUSH2 0xF18 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x12CE DUP8 DUP3 DUP9 ADD PUSH2 0xF66 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x12DF DUP8 DUP3 DUP9 ADD PUSH2 0xF66 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x12F0 DUP8 DUP3 DUP9 ADD PUSH2 0xF9D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1311 JUMPI PUSH2 0x1310 PUSH2 0xF1C JUMP JUMPDEST JUMPDEST PUSH2 0x131D DUP8 DUP3 DUP9 ADD PUSH2 0x127C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x1346 JUMPI PUSH2 0x1345 PUSH2 0x116D JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1363 JUMPI PUSH2 0x1362 PUSH2 0x1329 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x137F JUMPI PUSH2 0x137E PUSH2 0x132D JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0x80 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x139F JUMPI PUSH2 0x139E PUSH2 0xF18 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x13AC DUP9 DUP3 DUP10 ADD PUSH2 0xF66 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x13BD DUP9 DUP3 DUP10 ADD PUSH2 0xF66 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x13CE DUP9 DUP3 DUP10 ADD PUSH2 0xF9D JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x13EF JUMPI PUSH2 0x13EE PUSH2 0xF1C JUMP JUMPDEST JUMPDEST PUSH2 0x13FB DUP9 DUP3 DUP10 ADD PUSH2 0x1331 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x143E DUP2 PUSH2 0x140A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1457 PUSH0 DUP4 ADD DUP5 PUSH2 0x1435 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1494 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1479 JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x14A9 DUP3 PUSH2 0x145D JUMP JUMPDEST PUSH2 0x14B3 DUP2 DUP6 PUSH2 0x1467 JUMP JUMPDEST SWAP4 POP PUSH2 0x14C3 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1477 JUMP JUMPDEST PUSH2 0x14CC DUP2 PUSH2 0x1175 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x14EF DUP2 DUP5 PUSH2 0x149F JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x150D JUMPI PUSH2 0x150C PUSH2 0xF18 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x151A DUP6 DUP3 DUP7 ADD PUSH2 0xF66 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x152B DUP6 DUP3 DUP7 ADD PUSH2 0xF9D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x154B JUMPI PUSH2 0x154A PUSH2 0xF18 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1558 DUP6 DUP3 DUP7 ADD PUSH2 0xF66 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1569 DUP6 DUP3 DUP7 ADD PUSH2 0xF66 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x157C DUP2 PUSH2 0x10FA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1595 PUSH0 DUP4 ADD DUP5 PUSH2 0x1573 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x15C7 PUSH2 0x15C2 PUSH2 0x15BD DUP5 PUSH2 0xF7A JUMP JUMPDEST PUSH2 0x15A4 JUMP JUMPDEST PUSH2 0x159B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x15D7 DUP2 PUSH2 0x15AD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x15F0 PUSH0 DUP4 ADD DUP7 PUSH2 0x107F JUMP JUMPDEST PUSH2 0x15FD PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x15CE JUMP JUMPDEST PUSH2 0x160A PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x107F JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x54686520696E70757420616464726573732063616E6E6F74206265207A65726F PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1646 PUSH1 0x20 DUP4 PUSH2 0x1467 JUMP JUMPDEST SWAP2 POP PUSH2 0x1651 DUP3 PUSH2 0x1612 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1673 DUP2 PUSH2 0x163A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x5468652061646472657373206F6620746865206F776E657220616E6420746865 PUSH0 DUP3 ADD MSTORE PUSH32 0x206F70657261746F72206D75737420626520646966666572656E740000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1701 PUSH1 0x3B DUP4 PUSH2 0x1467 JUMP JUMPDEST SWAP2 POP PUSH2 0x170C DUP3 PUSH2 0x16A7 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x172E DUP2 PUSH2 0x16F5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1749 DUP3 PUSH2 0x145D JUMP JUMPDEST PUSH2 0x1753 DUP2 DUP6 PUSH2 0x1735 JUMP JUMPDEST SWAP4 POP PUSH2 0x1763 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1477 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x177A DUP3 DUP6 PUSH2 0x173F JUMP JUMPDEST SWAP2 POP PUSH2 0x1786 DUP3 DUP5 PUSH2 0x173F JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x54686520494420656E746572656420697320696E76616C69642E204974206D75 PUSH0 DUP3 ADD MSTORE PUSH32 0x737420626520696E207468697320696E74657276616C2030203C206964203C3D PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x2063757272656E7420746F6B656E730000000000000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1812 PUSH1 0x4F DUP4 PUSH2 0x1467 JUMP JUMPDEST SWAP2 POP PUSH2 0x181D DUP3 PUSH2 0x1792 JUMP JUMPDEST PUSH1 0x60 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x183F DUP2 PUSH2 0x1806 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x186A DUP3 PUSH2 0x1846 JUMP JUMPDEST PUSH2 0x1874 DUP2 DUP6 PUSH2 0x1850 JUMP JUMPDEST SWAP4 POP PUSH2 0x1884 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1477 JUMP JUMPDEST PUSH2 0x188D DUP2 PUSH2 0x1175 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x18AB PUSH0 DUP4 ADD DUP8 PUSH2 0x107F JUMP JUMPDEST PUSH2 0x18B8 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x107F JUMP JUMPDEST PUSH2 0x18C5 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x102C JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x18D7 DUP2 DUP5 PUSH2 0x1860 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x18EB DUP2 PUSH2 0x140A JUMP JUMPDEST DUP2 EQ PUSH2 0x18F5 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1906 DUP2 PUSH2 0x18E2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1921 JUMPI PUSH2 0x1920 PUSH2 0xF18 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x192E DUP5 DUP3 DUP6 ADD PUSH2 0x18F8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4F 0xA5 SWAP3 ADDMOD SLOAD PUSH3 0x7380DD SHL 0xA9 SWAP6 0xD4 SHL 0xCF LOG2 0xD AND PUSH9 0xA2FBD3ADE2DB92878 0x25 PUSH7 0x4E1D64736F6C63 NUMBER STOP ADDMOD EQ STOP CALLER ",
							"sourceMap": "400:5531:6:-:0;;;1340:104;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1403:5;1395;;:13;;;;;;;;;;;;;;;;;;1429:7;1419;;:17;;;;;;;;;;;;;;;;;;1340:104;;400:5531;;88:117:8;197:1;194;187:12;334:150;371:7;411:66;404:5;400:78;389:89;;334:150;;;:::o;490:122::-;563:24;581:5;563:24;:::i;:::-;556:5;553:35;543:63;;602:1;599;592:12;543:63;490:122;:::o;618:143::-;675:5;706:6;700:13;691:22;;722:33;749:5;722:33;:::i;:::-;618:143;;;;:::o;767:150::-;804:7;844:66;837:5;833:78;822:89;;767:150;;;:::o;923:122::-;996:24;1014:5;996:24;:::i;:::-;989:5;986:35;976:63;;1035:1;1032;1025:12;976:63;923:122;:::o;1051:143::-;1108:5;1139:6;1133:13;1124:22;;1155:33;1182:5;1155:33;:::i;:::-;1051:143;;;;:::o;1200:507::-;1279:6;1287;1336:2;1324:9;1315:7;1311:23;1307:32;1304:119;;;1342:79;;:::i;:::-;1304:119;1462:1;1487:64;1543:7;1534:6;1523:9;1519:22;1487:64;:::i;:::-;1477:74;;1433:128;1600:2;1626:64;1682:7;1673:6;1662:9;1658:22;1626:64;:::i;:::-;1616:74;;1571:129;1200:507;;;;;:::o;400:5531:6:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_aprove_2257": {
									"entryPoint": 2991,
									"id": 2257,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_baseURI_2289": {
									"entryPoint": 2767,
									"id": 2289,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_checkOnERC721Received_2352": {
									"entryPoint": 2333,
									"id": 2352,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_msgSender_401": {
									"entryPoint": 2144,
									"id": 401,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_requireOwned_2281": {
									"entryPoint": 2159,
									"id": 2281,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_update_2207": {
									"entryPoint": 2151,
									"id": 2207,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@approve_2032": {
									"entryPoint": 1979,
									"id": 2032,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@balanceOf_1970": {
									"entryPoint": 1003,
									"id": 1970,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getApproved_2048": {
									"entryPoint": 1245,
									"id": 2048,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@isApprovedForAll_2108": {
									"entryPoint": 2001,
									"id": 2108,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@log10_1548": {
									"entryPoint": 3435,
									"id": 1548,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@name_1938": {
									"entryPoint": 697,
									"id": 1938,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@onERC721Received_2366": {
									"entryPoint": 1863,
									"id": 2366,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"@ownerOf_1982": {
									"entryPoint": 1228,
									"id": 1982,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@safeTransferFrom_2170": {
									"entryPoint": 717,
									"id": 2170,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@safeTransferFrom_2195": {
									"entryPoint": 1834,
									"id": 2195,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@setApprovalForAll_2092": {
									"entryPoint": 1342,
									"id": 2092,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@symbol_1946": {
									"entryPoint": 1321,
									"id": 1946,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@toString_487": {
									"entryPoint": 2789,
									"id": 487,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@tokenURI_2017": {
									"entryPoint": 1873,
									"id": 2017,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@transferFrom_2153": {
									"entryPoint": 748,
									"id": 2153,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"abi_decode_available_length_t_bytes_memory_ptr": {
									"entryPoint": 4667,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 3942,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool": {
									"entryPoint": 4379,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4_fromMemory": {
									"entryPoint": 6392,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes_calldata_ptr": {
									"entryPoint": 4913,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_t_bytes_memory_ptr": {
									"entryPoint": 4732,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint16": {
									"entryPoint": 3997,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 4097,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 5429,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint16": {
									"entryPoint": 4017,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_addresst_uint16t_bytes_calldata_ptr": {
									"entryPoint": 4998,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_decode_tuple_t_addresst_addresst_uint16t_bytes_memory_ptr": {
									"entryPoint": 4777,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 4399,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint16": {
									"entryPoint": 5367,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4_fromMemory": {
									"entryPoint": 6412,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint16": {
									"entryPoint": 4180,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 4223,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 5491,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes10_to_t_bytes10_fromStack": {
									"entryPoint": 4306,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes20_to_t_bytes20_fromStack": {
									"entryPoint": 3815,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes4_to_t_bytes4_fromStack": {
									"entryPoint": 5173,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 6240,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5279,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 5951,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_04ac8f36c142f1891048ed77339b8705d10008afae0986d82fa07e197d36aa25_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5877,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_a0ed4e8cad639975e700098d07f166902169c365243b6972750486c0b152b957_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5690,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_d01a6ddc51808b791794e2bc370247f685df6f3cfeea0cd79f01cec6a9ccb52f_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6150,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint16_to_t_uint16_fromStack": {
									"entryPoint": 4140,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint16_to_t_uint256_fromStack": {
									"entryPoint": 5582,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 5999,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 4238,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint16_t_bytes_memory_ptr__to_t_address_t_address_t_uint16_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 6296,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint16_t_address__to_t_address_t_uint256_t_address__fromStack_reversed": {
									"entryPoint": 5597,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 5506,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes10__to_t_bytes10__fromStack_reversed": {
									"entryPoint": 4321,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes20__to_t_bytes20__fromStack_reversed": {
									"entryPoint": 3830,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed": {
									"entryPoint": 5188,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5335,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_04ac8f36c142f1891048ed77339b8705d10008afae0986d82fa07e197d36aa25__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5911,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_a0ed4e8cad639975e700098d07f166902169c365243b6972750486c0b152b957__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5724,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d01a6ddc51808b791794e2bc370247f685df6f3cfeea0cd79f01cec6a9ccb52f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6184,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint16__to_t_uint16__fromStack_reversed": {
									"entryPoint": 4155,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 4579,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 3855,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_bytes_memory_ptr": {
									"entryPoint": 4605,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 6214,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 5213,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 6224,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 5223,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 5941,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 3903,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 4346,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes10": {
									"entryPoint": 4263,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes20": {
									"entryPoint": 3772,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes4": {
									"entryPoint": 5130,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint16": {
									"entryPoint": 3962,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 3872,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 5531,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint16_to_t_uint256": {
									"entryPoint": 5549,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_calldata_to_memory_with_cleanup": {
									"entryPoint": 4653,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 5239,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"finalize_allocation": {
									"entryPoint": 4530,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 5540,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x12": {
									"entryPoint": 6455,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 5754,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 4485,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490": {
									"entryPoint": 4905,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 4461,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef": {
									"entryPoint": 4909,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 4465,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 3868,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 3864,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 4469,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_04ac8f36c142f1891048ed77339b8705d10008afae0986d82fa07e197d36aa25": {
									"entryPoint": 5799,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_a0ed4e8cad639975e700098d07f166902169c365243b6972750486c0b152b957": {
									"entryPoint": 5650,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_d01a6ddc51808b791794e2bc370247f685df6f3cfeea0cd79f01cec6a9ccb52f": {
									"entryPoint": 6034,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 3920,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 4357,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes4": {
									"entryPoint": 6370,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint16": {
									"entryPoint": 3975,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:20310:8",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "52:105:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "62:89:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "77:5:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "84:66:8",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "73:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "73:78:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "34:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "44:7:8",
														"type": ""
													}
												],
												"src": "7:150:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "228:53:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "245:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "268:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bytes20",
																			"nodeType": "YulIdentifier",
																			"src": "250:17:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "250:24:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "238:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "238:37:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "238:37:8"
														}
													]
												},
												"name": "abi_encode_t_bytes20_to_t_bytes20_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "216:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "223:3:8",
														"type": ""
													}
												],
												"src": "163:118:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "385:124:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "395:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "407:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "418:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "403:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "403:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "395:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "475:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "488:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "499:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "484:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "484:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes20_to_t_bytes20_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "431:43:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "431:71:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "431:71:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes20__to_t_bytes20__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "357:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "369:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "380:4:8",
														"type": ""
													}
												],
												"src": "287:222:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "555:35:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "565:19:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "581:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "575:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "575:9:8"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "565:6:8"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "548:6:8",
														"type": ""
													}
												],
												"src": "515:75:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "685:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "702:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "705:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "695:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "695:12:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "695:12:8"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "596:117:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "808:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "825:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "828:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "818:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "818:12:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "818:12:8"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "719:117:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "887:81:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "897:65:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "912:5:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "919:42:8",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "908:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "908:54:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "897:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "869:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "879:7:8",
														"type": ""
													}
												],
												"src": "842:126:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1019:51:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1029:35:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1058:5:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "1040:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1040:24:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1029:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1001:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1011:7:8",
														"type": ""
													}
												],
												"src": "974:96:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1119:79:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1176:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1185:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1188:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1178:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1178:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1178:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1142:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1167:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "1149:17:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1149:24:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1139:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1139:35:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1132:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1132:43:8"
															},
															"nodeType": "YulIf",
															"src": "1129:63:8"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1112:5:8",
														"type": ""
													}
												],
												"src": "1076:122:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1256:87:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1266:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1288:6:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1275:12:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1275:20:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1266:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1331:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "1304:26:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1304:33:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1304:33:8"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1234:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1242:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1250:5:8",
														"type": ""
													}
												],
												"src": "1204:139:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1393:45:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1403:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1418:5:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1425:6:8",
																		"type": "",
																		"value": "0xffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1414:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1414:18:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1403:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1375:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1385:7:8",
														"type": ""
													}
												],
												"src": "1349:89:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1486:78:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1542:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1551:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1554:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1544:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1544:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1544:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1509:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1533:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint16",
																					"nodeType": "YulIdentifier",
																					"src": "1516:16:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1516:23:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1506:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1506:34:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1499:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1499:42:8"
															},
															"nodeType": "YulIf",
															"src": "1496:62:8"
														}
													]
												},
												"name": "validator_revert_t_uint16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1479:5:8",
														"type": ""
													}
												],
												"src": "1444:120:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1621:86:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1631:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1653:6:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1640:12:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1640:20:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1631:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1695:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint16",
																	"nodeType": "YulIdentifier",
																	"src": "1669:25:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1669:32:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1669:32:8"
														}
													]
												},
												"name": "abi_decode_t_uint16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1599:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1607:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1615:5:8",
														"type": ""
													}
												],
												"src": "1570:137:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1812:518:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1858:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1860:77:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1860:79:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1860:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1833:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1842:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1829:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1829:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1854:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1825:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1825:32:8"
															},
															"nodeType": "YulIf",
															"src": "1822:119:8"
														},
														{
															"nodeType": "YulBlock",
															"src": "1951:117:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1966:15:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1980:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1970:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1995:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2030:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2041:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2026:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2026:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2050:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2005:20:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2005:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1995:6:8"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2078:118:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2093:16:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2107:2:8",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2097:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2123:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2158:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2169:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2154:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2154:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2178:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2133:20:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2133:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "2123:6:8"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2206:117:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2221:16:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2235:2:8",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2225:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2251:62:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2285:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2296:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2281:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2281:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2305:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint16",
																			"nodeType": "YulIdentifier",
																			"src": "2261:19:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2261:52:8"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "2251:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1766:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1777:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1789:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1797:6:8",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1805:6:8",
														"type": ""
													}
												],
												"src": "1713:617:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2402:263:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2448:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2450:77:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2450:79:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2450:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2423:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2432:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2419:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2419:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2444:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2415:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2415:32:8"
															},
															"nodeType": "YulIf",
															"src": "2412:119:8"
														},
														{
															"nodeType": "YulBlock",
															"src": "2541:117:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2556:15:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2570:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2560:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2585:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2620:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2631:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2616:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2616:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2640:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2595:20:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2595:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2585:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2372:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2383:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2395:6:8",
														"type": ""
													}
												],
												"src": "2336:329:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2734:52:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2751:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2773:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint16",
																			"nodeType": "YulIdentifier",
																			"src": "2756:16:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2756:23:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2744:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2744:36:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2744:36:8"
														}
													]
												},
												"name": "abi_encode_t_uint16_to_t_uint16_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2722:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2729:3:8",
														"type": ""
													}
												],
												"src": "2671:115:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2888:122:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2898:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2910:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2921:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2906:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2906:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2898:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2976:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2989:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3000:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2985:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2985:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint16_to_t_uint16_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2934:41:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2934:69:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2934:69:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint16__to_t_uint16__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2860:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2872:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2883:4:8",
														"type": ""
													}
												],
												"src": "2792:218:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3081:262:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3127:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "3129:77:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3129:79:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3129:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3102:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3111:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3098:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3098:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3123:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3094:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3094:32:8"
															},
															"nodeType": "YulIf",
															"src": "3091:119:8"
														},
														{
															"nodeType": "YulBlock",
															"src": "3220:116:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3235:15:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3249:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3239:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3264:62:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3298:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3309:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3294:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3294:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3318:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint16",
																			"nodeType": "YulIdentifier",
																			"src": "3274:19:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3274:52:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3264:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3051:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3062:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3074:6:8",
														"type": ""
													}
												],
												"src": "3016:327:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3414:53:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3431:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3454:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "3436:17:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3436:24:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3424:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3424:37:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3424:37:8"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3402:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3409:3:8",
														"type": ""
													}
												],
												"src": "3349:118:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3571:124:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3581:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3593:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3604:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3589:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3589:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3581:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3661:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3674:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3685:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3670:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3670:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3617:43:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3617:71:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3617:71:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3543:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3555:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3566:4:8",
														"type": ""
													}
												],
												"src": "3473:222:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3746:105:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3756:89:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3771:5:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3778:66:8",
																		"type": "",
																		"value": "0xffffffffffffffffffff00000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "3767:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3767:78:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "3756:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3728:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "3738:7:8",
														"type": ""
													}
												],
												"src": "3701:150:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3922:53:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3939:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3962:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bytes10",
																			"nodeType": "YulIdentifier",
																			"src": "3944:17:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3944:24:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3932:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3932:37:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3932:37:8"
														}
													]
												},
												"name": "abi_encode_t_bytes10_to_t_bytes10_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3910:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3917:3:8",
														"type": ""
													}
												],
												"src": "3857:118:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4079:124:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4089:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4101:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4112:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4097:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4097:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4089:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4169:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4182:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4193:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4178:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4178:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes10_to_t_bytes10_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4125:43:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4125:71:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4125:71:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes10__to_t_bytes10__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4051:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4063:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4074:4:8",
														"type": ""
													}
												],
												"src": "3981:222:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4251:48:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4261:32:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4286:5:8"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "4279:6:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4279:13:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4272:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4272:21:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "4261:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4233:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "4243:7:8",
														"type": ""
													}
												],
												"src": "4209:90:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4345:76:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4399:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4408:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4411:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4401:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4401:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4401:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4368:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "4390:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "4375:14:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4375:21:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "4365:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4365:32:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4358:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4358:40:8"
															},
															"nodeType": "YulIf",
															"src": "4355:60:8"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4338:5:8",
														"type": ""
													}
												],
												"src": "4305:116:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4476:84:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4486:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "4508:6:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4495:12:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4495:20:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "4486:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4548:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "4524:23:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4524:30:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4524:30:8"
														}
													]
												},
												"name": "abi_decode_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "4454:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4462:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4470:5:8",
														"type": ""
													}
												],
												"src": "4427:133:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4646:388:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4692:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "4694:77:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4694:79:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4694:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4667:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4676:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4663:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4663:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4688:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4659:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4659:32:8"
															},
															"nodeType": "YulIf",
															"src": "4656:119:8"
														},
														{
															"nodeType": "YulBlock",
															"src": "4785:117:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4800:15:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4814:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4804:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4829:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4864:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4875:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4860:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4860:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4884:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4839:20:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4839:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "4829:6:8"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4912:115:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4927:16:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4941:2:8",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4931:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4957:60:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4989:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5000:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4985:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4985:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5009:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "4967:17:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4967:50:8"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "4957:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4608:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4619:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4631:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4639:6:8",
														"type": ""
													}
												],
												"src": "4566:468:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5129:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5146:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5149:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "5139:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5139:12:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5139:12:8"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nodeType": "YulFunctionDefinition",
												"src": "5040:117:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5252:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5269:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5272:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "5262:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5262:12:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5262:12:8"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nodeType": "YulFunctionDefinition",
												"src": "5163:117:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5334:54:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5344:38:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5362:5:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5369:2:8",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5358:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5358:14:8"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5378:2:8",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "5374:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5374:7:8"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "5354:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5354:28:8"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "5344:6:8"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5317:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "5327:6:8",
														"type": ""
													}
												],
												"src": "5286:102:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5422:152:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5439:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5442:77:8",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5432:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5432:88:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5432:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5536:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5539:4:8",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5529:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5529:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5529:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5560:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5563:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "5553:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5553:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5553:15:8"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "5394:180:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5623:238:8",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5633:58:8",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "5655:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nodeType": "YulIdentifier",
																				"src": "5685:4:8"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "5663:21:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5663:27:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5651:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5651:40:8"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "5637:10:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5802:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "5804:16:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5804:18:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5804:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "5745:10:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5757:18:8",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "5742:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5742:34:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "5781:10:8"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "5793:6:8"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "5778:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5778:22:8"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "5739:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5739:62:8"
															},
															"nodeType": "YulIf",
															"src": "5736:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5840:2:8",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "5844:10:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5833:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5833:22:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5833:22:8"
														}
													]
												},
												"name": "finalize_allocation",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "5609:6:8",
														"type": ""
													},
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "5617:4:8",
														"type": ""
													}
												],
												"src": "5580:281:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5908:88:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5918:30:8",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nodeType": "YulIdentifier",
																	"src": "5928:18:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5928:20:8"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "5918:6:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "5977:6:8"
																	},
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "5985:4:8"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "5957:19:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5957:33:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5957:33:8"
														}
													]
												},
												"name": "allocate_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "5892:4:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "5901:6:8",
														"type": ""
													}
												],
												"src": "5867:129:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6068:241:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6173:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "6175:16:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6175:18:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6175:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6145:6:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6153:18:8",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "6142:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6142:30:8"
															},
															"nodeType": "YulIf",
															"src": "6139:56:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6205:37:8",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6235:6:8"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nodeType": "YulIdentifier",
																	"src": "6213:21:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6213:29:8"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "6205:4:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6279:23:8",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "6291:4:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6297:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6287:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6287:15:8"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "6279:4:8"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "6052:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "6063:4:8",
														"type": ""
													}
												],
												"src": "6002:307:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6379:82:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "6402:3:8"
																	},
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "6407:3:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6412:6:8"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "6389:12:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6389:30:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6389:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "6439:3:8"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "6444:6:8"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6435:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6435:16:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6453:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6428:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6428:27:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6428:27:8"
														}
													]
												},
												"name": "copy_calldata_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "6361:3:8",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "6366:3:8",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "6371:6:8",
														"type": ""
													}
												],
												"src": "6315:146:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6550:340:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6560:74:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "6626:6:8"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_bytes_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "6585:40:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6585:48:8"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "6569:15:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6569:65:8"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "6560:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "6650:5:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6657:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6643:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6643:21:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6643:21:8"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6673:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "6688:5:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6695:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6684:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6684:16:8"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "6677:3:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6738:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nodeType": "YulIdentifier",
																				"src": "6740:77:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6740:79:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6740:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "6719:3:8"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "6724:6:8"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6715:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6715:16:8"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "6733:3:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "6712:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6712:25:8"
															},
															"nodeType": "YulIf",
															"src": "6709:112:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "6867:3:8"
																	},
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "6872:3:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6877:6:8"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "6830:36:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6830:54:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6830:54:8"
														}
													]
												},
												"name": "abi_decode_available_length_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "6523:3:8",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "6528:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6536:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "6544:5:8",
														"type": ""
													}
												],
												"src": "6467:423:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6970:277:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7019:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "7021:77:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7021:79:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7021:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6998:6:8"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "7006:4:8",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6994:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6994:17:8"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "7013:3:8"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "6990:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6990:27:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "6983:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6983:35:8"
															},
															"nodeType": "YulIf",
															"src": "6980:122:8"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7111:34:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "7138:6:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "7125:12:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7125:20:8"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "7115:6:8",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7154:87:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "7214:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7222:4:8",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7210:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7210:17:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7229:6:8"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "7237:3:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_bytes_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "7163:46:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7163:78:8"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "7154:5:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "6948:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6956:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "6964:5:8",
														"type": ""
													}
												],
												"src": "6909:338:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7378:816:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7425:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "7427:77:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7427:79:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7427:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7399:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7408:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7395:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7395:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7420:3:8",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "7391:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7391:33:8"
															},
															"nodeType": "YulIf",
															"src": "7388:120:8"
														},
														{
															"nodeType": "YulBlock",
															"src": "7518:117:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "7533:15:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7547:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "7537:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "7562:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "7597:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "7608:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7593:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7593:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7617:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "7572:20:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7572:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "7562:6:8"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "7645:118:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "7660:16:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7674:2:8",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "7664:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "7690:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "7725:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "7736:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7721:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7721:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7745:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "7700:20:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7700:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "7690:6:8"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "7773:117:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "7788:16:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7802:2:8",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "7792:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "7818:62:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "7852:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "7863:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7848:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7848:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7872:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint16",
																			"nodeType": "YulIdentifier",
																			"src": "7828:19:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7828:52:8"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "7818:6:8"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "7900:287:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "7915:46:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "7946:9:8"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "7957:2:8",
																						"type": "",
																						"value": "96"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7942:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7942:18:8"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "7929:12:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7929:32:8"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "7919:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "8008:83:8",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "8010:77:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8010:79:8"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "8010:79:8"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "7980:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7988:18:8",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "7977:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7977:30:8"
																	},
																	"nodeType": "YulIf",
																	"src": "7974:117:8"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "8105:72:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "8149:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "8160:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "8145:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8145:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "8169:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "8115:29:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8115:62:8"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nodeType": "YulIdentifier",
																			"src": "8105:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint16t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7324:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "7335:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7347:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "7355:6:8",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "7363:6:8",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "7371:6:8",
														"type": ""
													}
												],
												"src": "7253:941:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8289:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8306:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8309:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "8299:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8299:12:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8299:12:8"
														}
													]
												},
												"name": "revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490",
												"nodeType": "YulFunctionDefinition",
												"src": "8200:117:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8412:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8429:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8432:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "8422:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8422:12:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8422:12:8"
														}
													]
												},
												"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
												"nodeType": "YulFunctionDefinition",
												"src": "8323:117:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8533:478:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8582:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "8584:77:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8584:79:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8584:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "8561:6:8"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "8569:4:8",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "8557:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8557:17:8"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "8576:3:8"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "8553:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8553:27:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "8546:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8546:35:8"
															},
															"nodeType": "YulIf",
															"src": "8543:122:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8674:30:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "8697:6:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "8684:12:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8684:20:8"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "8674:6:8"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8747:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490",
																				"nodeType": "YulIdentifier",
																				"src": "8749:77:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8749:79:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8749:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "8719:6:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8727:18:8",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "8716:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8716:30:8"
															},
															"nodeType": "YulIf",
															"src": "8713:117:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8839:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "8855:6:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8863:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8851:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8851:17:8"
															},
															"variableNames": [
																{
																	"name": "arrayPos",
																	"nodeType": "YulIdentifier",
																	"src": "8839:8:8"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8922:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
																				"nodeType": "YulIdentifier",
																				"src": "8924:77:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8924:79:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8924:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "arrayPos",
																				"nodeType": "YulIdentifier",
																				"src": "8887:8:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "8901:6:8"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "8909:4:8",
																						"type": "",
																						"value": "0x01"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nodeType": "YulIdentifier",
																					"src": "8897:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8897:17:8"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8883:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8883:32:8"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "8917:3:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "8880:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8880:41:8"
															},
															"nodeType": "YulIf",
															"src": "8877:128:8"
														}
													]
												},
												"name": "abi_decode_t_bytes_calldata_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "8500:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "8508:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "arrayPos",
														"nodeType": "YulTypedName",
														"src": "8516:8:8",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "8526:6:8",
														"type": ""
													}
												],
												"src": "8459:552:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9152:826:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9199:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "9201:77:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9201:79:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9201:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9173:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9182:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9169:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9169:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9194:3:8",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "9165:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9165:33:8"
															},
															"nodeType": "YulIf",
															"src": "9162:120:8"
														},
														{
															"nodeType": "YulBlock",
															"src": "9292:117:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "9307:15:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9321:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "9311:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "9336:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9371:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "9382:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9367:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9367:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9391:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "9346:20:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9346:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "9336:6:8"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "9419:118:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "9434:16:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9448:2:8",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "9438:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "9464:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9499:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "9510:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9495:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9495:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9519:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "9474:20:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9474:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "9464:6:8"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "9547:117:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "9562:16:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9576:2:8",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "9566:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "9592:62:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9626:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "9637:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9622:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9622:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9646:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint16",
																			"nodeType": "YulIdentifier",
																			"src": "9602:19:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9602:52:8"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "9592:6:8"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "9674:297:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "9689:46:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9720:9:8"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "9731:2:8",
																						"type": "",
																						"value": "96"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9716:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9716:18:8"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "9703:12:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9703:32:8"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "9693:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "9782:83:8",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "9784:77:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "9784:79:8"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "9784:79:8"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "9754:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9762:18:8",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "9751:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9751:30:8"
																	},
																	"nodeType": "YulIf",
																	"src": "9748:117:8"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "9879:82:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9933:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "9944:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9929:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9929:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9953:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_calldata_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "9897:31:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9897:64:8"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nodeType": "YulIdentifier",
																			"src": "9879:6:8"
																		},
																		{
																			"name": "value4",
																			"nodeType": "YulIdentifier",
																			"src": "9887:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint16t_bytes_calldata_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9090:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "9101:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9113:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "9121:6:8",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "9129:6:8",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "9137:6:8",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "9145:6:8",
														"type": ""
													}
												],
												"src": "9017:961:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10028:105:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10038:89:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "10053:5:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10060:66:8",
																		"type": "",
																		"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "10049:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10049:78:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "10038:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10010:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "10020:7:8",
														"type": ""
													}
												],
												"src": "9984:149:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10202:52:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10219:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "10241:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bytes4",
																			"nodeType": "YulIdentifier",
																			"src": "10224:16:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10224:23:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10212:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10212:36:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10212:36:8"
														}
													]
												},
												"name": "abi_encode_t_bytes4_to_t_bytes4_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10190:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "10197:3:8",
														"type": ""
													}
												],
												"src": "10139:115:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10356:122:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10366:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10378:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10389:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10374:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10374:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10366:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "10444:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10457:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10468:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10453:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10453:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes4_to_t_bytes4_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10402:41:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10402:69:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10402:69:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10328:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "10340:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10351:4:8",
														"type": ""
													}
												],
												"src": "10260:218:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10543:40:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10554:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "10570:5:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "10564:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10564:12:8"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "10554:6:8"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10526:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "10536:6:8",
														"type": ""
													}
												],
												"src": "10484:99:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10685:73:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10702:3:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "10707:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10695:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10695:19:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10695:19:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10723:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10742:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10747:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10738:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10738:14:8"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "10723:11:8"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "10657:3:8",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "10662:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "10673:11:8",
														"type": ""
													}
												],
												"src": "10589:169:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10826:184:8",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10836:10:8",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "10845:1:8",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "10840:1:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10905:63:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "10930:3:8"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "10935:1:8"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "10926:3:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "10926:11:8"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "10949:3:8"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "10954:1:8"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "10945:3:8"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "10945:11:8"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "10939:5:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "10939:18:8"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "10919:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10919:39:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10919:39:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "10866:1:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "10869:6:8"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "10863:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10863:13:8"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "10877:19:8",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "10879:15:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "10888:1:8"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10891:2:8",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "10884:3:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10884:10:8"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "10879:1:8"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "10859:3:8",
																"statements": []
															},
															"src": "10855:113:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "10988:3:8"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "10993:6:8"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10984:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10984:16:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11002:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10977:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10977:27:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10977:27:8"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "10808:3:8",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "10813:3:8",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "10818:6:8",
														"type": ""
													}
												],
												"src": "10764:246:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11108:285:8",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11118:53:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "11165:5:8"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "11132:32:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11132:39:8"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "11122:6:8",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "11180:78:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11246:3:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "11251:6:8"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11187:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11187:71:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "11180:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "11306:5:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11313:4:8",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11302:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11302:16:8"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11320:3:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "11325:6:8"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "11267:34:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11267:65:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11267:65:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11341:46:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11352:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "11379:6:8"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "11357:21:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11357:29:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11348:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11348:39:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "11341:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "11089:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "11096:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "11104:3:8",
														"type": ""
													}
												],
												"src": "11016:377:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11517:195:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11527:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11539:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11550:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11535:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11535:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11527:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11574:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11585:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11570:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11570:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "11593:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11599:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "11589:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11589:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11563:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11563:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11563:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11619:86:8",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "11691:6:8"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "11700:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11627:63:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11627:78:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11619:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11489:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "11501:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11512:4:8",
														"type": ""
													}
												],
												"src": "11399:313:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11800:390:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11846:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "11848:77:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11848:79:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11848:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "11821:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11830:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "11817:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11817:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11842:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "11813:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11813:32:8"
															},
															"nodeType": "YulIf",
															"src": "11810:119:8"
														},
														{
															"nodeType": "YulBlock",
															"src": "11939:117:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "11954:15:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11968:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "11958:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "11983:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "12018:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "12029:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "12014:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "12014:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "12038:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "11993:20:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11993:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "11983:6:8"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "12066:117:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "12081:16:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12095:2:8",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "12085:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "12111:62:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "12145:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "12156:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "12141:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "12141:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "12165:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint16",
																			"nodeType": "YulIdentifier",
																			"src": "12121:19:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12121:52:8"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "12111:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11762:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "11773:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "11785:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "11793:6:8",
														"type": ""
													}
												],
												"src": "11718:472:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12279:391:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12325:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "12327:77:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12327:79:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12327:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "12300:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12309:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "12296:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12296:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12321:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "12292:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "12292:32:8"
															},
															"nodeType": "YulIf",
															"src": "12289:119:8"
														},
														{
															"nodeType": "YulBlock",
															"src": "12418:117:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "12433:15:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12447:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "12437:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "12462:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "12497:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "12508:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "12493:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "12493:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "12517:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "12472:20:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12472:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "12462:6:8"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "12545:118:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "12560:16:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12574:2:8",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "12564:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "12590:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "12625:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "12636:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "12621:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "12621:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "12645:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "12600:20:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12600:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "12590:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12241:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "12252:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "12264:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "12272:6:8",
														"type": ""
													}
												],
												"src": "12196:474:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12735:50:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12752:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "12772:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "12757:14:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12757:21:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12745:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "12745:34:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12745:34:8"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "12723:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "12730:3:8",
														"type": ""
													}
												],
												"src": "12676:109:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12883:118:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12893:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12905:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12916:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12901:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "12901:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12893:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "12967:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12980:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12991:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12976:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12976:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12929:37:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "12929:65:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12929:65:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12855:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "12867:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12878:4:8",
														"type": ""
													}
												],
												"src": "12791:210:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13052:32:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13062:16:8",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "13073:5:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "13062:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "13034:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "13044:7:8",
														"type": ""
													}
												],
												"src": "13007:77:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13122:28:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13132:12:8",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "13139:5:8"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "13132:3:8"
																}
															]
														}
													]
												},
												"name": "identity",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "13108:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "13118:3:8",
														"type": ""
													}
												],
												"src": "13090:60:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13215:81:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13225:65:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "13282:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint16",
																					"nodeType": "YulIdentifier",
																					"src": "13265:16:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "13265:23:8"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nodeType": "YulIdentifier",
																			"src": "13256:8:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13256:33:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "13238:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "13238:52:8"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "13225:9:8"
																}
															]
														}
													]
												},
												"name": "convert_t_uint16_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "13195:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "13205:9:8",
														"type": ""
													}
												],
												"src": "13156:140:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13366:65:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13383:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "13418:5:8"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_uint16_to_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "13388:29:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13388:36:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13376:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "13376:49:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13376:49:8"
														}
													]
												},
												"name": "abi_encode_t_uint16_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "13354:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "13361:3:8",
														"type": ""
													}
												],
												"src": "13302:129:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13590:287:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13600:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13612:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13623:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13608:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "13608:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13600:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "13680:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13693:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13704:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13689:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13689:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13636:43:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "13636:71:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13636:71:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "13760:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13773:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13784:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13769:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13769:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint16_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13717:42:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "13717:71:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13717:71:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "13842:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13855:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13866:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13851:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13851:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13798:43:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "13798:72:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13798:72:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint16_t_address__to_t_address_t_uint256_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13546:9:8",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "13558:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "13566:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "13574:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13585:4:8",
														"type": ""
													}
												],
												"src": "13437:440:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13989:76:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "14011:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14019:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14007:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14007:14:8"
																	},
																	{
																		"hexValue": "54686520696e70757420616464726573732063616e6e6f74206265207a65726f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14023:34:8",
																		"type": "",
																		"value": "The input address cannot be zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14000:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "14000:58:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14000:58:8"
														}
													]
												},
												"name": "store_literal_in_memory_a0ed4e8cad639975e700098d07f166902169c365243b6972750486c0b152b957",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "13981:6:8",
														"type": ""
													}
												],
												"src": "13883:182:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14217:220:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14227:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14293:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14298:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14234:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "14234:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "14227:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14399:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_a0ed4e8cad639975e700098d07f166902169c365243b6972750486c0b152b957",
																	"nodeType": "YulIdentifier",
																	"src": "14310:88:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "14310:93:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14310:93:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14412:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14423:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14428:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14419:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "14419:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "14412:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_a0ed4e8cad639975e700098d07f166902169c365243b6972750486c0b152b957_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "14205:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "14213:3:8",
														"type": ""
													}
												],
												"src": "14071:366:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14614:248:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14624:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14636:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14647:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14632:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "14632:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14624:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14671:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14682:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14667:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14667:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "14690:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14696:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "14686:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14686:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14660:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "14660:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14660:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14716:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "14850:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_a0ed4e8cad639975e700098d07f166902169c365243b6972750486c0b152b957_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14724:124:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "14724:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14716:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_a0ed4e8cad639975e700098d07f166902169c365243b6972750486c0b152b957__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14594:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14609:4:8",
														"type": ""
													}
												],
												"src": "14443:419:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14896:152:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14913:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14916:77:8",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14906:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "14906:88:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14906:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15010:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15013:4:8",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15003:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "15003:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15003:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15034:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15037:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "15027:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "15027:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15027:15:8"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "14868:180:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15160:140:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "15182:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15190:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15178:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15178:14:8"
																	},
																	{
																		"hexValue": "5468652061646472657373206f6620746865206f776e657220616e6420746865",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15194:34:8",
																		"type": "",
																		"value": "The address of the owner and the"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15171:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "15171:58:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15171:58:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "15250:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15258:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15246:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15246:15:8"
																	},
																	{
																		"hexValue": "206f70657261746f72206d75737420626520646966666572656e74",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15263:29:8",
																		"type": "",
																		"value": " operator must be different"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15239:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "15239:54:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15239:54:8"
														}
													]
												},
												"name": "store_literal_in_memory_04ac8f36c142f1891048ed77339b8705d10008afae0986d82fa07e197d36aa25",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "15152:6:8",
														"type": ""
													}
												],
												"src": "15054:246:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15452:220:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15462:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15528:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15533:2:8",
																		"type": "",
																		"value": "59"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15469:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "15469:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "15462:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15634:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_04ac8f36c142f1891048ed77339b8705d10008afae0986d82fa07e197d36aa25",
																	"nodeType": "YulIdentifier",
																	"src": "15545:88:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "15545:93:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15545:93:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15647:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15658:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15663:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15654:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "15654:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "15647:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_04ac8f36c142f1891048ed77339b8705d10008afae0986d82fa07e197d36aa25_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "15440:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "15448:3:8",
														"type": ""
													}
												],
												"src": "15306:366:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15849:248:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15859:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15871:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15882:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15867:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "15867:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15859:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15906:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15917:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15902:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15902:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "15925:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15931:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "15921:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15921:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15895:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "15895:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15895:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15951:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "16085:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_04ac8f36c142f1891048ed77339b8705d10008afae0986d82fa07e197d36aa25_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15959:124:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "15959:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15951:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_04ac8f36c142f1891048ed77339b8705d10008afae0986d82fa07e197d36aa25__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15829:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "15844:4:8",
														"type": ""
													}
												],
												"src": "15678:419:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16217:34:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16227:18:8",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "16242:3:8"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "16227:11:8"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "16189:3:8",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "16194:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "16205:11:8",
														"type": ""
													}
												],
												"src": "16103:148:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16367:280:8",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "16377:53:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "16424:5:8"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "16391:32:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "16391:39:8"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "16381:6:8",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "16439:96:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "16523:3:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "16528:6:8"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "16446:76:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "16446:89:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "16439:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "16583:5:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16590:4:8",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16579:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16579:16:8"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "16597:3:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "16602:6:8"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "16544:34:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "16544:65:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16544:65:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16618:23:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "16629:3:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "16634:6:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16625:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "16625:16:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "16618:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "16348:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "16355:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "16363:3:8",
														"type": ""
													}
												],
												"src": "16257:390:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16837:251:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16848:102:8",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "16937:6:8"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "16946:3:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "16855:81:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "16855:95:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "16848:3:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "16960:102:8",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "17049:6:8"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "17058:3:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "16967:81:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "16967:95:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "16960:3:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "17072:10:8",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "17079:3:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "17072:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "16808:3:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "16814:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "16822:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "16833:3:8",
														"type": ""
													}
												],
												"src": "16653:435:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17200:197:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "17222:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17230:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17218:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17218:14:8"
																	},
																	{
																		"hexValue": "54686520494420656e746572656420697320696e76616c69642e204974206d75",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "17234:34:8",
																		"type": "",
																		"value": "The ID entered is invalid. It mu"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17211:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "17211:58:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17211:58:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "17290:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17298:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17286:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17286:15:8"
																	},
																	{
																		"hexValue": "737420626520696e207468697320696e74657276616c2030203c206964203c3d",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "17303:34:8",
																		"type": "",
																		"value": "st be in this interval 0 < id <="
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17279:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "17279:59:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17279:59:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "17359:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17367:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17355:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17355:15:8"
																	},
																	{
																		"hexValue": "2063757272656e7420746f6b656e73",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "17372:17:8",
																		"type": "",
																		"value": " current tokens"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17348:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "17348:42:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17348:42:8"
														}
													]
												},
												"name": "store_literal_in_memory_d01a6ddc51808b791794e2bc370247f685df6f3cfeea0cd79f01cec6a9ccb52f",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "17192:6:8",
														"type": ""
													}
												],
												"src": "17094:303:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17549:220:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17559:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "17625:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17630:2:8",
																		"type": "",
																		"value": "79"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "17566:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "17566:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "17559:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "17731:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_d01a6ddc51808b791794e2bc370247f685df6f3cfeea0cd79f01cec6a9ccb52f",
																	"nodeType": "YulIdentifier",
																	"src": "17642:88:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "17642:93:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17642:93:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17744:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "17755:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17760:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17751:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "17751:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "17744:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_d01a6ddc51808b791794e2bc370247f685df6f3cfeea0cd79f01cec6a9ccb52f_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "17537:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "17545:3:8",
														"type": ""
													}
												],
												"src": "17403:366:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17946:248:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17956:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "17968:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17979:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17964:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "17964:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17956:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18003:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18014:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17999:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17999:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "18022:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18028:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "18018:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18018:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17992:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "17992:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17992:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "18048:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "18182:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_d01a6ddc51808b791794e2bc370247f685df6f3cfeea0cd79f01cec6a9ccb52f_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "18056:124:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "18056:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "18048:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d01a6ddc51808b791794e2bc370247f685df6f3cfeea0cd79f01cec6a9ccb52f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "17926:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "17941:4:8",
														"type": ""
													}
												],
												"src": "17775:419:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18258:40:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18269:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "18285:5:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "18279:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "18279:12:8"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "18269:6:8"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "18241:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "18251:6:8",
														"type": ""
													}
												],
												"src": "18200:98:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18399:73:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "18416:3:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "18421:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18409:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "18409:19:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18409:19:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "18437:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "18456:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18461:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "18452:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "18452:14:8"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "18437:11:8"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "18371:3:8",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "18376:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "18387:11:8",
														"type": ""
													}
												],
												"src": "18304:168:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18568:283:8",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "18578:52:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "18624:5:8"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "18592:31:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "18592:38:8"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "18582:6:8",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "18639:77:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "18704:3:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "18709:6:8"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "18646:57:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "18646:70:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "18639:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "18764:5:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18771:4:8",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18760:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18760:16:8"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "18778:3:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "18783:6:8"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "18725:34:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "18725:65:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18725:65:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "18799:46:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "18810:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "18837:6:8"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "18815:21:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18815:29:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "18806:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "18806:39:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "18799:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "18549:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "18556:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "18564:3:8",
														"type": ""
													}
												],
												"src": "18478:373:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19055:438:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "19065:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "19077:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19088:3:8",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "19073:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "19073:19:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "19065:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "19146:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19159:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19170:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19155:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19155:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "19102:43:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "19102:71:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19102:71:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "19227:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19240:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19251:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19236:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19236:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "19183:43:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "19183:72:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19183:72:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "19307:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19320:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19331:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19316:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19316:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint16_to_t_uint16_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "19265:41:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "19265:70:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19265:70:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19356:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19367:2:8",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19352:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19352:18:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "19376:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19382:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "19372:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19372:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19345:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "19345:48:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19345:48:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "19402:84:8",
															"value": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "19472:6:8"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "19481:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "19410:61:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "19410:76:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "19402:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint16_t_bytes_memory_ptr__to_t_address_t_address_t_uint16_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "19003:9:8",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "19015:6:8",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "19023:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "19031:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "19039:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "19050:4:8",
														"type": ""
													}
												],
												"src": "18857:636:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19541:78:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "19597:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "19606:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "19609:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "19599:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "19599:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "19599:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "19564:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "19588:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes4",
																					"nodeType": "YulIdentifier",
																					"src": "19571:16:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "19571:23:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "19561:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19561:34:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "19554:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "19554:42:8"
															},
															"nodeType": "YulIf",
															"src": "19551:62:8"
														}
													]
												},
												"name": "validator_revert_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "19534:5:8",
														"type": ""
													}
												],
												"src": "19499:120:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19687:79:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "19697:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "19712:6:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "19706:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "19706:13:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "19697:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "19754:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "19728:25:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "19728:32:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19728:32:8"
														}
													]
												},
												"name": "abi_decode_t_bytes4_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "19665:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "19673:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "19681:5:8",
														"type": ""
													}
												],
												"src": "19625:141:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19848:273:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "19894:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "19896:77:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "19896:79:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "19896:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "19869:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19878:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "19865:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19865:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19890:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "19861:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "19861:32:8"
															},
															"nodeType": "YulIf",
															"src": "19858:119:8"
														},
														{
															"nodeType": "YulBlock",
															"src": "19987:127:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "20002:15:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20016:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "20006:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "20031:73:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "20076:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "20087:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "20072:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "20072:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "20096:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "20041:30:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20041:63:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "20031:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "19818:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "19829:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "19841:6:8",
														"type": ""
													}
												],
												"src": "19772:349:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20155:152:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20172:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20175:77:8",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20165:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "20165:88:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20165:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20269:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20272:4:8",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20262:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "20262:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20262:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20293:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20296:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "20286:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "20286:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20286:15:8"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "20127:180:8"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_bytes20(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff000000000000000000000000)\n    }\n\n    function abi_encode_t_bytes20_to_t_bytes20_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes20(value))\n    }\n\n    function abi_encode_tuple_t_bytes20__to_t_bytes20__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes20_to_t_bytes20_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint16(value) -> cleaned {\n        cleaned := and(value, 0xffff)\n    }\n\n    function validator_revert_t_uint16(value) {\n        if iszero(eq(value, cleanup_t_uint16(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint16(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint16(value)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint16(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint16(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint16_to_t_uint16_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint16(value))\n    }\n\n    function abi_encode_tuple_t_uint16__to_t_uint16__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint16_to_t_uint16_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_uint16(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint16(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_bytes10(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffff00000000000000000000000000000000000000000000)\n    }\n\n    function abi_encode_t_bytes10_to_t_bytes10_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes10(value))\n    }\n\n    function abi_encode_tuple_t_bytes10__to_t_bytes10__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes10_to_t_bytes10_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint16t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint16(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() {\n        revert(0, 0)\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_calldata_ptr(offset, end) -> arrayPos, length {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() }\n        arrayPos := add(offset, 0x20)\n        if gt(add(arrayPos, mul(length, 0x01)), end) { revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() }\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint16t_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint16(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3, value4 := abi_decode_t_bytes_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function abi_encode_t_bytes4_to_t_bytes4_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes4(value))\n    }\n\n    function abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes4_to_t_bytes4_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint16(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint16(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint16_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint16(value)))\n    }\n\n    function abi_encode_t_uint16_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, convert_t_uint16_to_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint16_t_address__to_t_address_t_uint256_t_address__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint16_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_address_to_t_address_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function store_literal_in_memory_a0ed4e8cad639975e700098d07f166902169c365243b6972750486c0b152b957(memPtr) {\n\n        mstore(add(memPtr, 0), \"The input address cannot be zero\")\n\n    }\n\n    function abi_encode_t_stringliteral_a0ed4e8cad639975e700098d07f166902169c365243b6972750486c0b152b957_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_a0ed4e8cad639975e700098d07f166902169c365243b6972750486c0b152b957(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_a0ed4e8cad639975e700098d07f166902169c365243b6972750486c0b152b957__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_a0ed4e8cad639975e700098d07f166902169c365243b6972750486c0b152b957_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function store_literal_in_memory_04ac8f36c142f1891048ed77339b8705d10008afae0986d82fa07e197d36aa25(memPtr) {\n\n        mstore(add(memPtr, 0), \"The address of the owner and the\")\n\n        mstore(add(memPtr, 32), \" operator must be different\")\n\n    }\n\n    function abi_encode_t_stringliteral_04ac8f36c142f1891048ed77339b8705d10008afae0986d82fa07e197d36aa25_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 59)\n        store_literal_in_memory_04ac8f36c142f1891048ed77339b8705d10008afae0986d82fa07e197d36aa25(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_04ac8f36c142f1891048ed77339b8705d10008afae0986d82fa07e197d36aa25__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_04ac8f36c142f1891048ed77339b8705d10008afae0986d82fa07e197d36aa25_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value1,  pos)\n\n        end := pos\n    }\n\n    function store_literal_in_memory_d01a6ddc51808b791794e2bc370247f685df6f3cfeea0cd79f01cec6a9ccb52f(memPtr) {\n\n        mstore(add(memPtr, 0), \"The ID entered is invalid. It mu\")\n\n        mstore(add(memPtr, 32), \"st be in this interval 0 < id <=\")\n\n        mstore(add(memPtr, 64), \" current tokens\")\n\n    }\n\n    function abi_encode_t_stringliteral_d01a6ddc51808b791794e2bc370247f685df6f3cfeea0cd79f01cec6a9ccb52f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 79)\n        store_literal_in_memory_d01a6ddc51808b791794e2bc370247f685df6f3cfeea0cd79f01cec6a9ccb52f(pos)\n        end := add(pos, 96)\n    }\n\n    function abi_encode_tuple_t_stringliteral_d01a6ddc51808b791794e2bc370247f685df6f3cfeea0cd79f01cec6a9ccb52f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d01a6ddc51808b791794e2bc370247f685df6f3cfeea0cd79f01cec6a9ccb52f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint16_t_bytes_memory_ptr__to_t_address_t_address_t_uint16_t_bytes_memory_ptr__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint16_to_t_uint16_fromStack(value2,  add(headStart, 64))\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value3,  tail)\n\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n}\n",
									"id": 8,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b50600436106100cd575f3560e01c806395d89b411161008a578063b1cff38011610064578063b1cff3801461020d578063dd7d84401461023d578063e560ca431461026d578063e985e9c514610289576100cd565b806395d89b41146101b7578063a22cb465146101d5578063b145ae31146101f1576100cd565b806306fdde03146100d157806307394401146100ef5780634ec3dcfe1461010b57806370a082311461012757806382a7cf1e1461015757806393b871f214610187575b5f80fd5b6100d96102b9565b6040516100e69190610ef6565b60405180910390f35b61010960048036038101906101049190610fb1565b6102cd565b005b61012560048036038101906101209190610fb1565b6102ec565b005b610141600480360381019061013c9190611001565b6103eb565b60405161014e919061103b565b60405180910390f35b610171600480360381019061016c9190611054565b6104cc565b60405161017e919061108e565b60405180910390f35b6101a1600480360381019061019c9190611054565b6104dd565b6040516101ae919061108e565b60405180910390f35b6101bf610529565b6040516101cc91906110e1565b60405180910390f35b6101ef60048036038101906101ea919061112f565b61053e565b005b61020b600480360381019061020691906112a9565b61072a565b005b61022760048036038101906102229190611386565b610747565b6040516102349190611444565b60405180910390f35b61025760048036038101906102529190611054565b610751565b60405161026491906114d7565b60405180910390f35b610287600480360381019061028291906114f7565b6107bb565b005b6102a3600480360381019061029e9190611535565b6107d1565b6040516102b09190611582565b60405180910390f35b5f805f9054906101000a900460601b905090565b6102e783838360405180602001604052805f81525061072a565b505050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361035c575f6040517f64a0ae92000000000000000000000000000000000000000000000000000000008152600401610353919061108e565b60405180910390fd5b5f61036f838361036a610860565b610867565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146103e5578382826040517f64283d7b0000000000000000000000000000000000000000000000000000000081526004016103dc939291906115dd565b60405180910390fd5b50505050565b5f8073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361045a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104519061165c565b60405180910390fd5b6104d95f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6104b181106104ab576104aa61167a565b5b601091828204019190066002029054906101000a900461ffff169050919050565b5f6104d68261086f565b9050919050565b5f6104e78261086f565b506104da5f8361ffff1661ffff1681526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b5f8060149054906101000a900460b01b905090565b8173ffffffffffffffffffffffffffffffffffffffff1661055d610860565b73ffffffffffffffffffffffffffffffffffffffff16036105b3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105aa90611717565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361062357816040517f5b08ba1800000000000000000000000000000000000000000000000000000000815260040161061a919061108e565b60405180910390fd5b806104db5f610630610860565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff166106d9610860565b73ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c318360405161071e9190611582565b60405180910390a35050565b6107358484846102ec565b6107418484848461091d565b50505050565b5f95945050505050565b606061075c8261086f565b505f610766610acf565b90505f8151116107845760405180602001604052805f8152506107b3565b806107928461ffff16610ae5565b6040516020016107a392919061176f565b6040516020818303038152906040525b915050919050565b6107cd82826107c8610860565b610baf565b5050565b5f6104db5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905092915050565b5f33905090565b5f9392505050565b5f8161ffff165f10801561089d575060015f0160029054906101000a900461ffff1661ffff168261ffff1611155b6108dc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108d390611828565b60405180910390fd5b60028261ffff166104b181106108f5576108f461167a565b5b015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b5f8373ffffffffffffffffffffffffffffffffffffffff163b1115610ac9578273ffffffffffffffffffffffffffffffffffffffff1663b1cff380610960610860565b8685856040518563ffffffff1660e01b81526004016109829493929190611898565b6020604051808303815f875af19250505080156109bd57506040513d601f19601f820116820180604052508101906109ba919061190c565b60015b610a3e573d805f81146109eb576040519150601f19603f3d011682016040523d82523d5f602084013e6109f0565b606091505b505f815103610a3657836040517f64a0ae92000000000000000000000000000000000000000000000000000000008152600401610a2d919061108e565b60405180910390fd5b805181602001fd5b63b1cff38060e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614610ac757836040517f64a0ae92000000000000000000000000000000000000000000000000000000008152600401610abe919061108e565b60405180910390fd5b505b50505050565b606060405180602001604052805f815250905090565b60605f6001610af384610d6b565b0190505f8167ffffffffffffffff811115610b1157610b10611185565b5b6040519080825280601f01601f191660200182016040528015610b435781602001600182028036833780820191505090505b5090505f82602001820190505b600115610ba4578080600190039150507f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a8581610b9957610b98611937565b5b0494505f8503610b50575b819350505050919050565b5f610bb98361086f565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610c29576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c2090611717565b60405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614158015610c6c5750610c6a81836107d1565b155b15610cae57816040517fa9fbf51f000000000000000000000000000000000000000000000000000000008152600401610ca5919061108e565b60405180910390fd5b836104da5f8561ffff1661ffff1681526020019081526020015f205f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508261ffff168473ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f0a9d294fd4bd42bb30e96cba2b478d149a783fba3c729b1e5c42bec89d95b85a60405160405180910390a450505050565b5f805f90507a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008310610dc7577a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008381610dbd57610dbc611937565b5b0492506040810190505b6d04ee2d6d415b85acef81000000008310610e04576d04ee2d6d415b85acef81000000008381610dfa57610df9611937565b5b0492506020810190505b662386f26fc100008310610e3357662386f26fc100008381610e2957610e28611937565b5b0492506010810190505b6305f5e1008310610e5c576305f5e1008381610e5257610e51611937565b5b0492506008810190505b6127108310610e81576127108381610e7757610e76611937565b5b0492506004810190505b60648310610ea45760648381610e9a57610e99611937565b5b0492506002810190505b600a8310610eb3576001810190505b80915050919050565b5f7fffffffffffffffffffffffffffffffffffffffff00000000000000000000000082169050919050565b610ef081610ebc565b82525050565b5f602082019050610f095f830184610ee7565b92915050565b5f604051905090565b5f80fd5b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610f4982610f20565b9050919050565b610f5981610f3f565b8114610f63575f80fd5b50565b5f81359050610f7481610f50565b92915050565b5f61ffff82169050919050565b610f9081610f7a565b8114610f9a575f80fd5b50565b5f81359050610fab81610f87565b92915050565b5f805f60608486031215610fc857610fc7610f18565b5b5f610fd586828701610f66565b9350506020610fe686828701610f66565b9250506040610ff786828701610f9d565b9150509250925092565b5f6020828403121561101657611015610f18565b5b5f61102384828501610f66565b91505092915050565b61103581610f7a565b82525050565b5f60208201905061104e5f83018461102c565b92915050565b5f6020828403121561106957611068610f18565b5b5f61107684828501610f9d565b91505092915050565b61108881610f3f565b82525050565b5f6020820190506110a15f83018461107f565b92915050565b5f7fffffffffffffffffffff0000000000000000000000000000000000000000000082169050919050565b6110db816110a7565b82525050565b5f6020820190506110f45f8301846110d2565b92915050565b5f8115159050919050565b61110e816110fa565b8114611118575f80fd5b50565b5f8135905061112981611105565b92915050565b5f806040838503121561114557611144610f18565b5b5f61115285828601610f66565b92505060206111638582860161111b565b9150509250929050565b5f80fd5b5f80fd5b5f601f19601f8301169050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b6111bb82611175565b810181811067ffffffffffffffff821117156111da576111d9611185565b5b80604052505050565b5f6111ec610f0f565b90506111f882826111b2565b919050565b5f67ffffffffffffffff82111561121757611216611185565b5b61122082611175565b9050602081019050919050565b828183375f83830152505050565b5f61124d611248846111fd565b6111e3565b90508281526020810184848401111561126957611268611171565b5b61127484828561122d565b509392505050565b5f82601f8301126112905761128f61116d565b5b81356112a084826020860161123b565b91505092915050565b5f805f80608085870312156112c1576112c0610f18565b5b5f6112ce87828801610f66565b94505060206112df87828801610f66565b93505060406112f087828801610f9d565b925050606085013567ffffffffffffffff81111561131157611310610f1c565b5b61131d8782880161127c565b91505092959194509250565b5f80fd5b5f80fd5b5f8083601f8401126113465761134561116d565b5b8235905067ffffffffffffffff81111561136357611362611329565b5b60208301915083600182028301111561137f5761137e61132d565b5b9250929050565b5f805f805f6080868803121561139f5761139e610f18565b5b5f6113ac88828901610f66565b95505060206113bd88828901610f66565b94505060406113ce88828901610f9d565b935050606086013567ffffffffffffffff8111156113ef576113ee610f1c565b5b6113fb88828901611331565b92509250509295509295909350565b5f7fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b61143e8161140a565b82525050565b5f6020820190506114575f830184611435565b92915050565b5f81519050919050565b5f82825260208201905092915050565b5f5b83811015611494578082015181840152602081019050611479565b5f8484015250505050565b5f6114a98261145d565b6114b38185611467565b93506114c3818560208601611477565b6114cc81611175565b840191505092915050565b5f6020820190508181035f8301526114ef818461149f565b905092915050565b5f806040838503121561150d5761150c610f18565b5b5f61151a85828601610f66565b925050602061152b85828601610f9d565b9150509250929050565b5f806040838503121561154b5761154a610f18565b5b5f61155885828601610f66565b925050602061156985828601610f66565b9150509250929050565b61157c816110fa565b82525050565b5f6020820190506115955f830184611573565b92915050565b5f819050919050565b5f819050919050565b5f6115c76115c26115bd84610f7a565b6115a4565b61159b565b9050919050565b6115d7816115ad565b82525050565b5f6060820190506115f05f83018661107f565b6115fd60208301856115ce565b61160a604083018461107f565b949350505050565b7f54686520696e70757420616464726573732063616e6e6f74206265207a65726f5f82015250565b5f611646602083611467565b915061165182611612565b602082019050919050565b5f6020820190508181035f8301526116738161163a565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b7f5468652061646472657373206f6620746865206f776e657220616e64207468655f8201527f206f70657261746f72206d75737420626520646966666572656e740000000000602082015250565b5f611701603b83611467565b915061170c826116a7565b604082019050919050565b5f6020820190508181035f83015261172e816116f5565b9050919050565b5f81905092915050565b5f6117498261145d565b6117538185611735565b9350611763818560208601611477565b80840191505092915050565b5f61177a828561173f565b9150611786828461173f565b91508190509392505050565b7f54686520494420656e746572656420697320696e76616c69642e204974206d755f8201527f737420626520696e207468697320696e74657276616c2030203c206964203c3d60208201527f2063757272656e7420746f6b656e730000000000000000000000000000000000604082015250565b5f611812604f83611467565b915061181d82611792565b606082019050919050565b5f6020820190508181035f83015261183f81611806565b9050919050565b5f81519050919050565b5f82825260208201905092915050565b5f61186a82611846565b6118748185611850565b9350611884818560208601611477565b61188d81611175565b840191505092915050565b5f6080820190506118ab5f83018761107f565b6118b8602083018661107f565b6118c5604083018561102c565b81810360608301526118d78184611860565b905095945050505050565b6118eb8161140a565b81146118f5575f80fd5b50565b5f81519050611906816118e2565b92915050565b5f6020828403121561192157611920610f18565b5b5f61192e848285016118f8565b91505092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffdfea26469706673582212204fa5920854627380dd1ba995d41bcfa20d16680a2fbd3ade2db9287825664e1d64736f6c63430008140033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCD JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x95D89B41 GT PUSH2 0x8A JUMPI DUP1 PUSH4 0xB1CFF380 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xB1CFF380 EQ PUSH2 0x20D JUMPI DUP1 PUSH4 0xDD7D8440 EQ PUSH2 0x23D JUMPI DUP1 PUSH4 0xE560CA43 EQ PUSH2 0x26D JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x289 JUMPI PUSH2 0xCD JUMP JUMPDEST DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1B7 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x1D5 JUMPI DUP1 PUSH4 0xB145AE31 EQ PUSH2 0x1F1 JUMPI PUSH2 0xCD JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xD1 JUMPI DUP1 PUSH4 0x7394401 EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x4EC3DCFE EQ PUSH2 0x10B JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x127 JUMPI DUP1 PUSH4 0x82A7CF1E EQ PUSH2 0x157 JUMPI DUP1 PUSH4 0x93B871F2 EQ PUSH2 0x187 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xD9 PUSH2 0x2B9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE6 SWAP2 SWAP1 PUSH2 0xEF6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x109 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x104 SWAP2 SWAP1 PUSH2 0xFB1 JUMP JUMPDEST PUSH2 0x2CD JUMP JUMPDEST STOP JUMPDEST PUSH2 0x125 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x120 SWAP2 SWAP1 PUSH2 0xFB1 JUMP JUMPDEST PUSH2 0x2EC JUMP JUMPDEST STOP JUMPDEST PUSH2 0x141 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x13C SWAP2 SWAP1 PUSH2 0x1001 JUMP JUMPDEST PUSH2 0x3EB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14E SWAP2 SWAP1 PUSH2 0x103B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x171 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x16C SWAP2 SWAP1 PUSH2 0x1054 JUMP JUMPDEST PUSH2 0x4CC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x17E SWAP2 SWAP1 PUSH2 0x108E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x19C SWAP2 SWAP1 PUSH2 0x1054 JUMP JUMPDEST PUSH2 0x4DD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1AE SWAP2 SWAP1 PUSH2 0x108E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1BF PUSH2 0x529 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1CC SWAP2 SWAP1 PUSH2 0x10E1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1EF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1EA SWAP2 SWAP1 PUSH2 0x112F JUMP JUMPDEST PUSH2 0x53E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x20B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x206 SWAP2 SWAP1 PUSH2 0x12A9 JUMP JUMPDEST PUSH2 0x72A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x227 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x222 SWAP2 SWAP1 PUSH2 0x1386 JUMP JUMPDEST PUSH2 0x747 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x234 SWAP2 SWAP1 PUSH2 0x1444 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x257 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x252 SWAP2 SWAP1 PUSH2 0x1054 JUMP JUMPDEST PUSH2 0x751 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x264 SWAP2 SWAP1 PUSH2 0x14D7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x287 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x282 SWAP2 SWAP1 PUSH2 0x14F7 JUMP JUMPDEST PUSH2 0x7BB JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2A3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x29E SWAP2 SWAP1 PUSH2 0x1535 JUMP JUMPDEST PUSH2 0x7D1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B0 SWAP2 SWAP1 PUSH2 0x1582 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x60 SHL SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x2E7 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0x72A JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x35C JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x353 SWAP2 SWAP1 PUSH2 0x108E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x36F DUP4 DUP4 PUSH2 0x36A PUSH2 0x860 JUMP JUMPDEST PUSH2 0x867 JUMP JUMPDEST SWAP1 POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x3E5 JUMPI DUP4 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH32 0x64283D7B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3DC SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x15DD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x45A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x451 SWAP1 PUSH2 0x165C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x4D9 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x4B1 DUP2 LT PUSH2 0x4AB JUMPI PUSH2 0x4AA PUSH2 0x167A JUMP JUMPDEST JUMPDEST PUSH1 0x10 SWAP2 DUP3 DUP3 DIV ADD SWAP2 SWAP1 MOD PUSH1 0x2 MUL SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH2 0xFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x4D6 DUP3 PUSH2 0x86F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x4E7 DUP3 PUSH2 0x86F JUMP JUMPDEST POP PUSH2 0x4DA PUSH0 DUP4 PUSH2 0xFFFF AND PUSH2 0xFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xB0 SHL SWAP1 POP SWAP1 JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x55D PUSH2 0x860 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x5B3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5AA SWAP1 PUSH2 0x1717 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x623 JUMPI DUP2 PUSH1 0x40 MLOAD PUSH32 0x5B08BA1800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x61A SWAP2 SWAP1 PUSH2 0x108E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH2 0x4DB PUSH0 PUSH2 0x630 PUSH2 0x860 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x6D9 PUSH2 0x860 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0x71E SWAP2 SWAP1 PUSH2 0x1582 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x735 DUP5 DUP5 DUP5 PUSH2 0x2EC JUMP JUMPDEST PUSH2 0x741 DUP5 DUP5 DUP5 DUP5 PUSH2 0x91D JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x75C DUP3 PUSH2 0x86F JUMP JUMPDEST POP PUSH0 PUSH2 0x766 PUSH2 0xACF JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 MLOAD GT PUSH2 0x784 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0x7B3 JUMP JUMPDEST DUP1 PUSH2 0x792 DUP5 PUSH2 0xFFFF AND PUSH2 0xAE5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x7A3 SWAP3 SWAP2 SWAP1 PUSH2 0x176F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x7CD DUP3 DUP3 PUSH2 0x7C8 PUSH2 0x860 JUMP JUMPDEST PUSH2 0xBAF JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH2 0x4DB PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 PUSH2 0xFFFF AND PUSH0 LT DUP1 ISZERO PUSH2 0x89D JUMPI POP PUSH1 0x1 PUSH0 ADD PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH2 0xFFFF AND PUSH2 0xFFFF AND DUP3 PUSH2 0xFFFF AND GT ISZERO JUMPDEST PUSH2 0x8DC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8D3 SWAP1 PUSH2 0x1828 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 DUP3 PUSH2 0xFFFF AND PUSH2 0x4B1 DUP2 LT PUSH2 0x8F5 JUMPI PUSH2 0x8F4 PUSH2 0x167A JUMP JUMPDEST JUMPDEST ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT ISZERO PUSH2 0xAC9 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xB1CFF380 PUSH2 0x960 PUSH2 0x860 JUMP JUMPDEST DUP7 DUP6 DUP6 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x982 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1898 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x9BD JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x9BA SWAP2 SWAP1 PUSH2 0x190C JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xA3E JUMPI RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x9EB JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x9F0 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH0 DUP2 MLOAD SUB PUSH2 0xA36 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA2D SWAP2 SWAP1 PUSH2 0x108E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0xB1CFF380 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0xAC7 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xABE SWAP2 SWAP1 PUSH2 0x108E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH1 0x1 PUSH2 0xAF3 DUP5 PUSH2 0xD6B JUMP JUMPDEST ADD SWAP1 POP PUSH0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xB11 JUMPI PUSH2 0xB10 PUSH2 0x1185 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xB43 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 DUP3 PUSH1 0x20 ADD DUP3 ADD SWAP1 POP JUMPDEST PUSH1 0x1 ISZERO PUSH2 0xBA4 JUMPI DUP1 DUP1 PUSH1 0x1 SWAP1 SUB SWAP2 POP POP PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DUP2 PUSH2 0xB99 JUMPI PUSH2 0xB98 PUSH2 0x1937 JUMP JUMPDEST JUMPDEST DIV SWAP5 POP PUSH0 DUP6 SUB PUSH2 0xB50 JUMPI JUMPDEST DUP2 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xBB9 DUP4 PUSH2 0x86F JUMP JUMPDEST SWAP1 POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xC29 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC20 SWAP1 PUSH2 0x1717 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0xC6C JUMPI POP PUSH2 0xC6A DUP2 DUP4 PUSH2 0x7D1 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0xCAE JUMPI DUP2 PUSH1 0x40 MLOAD PUSH32 0xA9FBF51F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCA5 SWAP2 SWAP1 PUSH2 0x108E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP4 PUSH2 0x4DA PUSH0 DUP6 PUSH2 0xFFFF AND PUSH2 0xFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP3 PUSH2 0xFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xA9D294FD4BD42BB30E96CBA2B478D149A783FBA3C729B1E5C42BEC89D95B85A PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 POP PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 LT PUSH2 0xDC7 JUMPI PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 DUP2 PUSH2 0xDBD JUMPI PUSH2 0xDBC PUSH2 0x1937 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x40 DUP2 ADD SWAP1 POP JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0xE04 JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DUP2 PUSH2 0xDFA JUMPI PUSH2 0xDF9 PUSH2 0x1937 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x20 DUP2 ADD SWAP1 POP JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0xE33 JUMPI PUSH7 0x2386F26FC10000 DUP4 DUP2 PUSH2 0xE29 JUMPI PUSH2 0xE28 PUSH2 0x1937 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x10 DUP2 ADD SWAP1 POP JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0xE5C JUMPI PUSH4 0x5F5E100 DUP4 DUP2 PUSH2 0xE52 JUMPI PUSH2 0xE51 PUSH2 0x1937 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x8 DUP2 ADD SWAP1 POP JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0xE81 JUMPI PUSH2 0x2710 DUP4 DUP2 PUSH2 0xE77 JUMPI PUSH2 0xE76 PUSH2 0x1937 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x4 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0xEA4 JUMPI PUSH1 0x64 DUP4 DUP2 PUSH2 0xE9A JUMPI PUSH2 0xE99 PUSH2 0x1937 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x2 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0xEB3 JUMPI PUSH1 0x1 DUP2 ADD SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xEF0 DUP2 PUSH2 0xEBC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xF09 PUSH0 DUP4 ADD DUP5 PUSH2 0xEE7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xF49 DUP3 PUSH2 0xF20 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF59 DUP2 PUSH2 0xF3F JUMP JUMPDEST DUP2 EQ PUSH2 0xF63 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xF74 DUP2 PUSH2 0xF50 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF90 DUP2 PUSH2 0xF7A JUMP JUMPDEST DUP2 EQ PUSH2 0xF9A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xFAB DUP2 PUSH2 0xF87 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xFC8 JUMPI PUSH2 0xFC7 PUSH2 0xF18 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xFD5 DUP7 DUP3 DUP8 ADD PUSH2 0xF66 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xFE6 DUP7 DUP3 DUP8 ADD PUSH2 0xF66 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xFF7 DUP7 DUP3 DUP8 ADD PUSH2 0xF9D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1016 JUMPI PUSH2 0x1015 PUSH2 0xF18 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1023 DUP5 DUP3 DUP6 ADD PUSH2 0xF66 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1035 DUP2 PUSH2 0xF7A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x104E PUSH0 DUP4 ADD DUP5 PUSH2 0x102C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1069 JUMPI PUSH2 0x1068 PUSH2 0xF18 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1076 DUP5 DUP3 DUP6 ADD PUSH2 0xF9D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1088 DUP2 PUSH2 0xF3F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x10A1 PUSH0 DUP4 ADD DUP5 PUSH2 0x107F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH32 0xFFFFFFFFFFFFFFFFFFFF00000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x10DB DUP2 PUSH2 0x10A7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x10F4 PUSH0 DUP4 ADD DUP5 PUSH2 0x10D2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x110E DUP2 PUSH2 0x10FA JUMP JUMPDEST DUP2 EQ PUSH2 0x1118 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1129 DUP2 PUSH2 0x1105 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1145 JUMPI PUSH2 0x1144 PUSH2 0xF18 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1152 DUP6 DUP3 DUP7 ADD PUSH2 0xF66 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1163 DUP6 DUP3 DUP7 ADD PUSH2 0x111B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x11BB DUP3 PUSH2 0x1175 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x11DA JUMPI PUSH2 0x11D9 PUSH2 0x1185 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x11EC PUSH2 0xF0F JUMP JUMPDEST SWAP1 POP PUSH2 0x11F8 DUP3 DUP3 PUSH2 0x11B2 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1217 JUMPI PUSH2 0x1216 PUSH2 0x1185 JUMP JUMPDEST JUMPDEST PUSH2 0x1220 DUP3 PUSH2 0x1175 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x124D PUSH2 0x1248 DUP5 PUSH2 0x11FD JUMP JUMPDEST PUSH2 0x11E3 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1269 JUMPI PUSH2 0x1268 PUSH2 0x1171 JUMP JUMPDEST JUMPDEST PUSH2 0x1274 DUP5 DUP3 DUP6 PUSH2 0x122D JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1290 JUMPI PUSH2 0x128F PUSH2 0x116D JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x12A0 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x123B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x12C1 JUMPI PUSH2 0x12C0 PUSH2 0xF18 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x12CE DUP8 DUP3 DUP9 ADD PUSH2 0xF66 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x12DF DUP8 DUP3 DUP9 ADD PUSH2 0xF66 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x12F0 DUP8 DUP3 DUP9 ADD PUSH2 0xF9D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1311 JUMPI PUSH2 0x1310 PUSH2 0xF1C JUMP JUMPDEST JUMPDEST PUSH2 0x131D DUP8 DUP3 DUP9 ADD PUSH2 0x127C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x1346 JUMPI PUSH2 0x1345 PUSH2 0x116D JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1363 JUMPI PUSH2 0x1362 PUSH2 0x1329 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x137F JUMPI PUSH2 0x137E PUSH2 0x132D JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0x80 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x139F JUMPI PUSH2 0x139E PUSH2 0xF18 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x13AC DUP9 DUP3 DUP10 ADD PUSH2 0xF66 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x13BD DUP9 DUP3 DUP10 ADD PUSH2 0xF66 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x13CE DUP9 DUP3 DUP10 ADD PUSH2 0xF9D JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x13EF JUMPI PUSH2 0x13EE PUSH2 0xF1C JUMP JUMPDEST JUMPDEST PUSH2 0x13FB DUP9 DUP3 DUP10 ADD PUSH2 0x1331 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x143E DUP2 PUSH2 0x140A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1457 PUSH0 DUP4 ADD DUP5 PUSH2 0x1435 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1494 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1479 JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x14A9 DUP3 PUSH2 0x145D JUMP JUMPDEST PUSH2 0x14B3 DUP2 DUP6 PUSH2 0x1467 JUMP JUMPDEST SWAP4 POP PUSH2 0x14C3 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1477 JUMP JUMPDEST PUSH2 0x14CC DUP2 PUSH2 0x1175 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x14EF DUP2 DUP5 PUSH2 0x149F JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x150D JUMPI PUSH2 0x150C PUSH2 0xF18 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x151A DUP6 DUP3 DUP7 ADD PUSH2 0xF66 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x152B DUP6 DUP3 DUP7 ADD PUSH2 0xF9D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x154B JUMPI PUSH2 0x154A PUSH2 0xF18 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1558 DUP6 DUP3 DUP7 ADD PUSH2 0xF66 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1569 DUP6 DUP3 DUP7 ADD PUSH2 0xF66 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x157C DUP2 PUSH2 0x10FA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1595 PUSH0 DUP4 ADD DUP5 PUSH2 0x1573 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x15C7 PUSH2 0x15C2 PUSH2 0x15BD DUP5 PUSH2 0xF7A JUMP JUMPDEST PUSH2 0x15A4 JUMP JUMPDEST PUSH2 0x159B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x15D7 DUP2 PUSH2 0x15AD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x15F0 PUSH0 DUP4 ADD DUP7 PUSH2 0x107F JUMP JUMPDEST PUSH2 0x15FD PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x15CE JUMP JUMPDEST PUSH2 0x160A PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x107F JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x54686520696E70757420616464726573732063616E6E6F74206265207A65726F PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1646 PUSH1 0x20 DUP4 PUSH2 0x1467 JUMP JUMPDEST SWAP2 POP PUSH2 0x1651 DUP3 PUSH2 0x1612 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1673 DUP2 PUSH2 0x163A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x5468652061646472657373206F6620746865206F776E657220616E6420746865 PUSH0 DUP3 ADD MSTORE PUSH32 0x206F70657261746F72206D75737420626520646966666572656E740000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1701 PUSH1 0x3B DUP4 PUSH2 0x1467 JUMP JUMPDEST SWAP2 POP PUSH2 0x170C DUP3 PUSH2 0x16A7 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x172E DUP2 PUSH2 0x16F5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1749 DUP3 PUSH2 0x145D JUMP JUMPDEST PUSH2 0x1753 DUP2 DUP6 PUSH2 0x1735 JUMP JUMPDEST SWAP4 POP PUSH2 0x1763 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1477 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x177A DUP3 DUP6 PUSH2 0x173F JUMP JUMPDEST SWAP2 POP PUSH2 0x1786 DUP3 DUP5 PUSH2 0x173F JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x54686520494420656E746572656420697320696E76616C69642E204974206D75 PUSH0 DUP3 ADD MSTORE PUSH32 0x737420626520696E207468697320696E74657276616C2030203C206964203C3D PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x2063757272656E7420746F6B656E730000000000000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1812 PUSH1 0x4F DUP4 PUSH2 0x1467 JUMP JUMPDEST SWAP2 POP PUSH2 0x181D DUP3 PUSH2 0x1792 JUMP JUMPDEST PUSH1 0x60 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x183F DUP2 PUSH2 0x1806 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x186A DUP3 PUSH2 0x1846 JUMP JUMPDEST PUSH2 0x1874 DUP2 DUP6 PUSH2 0x1850 JUMP JUMPDEST SWAP4 POP PUSH2 0x1884 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1477 JUMP JUMPDEST PUSH2 0x188D DUP2 PUSH2 0x1175 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x18AB PUSH0 DUP4 ADD DUP8 PUSH2 0x107F JUMP JUMPDEST PUSH2 0x18B8 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x107F JUMP JUMPDEST PUSH2 0x18C5 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x102C JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x18D7 DUP2 DUP5 PUSH2 0x1860 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x18EB DUP2 PUSH2 0x140A JUMP JUMPDEST DUP2 EQ PUSH2 0x18F5 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1906 DUP2 PUSH2 0x18E2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1921 JUMPI PUSH2 0x1920 PUSH2 0xF18 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x192E DUP5 DUP3 DUP6 ADD PUSH2 0x18F8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4F 0xA5 SWAP3 ADDMOD SLOAD PUSH3 0x7380DD SHL 0xA9 SWAP6 0xD4 SHL 0xCF LOG2 0xD AND PUSH9 0xA2FBD3ADE2DB92878 0x25 PUSH7 0x4E1D64736F6C63 NUMBER STOP ADDMOD EQ STOP CALLER ",
							"sourceMap": "400:5531:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1454:77;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3669:133;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3072:589;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1632:189;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1831:111;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2315:160;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1541:81;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2483:424;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3810:210;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5753:165;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1952:240;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2202:105;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2917:147;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1454:77;1491:7;1518:5;;;;;;;;;;;1511:12;;1454:77;:::o;3669:133::-;3755:39;3772:4;3778:2;3782:7;3755:39;;;;;;;;;;;;:16;:39::i;:::-;3669:133;;;:::o;3072:589::-;3180:1;3166:16;;:2;:16;;;3162:89;;3236:1;3206:33;;;;;;;;;;;:::i;:::-;;;;;;;;3162:89;3474:21;3498:34;3506:2;3510:7;3519:12;:10;:12::i;:::-;3498:7;:34::i;:::-;3474:58;;3564:4;3547:21;;:13;:21;;;3543:111;;3613:4;3619:7;3628:13;3592:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;3543:111;3151:510;3072:589;;;:::o;1632:189::-;1687:6;1731:1;1714:19;;:5;:19;;;1706:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;1787:16;:23;1804:5;1787:23;;;;;;;;;;;;;;;1811:1;1787:26;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;1780:33;;1632:189;;;:::o;1831:111::-;1885:7;1912:22;1926:7;1912:13;:22::i;:::-;1905:29;;1831:111;;;:::o;2315:160::-;2381:7;2401:22;2415:7;2401:13;:22::i;:::-;;2443:15;:24;2459:7;2443:24;;;;;;;;;;;;;;;;;;;;;;;;;2436:31;;2315:160;;;:::o;1541:81::-;1580:7;1607;;;;;;;;;;;1600:14;;1541:81;:::o;2483:424::-;2585:8;2569:24;;:12;:10;:12::i;:::-;:24;;;2561:96;;;;;;;;;;;;:::i;:::-;;;;;;;;;2692:1;2672:22;;:8;:22;;;2668:93;;2740:8;2718:31;;;;;;;;;;;:::i;:::-;;;;;;;;2668:93;2826:8;2781:18;:32;2800:12;:10;:12::i;:::-;2781:32;;;;;;;;;;;;;;;:42;2814:8;2781:42;;;;;;;;;;;;;;;;:53;;;;;;;;;;;;;;;;;;2880:8;2851:48;;2866:12;:10;:12::i;:::-;2851:48;;;2890:8;2851:48;;;;;;:::i;:::-;;;;;;;;2483:424;;:::o;3810:210::-;3923:31;3936:4;3942:2;3946:7;3923:12;:31::i;:::-;3965:47;3988:4;3994:2;3998:7;4007:4;3965:22;:47::i;:::-;3810:210;;;;:::o;5753:165::-;5909:6;5753:165;;;;;;;:::o;1952:240::-;2007:13;2033:22;2047:7;2033:13;:22::i;:::-;;2066:18;2087:10;:8;:10::i;:::-;2066:31;;2136:1;2121:4;2115:18;:22;:69;;;;;;;;;;;;;;;;;2154:4;2160:18;:7;:16;;;:18::i;:::-;2140:39;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2115:69;2108:76;;;1952:240;;;:::o;2202:105::-;2265:34;2273:2;2277:7;2286:12;:10;:12::i;:::-;2265:7;:34::i;:::-;2202:105;;:::o;2917:147::-;2997:4;3021:18;:25;3040:5;3021:25;;;;;;;;;;;;;;;:35;3047:8;3021:35;;;;;;;;;;;;;;;;;;;;;;;;;3014:42;;2917:147;;;;:::o;656:96:2:-;709:7;735:10;728:17;;656:96;:::o;4030:95:6:-;4106:7;4030:95;;;;;:::o;4574:264::-;4635:7;4667;4663:11;;:1;:11;:48;;;;;4689:8;:22;;;;;;;;;;;;4678:33;;:7;:33;;;;4663:48;4655:140;;;;;;;;;;;;:::i;:::-;;;;;;;;;4814:7;4822;4814:16;;;;;;;;;:::i;:::-;;;;;;;;;;;;;4807:23;;4574:264;;;:::o;4941:804::-;5074:1;5057:2;:14;;;:18;5053:685;;;5115:2;5096:39;;;5136:12;:10;:12::i;:::-;5150:4;5156:7;5165:4;5096:74;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;5092:635;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5433:1;5416:6;:13;:18;5412:300;;5488:2;5466:25;;;;;;;;;;;:::i;:::-;;;;;;;;5412:300;5662:6;5656:13;5647:6;5643:2;5639:15;5632:38;5092:635;5228:44;;;5218:54;;;:6;:54;;;;5214:135;;5326:2;5304:25;;;;;;;;;;;:::i;:::-;;;;;;;;5214:135;5171:193;5053:685;4941:804;;;;:::o;4848:85::-;4890:13;4916:9;;;;;;;;;;;;;;4848:85;:::o;637:698:3:-;693:13;742:14;779:1;759:17;770:5;759:10;:17::i;:::-;:21;742:38;;794:20;828:6;817:18;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;794:41;;849:11;975:6;971:2;967:15;959:6;955:28;948:35;;1010:282;1017:4;1010:282;;;1041:5;;;;;;;;1180:10;1175:2;1168:5;1164:14;1159:32;1154:3;1146:46;1236:2;1227:11;;;;;;:::i;:::-;;;;;1269:1;1260:5;:10;1010:282;1256:21;1010:282;1312:6;1305:13;;;;;637:698;;;:::o;4135:421:6:-;4213:13;4229:22;4243:7;4229:13;:22::i;:::-;4213:38;;4279:2;4270:11;;:5;:11;;;4262:83;;;;;;;;;;;;:::i;:::-;;;;;;;;;4368:4;4359:13;;:5;:13;;;;:47;;;;;4377:29;4394:5;4401:4;4377:16;:29::i;:::-;4376:30;4359:47;4355:108;;;4447:4;4425:27;;;;;;;;;;;:::i;:::-;;;;;;;;4355:108;4502:2;4475:15;:24;4491:7;4475:24;;;;;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;4540:7;4520:28;;4536:2;4520:28;;4529:5;4520:28;;;;;;;;;;;;4202:354;4135:421;;;:::o;12214:916:4:-;12267:7;12286:14;12303:1;12286:18;;12351:8;12342:5;:17;12338:103;;12388:8;12379:17;;;;;;:::i;:::-;;;;;12424:2;12414:12;;;;12338:103;12467:8;12458:5;:17;12454:103;;12504:8;12495:17;;;;;;:::i;:::-;;;;;12540:2;12530:12;;;;12454:103;12583:8;12574:5;:17;12570:103;;12620:8;12611:17;;;;;;:::i;:::-;;;;;12656:2;12646:12;;;;12570:103;12699:7;12690:5;:16;12686:100;;12735:7;12726:16;;;;;;:::i;:::-;;;;;12770:1;12760:11;;;;12686:100;12812:7;12803:5;:16;12799:100;;12848:7;12839:16;;;;;;:::i;:::-;;;;;12883:1;12873:11;;;;12799:100;12925:7;12916:5;:16;12912:100;;12961:7;12952:16;;;;;;:::i;:::-;;;;;12996:1;12986:11;;;;12912:100;13038:7;13029:5;:16;13025:66;;13075:1;13065:11;;;;13025:66;13117:6;13110:13;;;12214:916;;;:::o;7:150:8:-;44:7;84:66;77:5;73:78;62:89;;7:150;;;:::o;163:118::-;250:24;268:5;250:24;:::i;:::-;245:3;238:37;163:118;;:::o;287:222::-;380:4;418:2;407:9;403:18;395:26;;431:71;499:1;488:9;484:17;475:6;431:71;:::i;:::-;287:222;;;;:::o;515:75::-;548:6;581:2;575:9;565:19;;515:75;:::o;596:117::-;705:1;702;695:12;719:117;828:1;825;818:12;842:126;879:7;919:42;912:5;908:54;897:65;;842:126;;;:::o;974:96::-;1011:7;1040:24;1058:5;1040:24;:::i;:::-;1029:35;;974:96;;;:::o;1076:122::-;1149:24;1167:5;1149:24;:::i;:::-;1142:5;1139:35;1129:63;;1188:1;1185;1178:12;1129:63;1076:122;:::o;1204:139::-;1250:5;1288:6;1275:20;1266:29;;1304:33;1331:5;1304:33;:::i;:::-;1204:139;;;;:::o;1349:89::-;1385:7;1425:6;1418:5;1414:18;1403:29;;1349:89;;;:::o;1444:120::-;1516:23;1533:5;1516:23;:::i;:::-;1509:5;1506:34;1496:62;;1554:1;1551;1544:12;1496:62;1444:120;:::o;1570:137::-;1615:5;1653:6;1640:20;1631:29;;1669:32;1695:5;1669:32;:::i;:::-;1570:137;;;;:::o;1713:617::-;1789:6;1797;1805;1854:2;1842:9;1833:7;1829:23;1825:32;1822:119;;;1860:79;;:::i;:::-;1822:119;1980:1;2005:53;2050:7;2041:6;2030:9;2026:22;2005:53;:::i;:::-;1995:63;;1951:117;2107:2;2133:53;2178:7;2169:6;2158:9;2154:22;2133:53;:::i;:::-;2123:63;;2078:118;2235:2;2261:52;2305:7;2296:6;2285:9;2281:22;2261:52;:::i;:::-;2251:62;;2206:117;1713:617;;;;;:::o;2336:329::-;2395:6;2444:2;2432:9;2423:7;2419:23;2415:32;2412:119;;;2450:79;;:::i;:::-;2412:119;2570:1;2595:53;2640:7;2631:6;2620:9;2616:22;2595:53;:::i;:::-;2585:63;;2541:117;2336:329;;;;:::o;2671:115::-;2756:23;2773:5;2756:23;:::i;:::-;2751:3;2744:36;2671:115;;:::o;2792:218::-;2883:4;2921:2;2910:9;2906:18;2898:26;;2934:69;3000:1;2989:9;2985:17;2976:6;2934:69;:::i;:::-;2792:218;;;;:::o;3016:327::-;3074:6;3123:2;3111:9;3102:7;3098:23;3094:32;3091:119;;;3129:79;;:::i;:::-;3091:119;3249:1;3274:52;3318:7;3309:6;3298:9;3294:22;3274:52;:::i;:::-;3264:62;;3220:116;3016:327;;;;:::o;3349:118::-;3436:24;3454:5;3436:24;:::i;:::-;3431:3;3424:37;3349:118;;:::o;3473:222::-;3566:4;3604:2;3593:9;3589:18;3581:26;;3617:71;3685:1;3674:9;3670:17;3661:6;3617:71;:::i;:::-;3473:222;;;;:::o;3701:150::-;3738:7;3778:66;3771:5;3767:78;3756:89;;3701:150;;;:::o;3857:118::-;3944:24;3962:5;3944:24;:::i;:::-;3939:3;3932:37;3857:118;;:::o;3981:222::-;4074:4;4112:2;4101:9;4097:18;4089:26;;4125:71;4193:1;4182:9;4178:17;4169:6;4125:71;:::i;:::-;3981:222;;;;:::o;4209:90::-;4243:7;4286:5;4279:13;4272:21;4261:32;;4209:90;;;:::o;4305:116::-;4375:21;4390:5;4375:21;:::i;:::-;4368:5;4365:32;4355:60;;4411:1;4408;4401:12;4355:60;4305:116;:::o;4427:133::-;4470:5;4508:6;4495:20;4486:29;;4524:30;4548:5;4524:30;:::i;:::-;4427:133;;;;:::o;4566:468::-;4631:6;4639;4688:2;4676:9;4667:7;4663:23;4659:32;4656:119;;;4694:79;;:::i;:::-;4656:119;4814:1;4839:53;4884:7;4875:6;4864:9;4860:22;4839:53;:::i;:::-;4829:63;;4785:117;4941:2;4967:50;5009:7;5000:6;4989:9;4985:22;4967:50;:::i;:::-;4957:60;;4912:115;4566:468;;;;;:::o;5040:117::-;5149:1;5146;5139:12;5163:117;5272:1;5269;5262:12;5286:102;5327:6;5378:2;5374:7;5369:2;5362:5;5358:14;5354:28;5344:38;;5286:102;;;:::o;5394:180::-;5442:77;5439:1;5432:88;5539:4;5536:1;5529:15;5563:4;5560:1;5553:15;5580:281;5663:27;5685:4;5663:27;:::i;:::-;5655:6;5651:40;5793:6;5781:10;5778:22;5757:18;5745:10;5742:34;5739:62;5736:88;;;5804:18;;:::i;:::-;5736:88;5844:10;5840:2;5833:22;5623:238;5580:281;;:::o;5867:129::-;5901:6;5928:20;;:::i;:::-;5918:30;;5957:33;5985:4;5977:6;5957:33;:::i;:::-;5867:129;;;:::o;6002:307::-;6063:4;6153:18;6145:6;6142:30;6139:56;;;6175:18;;:::i;:::-;6139:56;6213:29;6235:6;6213:29;:::i;:::-;6205:37;;6297:4;6291;6287:15;6279:23;;6002:307;;;:::o;6315:146::-;6412:6;6407:3;6402;6389:30;6453:1;6444:6;6439:3;6435:16;6428:27;6315:146;;;:::o;6467:423::-;6544:5;6569:65;6585:48;6626:6;6585:48;:::i;:::-;6569:65;:::i;:::-;6560:74;;6657:6;6650:5;6643:21;6695:4;6688:5;6684:16;6733:3;6724:6;6719:3;6715:16;6712:25;6709:112;;;6740:79;;:::i;:::-;6709:112;6830:54;6877:6;6872:3;6867;6830:54;:::i;:::-;6550:340;6467:423;;;;;:::o;6909:338::-;6964:5;7013:3;7006:4;6998:6;6994:17;6990:27;6980:122;;7021:79;;:::i;:::-;6980:122;7138:6;7125:20;7163:78;7237:3;7229:6;7222:4;7214:6;7210:17;7163:78;:::i;:::-;7154:87;;6970:277;6909:338;;;;:::o;7253:941::-;7347:6;7355;7363;7371;7420:3;7408:9;7399:7;7395:23;7391:33;7388:120;;;7427:79;;:::i;:::-;7388:120;7547:1;7572:53;7617:7;7608:6;7597:9;7593:22;7572:53;:::i;:::-;7562:63;;7518:117;7674:2;7700:53;7745:7;7736:6;7725:9;7721:22;7700:53;:::i;:::-;7690:63;;7645:118;7802:2;7828:52;7872:7;7863:6;7852:9;7848:22;7828:52;:::i;:::-;7818:62;;7773:117;7957:2;7946:9;7942:18;7929:32;7988:18;7980:6;7977:30;7974:117;;;8010:79;;:::i;:::-;7974:117;8115:62;8169:7;8160:6;8149:9;8145:22;8115:62;:::i;:::-;8105:72;;7900:287;7253:941;;;;;;;:::o;8200:117::-;8309:1;8306;8299:12;8323:117;8432:1;8429;8422:12;8459:552;8516:8;8526:6;8576:3;8569:4;8561:6;8557:17;8553:27;8543:122;;8584:79;;:::i;:::-;8543:122;8697:6;8684:20;8674:30;;8727:18;8719:6;8716:30;8713:117;;;8749:79;;:::i;:::-;8713:117;8863:4;8855:6;8851:17;8839:29;;8917:3;8909:4;8901:6;8897:17;8887:8;8883:32;8880:41;8877:128;;;8924:79;;:::i;:::-;8877:128;8459:552;;;;;:::o;9017:961::-;9113:6;9121;9129;9137;9145;9194:3;9182:9;9173:7;9169:23;9165:33;9162:120;;;9201:79;;:::i;:::-;9162:120;9321:1;9346:53;9391:7;9382:6;9371:9;9367:22;9346:53;:::i;:::-;9336:63;;9292:117;9448:2;9474:53;9519:7;9510:6;9499:9;9495:22;9474:53;:::i;:::-;9464:63;;9419:118;9576:2;9602:52;9646:7;9637:6;9626:9;9622:22;9602:52;:::i;:::-;9592:62;;9547:117;9731:2;9720:9;9716:18;9703:32;9762:18;9754:6;9751:30;9748:117;;;9784:79;;:::i;:::-;9748:117;9897:64;9953:7;9944:6;9933:9;9929:22;9897:64;:::i;:::-;9879:82;;;;9674:297;9017:961;;;;;;;;:::o;9984:149::-;10020:7;10060:66;10053:5;10049:78;10038:89;;9984:149;;;:::o;10139:115::-;10224:23;10241:5;10224:23;:::i;:::-;10219:3;10212:36;10139:115;;:::o;10260:218::-;10351:4;10389:2;10378:9;10374:18;10366:26;;10402:69;10468:1;10457:9;10453:17;10444:6;10402:69;:::i;:::-;10260:218;;;;:::o;10484:99::-;10536:6;10570:5;10564:12;10554:22;;10484:99;;;:::o;10589:169::-;10673:11;10707:6;10702:3;10695:19;10747:4;10742:3;10738:14;10723:29;;10589:169;;;;:::o;10764:246::-;10845:1;10855:113;10869:6;10866:1;10863:13;10855:113;;;10954:1;10949:3;10945:11;10939:18;10935:1;10930:3;10926:11;10919:39;10891:2;10888:1;10884:10;10879:15;;10855:113;;;11002:1;10993:6;10988:3;10984:16;10977:27;10826:184;10764:246;;;:::o;11016:377::-;11104:3;11132:39;11165:5;11132:39;:::i;:::-;11187:71;11251:6;11246:3;11187:71;:::i;:::-;11180:78;;11267:65;11325:6;11320:3;11313:4;11306:5;11302:16;11267:65;:::i;:::-;11357:29;11379:6;11357:29;:::i;:::-;11352:3;11348:39;11341:46;;11108:285;11016:377;;;;:::o;11399:313::-;11512:4;11550:2;11539:9;11535:18;11527:26;;11599:9;11593:4;11589:20;11585:1;11574:9;11570:17;11563:47;11627:78;11700:4;11691:6;11627:78;:::i;:::-;11619:86;;11399:313;;;;:::o;11718:472::-;11785:6;11793;11842:2;11830:9;11821:7;11817:23;11813:32;11810:119;;;11848:79;;:::i;:::-;11810:119;11968:1;11993:53;12038:7;12029:6;12018:9;12014:22;11993:53;:::i;:::-;11983:63;;11939:117;12095:2;12121:52;12165:7;12156:6;12145:9;12141:22;12121:52;:::i;:::-;12111:62;;12066:117;11718:472;;;;;:::o;12196:474::-;12264:6;12272;12321:2;12309:9;12300:7;12296:23;12292:32;12289:119;;;12327:79;;:::i;:::-;12289:119;12447:1;12472:53;12517:7;12508:6;12497:9;12493:22;12472:53;:::i;:::-;12462:63;;12418:117;12574:2;12600:53;12645:7;12636:6;12625:9;12621:22;12600:53;:::i;:::-;12590:63;;12545:118;12196:474;;;;;:::o;12676:109::-;12757:21;12772:5;12757:21;:::i;:::-;12752:3;12745:34;12676:109;;:::o;12791:210::-;12878:4;12916:2;12905:9;12901:18;12893:26;;12929:65;12991:1;12980:9;12976:17;12967:6;12929:65;:::i;:::-;12791:210;;;;:::o;13007:77::-;13044:7;13073:5;13062:16;;13007:77;;;:::o;13090:60::-;13118:3;13139:5;13132:12;;13090:60;;;:::o;13156:140::-;13205:9;13238:52;13256:33;13265:23;13282:5;13265:23;:::i;:::-;13256:33;:::i;:::-;13238:52;:::i;:::-;13225:65;;13156:140;;;:::o;13302:129::-;13388:36;13418:5;13388:36;:::i;:::-;13383:3;13376:49;13302:129;;:::o;13437:440::-;13585:4;13623:2;13612:9;13608:18;13600:26;;13636:71;13704:1;13693:9;13689:17;13680:6;13636:71;:::i;:::-;13717;13784:2;13773:9;13769:18;13760:6;13717:71;:::i;:::-;13798:72;13866:2;13855:9;13851:18;13842:6;13798:72;:::i;:::-;13437:440;;;;;;:::o;13883:182::-;14023:34;14019:1;14011:6;14007:14;14000:58;13883:182;:::o;14071:366::-;14213:3;14234:67;14298:2;14293:3;14234:67;:::i;:::-;14227:74;;14310:93;14399:3;14310:93;:::i;:::-;14428:2;14423:3;14419:12;14412:19;;14071:366;;;:::o;14443:419::-;14609:4;14647:2;14636:9;14632:18;14624:26;;14696:9;14690:4;14686:20;14682:1;14671:9;14667:17;14660:47;14724:131;14850:4;14724:131;:::i;:::-;14716:139;;14443:419;;;:::o;14868:180::-;14916:77;14913:1;14906:88;15013:4;15010:1;15003:15;15037:4;15034:1;15027:15;15054:246;15194:34;15190:1;15182:6;15178:14;15171:58;15263:29;15258:2;15250:6;15246:15;15239:54;15054:246;:::o;15306:366::-;15448:3;15469:67;15533:2;15528:3;15469:67;:::i;:::-;15462:74;;15545:93;15634:3;15545:93;:::i;:::-;15663:2;15658:3;15654:12;15647:19;;15306:366;;;:::o;15678:419::-;15844:4;15882:2;15871:9;15867:18;15859:26;;15931:9;15925:4;15921:20;15917:1;15906:9;15902:17;15895:47;15959:131;16085:4;15959:131;:::i;:::-;15951:139;;15678:419;;;:::o;16103:148::-;16205:11;16242:3;16227:18;;16103:148;;;;:::o;16257:390::-;16363:3;16391:39;16424:5;16391:39;:::i;:::-;16446:89;16528:6;16523:3;16446:89;:::i;:::-;16439:96;;16544:65;16602:6;16597:3;16590:4;16583:5;16579:16;16544:65;:::i;:::-;16634:6;16629:3;16625:16;16618:23;;16367:280;16257:390;;;;:::o;16653:435::-;16833:3;16855:95;16946:3;16937:6;16855:95;:::i;:::-;16848:102;;16967:95;17058:3;17049:6;16967:95;:::i;:::-;16960:102;;17079:3;17072:10;;16653:435;;;;;:::o;17094:303::-;17234:34;17230:1;17222:6;17218:14;17211:58;17303:34;17298:2;17290:6;17286:15;17279:59;17372:17;17367:2;17359:6;17355:15;17348:42;17094:303;:::o;17403:366::-;17545:3;17566:67;17630:2;17625:3;17566:67;:::i;:::-;17559:74;;17642:93;17731:3;17642:93;:::i;:::-;17760:2;17755:3;17751:12;17744:19;;17403:366;;;:::o;17775:419::-;17941:4;17979:2;17968:9;17964:18;17956:26;;18028:9;18022:4;18018:20;18014:1;18003:9;17999:17;17992:47;18056:131;18182:4;18056:131;:::i;:::-;18048:139;;17775:419;;;:::o;18200:98::-;18251:6;18285:5;18279:12;18269:22;;18200:98;;;:::o;18304:168::-;18387:11;18421:6;18416:3;18409:19;18461:4;18456:3;18452:14;18437:29;;18304:168;;;;:::o;18478:373::-;18564:3;18592:38;18624:5;18592:38;:::i;:::-;18646:70;18709:6;18704:3;18646:70;:::i;:::-;18639:77;;18725:65;18783:6;18778:3;18771:4;18764:5;18760:16;18725:65;:::i;:::-;18815:29;18837:6;18815:29;:::i;:::-;18810:3;18806:39;18799:46;;18568:283;18478:373;;;;:::o;18857:636::-;19050:4;19088:3;19077:9;19073:19;19065:27;;19102:71;19170:1;19159:9;19155:17;19146:6;19102:71;:::i;:::-;19183:72;19251:2;19240:9;19236:18;19227:6;19183:72;:::i;:::-;19265:70;19331:2;19320:9;19316:18;19307:6;19265:70;:::i;:::-;19382:9;19376:4;19372:20;19367:2;19356:9;19352:18;19345:48;19410:76;19481:4;19472:6;19410:76;:::i;:::-;19402:84;;18857:636;;;;;;;:::o;19499:120::-;19571:23;19588:5;19571:23;:::i;:::-;19564:5;19561:34;19551:62;;19609:1;19606;19599:12;19551:62;19499:120;:::o;19625:141::-;19681:5;19712:6;19706:13;19697:22;;19728:32;19754:5;19728:32;:::i;:::-;19625:141;;;;:::o;19772:349::-;19841:6;19890:2;19878:9;19869:7;19865:23;19861:32;19858:119;;;19896:79;;:::i;:::-;19858:119;20016:1;20041:63;20096:7;20087:6;20076:9;20072:22;20041:63;:::i;:::-;20031:73;;19987:127;19772:349;;;;:::o;20127:180::-;20175:77;20172:1;20165:88;20272:4;20269:1;20262:15;20296:4;20293:1;20286:15"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1310800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"approve(address,uint16)": "infinite",
								"balanceOf(address)": "3034",
								"getApproved(uint16)": "7463",
								"isApprovedForAll(address,address)": "infinite",
								"name()": "2474",
								"onERC721Received(address,address,uint16,bytes)": "infinite",
								"ownerOf(uint16)": "5213",
								"safeTransferFrom(address,address,uint16)": "infinite",
								"safeTransferFrom(address,address,uint16,bytes)": "infinite",
								"setApprovalForAll(address,bool)": "infinite",
								"symbol()": "2547",
								"tokenURI(uint16)": "5541",
								"transferFrom(address,address,uint16)": "infinite"
							},
							"internal": {
								"_aprove(address,uint16,address)": "infinite",
								"_baseURI()": "infinite",
								"_checkOnERC721Received(address,address,uint16,bytes memory)": "infinite",
								"_requireOwned(uint16)": "infinite",
								"_update(address,uint16,address)": "23"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 400,
									"end": 5931,
									"name": "PUSH",
									"source": 6,
									"value": "80"
								},
								{
									"begin": 400,
									"end": 5931,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 400,
									"end": 5931,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1340,
									"end": 1444,
									"name": "CALLVALUE",
									"source": 6
								},
								{
									"begin": 1340,
									"end": 1444,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1340,
									"end": 1444,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1340,
									"end": 1444,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 1340,
									"end": 1444,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1340,
									"end": 1444,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1340,
									"end": 1444,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1340,
									"end": 1444,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 1340,
									"end": 1444,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 1340,
									"end": 1444,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1340,
									"end": 1444,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1340,
									"end": 1444,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1340,
									"end": 1444,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 1340,
									"end": 1444,
									"name": "PUSHSIZE",
									"source": 6
								},
								{
									"begin": 1340,
									"end": 1444,
									"name": "CODESIZE",
									"source": 6
								},
								{
									"begin": 1340,
									"end": 1444,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 1340,
									"end": 1444,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1340,
									"end": 1444,
									"name": "PUSHSIZE",
									"source": 6
								},
								{
									"begin": 1340,
									"end": 1444,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1340,
									"end": 1444,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 1340,
									"end": 1444,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1340,
									"end": 1444,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1340,
									"end": 1444,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1340,
									"end": 1444,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1340,
									"end": 1444,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1340,
									"end": 1444,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1340,
									"end": 1444,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1340,
									"end": 1444,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1340,
									"end": 1444,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 1340,
									"end": 1444,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1340,
									"end": 1444,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1340,
									"end": 1444,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 1340,
									"end": 1444,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1340,
									"end": 1444,
									"name": "tag",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 1340,
									"end": 1444,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1403,
									"end": 1408,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1395,
									"end": 1400,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1395,
									"end": 1400,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1395,
									"end": 1408,
									"name": "PUSH",
									"source": 6,
									"value": "100"
								},
								{
									"begin": 1395,
									"end": 1408,
									"name": "EXP",
									"source": 6
								},
								{
									"begin": 1395,
									"end": 1408,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1395,
									"end": 1408,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 1395,
									"end": 1408,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1395,
									"end": 1408,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1395,
									"end": 1408,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 1395,
									"end": 1408,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 1395,
									"end": 1408,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1395,
									"end": 1408,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1395,
									"end": 1408,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1395,
									"end": 1408,
									"name": "PUSH",
									"source": 6,
									"value": "60"
								},
								{
									"begin": 1395,
									"end": 1408,
									"name": "SHR",
									"source": 6
								},
								{
									"begin": 1395,
									"end": 1408,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 1395,
									"end": 1408,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 1395,
									"end": 1408,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1395,
									"end": 1408,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 1395,
									"end": 1408,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1429,
									"end": 1436,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1419,
									"end": 1426,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1419,
									"end": 1426,
									"name": "PUSH",
									"source": 6,
									"value": "14"
								},
								{
									"begin": 1419,
									"end": 1436,
									"name": "PUSH",
									"source": 6,
									"value": "100"
								},
								{
									"begin": 1419,
									"end": 1436,
									"name": "EXP",
									"source": 6
								},
								{
									"begin": 1419,
									"end": 1436,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1419,
									"end": 1436,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 1419,
									"end": 1436,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1419,
									"end": 1436,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1419,
									"end": 1436,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 1419,
									"end": 1436,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 1419,
									"end": 1436,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1419,
									"end": 1436,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1419,
									"end": 1436,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1419,
									"end": 1436,
									"name": "PUSH",
									"source": 6,
									"value": "B0"
								},
								{
									"begin": 1419,
									"end": 1436,
									"name": "SHR",
									"source": 6
								},
								{
									"begin": 1419,
									"end": 1436,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 1419,
									"end": 1436,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 1419,
									"end": 1436,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1419,
									"end": 1436,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 1419,
									"end": 1436,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1340,
									"end": 1444,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1340,
									"end": 1444,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 400,
									"end": 5931,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "6"
								},
								{
									"begin": 400,
									"end": 5931,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 8,
									"value": "8"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 334,
									"end": 484,
									"name": "tag",
									"source": 8,
									"value": "10"
								},
								{
									"begin": 334,
									"end": 484,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 477,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF000000000000000000000000"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 400,
									"end": 478,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 389,
									"end": 478,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 389,
									"end": 478,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 334,
									"end": 484,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 334,
									"end": 484,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 334,
									"end": 484,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 334,
									"end": 484,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 490,
									"end": 612,
									"name": "tag",
									"source": 8,
									"value": "11"
								},
								{
									"begin": 490,
									"end": 612,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 563,
									"end": 587,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "22"
								},
								{
									"begin": 581,
									"end": 586,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 563,
									"end": 587,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "10"
								},
								{
									"begin": 563,
									"end": 587,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 563,
									"end": 587,
									"name": "tag",
									"source": 8,
									"value": "22"
								},
								{
									"begin": 563,
									"end": 587,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 556,
									"end": 561,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 553,
									"end": 588,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 543,
									"end": 606,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "23"
								},
								{
									"begin": 543,
									"end": 606,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 602,
									"end": 603,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 599,
									"end": 600,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 592,
									"end": 604,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 543,
									"end": 606,
									"name": "tag",
									"source": 8,
									"value": "23"
								},
								{
									"begin": 543,
									"end": 606,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 490,
									"end": 612,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 490,
									"end": 612,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 618,
									"end": 761,
									"name": "tag",
									"source": 8,
									"value": "12"
								},
								{
									"begin": 618,
									"end": 761,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 675,
									"end": 680,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 706,
									"end": 712,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 700,
									"end": 713,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 691,
									"end": 713,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 691,
									"end": 713,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 722,
									"end": 755,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "25"
								},
								{
									"begin": 749,
									"end": 754,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 722,
									"end": 755,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "11"
								},
								{
									"begin": 722,
									"end": 755,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 722,
									"end": 755,
									"name": "tag",
									"source": 8,
									"value": "25"
								},
								{
									"begin": 722,
									"end": 755,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 618,
									"end": 761,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 618,
									"end": 761,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 618,
									"end": 761,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 618,
									"end": 761,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 618,
									"end": 761,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 767,
									"end": 917,
									"name": "tag",
									"source": 8,
									"value": "13"
								},
								{
									"begin": 767,
									"end": 917,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 804,
									"end": 811,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 844,
									"end": 910,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFF00000000000000000000000000000000000000000000"
								},
								{
									"begin": 837,
									"end": 842,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 833,
									"end": 911,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 822,
									"end": 911,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 822,
									"end": 911,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 767,
									"end": 917,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 767,
									"end": 917,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 767,
									"end": 917,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 767,
									"end": 917,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 923,
									"end": 1045,
									"name": "tag",
									"source": 8,
									"value": "14"
								},
								{
									"begin": 923,
									"end": 1045,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 996,
									"end": 1020,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "28"
								},
								{
									"begin": 1014,
									"end": 1019,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 996,
									"end": 1020,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "13"
								},
								{
									"begin": 996,
									"end": 1020,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 996,
									"end": 1020,
									"name": "tag",
									"source": 8,
									"value": "28"
								},
								{
									"begin": 996,
									"end": 1020,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 989,
									"end": 994,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 986,
									"end": 1021,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 976,
									"end": 1039,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "29"
								},
								{
									"begin": 976,
									"end": 1039,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 1035,
									"end": 1036,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1032,
									"end": 1033,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1025,
									"end": 1037,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 976,
									"end": 1039,
									"name": "tag",
									"source": 8,
									"value": "29"
								},
								{
									"begin": 976,
									"end": 1039,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 923,
									"end": 1045,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 923,
									"end": 1045,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1051,
									"end": 1194,
									"name": "tag",
									"source": 8,
									"value": "15"
								},
								{
									"begin": 1051,
									"end": 1194,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1108,
									"end": 1113,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1139,
									"end": 1145,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1133,
									"end": 1146,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 1124,
									"end": 1146,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1124,
									"end": 1146,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1155,
									"end": 1188,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "31"
								},
								{
									"begin": 1182,
									"end": 1187,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1155,
									"end": 1188,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "14"
								},
								{
									"begin": 1155,
									"end": 1188,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1155,
									"end": 1188,
									"name": "tag",
									"source": 8,
									"value": "31"
								},
								{
									"begin": 1155,
									"end": 1188,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1051,
									"end": 1194,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 1051,
									"end": 1194,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1051,
									"end": 1194,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1051,
									"end": 1194,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1051,
									"end": 1194,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1200,
									"end": 1707,
									"name": "tag",
									"source": 8,
									"value": "3"
								},
								{
									"begin": 1200,
									"end": 1707,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1279,
									"end": 1285,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1287,
									"end": 1293,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1336,
									"end": 1338,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 1324,
									"end": 1333,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 1315,
									"end": 1322,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 1311,
									"end": 1334,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 1307,
									"end": 1339,
									"name": "SLT",
									"source": 8
								},
								{
									"begin": 1304,
									"end": 1423,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 1304,
									"end": 1423,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "33"
								},
								{
									"begin": 1304,
									"end": 1423,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 1342,
									"end": 1421,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "34"
								},
								{
									"begin": 1342,
									"end": 1421,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "8"
								},
								{
									"begin": 1342,
									"end": 1421,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1342,
									"end": 1421,
									"name": "tag",
									"source": 8,
									"value": "34"
								},
								{
									"begin": 1342,
									"end": 1421,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1304,
									"end": 1423,
									"name": "tag",
									"source": 8,
									"value": "33"
								},
								{
									"begin": 1304,
									"end": 1423,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1462,
									"end": 1463,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1487,
									"end": 1551,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "35"
								},
								{
									"begin": 1543,
									"end": 1550,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 1534,
									"end": 1540,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1523,
									"end": 1532,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 1519,
									"end": 1541,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1487,
									"end": 1551,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "12"
								},
								{
									"begin": 1487,
									"end": 1551,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1487,
									"end": 1551,
									"name": "tag",
									"source": 8,
									"value": "35"
								},
								{
									"begin": 1487,
									"end": 1551,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1477,
									"end": 1551,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 1477,
									"end": 1551,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1433,
									"end": 1561,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1600,
									"end": 1602,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 1626,
									"end": 1690,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "36"
								},
								{
									"begin": 1682,
									"end": 1689,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 1673,
									"end": 1679,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1662,
									"end": 1671,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 1658,
									"end": 1680,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1626,
									"end": 1690,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "15"
								},
								{
									"begin": 1626,
									"end": 1690,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1626,
									"end": 1690,
									"name": "tag",
									"source": 8,
									"value": "36"
								},
								{
									"begin": 1626,
									"end": 1690,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1616,
									"end": 1690,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1616,
									"end": 1690,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1571,
									"end": 1700,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1200,
									"end": 1707,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 1200,
									"end": 1707,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1200,
									"end": 1707,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 1200,
									"end": 1707,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1200,
									"end": 1707,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1200,
									"end": 1707,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 400,
									"end": 5931,
									"name": "tag",
									"source": 6,
									"value": "6"
								},
								{
									"begin": 400,
									"end": 5931,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 400,
									"end": 5931,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 400,
									"end": 5931,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 400,
									"end": 5931,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 400,
									"end": 5931,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 400,
									"end": 5931,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 400,
									"end": 5931,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 400,
									"end": 5931,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212204fa5920854627380dd1ba995d41bcfa20d16680a2fbd3ade2db9287825664e1d64736f6c63430008140033",
									".code": [
										{
											"begin": 400,
											"end": 5931,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 400,
											"end": 5931,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 400,
											"end": 5931,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 400,
											"end": 5931,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 400,
											"end": 5931,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 400,
											"end": 5931,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 400,
											"end": 5931,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 400,
											"end": 5931,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 400,
											"end": 5931,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 400,
											"end": 5931,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 400,
											"end": 5931,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 400,
											"end": 5931,
											"name": "tag",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 400,
											"end": 5931,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 400,
											"end": 5931,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 400,
											"end": 5931,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 400,
											"end": 5931,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 400,
											"end": 5931,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 400,
											"end": 5931,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 400,
											"end": 5931,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 400,
											"end": 5931,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 400,
											"end": 5931,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 400,
											"end": 5931,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 400,
											"end": 5931,
											"name": "SHR",
											"source": 6
										},
										{
											"begin": 400,
											"end": 5931,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 400,
											"end": 5931,
											"name": "PUSH",
											"source": 6,
											"value": "95D89B41"
										},
										{
											"begin": 400,
											"end": 5931,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 400,
											"end": 5931,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 400,
											"end": 5931,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 400,
											"end": 5931,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 400,
											"end": 5931,
											"name": "PUSH",
											"source": 6,
											"value": "B1CFF380"
										},
										{
											"begin": 400,
											"end": 5931,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 400,
											"end": 5931,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 400,
											"end": 5931,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 400,
											"end": 5931,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 400,
											"end": 5931,
											"name": "PUSH",
											"source": 6,
											"value": "B1CFF380"
										},
										{
											"begin": 400,
											"end": 5931,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 400,
											"end": 5931,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 400,
											"end": 5931,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 400,
											"end": 5931,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 400,
											"end": 5931,
											"name": "PUSH",
											"source": 6,
											"value": "DD7D8440"
										},
										{
											"begin": 400,
											"end": 5931,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 400,
											"end": 5931,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 400,
											"end": 5931,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 400,
											"end": 5931,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 400,
											"end": 5931,
											"name": "PUSH",
											"source": 6,
											"value": "E560CA43"
										},
										{
											"begin": 400,
											"end": 5931,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 400,
											"end": 5931,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 400,
											"end": 5931,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 400,
											"end": 5931,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 400,
											"end": 5931,
											"name": "PUSH",
											"source": 6,
											"value": "E985E9C5"
										},
										{
											"begin": 400,
											"end": 5931,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 400,
											"end": 5931,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "15"
										},
										{
											"begin": 400,
											"end": 5931,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 400,
											"end": 5931,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 400,
											"end": 5931,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 400,
											"end": 5931,
											"name": "tag",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 400,
											"end": 5931,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 400,
											"end": 5931,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 400,
											"end": 5931,
											"name": "PUSH",
											"source": 6,
											"value": "95D89B41"
										},
										{
											"begin": 400,
											"end": 5931,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 400,
											"end": 5931,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 400,
											"end": 5931,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 400,
											"end": 5931,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 400,
											"end": 5931,
											"name": "PUSH",
											"source": 6,
											"value": "A22CB465"
										},
										{
											"begin": 400,
											"end": 5931,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 400,
											"end": 5931,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 400,
											"end": 5931,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 400,
											"end": 5931,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 400,
											"end": 5931,
											"name": "PUSH",
											"source": 6,
											"value": "B145AE31"
										},
										{
											"begin": 400,
											"end": 5931,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 400,
											"end": 5931,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 400,
											"end": 5931,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 400,
											"end": 5931,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 400,
											"end": 5931,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 400,
											"end": 5931,
											"name": "tag",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 400,
											"end": 5931,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 400,
											"end": 5931,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 400,
											"end": 5931,
											"name": "PUSH",
											"source": 6,
											"value": "6FDDE03"
										},
										{
											"begin": 400,
											"end": 5931,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 400,
											"end": 5931,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 400,
											"end": 5931,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 400,
											"end": 5931,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 400,
											"end": 5931,
											"name": "PUSH",
											"source": 6,
											"value": "7394401"
										},
										{
											"begin": 400,
											"end": 5931,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 400,
											"end": 5931,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 400,
											"end": 5931,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 400,
											"end": 5931,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 400,
											"end": 5931,
											"name": "PUSH",
											"source": 6,
											"value": "4EC3DCFE"
										},
										{
											"begin": 400,
											"end": 5931,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 400,
											"end": 5931,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 400,
											"end": 5931,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 400,
											"end": 5931,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 400,
											"end": 5931,
											"name": "PUSH",
											"source": 6,
											"value": "70A08231"
										},
										{
											"begin": 400,
											"end": 5931,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 400,
											"end": 5931,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 400,
											"end": 5931,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 400,
											"end": 5931,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 400,
											"end": 5931,
											"name": "PUSH",
											"source": 6,
											"value": "82A7CF1E"
										},
										{
											"begin": 400,
											"end": 5931,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 400,
											"end": 5931,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 400,
											"end": 5931,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 400,
											"end": 5931,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 400,
											"end": 5931,
											"name": "PUSH",
											"source": 6,
											"value": "93B871F2"
										},
										{
											"begin": 400,
											"end": 5931,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 400,
											"end": 5931,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 400,
											"end": 5931,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 400,
											"end": 5931,
											"name": "tag",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 400,
											"end": 5931,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 400,
											"end": 5931,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 400,
											"end": 5931,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 400,
											"end": 5931,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1454,
											"end": 1531,
											"name": "tag",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 1454,
											"end": 1531,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1454,
											"end": 1531,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 1454,
											"end": 1531,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 1454,
											"end": 1531,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1454,
											"end": 1531,
											"name": "tag",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 1454,
											"end": 1531,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1454,
											"end": 1531,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1454,
											"end": 1531,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1454,
											"end": 1531,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1454,
											"end": 1531,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1454,
											"end": 1531,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1454,
											"end": 1531,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 1454,
											"end": 1531,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1454,
											"end": 1531,
											"name": "tag",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1454,
											"end": 1531,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1454,
											"end": 1531,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1454,
											"end": 1531,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1454,
											"end": 1531,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1454,
											"end": 1531,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1454,
											"end": 1531,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1454,
											"end": 1531,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1454,
											"end": 1531,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 3669,
											"end": 3802,
											"name": "tag",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3669,
											"end": 3802,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3669,
											"end": 3802,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 3669,
											"end": 3802,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3669,
											"end": 3802,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3669,
											"end": 3802,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 3669,
											"end": 3802,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3669,
											"end": 3802,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3669,
											"end": 3802,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3669,
											"end": 3802,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3669,
											"end": 3802,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 3669,
											"end": 3802,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3669,
											"end": 3802,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3669,
											"end": 3802,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 3669,
											"end": 3802,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3669,
											"end": 3802,
											"name": "tag",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 3669,
											"end": 3802,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3669,
											"end": 3802,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 3669,
											"end": 3802,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3669,
											"end": 3802,
											"name": "tag",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 3669,
											"end": 3802,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3669,
											"end": 3802,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 3072,
											"end": 3661,
											"name": "tag",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 3072,
											"end": 3661,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3072,
											"end": 3661,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 3072,
											"end": 3661,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3072,
											"end": 3661,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3072,
											"end": 3661,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 3072,
											"end": 3661,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3072,
											"end": 3661,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3072,
											"end": 3661,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3072,
											"end": 3661,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3072,
											"end": 3661,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "27"
										},
										{
											"begin": 3072,
											"end": 3661,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3072,
											"end": 3661,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3072,
											"end": 3661,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 3072,
											"end": 3661,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3072,
											"end": 3661,
											"name": "tag",
											"source": 6,
											"value": "27"
										},
										{
											"begin": 3072,
											"end": 3661,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3072,
											"end": 3661,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "28"
										},
										{
											"begin": 3072,
											"end": 3661,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3072,
											"end": 3661,
											"name": "tag",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 3072,
											"end": 3661,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3072,
											"end": 3661,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 1632,
											"end": 1821,
											"name": "tag",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 1632,
											"end": 1821,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1632,
											"end": 1821,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "29"
										},
										{
											"begin": 1632,
											"end": 1821,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1632,
											"end": 1821,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1632,
											"end": 1821,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 1632,
											"end": 1821,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1632,
											"end": 1821,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1632,
											"end": 1821,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1632,
											"end": 1821,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1632,
											"end": 1821,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "30"
										},
										{
											"begin": 1632,
											"end": 1821,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1632,
											"end": 1821,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1632,
											"end": 1821,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "31"
										},
										{
											"begin": 1632,
											"end": 1821,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1632,
											"end": 1821,
											"name": "tag",
											"source": 6,
											"value": "30"
										},
										{
											"begin": 1632,
											"end": 1821,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1632,
											"end": 1821,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "32"
										},
										{
											"begin": 1632,
											"end": 1821,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1632,
											"end": 1821,
											"name": "tag",
											"source": 6,
											"value": "29"
										},
										{
											"begin": 1632,
											"end": 1821,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1632,
											"end": 1821,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1632,
											"end": 1821,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1632,
											"end": 1821,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "33"
										},
										{
											"begin": 1632,
											"end": 1821,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1632,
											"end": 1821,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1632,
											"end": 1821,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "34"
										},
										{
											"begin": 1632,
											"end": 1821,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1632,
											"end": 1821,
											"name": "tag",
											"source": 6,
											"value": "33"
										},
										{
											"begin": 1632,
											"end": 1821,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1632,
											"end": 1821,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1632,
											"end": 1821,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1632,
											"end": 1821,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1632,
											"end": 1821,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1632,
											"end": 1821,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1632,
											"end": 1821,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1632,
											"end": 1821,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 1831,
											"end": 1942,
											"name": "tag",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 1831,
											"end": 1942,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1831,
											"end": 1942,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "35"
										},
										{
											"begin": 1831,
											"end": 1942,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1831,
											"end": 1942,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1831,
											"end": 1942,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 1831,
											"end": 1942,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1831,
											"end": 1942,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1831,
											"end": 1942,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1831,
											"end": 1942,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1831,
											"end": 1942,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "36"
										},
										{
											"begin": 1831,
											"end": 1942,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1831,
											"end": 1942,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1831,
											"end": 1942,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "37"
										},
										{
											"begin": 1831,
											"end": 1942,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1831,
											"end": 1942,
											"name": "tag",
											"source": 6,
											"value": "36"
										},
										{
											"begin": 1831,
											"end": 1942,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1831,
											"end": 1942,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "38"
										},
										{
											"begin": 1831,
											"end": 1942,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1831,
											"end": 1942,
											"name": "tag",
											"source": 6,
											"value": "35"
										},
										{
											"begin": 1831,
											"end": 1942,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1831,
											"end": 1942,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1831,
											"end": 1942,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1831,
											"end": 1942,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "39"
										},
										{
											"begin": 1831,
											"end": 1942,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1831,
											"end": 1942,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1831,
											"end": 1942,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1831,
											"end": 1942,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1831,
											"end": 1942,
											"name": "tag",
											"source": 6,
											"value": "39"
										},
										{
											"begin": 1831,
											"end": 1942,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1831,
											"end": 1942,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1831,
											"end": 1942,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1831,
											"end": 1942,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1831,
											"end": 1942,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1831,
											"end": 1942,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1831,
											"end": 1942,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1831,
											"end": 1942,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 2315,
											"end": 2475,
											"name": "tag",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 2315,
											"end": 2475,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2315,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "41"
										},
										{
											"begin": 2315,
											"end": 2475,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2315,
											"end": 2475,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2315,
											"end": 2475,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 2315,
											"end": 2475,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2315,
											"end": 2475,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2315,
											"end": 2475,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2315,
											"end": 2475,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2315,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "42"
										},
										{
											"begin": 2315,
											"end": 2475,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2315,
											"end": 2475,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2315,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "37"
										},
										{
											"begin": 2315,
											"end": 2475,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2315,
											"end": 2475,
											"name": "tag",
											"source": 6,
											"value": "42"
										},
										{
											"begin": 2315,
											"end": 2475,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2315,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "43"
										},
										{
											"begin": 2315,
											"end": 2475,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2315,
											"end": 2475,
											"name": "tag",
											"source": 6,
											"value": "41"
										},
										{
											"begin": 2315,
											"end": 2475,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2315,
											"end": 2475,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2315,
											"end": 2475,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2315,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 2315,
											"end": 2475,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2315,
											"end": 2475,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2315,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2315,
											"end": 2475,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2315,
											"end": 2475,
											"name": "tag",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 2315,
											"end": 2475,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2315,
											"end": 2475,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2315,
											"end": 2475,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2315,
											"end": 2475,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2315,
											"end": 2475,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2315,
											"end": 2475,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2315,
											"end": 2475,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2315,
											"end": 2475,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 1541,
											"end": 1622,
											"name": "tag",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 1541,
											"end": 1622,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1541,
											"end": 1622,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "45"
										},
										{
											"begin": 1541,
											"end": 1622,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "46"
										},
										{
											"begin": 1541,
											"end": 1622,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1541,
											"end": 1622,
											"name": "tag",
											"source": 6,
											"value": "45"
										},
										{
											"begin": 1541,
											"end": 1622,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1541,
											"end": 1622,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1541,
											"end": 1622,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1541,
											"end": 1622,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "47"
										},
										{
											"begin": 1541,
											"end": 1622,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1541,
											"end": 1622,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1541,
											"end": 1622,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "48"
										},
										{
											"begin": 1541,
											"end": 1622,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1541,
											"end": 1622,
											"name": "tag",
											"source": 6,
											"value": "47"
										},
										{
											"begin": 1541,
											"end": 1622,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1541,
											"end": 1622,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1541,
											"end": 1622,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1541,
											"end": 1622,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1541,
											"end": 1622,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1541,
											"end": 1622,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1541,
											"end": 1622,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1541,
											"end": 1622,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 2483,
											"end": 2907,
											"name": "tag",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 2483,
											"end": 2907,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2483,
											"end": 2907,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "49"
										},
										{
											"begin": 2483,
											"end": 2907,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2483,
											"end": 2907,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2483,
											"end": 2907,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 2483,
											"end": 2907,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2483,
											"end": 2907,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2483,
											"end": 2907,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2483,
											"end": 2907,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2483,
											"end": 2907,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "50"
										},
										{
											"begin": 2483,
											"end": 2907,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2483,
											"end": 2907,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2483,
											"end": 2907,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "51"
										},
										{
											"begin": 2483,
											"end": 2907,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2483,
											"end": 2907,
											"name": "tag",
											"source": 6,
											"value": "50"
										},
										{
											"begin": 2483,
											"end": 2907,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2483,
											"end": 2907,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "52"
										},
										{
											"begin": 2483,
											"end": 2907,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2483,
											"end": 2907,
											"name": "tag",
											"source": 6,
											"value": "49"
										},
										{
											"begin": 2483,
											"end": 2907,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2483,
											"end": 2907,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 3810,
											"end": 4020,
											"name": "tag",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 3810,
											"end": 4020,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3810,
											"end": 4020,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "53"
										},
										{
											"begin": 3810,
											"end": 4020,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3810,
											"end": 4020,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3810,
											"end": 4020,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 3810,
											"end": 4020,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3810,
											"end": 4020,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3810,
											"end": 4020,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3810,
											"end": 4020,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3810,
											"end": 4020,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "54"
										},
										{
											"begin": 3810,
											"end": 4020,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3810,
											"end": 4020,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3810,
											"end": 4020,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "55"
										},
										{
											"begin": 3810,
											"end": 4020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3810,
											"end": 4020,
											"name": "tag",
											"source": 6,
											"value": "54"
										},
										{
											"begin": 3810,
											"end": 4020,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3810,
											"end": 4020,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "56"
										},
										{
											"begin": 3810,
											"end": 4020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3810,
											"end": 4020,
											"name": "tag",
											"source": 6,
											"value": "53"
										},
										{
											"begin": 3810,
											"end": 4020,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3810,
											"end": 4020,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 5753,
											"end": 5918,
											"name": "tag",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 5753,
											"end": 5918,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5753,
											"end": 5918,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "57"
										},
										{
											"begin": 5753,
											"end": 5918,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 5753,
											"end": 5918,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5753,
											"end": 5918,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 5753,
											"end": 5918,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5753,
											"end": 5918,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5753,
											"end": 5918,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5753,
											"end": 5918,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5753,
											"end": 5918,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "58"
										},
										{
											"begin": 5753,
											"end": 5918,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5753,
											"end": 5918,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5753,
											"end": 5918,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "59"
										},
										{
											"begin": 5753,
											"end": 5918,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5753,
											"end": 5918,
											"name": "tag",
											"source": 6,
											"value": "58"
										},
										{
											"begin": 5753,
											"end": 5918,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5753,
											"end": 5918,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 5753,
											"end": 5918,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5753,
											"end": 5918,
											"name": "tag",
											"source": 6,
											"value": "57"
										},
										{
											"begin": 5753,
											"end": 5918,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5753,
											"end": 5918,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5753,
											"end": 5918,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5753,
											"end": 5918,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "61"
										},
										{
											"begin": 5753,
											"end": 5918,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5753,
											"end": 5918,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5753,
											"end": 5918,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "62"
										},
										{
											"begin": 5753,
											"end": 5918,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5753,
											"end": 5918,
											"name": "tag",
											"source": 6,
											"value": "61"
										},
										{
											"begin": 5753,
											"end": 5918,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5753,
											"end": 5918,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5753,
											"end": 5918,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5753,
											"end": 5918,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5753,
											"end": 5918,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5753,
											"end": 5918,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5753,
											"end": 5918,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5753,
											"end": 5918,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 1952,
											"end": 2192,
											"name": "tag",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 1952,
											"end": 2192,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1952,
											"end": 2192,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "63"
										},
										{
											"begin": 1952,
											"end": 2192,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1952,
											"end": 2192,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1952,
											"end": 2192,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 1952,
											"end": 2192,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1952,
											"end": 2192,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1952,
											"end": 2192,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1952,
											"end": 2192,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1952,
											"end": 2192,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 1952,
											"end": 2192,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1952,
											"end": 2192,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1952,
											"end": 2192,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "37"
										},
										{
											"begin": 1952,
											"end": 2192,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1952,
											"end": 2192,
											"name": "tag",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 1952,
											"end": 2192,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1952,
											"end": 2192,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "65"
										},
										{
											"begin": 1952,
											"end": 2192,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1952,
											"end": 2192,
											"name": "tag",
											"source": 6,
											"value": "63"
										},
										{
											"begin": 1952,
											"end": 2192,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1952,
											"end": 2192,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1952,
											"end": 2192,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1952,
											"end": 2192,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "66"
										},
										{
											"begin": 1952,
											"end": 2192,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1952,
											"end": 2192,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1952,
											"end": 2192,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "67"
										},
										{
											"begin": 1952,
											"end": 2192,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1952,
											"end": 2192,
											"name": "tag",
											"source": 6,
											"value": "66"
										},
										{
											"begin": 1952,
											"end": 2192,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1952,
											"end": 2192,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1952,
											"end": 2192,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1952,
											"end": 2192,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1952,
											"end": 2192,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1952,
											"end": 2192,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1952,
											"end": 2192,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1952,
											"end": 2192,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 2202,
											"end": 2307,
											"name": "tag",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 2202,
											"end": 2307,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2202,
											"end": 2307,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "68"
										},
										{
											"begin": 2202,
											"end": 2307,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2202,
											"end": 2307,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2202,
											"end": 2307,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 2202,
											"end": 2307,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2202,
											"end": 2307,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2202,
											"end": 2307,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2202,
											"end": 2307,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2202,
											"end": 2307,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "69"
										},
										{
											"begin": 2202,
											"end": 2307,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2202,
											"end": 2307,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2202,
											"end": 2307,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "70"
										},
										{
											"begin": 2202,
											"end": 2307,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2202,
											"end": 2307,
											"name": "tag",
											"source": 6,
											"value": "69"
										},
										{
											"begin": 2202,
											"end": 2307,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2202,
											"end": 2307,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "71"
										},
										{
											"begin": 2202,
											"end": 2307,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2202,
											"end": 2307,
											"name": "tag",
											"source": 6,
											"value": "68"
										},
										{
											"begin": 2202,
											"end": 2307,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2202,
											"end": 2307,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 2917,
											"end": 3064,
											"name": "tag",
											"source": 6,
											"value": "15"
										},
										{
											"begin": 2917,
											"end": 3064,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2917,
											"end": 3064,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "72"
										},
										{
											"begin": 2917,
											"end": 3064,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2917,
											"end": 3064,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2917,
											"end": 3064,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 2917,
											"end": 3064,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2917,
											"end": 3064,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2917,
											"end": 3064,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2917,
											"end": 3064,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2917,
											"end": 3064,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "73"
										},
										{
											"begin": 2917,
											"end": 3064,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2917,
											"end": 3064,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2917,
											"end": 3064,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "74"
										},
										{
											"begin": 2917,
											"end": 3064,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2917,
											"end": 3064,
											"name": "tag",
											"source": 6,
											"value": "73"
										},
										{
											"begin": 2917,
											"end": 3064,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2917,
											"end": 3064,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "75"
										},
										{
											"begin": 2917,
											"end": 3064,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2917,
											"end": 3064,
											"name": "tag",
											"source": 6,
											"value": "72"
										},
										{
											"begin": 2917,
											"end": 3064,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2917,
											"end": 3064,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2917,
											"end": 3064,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2917,
											"end": 3064,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "76"
										},
										{
											"begin": 2917,
											"end": 3064,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2917,
											"end": 3064,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2917,
											"end": 3064,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "77"
										},
										{
											"begin": 2917,
											"end": 3064,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2917,
											"end": 3064,
											"name": "tag",
											"source": 6,
											"value": "76"
										},
										{
											"begin": 2917,
											"end": 3064,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2917,
											"end": 3064,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2917,
											"end": 3064,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2917,
											"end": 3064,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2917,
											"end": 3064,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2917,
											"end": 3064,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2917,
											"end": 3064,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2917,
											"end": 3064,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 1454,
											"end": 1531,
											"name": "tag",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 1454,
											"end": 1531,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1491,
											"end": 1498,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1518,
											"end": 1523,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1518,
											"end": 1523,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1518,
											"end": 1523,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1518,
											"end": 1523,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1518,
											"end": 1523,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1518,
											"end": 1523,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 1518,
											"end": 1523,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 1518,
											"end": 1523,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1518,
											"end": 1523,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 1518,
											"end": 1523,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 1518,
											"end": 1523,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 1511,
											"end": 1523,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1511,
											"end": 1523,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1454,
											"end": 1531,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1454,
											"end": 1531,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3669,
											"end": 3802,
											"name": "tag",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 3669,
											"end": 3802,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3755,
											"end": 3794,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 3772,
											"end": 3776,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3778,
											"end": 3780,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3782,
											"end": 3789,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3755,
											"end": 3794,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3755,
											"end": 3794,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3755,
											"end": 3794,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3755,
											"end": 3794,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3755,
											"end": 3794,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3755,
											"end": 3794,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3755,
											"end": 3794,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3755,
											"end": 3794,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3755,
											"end": 3794,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3755,
											"end": 3794,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3755,
											"end": 3794,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3755,
											"end": 3794,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3755,
											"end": 3771,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "56"
										},
										{
											"begin": 3755,
											"end": 3794,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3755,
											"end": 3794,
											"name": "tag",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 3755,
											"end": 3794,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3669,
											"end": 3802,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3669,
											"end": 3802,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3669,
											"end": 3802,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3669,
											"end": 3802,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3072,
											"end": 3661,
											"name": "tag",
											"source": 6,
											"value": "28"
										},
										{
											"begin": 3072,
											"end": 3661,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3180,
											"end": 3181,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3166,
											"end": 3182,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3166,
											"end": 3182,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3166,
											"end": 3168,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3166,
											"end": 3182,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3166,
											"end": 3182,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3166,
											"end": 3182,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3162,
											"end": 3251,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "82"
										},
										{
											"begin": 3162,
											"end": 3251,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3236,
											"end": 3237,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3206,
											"end": 3239,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3206,
											"end": 3239,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3206,
											"end": 3239,
											"name": "PUSH",
											"source": 6,
											"value": "64A0AE9200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3206,
											"end": 3239,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3206,
											"end": 3239,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3206,
											"end": 3239,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3206,
											"end": 3239,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3206,
											"end": 3239,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "83"
										},
										{
											"begin": 3206,
											"end": 3239,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3206,
											"end": 3239,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3206,
											"end": 3239,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3206,
											"end": 3239,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3206,
											"end": 3239,
											"name": "tag",
											"source": 6,
											"value": "83"
										},
										{
											"begin": 3206,
											"end": 3239,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3206,
											"end": 3239,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3206,
											"end": 3239,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3206,
											"end": 3239,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3206,
											"end": 3239,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3206,
											"end": 3239,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3206,
											"end": 3239,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3206,
											"end": 3239,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3162,
											"end": 3251,
											"name": "tag",
											"source": 6,
											"value": "82"
										},
										{
											"begin": 3162,
											"end": 3251,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3474,
											"end": 3495,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3498,
											"end": 3532,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 3506,
											"end": 3508,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3510,
											"end": 3517,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3519,
											"end": 3531,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "85"
										},
										{
											"begin": 3519,
											"end": 3529,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "86"
										},
										{
											"begin": 3519,
											"end": 3531,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3519,
											"end": 3531,
											"name": "tag",
											"source": 6,
											"value": "85"
										},
										{
											"begin": 3519,
											"end": 3531,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3498,
											"end": 3505,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "87"
										},
										{
											"begin": 3498,
											"end": 3532,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3498,
											"end": 3532,
											"name": "tag",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 3498,
											"end": 3532,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3474,
											"end": 3532,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3474,
											"end": 3532,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3564,
											"end": 3568,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3547,
											"end": 3568,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3547,
											"end": 3568,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3547,
											"end": 3560,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3547,
											"end": 3568,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3547,
											"end": 3568,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3547,
											"end": 3568,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 3543,
											"end": 3654,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "88"
										},
										{
											"begin": 3543,
											"end": 3654,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3613,
											"end": 3617,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3619,
											"end": 3626,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3628,
											"end": 3641,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3592,
											"end": 3642,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3592,
											"end": 3642,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3592,
											"end": 3642,
											"name": "PUSH",
											"source": 6,
											"value": "64283D7B00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3592,
											"end": 3642,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3592,
											"end": 3642,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3592,
											"end": 3642,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3592,
											"end": 3642,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3592,
											"end": 3642,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "89"
										},
										{
											"begin": 3592,
											"end": 3642,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 3592,
											"end": 3642,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3592,
											"end": 3642,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3592,
											"end": 3642,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3592,
											"end": 3642,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "90"
										},
										{
											"begin": 3592,
											"end": 3642,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3592,
											"end": 3642,
											"name": "tag",
											"source": 6,
											"value": "89"
										},
										{
											"begin": 3592,
											"end": 3642,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3592,
											"end": 3642,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3592,
											"end": 3642,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3592,
											"end": 3642,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3592,
											"end": 3642,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3592,
											"end": 3642,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3592,
											"end": 3642,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3592,
											"end": 3642,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3543,
											"end": 3654,
											"name": "tag",
											"source": 6,
											"value": "88"
										},
										{
											"begin": 3543,
											"end": 3654,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3151,
											"end": 3661,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3072,
											"end": 3661,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3072,
											"end": 3661,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3072,
											"end": 3661,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3072,
											"end": 3661,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1632,
											"end": 1821,
											"name": "tag",
											"source": 6,
											"value": "32"
										},
										{
											"begin": 1632,
											"end": 1821,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1687,
											"end": 1693,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1731,
											"end": 1732,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1714,
											"end": 1733,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1714,
											"end": 1733,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1714,
											"end": 1719,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1714,
											"end": 1733,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1714,
											"end": 1733,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1714,
											"end": 1733,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1706,
											"end": 1769,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "92"
										},
										{
											"begin": 1706,
											"end": 1769,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1706,
											"end": 1769,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1706,
											"end": 1769,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1706,
											"end": 1769,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1706,
											"end": 1769,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1706,
											"end": 1769,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1706,
											"end": 1769,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1706,
											"end": 1769,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1706,
											"end": 1769,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "93"
										},
										{
											"begin": 1706,
											"end": 1769,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1706,
											"end": 1769,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "94"
										},
										{
											"begin": 1706,
											"end": 1769,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1706,
											"end": 1769,
											"name": "tag",
											"source": 6,
											"value": "93"
										},
										{
											"begin": 1706,
											"end": 1769,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1706,
											"end": 1769,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1706,
											"end": 1769,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1706,
											"end": 1769,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1706,
											"end": 1769,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1706,
											"end": 1769,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1706,
											"end": 1769,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1706,
											"end": 1769,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1706,
											"end": 1769,
											"name": "tag",
											"source": 6,
											"value": "92"
										},
										{
											"begin": 1706,
											"end": 1769,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1787,
											"end": 1803,
											"name": "PUSH",
											"source": 6,
											"value": "4D9"
										},
										{
											"begin": 1787,
											"end": 1810,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1804,
											"end": 1809,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1787,
											"end": 1810,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1787,
											"end": 1810,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1787,
											"end": 1810,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1787,
											"end": 1810,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1787,
											"end": 1810,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1787,
											"end": 1810,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1787,
											"end": 1810,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1787,
											"end": 1810,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1787,
											"end": 1810,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1787,
											"end": 1810,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1787,
											"end": 1810,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1787,
											"end": 1810,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1787,
											"end": 1810,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1787,
											"end": 1810,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1787,
											"end": 1810,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 1811,
											"end": 1812,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1787,
											"end": 1813,
											"name": "PUSH",
											"source": 6,
											"value": "4B1"
										},
										{
											"begin": 1787,
											"end": 1813,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1787,
											"end": 1813,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 1787,
											"end": 1813,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "95"
										},
										{
											"begin": 1787,
											"end": 1813,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1787,
											"end": 1813,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "96"
										},
										{
											"begin": 1787,
											"end": 1813,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "97"
										},
										{
											"begin": 1787,
											"end": 1813,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1787,
											"end": 1813,
											"name": "tag",
											"source": 6,
											"value": "96"
										},
										{
											"begin": 1787,
											"end": 1813,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1787,
											"end": 1813,
											"name": "tag",
											"source": 6,
											"value": "95"
										},
										{
											"begin": 1787,
											"end": 1813,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1787,
											"end": 1813,
											"name": "PUSH",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 1787,
											"end": 1813,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1787,
											"end": 1813,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1787,
											"end": 1813,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1787,
											"end": 1813,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 1787,
											"end": 1813,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1787,
											"end": 1813,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1787,
											"end": 1813,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1787,
											"end": 1813,
											"name": "MOD",
											"source": 6
										},
										{
											"begin": 1787,
											"end": 1813,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 1787,
											"end": 1813,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 1787,
											"end": 1813,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1787,
											"end": 1813,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1787,
											"end": 1813,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1787,
											"end": 1813,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 1787,
											"end": 1813,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 1787,
											"end": 1813,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1787,
											"end": 1813,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 1787,
											"end": 1813,
											"name": "PUSH",
											"source": 6,
											"value": "FFFF"
										},
										{
											"begin": 1787,
											"end": 1813,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1780,
											"end": 1813,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1780,
											"end": 1813,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1632,
											"end": 1821,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1632,
											"end": 1821,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1632,
											"end": 1821,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1632,
											"end": 1821,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1831,
											"end": 1942,
											"name": "tag",
											"source": 6,
											"value": "38"
										},
										{
											"begin": 1831,
											"end": 1942,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1885,
											"end": 1892,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1912,
											"end": 1934,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 1926,
											"end": 1933,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1912,
											"end": 1925,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "101"
										},
										{
											"begin": 1912,
											"end": 1934,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1912,
											"end": 1934,
											"name": "tag",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 1912,
											"end": 1934,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1905,
											"end": 1934,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1905,
											"end": 1934,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1831,
											"end": 1942,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1831,
											"end": 1942,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1831,
											"end": 1942,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1831,
											"end": 1942,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2315,
											"end": 2475,
											"name": "tag",
											"source": 6,
											"value": "43"
										},
										{
											"begin": 2315,
											"end": 2475,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2381,
											"end": 2388,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2401,
											"end": 2423,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "103"
										},
										{
											"begin": 2415,
											"end": 2422,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2401,
											"end": 2414,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "101"
										},
										{
											"begin": 2401,
											"end": 2423,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2401,
											"end": 2423,
											"name": "tag",
											"source": 6,
											"value": "103"
										},
										{
											"begin": 2401,
											"end": 2423,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2401,
											"end": 2423,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2443,
											"end": 2458,
											"name": "PUSH",
											"source": 6,
											"value": "4DA"
										},
										{
											"begin": 2443,
											"end": 2467,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2459,
											"end": 2466,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2443,
											"end": 2467,
											"name": "PUSH",
											"source": 6,
											"value": "FFFF"
										},
										{
											"begin": 2443,
											"end": 2467,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2443,
											"end": 2467,
											"name": "PUSH",
											"source": 6,
											"value": "FFFF"
										},
										{
											"begin": 2443,
											"end": 2467,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2443,
											"end": 2467,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2443,
											"end": 2467,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2443,
											"end": 2467,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2443,
											"end": 2467,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2443,
											"end": 2467,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2443,
											"end": 2467,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2443,
											"end": 2467,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2443,
											"end": 2467,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2443,
											"end": 2467,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2443,
											"end": 2467,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2443,
											"end": 2467,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 2443,
											"end": 2467,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2443,
											"end": 2467,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2443,
											"end": 2467,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2443,
											"end": 2467,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2443,
											"end": 2467,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 2443,
											"end": 2467,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 2443,
											"end": 2467,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2443,
											"end": 2467,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 2443,
											"end": 2467,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2443,
											"end": 2467,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2436,
											"end": 2467,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2436,
											"end": 2467,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2315,
											"end": 2475,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2315,
											"end": 2475,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2315,
											"end": 2475,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2315,
											"end": 2475,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1541,
											"end": 1622,
											"name": "tag",
											"source": 6,
											"value": "46"
										},
										{
											"begin": 1541,
											"end": 1622,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1580,
											"end": 1587,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1607,
											"end": 1614,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1607,
											"end": 1614,
											"name": "PUSH",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 1607,
											"end": 1614,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1607,
											"end": 1614,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1607,
											"end": 1614,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1607,
											"end": 1614,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 1607,
											"end": 1614,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 1607,
											"end": 1614,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1607,
											"end": 1614,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 1607,
											"end": 1614,
											"name": "PUSH",
											"source": 6,
											"value": "B0"
										},
										{
											"begin": 1607,
											"end": 1614,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 1600,
											"end": 1614,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1600,
											"end": 1614,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1541,
											"end": 1622,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1541,
											"end": 1622,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2483,
											"end": 2907,
											"name": "tag",
											"source": 6,
											"value": "52"
										},
										{
											"begin": 2483,
											"end": 2907,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2585,
											"end": 2593,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2569,
											"end": 2593,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2569,
											"end": 2593,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2569,
											"end": 2581,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "106"
										},
										{
											"begin": 2569,
											"end": 2579,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "86"
										},
										{
											"begin": 2569,
											"end": 2581,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2569,
											"end": 2581,
											"name": "tag",
											"source": 6,
											"value": "106"
										},
										{
											"begin": 2569,
											"end": 2581,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2569,
											"end": 2593,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2569,
											"end": 2593,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2569,
											"end": 2593,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2561,
											"end": 2657,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "107"
										},
										{
											"begin": 2561,
											"end": 2657,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2561,
											"end": 2657,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2561,
											"end": 2657,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2561,
											"end": 2657,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2561,
											"end": 2657,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2561,
											"end": 2657,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2561,
											"end": 2657,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2561,
											"end": 2657,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2561,
											"end": 2657,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "108"
										},
										{
											"begin": 2561,
											"end": 2657,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2561,
											"end": 2657,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "109"
										},
										{
											"begin": 2561,
											"end": 2657,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2561,
											"end": 2657,
											"name": "tag",
											"source": 6,
											"value": "108"
										},
										{
											"begin": 2561,
											"end": 2657,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2561,
											"end": 2657,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2561,
											"end": 2657,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2561,
											"end": 2657,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2561,
											"end": 2657,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2561,
											"end": 2657,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2561,
											"end": 2657,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2561,
											"end": 2657,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2561,
											"end": 2657,
											"name": "tag",
											"source": 6,
											"value": "107"
										},
										{
											"begin": 2561,
											"end": 2657,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2692,
											"end": 2693,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2694,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2672,
											"end": 2694,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2672,
											"end": 2680,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2672,
											"end": 2694,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2672,
											"end": 2694,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2672,
											"end": 2694,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2668,
											"end": 2761,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "110"
										},
										{
											"begin": 2668,
											"end": 2761,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2740,
											"end": 2748,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2718,
											"end": 2749,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2718,
											"end": 2749,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2718,
											"end": 2749,
											"name": "PUSH",
											"source": 6,
											"value": "5B08BA1800000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2718,
											"end": 2749,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2718,
											"end": 2749,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2718,
											"end": 2749,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2718,
											"end": 2749,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2718,
											"end": 2749,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "111"
										},
										{
											"begin": 2718,
											"end": 2749,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2718,
											"end": 2749,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2718,
											"end": 2749,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2718,
											"end": 2749,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2718,
											"end": 2749,
											"name": "tag",
											"source": 6,
											"value": "111"
										},
										{
											"begin": 2718,
											"end": 2749,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2718,
											"end": 2749,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2718,
											"end": 2749,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2718,
											"end": 2749,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2718,
											"end": 2749,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2718,
											"end": 2749,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2718,
											"end": 2749,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2718,
											"end": 2749,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2668,
											"end": 2761,
											"name": "tag",
											"source": 6,
											"value": "110"
										},
										{
											"begin": 2668,
											"end": 2761,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2826,
											"end": 2834,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2781,
											"end": 2799,
											"name": "PUSH",
											"source": 6,
											"value": "4DB"
										},
										{
											"begin": 2781,
											"end": 2813,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2800,
											"end": 2812,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "112"
										},
										{
											"begin": 2800,
											"end": 2810,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "86"
										},
										{
											"begin": 2800,
											"end": 2812,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2800,
											"end": 2812,
											"name": "tag",
											"source": 6,
											"value": "112"
										},
										{
											"begin": 2800,
											"end": 2812,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2781,
											"end": 2813,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2781,
											"end": 2813,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2781,
											"end": 2813,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2781,
											"end": 2813,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2781,
											"end": 2813,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2781,
											"end": 2813,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2781,
											"end": 2813,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2781,
											"end": 2813,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2781,
											"end": 2813,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2781,
											"end": 2813,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2781,
											"end": 2813,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2781,
											"end": 2813,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2781,
											"end": 2813,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2781,
											"end": 2813,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2781,
											"end": 2813,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 2781,
											"end": 2823,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2814,
											"end": 2822,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2781,
											"end": 2823,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2781,
											"end": 2823,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2781,
											"end": 2823,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2781,
											"end": 2823,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2781,
											"end": 2823,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2781,
											"end": 2823,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2781,
											"end": 2823,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2781,
											"end": 2823,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2781,
											"end": 2823,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2781,
											"end": 2823,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2781,
											"end": 2823,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2781,
											"end": 2823,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2781,
											"end": 2823,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2781,
											"end": 2823,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2781,
											"end": 2823,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 2781,
											"end": 2823,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2781,
											"end": 2834,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 2781,
											"end": 2834,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 2781,
											"end": 2834,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2781,
											"end": 2834,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2781,
											"end": 2834,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2781,
											"end": 2834,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 2781,
											"end": 2834,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 2781,
											"end": 2834,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 2781,
											"end": 2834,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2781,
											"end": 2834,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2781,
											"end": 2834,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2781,
											"end": 2834,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2781,
											"end": 2834,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2781,
											"end": 2834,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 2781,
											"end": 2834,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 2781,
											"end": 2834,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2781,
											"end": 2834,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 2781,
											"end": 2834,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2880,
											"end": 2888,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2851,
											"end": 2899,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2851,
											"end": 2899,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2866,
											"end": 2878,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "113"
										},
										{
											"begin": 2866,
											"end": 2876,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "86"
										},
										{
											"begin": 2866,
											"end": 2878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2866,
											"end": 2878,
											"name": "tag",
											"source": 6,
											"value": "113"
										},
										{
											"begin": 2866,
											"end": 2878,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2851,
											"end": 2899,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2851,
											"end": 2899,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2851,
											"end": 2899,
											"name": "PUSH",
											"source": 6,
											"value": "17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
										},
										{
											"begin": 2890,
											"end": 2898,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2851,
											"end": 2899,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2851,
											"end": 2899,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2851,
											"end": 2899,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "114"
										},
										{
											"begin": 2851,
											"end": 2899,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2851,
											"end": 2899,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2851,
											"end": 2899,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "77"
										},
										{
											"begin": 2851,
											"end": 2899,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2851,
											"end": 2899,
											"name": "tag",
											"source": 6,
											"value": "114"
										},
										{
											"begin": 2851,
											"end": 2899,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2851,
											"end": 2899,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2851,
											"end": 2899,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2851,
											"end": 2899,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2851,
											"end": 2899,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2851,
											"end": 2899,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2851,
											"end": 2899,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2851,
											"end": 2899,
											"name": "LOG3",
											"source": 6
										},
										{
											"begin": 2483,
											"end": 2907,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2483,
											"end": 2907,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2483,
											"end": 2907,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3810,
											"end": 4020,
											"name": "tag",
											"source": 6,
											"value": "56"
										},
										{
											"begin": 3810,
											"end": 4020,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3923,
											"end": 3954,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "116"
										},
										{
											"begin": 3936,
											"end": 3940,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3942,
											"end": 3944,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3946,
											"end": 3953,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3923,
											"end": 3935,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "28"
										},
										{
											"begin": 3923,
											"end": 3954,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3923,
											"end": 3954,
											"name": "tag",
											"source": 6,
											"value": "116"
										},
										{
											"begin": 3923,
											"end": 3954,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3965,
											"end": 4012,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "117"
										},
										{
											"begin": 3988,
											"end": 3992,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3994,
											"end": 3996,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3998,
											"end": 4005,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4007,
											"end": 4011,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3965,
											"end": 3987,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "118"
										},
										{
											"begin": 3965,
											"end": 4012,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3965,
											"end": 4012,
											"name": "tag",
											"source": 6,
											"value": "117"
										},
										{
											"begin": 3965,
											"end": 4012,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3810,
											"end": 4020,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3810,
											"end": 4020,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3810,
											"end": 4020,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3810,
											"end": 4020,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3810,
											"end": 4020,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5753,
											"end": 5918,
											"name": "tag",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 5753,
											"end": 5918,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5909,
											"end": 5915,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5753,
											"end": 5918,
											"name": "SWAP6",
											"source": 6
										},
										{
											"begin": 5753,
											"end": 5918,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 5753,
											"end": 5918,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5753,
											"end": 5918,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5753,
											"end": 5918,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5753,
											"end": 5918,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5753,
											"end": 5918,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5753,
											"end": 5918,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1952,
											"end": 2192,
											"name": "tag",
											"source": 6,
											"value": "65"
										},
										{
											"begin": 1952,
											"end": 2192,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2007,
											"end": 2020,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 2033,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "121"
										},
										{
											"begin": 2047,
											"end": 2054,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2033,
											"end": 2046,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "101"
										},
										{
											"begin": 2033,
											"end": 2055,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2033,
											"end": 2055,
											"name": "tag",
											"source": 6,
											"value": "121"
										},
										{
											"begin": 2033,
											"end": 2055,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2033,
											"end": 2055,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2066,
											"end": 2084,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2087,
											"end": 2097,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "122"
										},
										{
											"begin": 2087,
											"end": 2095,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "123"
										},
										{
											"begin": 2087,
											"end": 2097,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2087,
											"end": 2097,
											"name": "tag",
											"source": 6,
											"value": "122"
										},
										{
											"begin": 2087,
											"end": 2097,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2066,
											"end": 2097,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2066,
											"end": 2097,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2136,
											"end": 2137,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2121,
											"end": 2125,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2115,
											"end": 2133,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2115,
											"end": 2137,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 2115,
											"end": 2184,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "124"
										},
										{
											"begin": 2115,
											"end": 2184,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2115,
											"end": 2184,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2115,
											"end": 2184,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2115,
											"end": 2184,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2115,
											"end": 2184,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2115,
											"end": 2184,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2115,
											"end": 2184,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2115,
											"end": 2184,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2115,
											"end": 2184,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2115,
											"end": 2184,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2115,
											"end": 2184,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2115,
											"end": 2184,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2115,
											"end": 2184,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2115,
											"end": 2184,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "125"
										},
										{
											"begin": 2115,
											"end": 2184,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2115,
											"end": 2184,
											"name": "tag",
											"source": 6,
											"value": "124"
										},
										{
											"begin": 2115,
											"end": 2184,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2154,
											"end": 2158,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2160,
											"end": 2178,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "126"
										},
										{
											"begin": 2160,
											"end": 2167,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2160,
											"end": 2176,
											"name": "PUSH",
											"source": 6,
											"value": "FFFF"
										},
										{
											"begin": 2160,
											"end": 2176,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2160,
											"end": 2176,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "127"
										},
										{
											"begin": 2160,
											"end": 2178,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2160,
											"end": 2178,
											"name": "tag",
											"source": 6,
											"value": "126"
										},
										{
											"begin": 2160,
											"end": 2178,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2140,
											"end": 2179,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2140,
											"end": 2179,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2140,
											"end": 2179,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2140,
											"end": 2179,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2140,
											"end": 2179,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "128"
										},
										{
											"begin": 2140,
											"end": 2179,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2140,
											"end": 2179,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2140,
											"end": 2179,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2140,
											"end": 2179,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "129"
										},
										{
											"begin": 2140,
											"end": 2179,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2140,
											"end": 2179,
											"name": "tag",
											"source": 6,
											"value": "128"
										},
										{
											"begin": 2140,
											"end": 2179,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2140,
											"end": 2179,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2140,
											"end": 2179,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2140,
											"end": 2179,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2140,
											"end": 2179,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2140,
											"end": 2179,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2140,
											"end": 2179,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2140,
											"end": 2179,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2140,
											"end": 2179,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2140,
											"end": 2179,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2140,
											"end": 2179,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2140,
											"end": 2179,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2140,
											"end": 2179,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2115,
											"end": 2184,
											"name": "tag",
											"source": 6,
											"value": "125"
										},
										{
											"begin": 2115,
											"end": 2184,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2108,
											"end": 2184,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2108,
											"end": 2184,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2108,
											"end": 2184,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1952,
											"end": 2192,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1952,
											"end": 2192,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1952,
											"end": 2192,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1952,
											"end": 2192,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2202,
											"end": 2307,
											"name": "tag",
											"source": 6,
											"value": "71"
										},
										{
											"begin": 2202,
											"end": 2307,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2265,
											"end": 2299,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "131"
										},
										{
											"begin": 2273,
											"end": 2275,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2277,
											"end": 2284,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2286,
											"end": 2298,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "132"
										},
										{
											"begin": 2286,
											"end": 2296,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "86"
										},
										{
											"begin": 2286,
											"end": 2298,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2286,
											"end": 2298,
											"name": "tag",
											"source": 6,
											"value": "132"
										},
										{
											"begin": 2286,
											"end": 2298,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2265,
											"end": 2272,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "133"
										},
										{
											"begin": 2265,
											"end": 2299,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2265,
											"end": 2299,
											"name": "tag",
											"source": 6,
											"value": "131"
										},
										{
											"begin": 2265,
											"end": 2299,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2202,
											"end": 2307,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2202,
											"end": 2307,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2202,
											"end": 2307,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2917,
											"end": 3064,
											"name": "tag",
											"source": 6,
											"value": "75"
										},
										{
											"begin": 2917,
											"end": 3064,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2997,
											"end": 3001,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3021,
											"end": 3039,
											"name": "PUSH",
											"source": 6,
											"value": "4DB"
										},
										{
											"begin": 3021,
											"end": 3046,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3040,
											"end": 3045,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3021,
											"end": 3046,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3021,
											"end": 3046,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3021,
											"end": 3046,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3021,
											"end": 3046,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3021,
											"end": 3046,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3021,
											"end": 3046,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3021,
											"end": 3046,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3021,
											"end": 3046,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3021,
											"end": 3046,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3021,
											"end": 3046,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3021,
											"end": 3046,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3021,
											"end": 3046,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3021,
											"end": 3046,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3021,
											"end": 3046,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3021,
											"end": 3046,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 3021,
											"end": 3056,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3047,
											"end": 3055,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3021,
											"end": 3056,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3021,
											"end": 3056,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3021,
											"end": 3056,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3021,
											"end": 3056,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3021,
											"end": 3056,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3021,
											"end": 3056,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3021,
											"end": 3056,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3021,
											"end": 3056,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3021,
											"end": 3056,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3021,
											"end": 3056,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3021,
											"end": 3056,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3021,
											"end": 3056,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3021,
											"end": 3056,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3021,
											"end": 3056,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3021,
											"end": 3056,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 3021,
											"end": 3056,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3021,
											"end": 3056,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3021,
											"end": 3056,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3021,
											"end": 3056,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3021,
											"end": 3056,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 3021,
											"end": 3056,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 3021,
											"end": 3056,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3021,
											"end": 3056,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 3021,
											"end": 3056,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 3021,
											"end": 3056,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3014,
											"end": 3056,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3014,
											"end": 3056,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2917,
											"end": 3064,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2917,
											"end": 3064,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2917,
											"end": 3064,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2917,
											"end": 3064,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2917,
											"end": 3064,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4030,
											"end": 4125,
											"name": "tag",
											"source": 6,
											"value": "87"
										},
										{
											"begin": 4030,
											"end": 4125,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4106,
											"end": 4113,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4030,
											"end": 4125,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 4030,
											"end": 4125,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4030,
											"end": 4125,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4030,
											"end": 4125,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4030,
											"end": 4125,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4030,
											"end": 4125,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4574,
											"end": 4838,
											"name": "tag",
											"source": 6,
											"value": "101"
										},
										{
											"begin": 4574,
											"end": 4838,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4635,
											"end": 4642,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4667,
											"end": 4674,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4663,
											"end": 4674,
											"name": "PUSH",
											"source": 6,
											"value": "FFFF"
										},
										{
											"begin": 4663,
											"end": 4674,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4663,
											"end": 4664,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4663,
											"end": 4674,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 4663,
											"end": 4711,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4663,
											"end": 4711,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4663,
											"end": 4711,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "138"
										},
										{
											"begin": 4663,
											"end": 4711,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4663,
											"end": 4711,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4689,
											"end": 4697,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 4689,
											"end": 4711,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4689,
											"end": 4711,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4689,
											"end": 4711,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 4689,
											"end": 4711,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4689,
											"end": 4711,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4689,
											"end": 4711,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4689,
											"end": 4711,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 4689,
											"end": 4711,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 4689,
											"end": 4711,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4689,
											"end": 4711,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 4689,
											"end": 4711,
											"name": "PUSH",
											"source": 6,
											"value": "FFFF"
										},
										{
											"begin": 4689,
											"end": 4711,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4678,
											"end": 4711,
											"name": "PUSH",
											"source": 6,
											"value": "FFFF"
										},
										{
											"begin": 4678,
											"end": 4711,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4678,
											"end": 4685,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4678,
											"end": 4711,
											"name": "PUSH",
											"source": 6,
											"value": "FFFF"
										},
										{
											"begin": 4678,
											"end": 4711,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4678,
											"end": 4711,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 4678,
											"end": 4711,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4663,
											"end": 4711,
											"name": "tag",
											"source": 6,
											"value": "138"
										},
										{
											"begin": 4663,
											"end": 4711,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4655,
											"end": 4795,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "139"
										},
										{
											"begin": 4655,
											"end": 4795,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4655,
											"end": 4795,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4655,
											"end": 4795,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4655,
											"end": 4795,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4655,
											"end": 4795,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4655,
											"end": 4795,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4655,
											"end": 4795,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4655,
											"end": 4795,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4655,
											"end": 4795,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "140"
										},
										{
											"begin": 4655,
											"end": 4795,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4655,
											"end": 4795,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "141"
										},
										{
											"begin": 4655,
											"end": 4795,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4655,
											"end": 4795,
											"name": "tag",
											"source": 6,
											"value": "140"
										},
										{
											"begin": 4655,
											"end": 4795,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4655,
											"end": 4795,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4655,
											"end": 4795,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4655,
											"end": 4795,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4655,
											"end": 4795,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4655,
											"end": 4795,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4655,
											"end": 4795,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4655,
											"end": 4795,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 4655,
											"end": 4795,
											"name": "tag",
											"source": 6,
											"value": "139"
										},
										{
											"begin": 4655,
											"end": 4795,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4814,
											"end": 4821,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 4822,
											"end": 4829,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4814,
											"end": 4830,
											"name": "PUSH",
											"source": 6,
											"value": "FFFF"
										},
										{
											"begin": 4814,
											"end": 4830,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4814,
											"end": 4830,
											"name": "PUSH",
											"source": 6,
											"value": "4B1"
										},
										{
											"begin": 4814,
											"end": 4830,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4814,
											"end": 4830,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 4814,
											"end": 4830,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "142"
										},
										{
											"begin": 4814,
											"end": 4830,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4814,
											"end": 4830,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "143"
										},
										{
											"begin": 4814,
											"end": 4830,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "97"
										},
										{
											"begin": 4814,
											"end": 4830,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4814,
											"end": 4830,
											"name": "tag",
											"source": 6,
											"value": "143"
										},
										{
											"begin": 4814,
											"end": 4830,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4814,
											"end": 4830,
											"name": "tag",
											"source": 6,
											"value": "142"
										},
										{
											"begin": 4814,
											"end": 4830,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4814,
											"end": 4830,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4814,
											"end": 4830,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4814,
											"end": 4830,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4814,
											"end": 4830,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4814,
											"end": 4830,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4814,
											"end": 4830,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 4814,
											"end": 4830,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 4814,
											"end": 4830,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4814,
											"end": 4830,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 4814,
											"end": 4830,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4814,
											"end": 4830,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4807,
											"end": 4830,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4807,
											"end": 4830,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4574,
											"end": 4838,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4574,
											"end": 4838,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4574,
											"end": 4838,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4574,
											"end": 4838,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4941,
											"end": 5745,
											"name": "tag",
											"source": 6,
											"value": "118"
										},
										{
											"begin": 4941,
											"end": 5745,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5074,
											"end": 5075,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5057,
											"end": 5059,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5057,
											"end": 5071,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5057,
											"end": 5071,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5057,
											"end": 5071,
											"name": "EXTCODESIZE",
											"source": 6
										},
										{
											"begin": 5057,
											"end": 5075,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 5053,
											"end": 5738,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5053,
											"end": 5738,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "146"
										},
										{
											"begin": 5053,
											"end": 5738,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5115,
											"end": 5117,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5096,
											"end": 5135,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5096,
											"end": 5135,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5096,
											"end": 5135,
											"name": "PUSH",
											"source": 6,
											"value": "B1CFF380"
										},
										{
											"begin": 5136,
											"end": 5148,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "147"
										},
										{
											"begin": 5136,
											"end": 5146,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "86"
										},
										{
											"begin": 5136,
											"end": 5148,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5136,
											"end": 5148,
											"name": "tag",
											"source": 6,
											"value": "147"
										},
										{
											"begin": 5136,
											"end": 5148,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5150,
											"end": 5154,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 5156,
											"end": 5163,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 5165,
											"end": 5169,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 5096,
											"end": 5170,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5096,
											"end": 5170,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5096,
											"end": 5170,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 5096,
											"end": 5170,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5096,
											"end": 5170,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5096,
											"end": 5170,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 5096,
											"end": 5170,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 5096,
											"end": 5170,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5096,
											"end": 5170,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5096,
											"end": 5170,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 5096,
											"end": 5170,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5096,
											"end": 5170,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "148"
										},
										{
											"begin": 5096,
											"end": 5170,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 5096,
											"end": 5170,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 5096,
											"end": 5170,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5096,
											"end": 5170,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5096,
											"end": 5170,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5096,
											"end": 5170,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "149"
										},
										{
											"begin": 5096,
											"end": 5170,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5096,
											"end": 5170,
											"name": "tag",
											"source": 6,
											"value": "148"
										},
										{
											"begin": 5096,
											"end": 5170,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5096,
											"end": 5170,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5096,
											"end": 5170,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5096,
											"end": 5170,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5096,
											"end": 5170,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5096,
											"end": 5170,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5096,
											"end": 5170,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5096,
											"end": 5170,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5096,
											"end": 5170,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5096,
											"end": 5170,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 5096,
											"end": 5170,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 5096,
											"end": 5170,
											"name": "CALL",
											"source": 6
										},
										{
											"begin": 5096,
											"end": 5170,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5096,
											"end": 5170,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5096,
											"end": 5170,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5096,
											"end": 5170,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5096,
											"end": 5170,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5096,
											"end": 5170,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5096,
											"end": 5170,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "150"
										},
										{
											"begin": 5096,
											"end": 5170,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5096,
											"end": 5170,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5096,
											"end": 5170,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5096,
											"end": 5170,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5096,
											"end": 5170,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 5096,
											"end": 5170,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 5096,
											"end": 5170,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 5096,
											"end": 5170,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 5096,
											"end": 5170,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5096,
											"end": 5170,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5096,
											"end": 5170,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5096,
											"end": 5170,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5096,
											"end": 5170,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5096,
											"end": 5170,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5096,
											"end": 5170,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5096,
											"end": 5170,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5096,
											"end": 5170,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5096,
											"end": 5170,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5096,
											"end": 5170,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5096,
											"end": 5170,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5096,
											"end": 5170,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "151"
										},
										{
											"begin": 5096,
											"end": 5170,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5096,
											"end": 5170,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5096,
											"end": 5170,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "152"
										},
										{
											"begin": 5096,
											"end": 5170,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5096,
											"end": 5170,
											"name": "tag",
											"source": 6,
											"value": "151"
										},
										{
											"begin": 5096,
											"end": 5170,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5096,
											"end": 5170,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 5096,
											"end": 5170,
											"name": "tag",
											"source": 6,
											"value": "150"
										},
										{
											"begin": 5096,
											"end": 5170,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5092,
											"end": 5727,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "153"
										},
										{
											"begin": 5092,
											"end": 5727,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5092,
											"end": 5727,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 5092,
											"end": 5727,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5092,
											"end": 5727,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5092,
											"end": 5727,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5092,
											"end": 5727,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 5092,
											"end": 5727,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "158"
										},
										{
											"begin": 5092,
											"end": 5727,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5092,
											"end": 5727,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5092,
											"end": 5727,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5092,
											"end": 5727,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5092,
											"end": 5727,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5092,
											"end": 5727,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 5092,
											"end": 5727,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 5092,
											"end": 5727,
											"name": "PUSH",
											"source": 6,
											"value": "3F"
										},
										{
											"begin": 5092,
											"end": 5727,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 5092,
											"end": 5727,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5092,
											"end": 5727,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5092,
											"end": 5727,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5092,
											"end": 5727,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5092,
											"end": 5727,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5092,
											"end": 5727,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5092,
											"end": 5727,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 5092,
											"end": 5727,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5092,
											"end": 5727,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5092,
											"end": 5727,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 5092,
											"end": 5727,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5092,
											"end": 5727,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5092,
											"end": 5727,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5092,
											"end": 5727,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5092,
											"end": 5727,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 5092,
											"end": 5727,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "157"
										},
										{
											"begin": 5092,
											"end": 5727,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5092,
											"end": 5727,
											"name": "tag",
											"source": 6,
											"value": "158"
										},
										{
											"begin": 5092,
											"end": 5727,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5092,
											"end": 5727,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 5092,
											"end": 5727,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5092,
											"end": 5727,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5092,
											"end": 5727,
											"name": "tag",
											"source": 6,
											"value": "157"
										},
										{
											"begin": 5092,
											"end": 5727,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5092,
											"end": 5727,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5433,
											"end": 5434,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5416,
											"end": 5422,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5416,
											"end": 5429,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5416,
											"end": 5434,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5412,
											"end": 5712,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "159"
										},
										{
											"begin": 5412,
											"end": 5712,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5488,
											"end": 5490,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5466,
											"end": 5491,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5466,
											"end": 5491,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5466,
											"end": 5491,
											"name": "PUSH",
											"source": 6,
											"value": "64A0AE9200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5466,
											"end": 5491,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5466,
											"end": 5491,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5466,
											"end": 5491,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 5466,
											"end": 5491,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5466,
											"end": 5491,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "160"
										},
										{
											"begin": 5466,
											"end": 5491,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5466,
											"end": 5491,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5466,
											"end": 5491,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5466,
											"end": 5491,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5466,
											"end": 5491,
											"name": "tag",
											"source": 6,
											"value": "160"
										},
										{
											"begin": 5466,
											"end": 5491,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5466,
											"end": 5491,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5466,
											"end": 5491,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5466,
											"end": 5491,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5466,
											"end": 5491,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5466,
											"end": 5491,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5466,
											"end": 5491,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5466,
											"end": 5491,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 5412,
											"end": 5712,
											"name": "tag",
											"source": 6,
											"value": "159"
										},
										{
											"begin": 5412,
											"end": 5712,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5662,
											"end": 5668,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5656,
											"end": 5669,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5647,
											"end": 5653,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5643,
											"end": 5645,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5639,
											"end": 5654,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5632,
											"end": 5670,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 5092,
											"end": 5727,
											"name": "tag",
											"source": 6,
											"value": "153"
										},
										{
											"begin": 5092,
											"end": 5727,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5228,
											"end": 5272,
											"name": "PUSH",
											"source": 6,
											"value": "B1CFF380"
										},
										{
											"begin": 5228,
											"end": 5272,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 5228,
											"end": 5272,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 5218,
											"end": 5272,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5218,
											"end": 5272,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 5218,
											"end": 5272,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5218,
											"end": 5224,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5218,
											"end": 5272,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5218,
											"end": 5272,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 5218,
											"end": 5272,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5218,
											"end": 5272,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 5214,
											"end": 5349,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "163"
										},
										{
											"begin": 5214,
											"end": 5349,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5326,
											"end": 5328,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5304,
											"end": 5329,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5304,
											"end": 5329,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5304,
											"end": 5329,
											"name": "PUSH",
											"source": 6,
											"value": "64A0AE9200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5304,
											"end": 5329,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5304,
											"end": 5329,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5304,
											"end": 5329,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 5304,
											"end": 5329,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5304,
											"end": 5329,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "164"
										},
										{
											"begin": 5304,
											"end": 5329,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5304,
											"end": 5329,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5304,
											"end": 5329,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5304,
											"end": 5329,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5304,
											"end": 5329,
											"name": "tag",
											"source": 6,
											"value": "164"
										},
										{
											"begin": 5304,
											"end": 5329,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5304,
											"end": 5329,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5304,
											"end": 5329,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5304,
											"end": 5329,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5304,
											"end": 5329,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5304,
											"end": 5329,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5304,
											"end": 5329,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5304,
											"end": 5329,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 5214,
											"end": 5349,
											"name": "tag",
											"source": 6,
											"value": "163"
										},
										{
											"begin": 5214,
											"end": 5349,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5171,
											"end": 5364,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5053,
											"end": 5738,
											"name": "tag",
											"source": 6,
											"value": "146"
										},
										{
											"begin": 5053,
											"end": 5738,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4941,
											"end": 5745,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4941,
											"end": 5745,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4941,
											"end": 5745,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4941,
											"end": 5745,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4941,
											"end": 5745,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4848,
											"end": 4933,
											"name": "tag",
											"source": 6,
											"value": "123"
										},
										{
											"begin": 4848,
											"end": 4933,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4890,
											"end": 4903,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 4916,
											"end": 4925,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4916,
											"end": 4925,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4916,
											"end": 4925,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4916,
											"end": 4925,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4916,
											"end": 4925,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4916,
											"end": 4925,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4916,
											"end": 4925,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4916,
											"end": 4925,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4916,
											"end": 4925,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4916,
											"end": 4925,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4916,
											"end": 4925,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4916,
											"end": 4925,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4916,
											"end": 4925,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4916,
											"end": 4925,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4848,
											"end": 4933,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4848,
											"end": 4933,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 637,
											"end": 1335,
											"name": "tag",
											"source": 3,
											"value": "127"
										},
										{
											"begin": 637,
											"end": 1335,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 693,
											"end": 706,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 742,
											"end": 756,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 779,
											"end": 780,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 759,
											"end": 776,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "167"
										},
										{
											"begin": 770,
											"end": 775,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 759,
											"end": 769,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "168"
										},
										{
											"begin": 759,
											"end": 776,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 759,
											"end": 776,
											"name": "tag",
											"source": 3,
											"value": "167"
										},
										{
											"begin": 759,
											"end": 776,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 759,
											"end": 780,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 742,
											"end": 780,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 742,
											"end": 780,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 794,
											"end": 814,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 828,
											"end": 834,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 817,
											"end": 835,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "169"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "170"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "171"
										},
										{
											"begin": 817,
											"end": 835,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 817,
											"end": 835,
											"name": "tag",
											"source": 3,
											"value": "170"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 817,
											"end": 835,
											"name": "tag",
											"source": 3,
											"value": "169"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 817,
											"end": 835,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 817,
											"end": 835,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 817,
											"end": 835,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "172"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 817,
											"end": 835,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 817,
											"end": 835,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 817,
											"end": 835,
											"name": "CALLDATACOPY",
											"source": 3
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 817,
											"end": 835,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 817,
											"end": 835,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 817,
											"end": 835,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 817,
											"end": 835,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 817,
											"end": 835,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 817,
											"end": 835,
											"name": "tag",
											"source": 3,
											"value": "172"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 817,
											"end": 835,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 794,
											"end": 835,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 794,
											"end": 835,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 849,
											"end": 860,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 975,
											"end": 981,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 971,
											"end": 973,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 967,
											"end": 982,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 959,
											"end": 965,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 955,
											"end": 983,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 948,
											"end": 983,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 948,
											"end": 983,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1010,
											"end": 1292,
											"name": "tag",
											"source": 3,
											"value": "173"
										},
										{
											"begin": 1010,
											"end": 1292,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1017,
											"end": 1021,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1010,
											"end": 1292,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1010,
											"end": 1292,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "174"
										},
										{
											"begin": 1010,
											"end": 1292,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1041,
											"end": 1046,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1041,
											"end": 1046,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1041,
											"end": 1046,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1041,
											"end": 1046,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1041,
											"end": 1046,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1041,
											"end": 1046,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1041,
											"end": 1046,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1041,
											"end": 1046,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1180,
											"end": 1190,
											"name": "PUSH",
											"source": 3,
											"value": "3031323334353637383961626364656600000000000000000000000000000000"
										},
										{
											"begin": 1175,
											"end": 1177,
											"name": "PUSH",
											"source": 3,
											"value": "A"
										},
										{
											"begin": 1168,
											"end": 1173,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 1164,
											"end": 1178,
											"name": "MOD",
											"source": 3
										},
										{
											"begin": 1159,
											"end": 1191,
											"name": "BYTE",
											"source": 3
										},
										{
											"begin": 1154,
											"end": 1157,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1146,
											"end": 1192,
											"name": "MSTORE8",
											"source": 3
										},
										{
											"begin": 1236,
											"end": 1238,
											"name": "PUSH",
											"source": 3,
											"value": "A"
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "175"
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "176"
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "177"
										},
										{
											"begin": 1227,
											"end": 1238,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "tag",
											"source": 3,
											"value": "176"
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "tag",
											"source": 3,
											"value": "175"
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1269,
											"end": 1270,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1260,
											"end": 1265,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1260,
											"end": 1270,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1010,
											"end": 1292,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "173"
										},
										{
											"begin": 1256,
											"end": 1277,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1010,
											"end": 1292,
											"name": "tag",
											"source": 3,
											"value": "174"
										},
										{
											"begin": 1010,
											"end": 1292,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1312,
											"end": 1318,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1305,
											"end": 1318,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 1305,
											"end": 1318,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1305,
											"end": 1318,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1305,
											"end": 1318,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1305,
											"end": 1318,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 637,
											"end": 1335,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 637,
											"end": 1335,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 637,
											"end": 1335,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 637,
											"end": 1335,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4135,
											"end": 4556,
											"name": "tag",
											"source": 6,
											"value": "133"
										},
										{
											"begin": 4135,
											"end": 4556,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4213,
											"end": 4226,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4229,
											"end": 4251,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "180"
										},
										{
											"begin": 4243,
											"end": 4250,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4229,
											"end": 4242,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "101"
										},
										{
											"begin": 4229,
											"end": 4251,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4229,
											"end": 4251,
											"name": "tag",
											"source": 6,
											"value": "180"
										},
										{
											"begin": 4229,
											"end": 4251,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4213,
											"end": 4251,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4213,
											"end": 4251,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4279,
											"end": 4281,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4270,
											"end": 4281,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4270,
											"end": 4281,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4270,
											"end": 4275,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4270,
											"end": 4281,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4270,
											"end": 4281,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4270,
											"end": 4281,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4262,
											"end": 4345,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "181"
										},
										{
											"begin": 4262,
											"end": 4345,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4262,
											"end": 4345,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4262,
											"end": 4345,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4262,
											"end": 4345,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4262,
											"end": 4345,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4262,
											"end": 4345,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4262,
											"end": 4345,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4262,
											"end": 4345,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4262,
											"end": 4345,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "182"
										},
										{
											"begin": 4262,
											"end": 4345,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4262,
											"end": 4345,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "109"
										},
										{
											"begin": 4262,
											"end": 4345,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4262,
											"end": 4345,
											"name": "tag",
											"source": 6,
											"value": "182"
										},
										{
											"begin": 4262,
											"end": 4345,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4262,
											"end": 4345,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4262,
											"end": 4345,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4262,
											"end": 4345,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4262,
											"end": 4345,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4262,
											"end": 4345,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4262,
											"end": 4345,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4262,
											"end": 4345,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 4262,
											"end": 4345,
											"name": "tag",
											"source": 6,
											"value": "181"
										},
										{
											"begin": 4262,
											"end": 4345,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4368,
											"end": 4372,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4359,
											"end": 4372,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4359,
											"end": 4372,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4359,
											"end": 4364,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4359,
											"end": 4372,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4359,
											"end": 4372,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4359,
											"end": 4372,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 4359,
											"end": 4372,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4359,
											"end": 4406,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4359,
											"end": 4406,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4359,
											"end": 4406,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "183"
										},
										{
											"begin": 4359,
											"end": 4406,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4359,
											"end": 4406,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4377,
											"end": 4406,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "184"
										},
										{
											"begin": 4394,
											"end": 4399,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4401,
											"end": 4405,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4377,
											"end": 4393,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "75"
										},
										{
											"begin": 4377,
											"end": 4406,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4377,
											"end": 4406,
											"name": "tag",
											"source": 6,
											"value": "184"
										},
										{
											"begin": 4377,
											"end": 4406,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4376,
											"end": 4406,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4359,
											"end": 4406,
											"name": "tag",
											"source": 6,
											"value": "183"
										},
										{
											"begin": 4359,
											"end": 4406,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4355,
											"end": 4463,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4355,
											"end": 4463,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "185"
										},
										{
											"begin": 4355,
											"end": 4463,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4447,
											"end": 4451,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4425,
											"end": 4452,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4425,
											"end": 4452,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4425,
											"end": 4452,
											"name": "PUSH",
											"source": 6,
											"value": "A9FBF51F00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4425,
											"end": 4452,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4425,
											"end": 4452,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4425,
											"end": 4452,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4425,
											"end": 4452,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4425,
											"end": 4452,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "186"
										},
										{
											"begin": 4425,
											"end": 4452,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4425,
											"end": 4452,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4425,
											"end": 4452,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4425,
											"end": 4452,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4425,
											"end": 4452,
											"name": "tag",
											"source": 6,
											"value": "186"
										},
										{
											"begin": 4425,
											"end": 4452,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4425,
											"end": 4452,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4425,
											"end": 4452,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4425,
											"end": 4452,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4425,
											"end": 4452,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4425,
											"end": 4452,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4425,
											"end": 4452,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4425,
											"end": 4452,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 4355,
											"end": 4463,
											"name": "tag",
											"source": 6,
											"value": "185"
										},
										{
											"begin": 4355,
											"end": 4463,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4502,
											"end": 4504,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4475,
											"end": 4490,
											"name": "PUSH",
											"source": 6,
											"value": "4DA"
										},
										{
											"begin": 4475,
											"end": 4499,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4491,
											"end": 4498,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 4475,
											"end": 4499,
											"name": "PUSH",
											"source": 6,
											"value": "FFFF"
										},
										{
											"begin": 4475,
											"end": 4499,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4475,
											"end": 4499,
											"name": "PUSH",
											"source": 6,
											"value": "FFFF"
										},
										{
											"begin": 4475,
											"end": 4499,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4475,
											"end": 4499,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4475,
											"end": 4499,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4475,
											"end": 4499,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4475,
											"end": 4499,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4475,
											"end": 4499,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4475,
											"end": 4499,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4475,
											"end": 4499,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4475,
											"end": 4499,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4475,
											"end": 4499,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4475,
											"end": 4499,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4475,
											"end": 4499,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 4475,
											"end": 4499,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4475,
											"end": 4504,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 4475,
											"end": 4504,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 4475,
											"end": 4504,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4475,
											"end": 4504,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4475,
											"end": 4504,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4475,
											"end": 4504,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4475,
											"end": 4504,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 4475,
											"end": 4504,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 4475,
											"end": 4504,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4475,
											"end": 4504,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4475,
											"end": 4504,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4475,
											"end": 4504,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4475,
											"end": 4504,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4475,
											"end": 4504,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 4475,
											"end": 4504,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 4475,
											"end": 4504,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4475,
											"end": 4504,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 4475,
											"end": 4504,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4540,
											"end": 4547,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4520,
											"end": 4548,
											"name": "PUSH",
											"source": 6,
											"value": "FFFF"
										},
										{
											"begin": 4520,
											"end": 4548,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4536,
											"end": 4538,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4520,
											"end": 4548,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4520,
											"end": 4548,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4529,
											"end": 4534,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4520,
											"end": 4548,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4520,
											"end": 4548,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4520,
											"end": 4548,
											"name": "PUSH",
											"source": 6,
											"value": "A9D294FD4BD42BB30E96CBA2B478D149A783FBA3C729B1E5C42BEC89D95B85A"
										},
										{
											"begin": 4520,
											"end": 4548,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4520,
											"end": 4548,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4520,
											"end": 4548,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4520,
											"end": 4548,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4520,
											"end": 4548,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4520,
											"end": 4548,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4520,
											"end": 4548,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4520,
											"end": 4548,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4520,
											"end": 4548,
											"name": "LOG4",
											"source": 6
										},
										{
											"begin": 4202,
											"end": 4556,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4135,
											"end": 4556,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4135,
											"end": 4556,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4135,
											"end": 4556,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4135,
											"end": 4556,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 12214,
											"end": 13130,
											"name": "tag",
											"source": 4,
											"value": "168"
										},
										{
											"begin": 12214,
											"end": 13130,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12267,
											"end": 12274,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 12286,
											"end": 12300,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 12303,
											"end": 12304,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 12286,
											"end": 12304,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 12286,
											"end": 12304,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12351,
											"end": 12359,
											"name": "PUSH",
											"source": 4,
											"value": "184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000"
										},
										{
											"begin": 12342,
											"end": 12347,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 12342,
											"end": 12359,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 12338,
											"end": 12441,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "188"
										},
										{
											"begin": 12338,
											"end": 12441,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 12388,
											"end": 12396,
											"name": "PUSH",
											"source": 4,
											"value": "184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000"
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "189"
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "190"
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "177"
										},
										{
											"begin": 12379,
											"end": 12396,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "tag",
											"source": 4,
											"value": "190"
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "tag",
											"source": 4,
											"value": "189"
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12424,
											"end": 12426,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 12414,
											"end": 12426,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 12414,
											"end": 12426,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 12414,
											"end": 12426,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 12414,
											"end": 12426,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12338,
											"end": 12441,
											"name": "tag",
											"source": 4,
											"value": "188"
										},
										{
											"begin": 12338,
											"end": 12441,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12467,
											"end": 12475,
											"name": "PUSH",
											"source": 4,
											"value": "4EE2D6D415B85ACEF8100000000"
										},
										{
											"begin": 12458,
											"end": 12463,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 12458,
											"end": 12475,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 12454,
											"end": 12557,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "191"
										},
										{
											"begin": 12454,
											"end": 12557,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 12504,
											"end": 12512,
											"name": "PUSH",
											"source": 4,
											"value": "4EE2D6D415B85ACEF8100000000"
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "192"
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "193"
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "177"
										},
										{
											"begin": 12495,
											"end": 12512,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "tag",
											"source": 4,
											"value": "193"
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "tag",
											"source": 4,
											"value": "192"
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12540,
											"end": 12542,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 12530,
											"end": 12542,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 12530,
											"end": 12542,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 12530,
											"end": 12542,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 12530,
											"end": 12542,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12454,
											"end": 12557,
											"name": "tag",
											"source": 4,
											"value": "191"
										},
										{
											"begin": 12454,
											"end": 12557,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12583,
											"end": 12591,
											"name": "PUSH",
											"source": 4,
											"value": "2386F26FC10000"
										},
										{
											"begin": 12574,
											"end": 12579,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 12574,
											"end": 12591,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 12570,
											"end": 12673,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "194"
										},
										{
											"begin": 12570,
											"end": 12673,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 12620,
											"end": 12628,
											"name": "PUSH",
											"source": 4,
											"value": "2386F26FC10000"
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "195"
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "196"
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "177"
										},
										{
											"begin": 12611,
											"end": 12628,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "tag",
											"source": 4,
											"value": "196"
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "tag",
											"source": 4,
											"value": "195"
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12656,
											"end": 12658,
											"name": "PUSH",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 12646,
											"end": 12658,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 12646,
											"end": 12658,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 12646,
											"end": 12658,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 12646,
											"end": 12658,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12570,
											"end": 12673,
											"name": "tag",
											"source": 4,
											"value": "194"
										},
										{
											"begin": 12570,
											"end": 12673,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12699,
											"end": 12706,
											"name": "PUSH",
											"source": 4,
											"value": "5F5E100"
										},
										{
											"begin": 12690,
											"end": 12695,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 12690,
											"end": 12706,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 12686,
											"end": 12786,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "197"
										},
										{
											"begin": 12686,
											"end": 12786,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 12735,
											"end": 12742,
											"name": "PUSH",
											"source": 4,
											"value": "5F5E100"
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "198"
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "199"
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "177"
										},
										{
											"begin": 12726,
											"end": 12742,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "tag",
											"source": 4,
											"value": "199"
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "tag",
											"source": 4,
											"value": "198"
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12770,
											"end": 12771,
											"name": "PUSH",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 12760,
											"end": 12771,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 12760,
											"end": 12771,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 12760,
											"end": 12771,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 12760,
											"end": 12771,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12686,
											"end": 12786,
											"name": "tag",
											"source": 4,
											"value": "197"
										},
										{
											"begin": 12686,
											"end": 12786,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12812,
											"end": 12819,
											"name": "PUSH",
											"source": 4,
											"value": "2710"
										},
										{
											"begin": 12803,
											"end": 12808,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 12803,
											"end": 12819,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 12799,
											"end": 12899,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "200"
										},
										{
											"begin": 12799,
											"end": 12899,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 12848,
											"end": 12855,
											"name": "PUSH",
											"source": 4,
											"value": "2710"
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "201"
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "202"
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "177"
										},
										{
											"begin": 12839,
											"end": 12855,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "tag",
											"source": 4,
											"value": "202"
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "tag",
											"source": 4,
											"value": "201"
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12883,
											"end": 12884,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 12873,
											"end": 12884,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 12873,
											"end": 12884,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 12873,
											"end": 12884,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 12873,
											"end": 12884,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12799,
											"end": 12899,
											"name": "tag",
											"source": 4,
											"value": "200"
										},
										{
											"begin": 12799,
											"end": 12899,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12925,
											"end": 12932,
											"name": "PUSH",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 12916,
											"end": 12921,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 12916,
											"end": 12932,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 12912,
											"end": 13012,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "203"
										},
										{
											"begin": 12912,
											"end": 13012,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 12961,
											"end": 12968,
											"name": "PUSH",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "204"
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "205"
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "177"
										},
										{
											"begin": 12952,
											"end": 12968,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "tag",
											"source": 4,
											"value": "205"
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "tag",
											"source": 4,
											"value": "204"
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12996,
											"end": 12997,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 12986,
											"end": 12997,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 12986,
											"end": 12997,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 12986,
											"end": 12997,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 12986,
											"end": 12997,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12912,
											"end": 13012,
											"name": "tag",
											"source": 4,
											"value": "203"
										},
										{
											"begin": 12912,
											"end": 13012,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 13038,
											"end": 13045,
											"name": "PUSH",
											"source": 4,
											"value": "A"
										},
										{
											"begin": 13029,
											"end": 13034,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 13029,
											"end": 13045,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 13025,
											"end": 13091,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "206"
										},
										{
											"begin": 13025,
											"end": 13091,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 13075,
											"end": 13076,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 13065,
											"end": 13076,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 13065,
											"end": 13076,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 13065,
											"end": 13076,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 13065,
											"end": 13076,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 13025,
											"end": 13091,
											"name": "tag",
											"source": 4,
											"value": "206"
										},
										{
											"begin": 13025,
											"end": 13091,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 13117,
											"end": 13123,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 13110,
											"end": 13123,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 13110,
											"end": 13123,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 13110,
											"end": 13123,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12214,
											"end": 13130,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 12214,
											"end": 13130,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 12214,
											"end": 13130,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12214,
											"end": 13130,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7,
											"end": 157,
											"name": "tag",
											"source": 8,
											"value": "207"
										},
										{
											"begin": 7,
											"end": 157,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 84,
											"end": 150,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF000000000000000000000000"
										},
										{
											"begin": 77,
											"end": 82,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 73,
											"end": 151,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 62,
											"end": 151,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 62,
											"end": 151,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7,
											"end": 157,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7,
											"end": 157,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7,
											"end": 157,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7,
											"end": 157,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 163,
											"end": 281,
											"name": "tag",
											"source": 8,
											"value": "208"
										},
										{
											"begin": 163,
											"end": 281,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 250,
											"end": 274,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "265"
										},
										{
											"begin": 268,
											"end": 273,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 250,
											"end": 274,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "207"
										},
										{
											"begin": 250,
											"end": 274,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 250,
											"end": 274,
											"name": "tag",
											"source": 8,
											"value": "265"
										},
										{
											"begin": 250,
											"end": 274,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 245,
											"end": 248,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 238,
											"end": 275,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 163,
											"end": 281,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 163,
											"end": 281,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 163,
											"end": 281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 287,
											"end": 509,
											"name": "tag",
											"source": 8,
											"value": "21"
										},
										{
											"begin": 287,
											"end": 509,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 380,
											"end": 384,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 418,
											"end": 420,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 407,
											"end": 416,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 403,
											"end": 421,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 395,
											"end": 421,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 395,
											"end": 421,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 431,
											"end": 502,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "267"
										},
										{
											"begin": 499,
											"end": 500,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 488,
											"end": 497,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 484,
											"end": 501,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 475,
											"end": 481,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 431,
											"end": 502,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "208"
										},
										{
											"begin": 431,
											"end": 502,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 431,
											"end": 502,
											"name": "tag",
											"source": 8,
											"value": "267"
										},
										{
											"begin": 431,
											"end": 502,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 287,
											"end": 509,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 287,
											"end": 509,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 287,
											"end": 509,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 287,
											"end": 509,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 287,
											"end": 509,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 515,
											"end": 590,
											"name": "tag",
											"source": 8,
											"value": "209"
										},
										{
											"begin": 515,
											"end": 590,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 548,
											"end": 554,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 581,
											"end": 583,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 575,
											"end": 584,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 565,
											"end": 584,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 565,
											"end": 584,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 515,
											"end": 590,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 515,
											"end": 590,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 596,
											"end": 713,
											"name": "tag",
											"source": 8,
											"value": "210"
										},
										{
											"begin": 596,
											"end": 713,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 705,
											"end": 706,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 702,
											"end": 703,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 695,
											"end": 707,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 719,
											"end": 836,
											"name": "tag",
											"source": 8,
											"value": "211"
										},
										{
											"begin": 719,
											"end": 836,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 828,
											"end": 829,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 825,
											"end": 826,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 818,
											"end": 830,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 842,
											"end": 968,
											"name": "tag",
											"source": 8,
											"value": "212"
										},
										{
											"begin": 842,
											"end": 968,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 879,
											"end": 886,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 919,
											"end": 961,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 912,
											"end": 917,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 908,
											"end": 962,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 897,
											"end": 962,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 897,
											"end": 962,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 842,
											"end": 968,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 842,
											"end": 968,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 842,
											"end": 968,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 842,
											"end": 968,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 974,
											"end": 1070,
											"name": "tag",
											"source": 8,
											"value": "213"
										},
										{
											"begin": 974,
											"end": 1070,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1011,
											"end": 1018,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1040,
											"end": 1064,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "273"
										},
										{
											"begin": 1058,
											"end": 1063,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1040,
											"end": 1064,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "212"
										},
										{
											"begin": 1040,
											"end": 1064,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1040,
											"end": 1064,
											"name": "tag",
											"source": 8,
											"value": "273"
										},
										{
											"begin": 1040,
											"end": 1064,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1029,
											"end": 1064,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1029,
											"end": 1064,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 974,
											"end": 1070,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 974,
											"end": 1070,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 974,
											"end": 1070,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 974,
											"end": 1070,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1076,
											"end": 1198,
											"name": "tag",
											"source": 8,
											"value": "214"
										},
										{
											"begin": 1076,
											"end": 1198,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1149,
											"end": 1173,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "275"
										},
										{
											"begin": 1167,
											"end": 1172,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1149,
											"end": 1173,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "213"
										},
										{
											"begin": 1149,
											"end": 1173,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1149,
											"end": 1173,
											"name": "tag",
											"source": 8,
											"value": "275"
										},
										{
											"begin": 1149,
											"end": 1173,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1142,
											"end": 1147,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1139,
											"end": 1174,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 1129,
											"end": 1192,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "276"
										},
										{
											"begin": 1129,
											"end": 1192,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1188,
											"end": 1189,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1185,
											"end": 1186,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1178,
											"end": 1190,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1129,
											"end": 1192,
											"name": "tag",
											"source": 8,
											"value": "276"
										},
										{
											"begin": 1129,
											"end": 1192,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1076,
											"end": 1198,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1076,
											"end": 1198,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1204,
											"end": 1343,
											"name": "tag",
											"source": 8,
											"value": "215"
										},
										{
											"begin": 1204,
											"end": 1343,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1250,
											"end": 1255,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1288,
											"end": 1294,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1275,
											"end": 1295,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 1266,
											"end": 1295,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1266,
											"end": 1295,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1304,
											"end": 1337,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "278"
										},
										{
											"begin": 1331,
											"end": 1336,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1304,
											"end": 1337,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "214"
										},
										{
											"begin": 1304,
											"end": 1337,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1304,
											"end": 1337,
											"name": "tag",
											"source": 8,
											"value": "278"
										},
										{
											"begin": 1304,
											"end": 1337,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1204,
											"end": 1343,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1204,
											"end": 1343,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1204,
											"end": 1343,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1204,
											"end": 1343,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1204,
											"end": 1343,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1349,
											"end": 1438,
											"name": "tag",
											"source": 8,
											"value": "216"
										},
										{
											"begin": 1349,
											"end": 1438,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1385,
											"end": 1392,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1425,
											"end": 1431,
											"name": "PUSH",
											"source": 8,
											"value": "FFFF"
										},
										{
											"begin": 1418,
											"end": 1423,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1414,
											"end": 1432,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1403,
											"end": 1432,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1403,
											"end": 1432,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1349,
											"end": 1438,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1349,
											"end": 1438,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1349,
											"end": 1438,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1349,
											"end": 1438,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1444,
											"end": 1564,
											"name": "tag",
											"source": 8,
											"value": "217"
										},
										{
											"begin": 1444,
											"end": 1564,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1516,
											"end": 1539,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "281"
										},
										{
											"begin": 1533,
											"end": 1538,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1516,
											"end": 1539,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "216"
										},
										{
											"begin": 1516,
											"end": 1539,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1516,
											"end": 1539,
											"name": "tag",
											"source": 8,
											"value": "281"
										},
										{
											"begin": 1516,
											"end": 1539,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1509,
											"end": 1514,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1506,
											"end": 1540,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 1496,
											"end": 1558,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "282"
										},
										{
											"begin": 1496,
											"end": 1558,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1554,
											"end": 1555,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1551,
											"end": 1552,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1544,
											"end": 1556,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1496,
											"end": 1558,
											"name": "tag",
											"source": 8,
											"value": "282"
										},
										{
											"begin": 1496,
											"end": 1558,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1444,
											"end": 1564,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1444,
											"end": 1564,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1570,
											"end": 1707,
											"name": "tag",
											"source": 8,
											"value": "218"
										},
										{
											"begin": 1570,
											"end": 1707,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1615,
											"end": 1620,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1653,
											"end": 1659,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1640,
											"end": 1660,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 1631,
											"end": 1660,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1631,
											"end": 1660,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1669,
											"end": 1701,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "284"
										},
										{
											"begin": 1695,
											"end": 1700,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1669,
											"end": 1701,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "217"
										},
										{
											"begin": 1669,
											"end": 1701,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1669,
											"end": 1701,
											"name": "tag",
											"source": 8,
											"value": "284"
										},
										{
											"begin": 1669,
											"end": 1701,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1570,
											"end": 1707,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1570,
											"end": 1707,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1570,
											"end": 1707,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1570,
											"end": 1707,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1570,
											"end": 1707,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1713,
											"end": 2330,
											"name": "tag",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 1713,
											"end": 2330,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1789,
											"end": 1795,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1797,
											"end": 1803,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1805,
											"end": 1811,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1854,
											"end": 1856,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 1842,
											"end": 1851,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1833,
											"end": 1840,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 1829,
											"end": 1852,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1825,
											"end": 1857,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 1822,
											"end": 1941,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1822,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "286"
										},
										{
											"begin": 1822,
											"end": 1941,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1860,
											"end": 1939,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "287"
										},
										{
											"begin": 1860,
											"end": 1939,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "210"
										},
										{
											"begin": 1860,
											"end": 1939,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1860,
											"end": 1939,
											"name": "tag",
											"source": 8,
											"value": "287"
										},
										{
											"begin": 1860,
											"end": 1939,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1822,
											"end": 1941,
											"name": "tag",
											"source": 8,
											"value": "286"
										},
										{
											"begin": 1822,
											"end": 1941,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1980,
											"end": 1981,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2005,
											"end": 2058,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "288"
										},
										{
											"begin": 2050,
											"end": 2057,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 2041,
											"end": 2047,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2030,
											"end": 2039,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 2026,
											"end": 2048,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2005,
											"end": 2058,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "215"
										},
										{
											"begin": 2005,
											"end": 2058,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2005,
											"end": 2058,
											"name": "tag",
											"source": 8,
											"value": "288"
										},
										{
											"begin": 2005,
											"end": 2058,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1995,
											"end": 2058,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 1995,
											"end": 2058,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1951,
											"end": 2068,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2107,
											"end": 2109,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2133,
											"end": 2186,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "289"
										},
										{
											"begin": 2178,
											"end": 2185,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 2169,
											"end": 2175,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2158,
											"end": 2167,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 2154,
											"end": 2176,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2133,
											"end": 2186,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "215"
										},
										{
											"begin": 2133,
											"end": 2186,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2133,
											"end": 2186,
											"name": "tag",
											"source": 8,
											"value": "289"
										},
										{
											"begin": 2133,
											"end": 2186,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2123,
											"end": 2186,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2123,
											"end": 2186,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2078,
											"end": 2196,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2235,
											"end": 2237,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2261,
											"end": 2313,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "290"
										},
										{
											"begin": 2305,
											"end": 2312,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 2296,
											"end": 2302,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2285,
											"end": 2294,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 2281,
											"end": 2303,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2261,
											"end": 2313,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "218"
										},
										{
											"begin": 2261,
											"end": 2313,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2261,
											"end": 2313,
											"name": "tag",
											"source": 8,
											"value": "290"
										},
										{
											"begin": 2261,
											"end": 2313,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2251,
											"end": 2313,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2251,
											"end": 2313,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2206,
											"end": 2323,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1713,
											"end": 2330,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1713,
											"end": 2330,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1713,
											"end": 2330,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1713,
											"end": 2330,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1713,
											"end": 2330,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1713,
											"end": 2330,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2336,
											"end": 2665,
											"name": "tag",
											"source": 8,
											"value": "31"
										},
										{
											"begin": 2336,
											"end": 2665,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2395,
											"end": 2401,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2444,
											"end": 2446,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2432,
											"end": 2441,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2423,
											"end": 2430,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2419,
											"end": 2442,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2415,
											"end": 2447,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 2412,
											"end": 2531,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2412,
											"end": 2531,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "292"
										},
										{
											"begin": 2412,
											"end": 2531,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2450,
											"end": 2529,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "293"
										},
										{
											"begin": 2450,
											"end": 2529,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "210"
										},
										{
											"begin": 2450,
											"end": 2529,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2450,
											"end": 2529,
											"name": "tag",
											"source": 8,
											"value": "293"
										},
										{
											"begin": 2450,
											"end": 2529,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2412,
											"end": 2531,
											"name": "tag",
											"source": 8,
											"value": "292"
										},
										{
											"begin": 2412,
											"end": 2531,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2570,
											"end": 2571,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2595,
											"end": 2648,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "294"
										},
										{
											"begin": 2640,
											"end": 2647,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2631,
											"end": 2637,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2620,
											"end": 2629,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 2616,
											"end": 2638,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2595,
											"end": 2648,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "215"
										},
										{
											"begin": 2595,
											"end": 2648,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2595,
											"end": 2648,
											"name": "tag",
											"source": 8,
											"value": "294"
										},
										{
											"begin": 2595,
											"end": 2648,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2585,
											"end": 2648,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2585,
											"end": 2648,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2541,
											"end": 2658,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2336,
											"end": 2665,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2336,
											"end": 2665,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2336,
											"end": 2665,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2336,
											"end": 2665,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2336,
											"end": 2665,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2671,
											"end": 2786,
											"name": "tag",
											"source": 8,
											"value": "219"
										},
										{
											"begin": 2671,
											"end": 2786,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2756,
											"end": 2779,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "296"
										},
										{
											"begin": 2773,
											"end": 2778,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2756,
											"end": 2779,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "216"
										},
										{
											"begin": 2756,
											"end": 2779,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2756,
											"end": 2779,
											"name": "tag",
											"source": 8,
											"value": "296"
										},
										{
											"begin": 2756,
											"end": 2779,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2751,
											"end": 2754,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2744,
											"end": 2780,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2671,
											"end": 2786,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2671,
											"end": 2786,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2671,
											"end": 2786,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2792,
											"end": 3010,
											"name": "tag",
											"source": 8,
											"value": "34"
										},
										{
											"begin": 2792,
											"end": 3010,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2883,
											"end": 2887,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2921,
											"end": 2923,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2910,
											"end": 2919,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2906,
											"end": 2924,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2898,
											"end": 2924,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2898,
											"end": 2924,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2934,
											"end": 3003,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "298"
										},
										{
											"begin": 3000,
											"end": 3001,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2989,
											"end": 2998,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2985,
											"end": 3002,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2976,
											"end": 2982,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2934,
											"end": 3003,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "219"
										},
										{
											"begin": 2934,
											"end": 3003,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2934,
											"end": 3003,
											"name": "tag",
											"source": 8,
											"value": "298"
										},
										{
											"begin": 2934,
											"end": 3003,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2792,
											"end": 3010,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2792,
											"end": 3010,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2792,
											"end": 3010,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2792,
											"end": 3010,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2792,
											"end": 3010,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3016,
											"end": 3343,
											"name": "tag",
											"source": 8,
											"value": "37"
										},
										{
											"begin": 3016,
											"end": 3343,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3074,
											"end": 3080,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3123,
											"end": 3125,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3111,
											"end": 3120,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3102,
											"end": 3109,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3098,
											"end": 3121,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3094,
											"end": 3126,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 3091,
											"end": 3210,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3091,
											"end": 3210,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "300"
										},
										{
											"begin": 3091,
											"end": 3210,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3129,
											"end": 3208,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "301"
										},
										{
											"begin": 3129,
											"end": 3208,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "210"
										},
										{
											"begin": 3129,
											"end": 3208,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3129,
											"end": 3208,
											"name": "tag",
											"source": 8,
											"value": "301"
										},
										{
											"begin": 3129,
											"end": 3208,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3091,
											"end": 3210,
											"name": "tag",
											"source": 8,
											"value": "300"
										},
										{
											"begin": 3091,
											"end": 3210,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3249,
											"end": 3250,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3274,
											"end": 3326,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "302"
										},
										{
											"begin": 3318,
											"end": 3325,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3309,
											"end": 3315,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3298,
											"end": 3307,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 3294,
											"end": 3316,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3274,
											"end": 3326,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "218"
										},
										{
											"begin": 3274,
											"end": 3326,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3274,
											"end": 3326,
											"name": "tag",
											"source": 8,
											"value": "302"
										},
										{
											"begin": 3274,
											"end": 3326,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3264,
											"end": 3326,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3264,
											"end": 3326,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3220,
											"end": 3336,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3016,
											"end": 3343,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3016,
											"end": 3343,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3016,
											"end": 3343,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3016,
											"end": 3343,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3016,
											"end": 3343,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3349,
											"end": 3467,
											"name": "tag",
											"source": 8,
											"value": "220"
										},
										{
											"begin": 3349,
											"end": 3467,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3436,
											"end": 3460,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "304"
										},
										{
											"begin": 3454,
											"end": 3459,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3436,
											"end": 3460,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "213"
										},
										{
											"begin": 3436,
											"end": 3460,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3436,
											"end": 3460,
											"name": "tag",
											"source": 8,
											"value": "304"
										},
										{
											"begin": 3436,
											"end": 3460,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3431,
											"end": 3434,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3424,
											"end": 3461,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3349,
											"end": 3467,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3349,
											"end": 3467,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3349,
											"end": 3467,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3473,
											"end": 3695,
											"name": "tag",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3473,
											"end": 3695,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3566,
											"end": 3570,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3604,
											"end": 3606,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3593,
											"end": 3602,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3589,
											"end": 3607,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3581,
											"end": 3607,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3581,
											"end": 3607,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3617,
											"end": 3688,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "306"
										},
										{
											"begin": 3685,
											"end": 3686,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3674,
											"end": 3683,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3670,
											"end": 3687,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3661,
											"end": 3667,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3617,
											"end": 3688,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "220"
										},
										{
											"begin": 3617,
											"end": 3688,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3617,
											"end": 3688,
											"name": "tag",
											"source": 8,
											"value": "306"
										},
										{
											"begin": 3617,
											"end": 3688,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3473,
											"end": 3695,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3473,
											"end": 3695,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3473,
											"end": 3695,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3473,
											"end": 3695,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3473,
											"end": 3695,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3701,
											"end": 3851,
											"name": "tag",
											"source": 8,
											"value": "221"
										},
										{
											"begin": 3701,
											"end": 3851,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3738,
											"end": 3745,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3778,
											"end": 3844,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFF00000000000000000000000000000000000000000000"
										},
										{
											"begin": 3771,
											"end": 3776,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3767,
											"end": 3845,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3756,
											"end": 3845,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3756,
											"end": 3845,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3701,
											"end": 3851,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3701,
											"end": 3851,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3701,
											"end": 3851,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3701,
											"end": 3851,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3857,
											"end": 3975,
											"name": "tag",
											"source": 8,
											"value": "222"
										},
										{
											"begin": 3857,
											"end": 3975,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3944,
											"end": 3968,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "309"
										},
										{
											"begin": 3962,
											"end": 3967,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3944,
											"end": 3968,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "221"
										},
										{
											"begin": 3944,
											"end": 3968,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3944,
											"end": 3968,
											"name": "tag",
											"source": 8,
											"value": "309"
										},
										{
											"begin": 3944,
											"end": 3968,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3939,
											"end": 3942,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3932,
											"end": 3969,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3857,
											"end": 3975,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3857,
											"end": 3975,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3857,
											"end": 3975,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3981,
											"end": 4203,
											"name": "tag",
											"source": 8,
											"value": "48"
										},
										{
											"begin": 3981,
											"end": 4203,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4074,
											"end": 4078,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4112,
											"end": 4114,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4101,
											"end": 4110,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4097,
											"end": 4115,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4089,
											"end": 4115,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4089,
											"end": 4115,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4125,
											"end": 4196,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "311"
										},
										{
											"begin": 4193,
											"end": 4194,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4182,
											"end": 4191,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4178,
											"end": 4195,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4169,
											"end": 4175,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 4125,
											"end": 4196,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "222"
										},
										{
											"begin": 4125,
											"end": 4196,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4125,
											"end": 4196,
											"name": "tag",
											"source": 8,
											"value": "311"
										},
										{
											"begin": 4125,
											"end": 4196,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3981,
											"end": 4203,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3981,
											"end": 4203,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3981,
											"end": 4203,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3981,
											"end": 4203,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3981,
											"end": 4203,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4209,
											"end": 4299,
											"name": "tag",
											"source": 8,
											"value": "223"
										},
										{
											"begin": 4209,
											"end": 4299,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4243,
											"end": 4250,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4286,
											"end": 4291,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4279,
											"end": 4292,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4272,
											"end": 4293,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4261,
											"end": 4293,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4261,
											"end": 4293,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4209,
											"end": 4299,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4209,
											"end": 4299,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4209,
											"end": 4299,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4209,
											"end": 4299,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4305,
											"end": 4421,
											"name": "tag",
											"source": 8,
											"value": "224"
										},
										{
											"begin": 4305,
											"end": 4421,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4375,
											"end": 4396,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "314"
										},
										{
											"begin": 4390,
											"end": 4395,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4375,
											"end": 4396,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "223"
										},
										{
											"begin": 4375,
											"end": 4396,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4375,
											"end": 4396,
											"name": "tag",
											"source": 8,
											"value": "314"
										},
										{
											"begin": 4375,
											"end": 4396,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4368,
											"end": 4373,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4365,
											"end": 4397,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 4355,
											"end": 4415,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "315"
										},
										{
											"begin": 4355,
											"end": 4415,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4411,
											"end": 4412,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4408,
											"end": 4409,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4401,
											"end": 4413,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 4355,
											"end": 4415,
											"name": "tag",
											"source": 8,
											"value": "315"
										},
										{
											"begin": 4355,
											"end": 4415,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4305,
											"end": 4421,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4305,
											"end": 4421,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4427,
											"end": 4560,
											"name": "tag",
											"source": 8,
											"value": "225"
										},
										{
											"begin": 4427,
											"end": 4560,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4470,
											"end": 4475,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4508,
											"end": 4514,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4495,
											"end": 4515,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 4486,
											"end": 4515,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4486,
											"end": 4515,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4524,
											"end": 4554,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "317"
										},
										{
											"begin": 4548,
											"end": 4553,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4524,
											"end": 4554,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "224"
										},
										{
											"begin": 4524,
											"end": 4554,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4524,
											"end": 4554,
											"name": "tag",
											"source": 8,
											"value": "317"
										},
										{
											"begin": 4524,
											"end": 4554,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4427,
											"end": 4560,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 4427,
											"end": 4560,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4427,
											"end": 4560,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4427,
											"end": 4560,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4427,
											"end": 4560,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4566,
											"end": 5034,
											"name": "tag",
											"source": 8,
											"value": "51"
										},
										{
											"begin": 4566,
											"end": 5034,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4631,
											"end": 4637,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4639,
											"end": 4645,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4688,
											"end": 4690,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4676,
											"end": 4685,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4667,
											"end": 4674,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 4663,
											"end": 4686,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 4659,
											"end": 4691,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 4656,
											"end": 4775,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4656,
											"end": 4775,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "319"
										},
										{
											"begin": 4656,
											"end": 4775,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4694,
											"end": 4773,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "320"
										},
										{
											"begin": 4694,
											"end": 4773,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "210"
										},
										{
											"begin": 4694,
											"end": 4773,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4694,
											"end": 4773,
											"name": "tag",
											"source": 8,
											"value": "320"
										},
										{
											"begin": 4694,
											"end": 4773,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4656,
											"end": 4775,
											"name": "tag",
											"source": 8,
											"value": "319"
										},
										{
											"begin": 4656,
											"end": 4775,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4814,
											"end": 4815,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4839,
											"end": 4892,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "321"
										},
										{
											"begin": 4884,
											"end": 4891,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 4875,
											"end": 4881,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4864,
											"end": 4873,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 4860,
											"end": 4882,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4839,
											"end": 4892,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "215"
										},
										{
											"begin": 4839,
											"end": 4892,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4839,
											"end": 4892,
											"name": "tag",
											"source": 8,
											"value": "321"
										},
										{
											"begin": 4839,
											"end": 4892,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4829,
											"end": 4892,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 4829,
											"end": 4892,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4785,
											"end": 4902,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4941,
											"end": 4943,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4967,
											"end": 5017,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "322"
										},
										{
											"begin": 5009,
											"end": 5016,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 5000,
											"end": 5006,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4989,
											"end": 4998,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 4985,
											"end": 5007,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4967,
											"end": 5017,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "225"
										},
										{
											"begin": 4967,
											"end": 5017,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4967,
											"end": 5017,
											"name": "tag",
											"source": 8,
											"value": "322"
										},
										{
											"begin": 4967,
											"end": 5017,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4957,
											"end": 5017,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4957,
											"end": 5017,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4912,
											"end": 5027,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4566,
											"end": 5034,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 4566,
											"end": 5034,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4566,
											"end": 5034,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 4566,
											"end": 5034,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4566,
											"end": 5034,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4566,
											"end": 5034,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5040,
											"end": 5157,
											"name": "tag",
											"source": 8,
											"value": "226"
										},
										{
											"begin": 5040,
											"end": 5157,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5149,
											"end": 5150,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5146,
											"end": 5147,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5139,
											"end": 5151,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 5163,
											"end": 5280,
											"name": "tag",
											"source": 8,
											"value": "227"
										},
										{
											"begin": 5163,
											"end": 5280,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5272,
											"end": 5273,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5269,
											"end": 5270,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5262,
											"end": 5274,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 5286,
											"end": 5388,
											"name": "tag",
											"source": 8,
											"value": "228"
										},
										{
											"begin": 5286,
											"end": 5388,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5327,
											"end": 5333,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5378,
											"end": 5380,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 5374,
											"end": 5381,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 5369,
											"end": 5371,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 5362,
											"end": 5367,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5358,
											"end": 5372,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5354,
											"end": 5382,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 5344,
											"end": 5382,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5344,
											"end": 5382,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5286,
											"end": 5388,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5286,
											"end": 5388,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5286,
											"end": 5388,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5286,
											"end": 5388,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5394,
											"end": 5574,
											"name": "tag",
											"source": 8,
											"value": "171"
										},
										{
											"begin": 5394,
											"end": 5574,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5442,
											"end": 5519,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5439,
											"end": 5440,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5432,
											"end": 5520,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5539,
											"end": 5543,
											"name": "PUSH",
											"source": 8,
											"value": "41"
										},
										{
											"begin": 5536,
											"end": 5537,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 5529,
											"end": 5544,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5563,
											"end": 5567,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 5560,
											"end": 5561,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5553,
											"end": 5568,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 5580,
											"end": 5861,
											"name": "tag",
											"source": 8,
											"value": "229"
										},
										{
											"begin": 5580,
											"end": 5861,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5663,
											"end": 5690,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "328"
										},
										{
											"begin": 5685,
											"end": 5689,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5663,
											"end": 5690,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "228"
										},
										{
											"begin": 5663,
											"end": 5690,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5663,
											"end": 5690,
											"name": "tag",
											"source": 8,
											"value": "328"
										},
										{
											"begin": 5663,
											"end": 5690,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5655,
											"end": 5661,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5651,
											"end": 5691,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5793,
											"end": 5799,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5781,
											"end": 5791,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5778,
											"end": 5800,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 5757,
											"end": 5775,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5745,
											"end": 5755,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5742,
											"end": 5776,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 5739,
											"end": 5801,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 5736,
											"end": 5824,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5736,
											"end": 5824,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "329"
										},
										{
											"begin": 5736,
											"end": 5824,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5804,
											"end": 5822,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "330"
										},
										{
											"begin": 5804,
											"end": 5822,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "171"
										},
										{
											"begin": 5804,
											"end": 5822,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5804,
											"end": 5822,
											"name": "tag",
											"source": 8,
											"value": "330"
										},
										{
											"begin": 5804,
											"end": 5822,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5736,
											"end": 5824,
											"name": "tag",
											"source": 8,
											"value": "329"
										},
										{
											"begin": 5736,
											"end": 5824,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5844,
											"end": 5854,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5840,
											"end": 5842,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5833,
											"end": 5855,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5623,
											"end": 5861,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5580,
											"end": 5861,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5580,
											"end": 5861,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5580,
											"end": 5861,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5867,
											"end": 5996,
											"name": "tag",
											"source": 8,
											"value": "230"
										},
										{
											"begin": 5867,
											"end": 5996,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5901,
											"end": 5907,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5928,
											"end": 5948,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "332"
										},
										{
											"begin": 5928,
											"end": 5948,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "209"
										},
										{
											"begin": 5928,
											"end": 5948,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5928,
											"end": 5948,
											"name": "tag",
											"source": 8,
											"value": "332"
										},
										{
											"begin": 5928,
											"end": 5948,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5918,
											"end": 5948,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5918,
											"end": 5948,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5957,
											"end": 5990,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "333"
										},
										{
											"begin": 5985,
											"end": 5989,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5977,
											"end": 5983,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5957,
											"end": 5990,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "229"
										},
										{
											"begin": 5957,
											"end": 5990,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5957,
											"end": 5990,
											"name": "tag",
											"source": 8,
											"value": "333"
										},
										{
											"begin": 5957,
											"end": 5990,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5867,
											"end": 5996,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5867,
											"end": 5996,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5867,
											"end": 5996,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5867,
											"end": 5996,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6002,
											"end": 6309,
											"name": "tag",
											"source": 8,
											"value": "231"
										},
										{
											"begin": 6002,
											"end": 6309,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6063,
											"end": 6067,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6153,
											"end": 6171,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6145,
											"end": 6151,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6142,
											"end": 6172,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 6139,
											"end": 6195,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 6139,
											"end": 6195,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "335"
										},
										{
											"begin": 6139,
											"end": 6195,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6175,
											"end": 6193,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "336"
										},
										{
											"begin": 6175,
											"end": 6193,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "171"
										},
										{
											"begin": 6175,
											"end": 6193,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6175,
											"end": 6193,
											"name": "tag",
											"source": 8,
											"value": "336"
										},
										{
											"begin": 6175,
											"end": 6193,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6139,
											"end": 6195,
											"name": "tag",
											"source": 8,
											"value": "335"
										},
										{
											"begin": 6139,
											"end": 6195,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6213,
											"end": 6242,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "337"
										},
										{
											"begin": 6235,
											"end": 6241,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6213,
											"end": 6242,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "228"
										},
										{
											"begin": 6213,
											"end": 6242,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6213,
											"end": 6242,
											"name": "tag",
											"source": 8,
											"value": "337"
										},
										{
											"begin": 6213,
											"end": 6242,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6205,
											"end": 6242,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6205,
											"end": 6242,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6297,
											"end": 6301,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6291,
											"end": 6295,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6287,
											"end": 6302,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6279,
											"end": 6302,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6279,
											"end": 6302,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6002,
											"end": 6309,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6002,
											"end": 6309,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6002,
											"end": 6309,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6002,
											"end": 6309,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6315,
											"end": 6461,
											"name": "tag",
											"source": 8,
											"value": "232"
										},
										{
											"begin": 6315,
											"end": 6461,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6412,
											"end": 6418,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6407,
											"end": 6410,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6402,
											"end": 6405,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6389,
											"end": 6419,
											"name": "CALLDATACOPY",
											"source": 8
										},
										{
											"begin": 6453,
											"end": 6454,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6444,
											"end": 6450,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6439,
											"end": 6442,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6435,
											"end": 6451,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6428,
											"end": 6455,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6315,
											"end": 6461,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6315,
											"end": 6461,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6315,
											"end": 6461,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6315,
											"end": 6461,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6467,
											"end": 6890,
											"name": "tag",
											"source": 8,
											"value": "233"
										},
										{
											"begin": 6467,
											"end": 6890,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6544,
											"end": 6549,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6569,
											"end": 6634,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "340"
										},
										{
											"begin": 6585,
											"end": 6633,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "341"
										},
										{
											"begin": 6626,
											"end": 6632,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 6585,
											"end": 6633,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "231"
										},
										{
											"begin": 6585,
											"end": 6633,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6585,
											"end": 6633,
											"name": "tag",
											"source": 8,
											"value": "341"
										},
										{
											"begin": 6585,
											"end": 6633,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6569,
											"end": 6634,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "230"
										},
										{
											"begin": 6569,
											"end": 6634,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6569,
											"end": 6634,
											"name": "tag",
											"source": 8,
											"value": "340"
										},
										{
											"begin": 6569,
											"end": 6634,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6560,
											"end": 6634,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6560,
											"end": 6634,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6657,
											"end": 6663,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6650,
											"end": 6655,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6643,
											"end": 6664,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6695,
											"end": 6699,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6688,
											"end": 6693,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6684,
											"end": 6700,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6733,
											"end": 6736,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 6724,
											"end": 6730,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 6719,
											"end": 6722,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 6715,
											"end": 6731,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6712,
											"end": 6737,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 6709,
											"end": 6821,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 6709,
											"end": 6821,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "342"
										},
										{
											"begin": 6709,
											"end": 6821,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6740,
											"end": 6819,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "343"
										},
										{
											"begin": 6740,
											"end": 6819,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "227"
										},
										{
											"begin": 6740,
											"end": 6819,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6740,
											"end": 6819,
											"name": "tag",
											"source": 8,
											"value": "343"
										},
										{
											"begin": 6740,
											"end": 6819,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6709,
											"end": 6821,
											"name": "tag",
											"source": 8,
											"value": "342"
										},
										{
											"begin": 6709,
											"end": 6821,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6830,
											"end": 6884,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "344"
										},
										{
											"begin": 6877,
											"end": 6883,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 6872,
											"end": 6875,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6867,
											"end": 6870,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 6830,
											"end": 6884,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "232"
										},
										{
											"begin": 6830,
											"end": 6884,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6830,
											"end": 6884,
											"name": "tag",
											"source": 8,
											"value": "344"
										},
										{
											"begin": 6830,
											"end": 6884,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6550,
											"end": 6890,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6467,
											"end": 6890,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 6467,
											"end": 6890,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 6467,
											"end": 6890,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6467,
											"end": 6890,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6467,
											"end": 6890,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6467,
											"end": 6890,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6909,
											"end": 7247,
											"name": "tag",
											"source": 8,
											"value": "234"
										},
										{
											"begin": 6909,
											"end": 7247,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6964,
											"end": 6969,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7013,
											"end": 7016,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7006,
											"end": 7010,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 6998,
											"end": 7004,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6994,
											"end": 7011,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6990,
											"end": 7017,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 6980,
											"end": 7102,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "346"
										},
										{
											"begin": 6980,
											"end": 7102,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 7021,
											"end": 7100,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "347"
										},
										{
											"begin": 7021,
											"end": 7100,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "226"
										},
										{
											"begin": 7021,
											"end": 7100,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7021,
											"end": 7100,
											"name": "tag",
											"source": 8,
											"value": "347"
										},
										{
											"begin": 7021,
											"end": 7100,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6980,
											"end": 7102,
											"name": "tag",
											"source": 8,
											"value": "346"
										},
										{
											"begin": 6980,
											"end": 7102,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7138,
											"end": 7144,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7125,
											"end": 7145,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 7163,
											"end": 7241,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "348"
										},
										{
											"begin": 7237,
											"end": 7240,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 7229,
											"end": 7235,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7222,
											"end": 7226,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7214,
											"end": 7220,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 7210,
											"end": 7227,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7163,
											"end": 7241,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "233"
										},
										{
											"begin": 7163,
											"end": 7241,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7163,
											"end": 7241,
											"name": "tag",
											"source": 8,
											"value": "348"
										},
										{
											"begin": 7163,
											"end": 7241,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7154,
											"end": 7241,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7154,
											"end": 7241,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6970,
											"end": 7247,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6909,
											"end": 7247,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 6909,
											"end": 7247,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6909,
											"end": 7247,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6909,
											"end": 7247,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6909,
											"end": 7247,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7253,
											"end": 8194,
											"name": "tag",
											"source": 8,
											"value": "55"
										},
										{
											"begin": 7253,
											"end": 8194,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7347,
											"end": 7353,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7355,
											"end": 7361,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 7363,
											"end": 7369,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7371,
											"end": 7377,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 7420,
											"end": 7423,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 7408,
											"end": 7417,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 7399,
											"end": 7406,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 7395,
											"end": 7418,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 7391,
											"end": 7424,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 7388,
											"end": 7508,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 7388,
											"end": 7508,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "350"
										},
										{
											"begin": 7388,
											"end": 7508,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 7427,
											"end": 7506,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "351"
										},
										{
											"begin": 7427,
											"end": 7506,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "210"
										},
										{
											"begin": 7427,
											"end": 7506,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7427,
											"end": 7506,
											"name": "tag",
											"source": 8,
											"value": "351"
										},
										{
											"begin": 7427,
											"end": 7506,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7388,
											"end": 7508,
											"name": "tag",
											"source": 8,
											"value": "350"
										},
										{
											"begin": 7388,
											"end": 7508,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7547,
											"end": 7548,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7572,
											"end": 7625,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "352"
										},
										{
											"begin": 7617,
											"end": 7624,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 7608,
											"end": 7614,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7597,
											"end": 7606,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 7593,
											"end": 7615,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7572,
											"end": 7625,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "215"
										},
										{
											"begin": 7572,
											"end": 7625,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7572,
											"end": 7625,
											"name": "tag",
											"source": 8,
											"value": "352"
										},
										{
											"begin": 7572,
											"end": 7625,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7562,
											"end": 7625,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 7562,
											"end": 7625,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7518,
											"end": 7635,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7674,
											"end": 7676,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7700,
											"end": 7753,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "353"
										},
										{
											"begin": 7745,
											"end": 7752,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 7736,
											"end": 7742,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7725,
											"end": 7734,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 7721,
											"end": 7743,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7700,
											"end": 7753,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "215"
										},
										{
											"begin": 7700,
											"end": 7753,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7700,
											"end": 7753,
											"name": "tag",
											"source": 8,
											"value": "353"
										},
										{
											"begin": 7700,
											"end": 7753,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7690,
											"end": 7753,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 7690,
											"end": 7753,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7645,
											"end": 7763,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7802,
											"end": 7804,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 7828,
											"end": 7880,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "354"
										},
										{
											"begin": 7872,
											"end": 7879,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 7863,
											"end": 7869,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7852,
											"end": 7861,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 7848,
											"end": 7870,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7828,
											"end": 7880,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "218"
										},
										{
											"begin": 7828,
											"end": 7880,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7828,
											"end": 7880,
											"name": "tag",
											"source": 8,
											"value": "354"
										},
										{
											"begin": 7828,
											"end": 7880,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7818,
											"end": 7880,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 7818,
											"end": 7880,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7773,
											"end": 7890,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7957,
											"end": 7959,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 7946,
											"end": 7955,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 7942,
											"end": 7960,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7929,
											"end": 7961,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 7988,
											"end": 8006,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7980,
											"end": 7986,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7977,
											"end": 8007,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 7974,
											"end": 8091,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 7974,
											"end": 8091,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "355"
										},
										{
											"begin": 7974,
											"end": 8091,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 8010,
											"end": 8089,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "356"
										},
										{
											"begin": 8010,
											"end": 8089,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "211"
										},
										{
											"begin": 8010,
											"end": 8089,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8010,
											"end": 8089,
											"name": "tag",
											"source": 8,
											"value": "356"
										},
										{
											"begin": 8010,
											"end": 8089,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7974,
											"end": 8091,
											"name": "tag",
											"source": 8,
											"value": "355"
										},
										{
											"begin": 7974,
											"end": 8091,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8115,
											"end": 8177,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "357"
										},
										{
											"begin": 8169,
											"end": 8176,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 8160,
											"end": 8166,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8149,
											"end": 8158,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 8145,
											"end": 8167,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8115,
											"end": 8177,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "234"
										},
										{
											"begin": 8115,
											"end": 8177,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8115,
											"end": 8177,
											"name": "tag",
											"source": 8,
											"value": "357"
										},
										{
											"begin": 8115,
											"end": 8177,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8105,
											"end": 8177,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8105,
											"end": 8177,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7900,
											"end": 8187,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7253,
											"end": 8194,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 7253,
											"end": 8194,
											"name": "SWAP6",
											"source": 8
										},
										{
											"begin": 7253,
											"end": 8194,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7253,
											"end": 8194,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 7253,
											"end": 8194,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7253,
											"end": 8194,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 7253,
											"end": 8194,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7253,
											"end": 8194,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8200,
											"end": 8317,
											"name": "tag",
											"source": 8,
											"value": "235"
										},
										{
											"begin": 8200,
											"end": 8317,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8309,
											"end": 8310,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8306,
											"end": 8307,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 8299,
											"end": 8311,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 8323,
											"end": 8440,
											"name": "tag",
											"source": 8,
											"value": "236"
										},
										{
											"begin": 8323,
											"end": 8440,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8432,
											"end": 8433,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8429,
											"end": 8430,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 8422,
											"end": 8434,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 8459,
											"end": 9011,
											"name": "tag",
											"source": 8,
											"value": "237"
										},
										{
											"begin": 8459,
											"end": 9011,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8516,
											"end": 8524,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8526,
											"end": 8532,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 8576,
											"end": 8579,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 8569,
											"end": 8573,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 8561,
											"end": 8567,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 8557,
											"end": 8574,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8553,
											"end": 8580,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 8543,
											"end": 8665,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "361"
										},
										{
											"begin": 8543,
											"end": 8665,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 8584,
											"end": 8663,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "362"
										},
										{
											"begin": 8584,
											"end": 8663,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "226"
										},
										{
											"begin": 8584,
											"end": 8663,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8584,
											"end": 8663,
											"name": "tag",
											"source": 8,
											"value": "362"
										},
										{
											"begin": 8584,
											"end": 8663,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8543,
											"end": 8665,
											"name": "tag",
											"source": 8,
											"value": "361"
										},
										{
											"begin": 8543,
											"end": 8665,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8697,
											"end": 8703,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8684,
											"end": 8704,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 8674,
											"end": 8704,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8674,
											"end": 8704,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8727,
											"end": 8745,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8719,
											"end": 8725,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8716,
											"end": 8746,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 8713,
											"end": 8830,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 8713,
											"end": 8830,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "363"
										},
										{
											"begin": 8713,
											"end": 8830,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 8749,
											"end": 8828,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "364"
										},
										{
											"begin": 8749,
											"end": 8828,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "235"
										},
										{
											"begin": 8749,
											"end": 8828,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8749,
											"end": 8828,
											"name": "tag",
											"source": 8,
											"value": "364"
										},
										{
											"begin": 8749,
											"end": 8828,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8713,
											"end": 8830,
											"name": "tag",
											"source": 8,
											"value": "363"
										},
										{
											"begin": 8713,
											"end": 8830,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8863,
											"end": 8867,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 8855,
											"end": 8861,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 8851,
											"end": 8868,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8839,
											"end": 8868,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8839,
											"end": 8868,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8917,
											"end": 8920,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 8909,
											"end": 8913,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 8901,
											"end": 8907,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8897,
											"end": 8914,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 8887,
											"end": 8895,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 8883,
											"end": 8915,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8880,
											"end": 8921,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 8877,
											"end": 9005,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 8877,
											"end": 9005,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "365"
										},
										{
											"begin": 8877,
											"end": 9005,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 8924,
											"end": 9003,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "366"
										},
										{
											"begin": 8924,
											"end": 9003,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "236"
										},
										{
											"begin": 8924,
											"end": 9003,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8924,
											"end": 9003,
											"name": "tag",
											"source": 8,
											"value": "366"
										},
										{
											"begin": 8924,
											"end": 9003,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8877,
											"end": 9005,
											"name": "tag",
											"source": 8,
											"value": "365"
										},
										{
											"begin": 8877,
											"end": 9005,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8459,
											"end": 9011,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 8459,
											"end": 9011,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8459,
											"end": 9011,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 8459,
											"end": 9011,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8459,
											"end": 9011,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8459,
											"end": 9011,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9017,
											"end": 9978,
											"name": "tag",
											"source": 8,
											"value": "59"
										},
										{
											"begin": 9017,
											"end": 9978,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9113,
											"end": 9119,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9121,
											"end": 9127,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 9129,
											"end": 9135,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9137,
											"end": 9143,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 9145,
											"end": 9151,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9194,
											"end": 9197,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 9182,
											"end": 9191,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 9173,
											"end": 9180,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 9169,
											"end": 9192,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 9165,
											"end": 9198,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 9162,
											"end": 9282,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 9162,
											"end": 9282,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "368"
										},
										{
											"begin": 9162,
											"end": 9282,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 9201,
											"end": 9280,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "369"
										},
										{
											"begin": 9201,
											"end": 9280,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "210"
										},
										{
											"begin": 9201,
											"end": 9280,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9201,
											"end": 9280,
											"name": "tag",
											"source": 8,
											"value": "369"
										},
										{
											"begin": 9201,
											"end": 9280,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9162,
											"end": 9282,
											"name": "tag",
											"source": 8,
											"value": "368"
										},
										{
											"begin": 9162,
											"end": 9282,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9321,
											"end": 9322,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9346,
											"end": 9399,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "370"
										},
										{
											"begin": 9391,
											"end": 9398,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 9382,
											"end": 9388,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9371,
											"end": 9380,
											"name": "DUP10",
											"source": 8
										},
										{
											"begin": 9367,
											"end": 9389,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9346,
											"end": 9399,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "215"
										},
										{
											"begin": 9346,
											"end": 9399,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9346,
											"end": 9399,
											"name": "tag",
											"source": 8,
											"value": "370"
										},
										{
											"begin": 9346,
											"end": 9399,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9336,
											"end": 9399,
											"name": "SWAP6",
											"source": 8
										},
										{
											"begin": 9336,
											"end": 9399,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9292,
											"end": 9409,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9448,
											"end": 9450,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 9474,
											"end": 9527,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "371"
										},
										{
											"begin": 9519,
											"end": 9526,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 9510,
											"end": 9516,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9499,
											"end": 9508,
											"name": "DUP10",
											"source": 8
										},
										{
											"begin": 9495,
											"end": 9517,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9474,
											"end": 9527,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "215"
										},
										{
											"begin": 9474,
											"end": 9527,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9474,
											"end": 9527,
											"name": "tag",
											"source": 8,
											"value": "371"
										},
										{
											"begin": 9474,
											"end": 9527,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9464,
											"end": 9527,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 9464,
											"end": 9527,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9419,
											"end": 9537,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9576,
											"end": 9578,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 9602,
											"end": 9654,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "372"
										},
										{
											"begin": 9646,
											"end": 9653,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 9637,
											"end": 9643,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9626,
											"end": 9635,
											"name": "DUP10",
											"source": 8
										},
										{
											"begin": 9622,
											"end": 9644,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9602,
											"end": 9654,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "218"
										},
										{
											"begin": 9602,
											"end": 9654,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9602,
											"end": 9654,
											"name": "tag",
											"source": 8,
											"value": "372"
										},
										{
											"begin": 9602,
											"end": 9654,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9592,
											"end": 9654,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 9592,
											"end": 9654,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9547,
											"end": 9664,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9731,
											"end": 9733,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 9720,
											"end": 9729,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 9716,
											"end": 9734,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9703,
											"end": 9735,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 9762,
											"end": 9780,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9754,
											"end": 9760,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9751,
											"end": 9781,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 9748,
											"end": 9865,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 9748,
											"end": 9865,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "373"
										},
										{
											"begin": 9748,
											"end": 9865,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 9784,
											"end": 9863,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "374"
										},
										{
											"begin": 9784,
											"end": 9863,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "211"
										},
										{
											"begin": 9784,
											"end": 9863,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9784,
											"end": 9863,
											"name": "tag",
											"source": 8,
											"value": "374"
										},
										{
											"begin": 9784,
											"end": 9863,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9748,
											"end": 9865,
											"name": "tag",
											"source": 8,
											"value": "373"
										},
										{
											"begin": 9748,
											"end": 9865,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9897,
											"end": 9961,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "375"
										},
										{
											"begin": 9953,
											"end": 9960,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 9944,
											"end": 9950,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9933,
											"end": 9942,
											"name": "DUP10",
											"source": 8
										},
										{
											"begin": 9929,
											"end": 9951,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9897,
											"end": 9961,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "237"
										},
										{
											"begin": 9897,
											"end": 9961,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9897,
											"end": 9961,
											"name": "tag",
											"source": 8,
											"value": "375"
										},
										{
											"begin": 9897,
											"end": 9961,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9879,
											"end": 9961,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 9879,
											"end": 9961,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9879,
											"end": 9961,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 9879,
											"end": 9961,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9674,
											"end": 9971,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9017,
											"end": 9978,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 9017,
											"end": 9978,
											"name": "SWAP6",
											"source": 8
										},
										{
											"begin": 9017,
											"end": 9978,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9017,
											"end": 9978,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 9017,
											"end": 9978,
											"name": "SWAP6",
											"source": 8
										},
										{
											"begin": 9017,
											"end": 9978,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9017,
											"end": 9978,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 9017,
											"end": 9978,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9017,
											"end": 9978,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9984,
											"end": 10133,
											"name": "tag",
											"source": 8,
											"value": "238"
										},
										{
											"begin": 9984,
											"end": 10133,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10020,
											"end": 10027,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10060,
											"end": 10126,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10053,
											"end": 10058,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10049,
											"end": 10127,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 10038,
											"end": 10127,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10038,
											"end": 10127,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9984,
											"end": 10133,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9984,
											"end": 10133,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9984,
											"end": 10133,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9984,
											"end": 10133,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10139,
											"end": 10254,
											"name": "tag",
											"source": 8,
											"value": "239"
										},
										{
											"begin": 10139,
											"end": 10254,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10224,
											"end": 10247,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "378"
										},
										{
											"begin": 10241,
											"end": 10246,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10224,
											"end": 10247,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "238"
										},
										{
											"begin": 10224,
											"end": 10247,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10224,
											"end": 10247,
											"name": "tag",
											"source": 8,
											"value": "378"
										},
										{
											"begin": 10224,
											"end": 10247,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10219,
											"end": 10222,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10212,
											"end": 10248,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 10139,
											"end": 10254,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10139,
											"end": 10254,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10139,
											"end": 10254,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10260,
											"end": 10478,
											"name": "tag",
											"source": 8,
											"value": "62"
										},
										{
											"begin": 10260,
											"end": 10478,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10351,
											"end": 10355,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10389,
											"end": 10391,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 10378,
											"end": 10387,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10374,
											"end": 10392,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10366,
											"end": 10392,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10366,
											"end": 10392,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10402,
											"end": 10471,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "380"
										},
										{
											"begin": 10468,
											"end": 10469,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10457,
											"end": 10466,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 10453,
											"end": 10470,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10444,
											"end": 10450,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 10402,
											"end": 10471,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "239"
										},
										{
											"begin": 10402,
											"end": 10471,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10402,
											"end": 10471,
											"name": "tag",
											"source": 8,
											"value": "380"
										},
										{
											"begin": 10402,
											"end": 10471,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10260,
											"end": 10478,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 10260,
											"end": 10478,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 10260,
											"end": 10478,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10260,
											"end": 10478,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10260,
											"end": 10478,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10484,
											"end": 10583,
											"name": "tag",
											"source": 8,
											"value": "240"
										},
										{
											"begin": 10484,
											"end": 10583,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10536,
											"end": 10542,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10570,
											"end": 10575,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10564,
											"end": 10576,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 10554,
											"end": 10576,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10554,
											"end": 10576,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10484,
											"end": 10583,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 10484,
											"end": 10583,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10484,
											"end": 10583,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10484,
											"end": 10583,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10589,
											"end": 10758,
											"name": "tag",
											"source": 8,
											"value": "241"
										},
										{
											"begin": 10589,
											"end": 10758,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10673,
											"end": 10684,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10707,
											"end": 10713,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10702,
											"end": 10705,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10695,
											"end": 10714,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 10747,
											"end": 10751,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 10742,
											"end": 10745,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10738,
											"end": 10752,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10723,
											"end": 10752,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10723,
											"end": 10752,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10589,
											"end": 10758,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 10589,
											"end": 10758,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 10589,
											"end": 10758,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10589,
											"end": 10758,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10589,
											"end": 10758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10764,
											"end": 11010,
											"name": "tag",
											"source": 8,
											"value": "242"
										},
										{
											"begin": 10764,
											"end": 11010,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10845,
											"end": 10846,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10855,
											"end": 10968,
											"name": "tag",
											"source": 8,
											"value": "384"
										},
										{
											"begin": 10855,
											"end": 10968,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10869,
											"end": 10875,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 10866,
											"end": 10867,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10863,
											"end": 10876,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 10855,
											"end": 10968,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 10855,
											"end": 10968,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "386"
										},
										{
											"begin": 10855,
											"end": 10968,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 10954,
											"end": 10955,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 10949,
											"end": 10952,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10945,
											"end": 10956,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10939,
											"end": 10957,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 10935,
											"end": 10936,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10930,
											"end": 10933,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 10926,
											"end": 10937,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10919,
											"end": 10958,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 10891,
											"end": 10893,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 10888,
											"end": 10889,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10884,
											"end": 10894,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10879,
											"end": 10894,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10879,
											"end": 10894,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10855,
											"end": 10968,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "384"
										},
										{
											"begin": 10855,
											"end": 10968,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10855,
											"end": 10968,
											"name": "tag",
											"source": 8,
											"value": "386"
										},
										{
											"begin": 10855,
											"end": 10968,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11002,
											"end": 11003,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10993,
											"end": 10999,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 10988,
											"end": 10991,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 10984,
											"end": 11000,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10977,
											"end": 11004,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 10826,
											"end": 11010,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10764,
											"end": 11010,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10764,
											"end": 11010,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10764,
											"end": 11010,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10764,
											"end": 11010,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11016,
											"end": 11393,
											"name": "tag",
											"source": 8,
											"value": "243"
										},
										{
											"begin": 11016,
											"end": 11393,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11104,
											"end": 11107,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11132,
											"end": 11171,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "388"
										},
										{
											"begin": 11165,
											"end": 11170,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11132,
											"end": 11171,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "240"
										},
										{
											"begin": 11132,
											"end": 11171,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11132,
											"end": 11171,
											"name": "tag",
											"source": 8,
											"value": "388"
										},
										{
											"begin": 11132,
											"end": 11171,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11187,
											"end": 11258,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "389"
										},
										{
											"begin": 11251,
											"end": 11257,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11246,
											"end": 11249,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 11187,
											"end": 11258,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "241"
										},
										{
											"begin": 11187,
											"end": 11258,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11187,
											"end": 11258,
											"name": "tag",
											"source": 8,
											"value": "389"
										},
										{
											"begin": 11187,
											"end": 11258,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11180,
											"end": 11258,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 11180,
											"end": 11258,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11267,
											"end": 11332,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "390"
										},
										{
											"begin": 11325,
											"end": 11331,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11320,
											"end": 11323,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 11313,
											"end": 11317,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 11306,
											"end": 11311,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 11302,
											"end": 11318,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11267,
											"end": 11332,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "242"
										},
										{
											"begin": 11267,
											"end": 11332,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11267,
											"end": 11332,
											"name": "tag",
											"source": 8,
											"value": "390"
										},
										{
											"begin": 11267,
											"end": 11332,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11357,
											"end": 11386,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "391"
										},
										{
											"begin": 11379,
											"end": 11385,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11357,
											"end": 11386,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "228"
										},
										{
											"begin": 11357,
											"end": 11386,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11357,
											"end": 11386,
											"name": "tag",
											"source": 8,
											"value": "391"
										},
										{
											"begin": 11357,
											"end": 11386,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11352,
											"end": 11355,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 11348,
											"end": 11387,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11341,
											"end": 11387,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 11341,
											"end": 11387,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11108,
											"end": 11393,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11016,
											"end": 11393,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 11016,
											"end": 11393,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 11016,
											"end": 11393,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11016,
											"end": 11393,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11016,
											"end": 11393,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11399,
											"end": 11712,
											"name": "tag",
											"source": 8,
											"value": "67"
										},
										{
											"begin": 11399,
											"end": 11712,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11512,
											"end": 11516,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11550,
											"end": 11552,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 11539,
											"end": 11548,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11535,
											"end": 11553,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11527,
											"end": 11553,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11527,
											"end": 11553,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11599,
											"end": 11608,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11593,
											"end": 11597,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11589,
											"end": 11609,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 11585,
											"end": 11586,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11574,
											"end": 11583,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 11570,
											"end": 11587,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11563,
											"end": 11610,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 11627,
											"end": 11705,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "393"
										},
										{
											"begin": 11700,
											"end": 11704,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11691,
											"end": 11697,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 11627,
											"end": 11705,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "243"
										},
										{
											"begin": 11627,
											"end": 11705,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11627,
											"end": 11705,
											"name": "tag",
											"source": 8,
											"value": "393"
										},
										{
											"begin": 11627,
											"end": 11705,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11619,
											"end": 11705,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11619,
											"end": 11705,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11399,
											"end": 11712,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 11399,
											"end": 11712,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 11399,
											"end": 11712,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11399,
											"end": 11712,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11399,
											"end": 11712,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11718,
											"end": 12190,
											"name": "tag",
											"source": 8,
											"value": "70"
										},
										{
											"begin": 11718,
											"end": 12190,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11785,
											"end": 11791,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11793,
											"end": 11799,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 11842,
											"end": 11844,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 11830,
											"end": 11839,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 11821,
											"end": 11828,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 11817,
											"end": 11840,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 11813,
											"end": 11845,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 11810,
											"end": 11929,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 11810,
											"end": 11929,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "395"
										},
										{
											"begin": 11810,
											"end": 11929,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 11848,
											"end": 11927,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "396"
										},
										{
											"begin": 11848,
											"end": 11927,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "210"
										},
										{
											"begin": 11848,
											"end": 11927,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11848,
											"end": 11927,
											"name": "tag",
											"source": 8,
											"value": "396"
										},
										{
											"begin": 11848,
											"end": 11927,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11810,
											"end": 11929,
											"name": "tag",
											"source": 8,
											"value": "395"
										},
										{
											"begin": 11810,
											"end": 11929,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11968,
											"end": 11969,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11993,
											"end": 12046,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "397"
										},
										{
											"begin": 12038,
											"end": 12045,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 12029,
											"end": 12035,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12018,
											"end": 12027,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 12014,
											"end": 12036,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11993,
											"end": 12046,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "215"
										},
										{
											"begin": 11993,
											"end": 12046,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11993,
											"end": 12046,
											"name": "tag",
											"source": 8,
											"value": "397"
										},
										{
											"begin": 11993,
											"end": 12046,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11983,
											"end": 12046,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 11983,
											"end": 12046,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11939,
											"end": 12056,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12095,
											"end": 12097,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 12121,
											"end": 12173,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "398"
										},
										{
											"begin": 12165,
											"end": 12172,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 12156,
											"end": 12162,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12145,
											"end": 12154,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 12141,
											"end": 12163,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12121,
											"end": 12173,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "218"
										},
										{
											"begin": 12121,
											"end": 12173,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12121,
											"end": 12173,
											"name": "tag",
											"source": 8,
											"value": "398"
										},
										{
											"begin": 12121,
											"end": 12173,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12111,
											"end": 12173,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 12111,
											"end": 12173,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12066,
											"end": 12183,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11718,
											"end": 12190,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 11718,
											"end": 12190,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11718,
											"end": 12190,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 11718,
											"end": 12190,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11718,
											"end": 12190,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11718,
											"end": 12190,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12196,
											"end": 12670,
											"name": "tag",
											"source": 8,
											"value": "74"
										},
										{
											"begin": 12196,
											"end": 12670,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12264,
											"end": 12270,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12272,
											"end": 12278,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 12321,
											"end": 12323,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 12309,
											"end": 12318,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 12300,
											"end": 12307,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 12296,
											"end": 12319,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 12292,
											"end": 12324,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 12289,
											"end": 12408,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 12289,
											"end": 12408,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "400"
										},
										{
											"begin": 12289,
											"end": 12408,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 12327,
											"end": 12406,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "401"
										},
										{
											"begin": 12327,
											"end": 12406,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "210"
										},
										{
											"begin": 12327,
											"end": 12406,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12327,
											"end": 12406,
											"name": "tag",
											"source": 8,
											"value": "401"
										},
										{
											"begin": 12327,
											"end": 12406,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12289,
											"end": 12408,
											"name": "tag",
											"source": 8,
											"value": "400"
										},
										{
											"begin": 12289,
											"end": 12408,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12447,
											"end": 12448,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12472,
											"end": 12525,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "402"
										},
										{
											"begin": 12517,
											"end": 12524,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 12508,
											"end": 12514,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12497,
											"end": 12506,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 12493,
											"end": 12515,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12472,
											"end": 12525,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "215"
										},
										{
											"begin": 12472,
											"end": 12525,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12472,
											"end": 12525,
											"name": "tag",
											"source": 8,
											"value": "402"
										},
										{
											"begin": 12472,
											"end": 12525,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12462,
											"end": 12525,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 12462,
											"end": 12525,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12418,
											"end": 12535,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12574,
											"end": 12576,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 12600,
											"end": 12653,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "403"
										},
										{
											"begin": 12645,
											"end": 12652,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 12636,
											"end": 12642,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12625,
											"end": 12634,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 12621,
											"end": 12643,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12600,
											"end": 12653,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "215"
										},
										{
											"begin": 12600,
											"end": 12653,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12600,
											"end": 12653,
											"name": "tag",
											"source": 8,
											"value": "403"
										},
										{
											"begin": 12600,
											"end": 12653,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12590,
											"end": 12653,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 12590,
											"end": 12653,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12545,
											"end": 12663,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12196,
											"end": 12670,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 12196,
											"end": 12670,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12196,
											"end": 12670,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 12196,
											"end": 12670,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12196,
											"end": 12670,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12196,
											"end": 12670,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12676,
											"end": 12785,
											"name": "tag",
											"source": 8,
											"value": "244"
										},
										{
											"begin": 12676,
											"end": 12785,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12757,
											"end": 12778,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "405"
										},
										{
											"begin": 12772,
											"end": 12777,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12757,
											"end": 12778,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "223"
										},
										{
											"begin": 12757,
											"end": 12778,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12757,
											"end": 12778,
											"name": "tag",
											"source": 8,
											"value": "405"
										},
										{
											"begin": 12757,
											"end": 12778,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12752,
											"end": 12755,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12745,
											"end": 12779,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 12676,
											"end": 12785,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12676,
											"end": 12785,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12676,
											"end": 12785,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12791,
											"end": 13001,
											"name": "tag",
											"source": 8,
											"value": "77"
										},
										{
											"begin": 12791,
											"end": 13001,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12878,
											"end": 12882,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12916,
											"end": 12918,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 12905,
											"end": 12914,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12901,
											"end": 12919,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12893,
											"end": 12919,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12893,
											"end": 12919,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12929,
											"end": 12994,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "407"
										},
										{
											"begin": 12991,
											"end": 12992,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12980,
											"end": 12989,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 12976,
											"end": 12993,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12967,
											"end": 12973,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 12929,
											"end": 12994,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "244"
										},
										{
											"begin": 12929,
											"end": 12994,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12929,
											"end": 12994,
											"name": "tag",
											"source": 8,
											"value": "407"
										},
										{
											"begin": 12929,
											"end": 12994,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12791,
											"end": 13001,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 12791,
											"end": 13001,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 12791,
											"end": 13001,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12791,
											"end": 13001,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12791,
											"end": 13001,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13007,
											"end": 13084,
											"name": "tag",
											"source": 8,
											"value": "245"
										},
										{
											"begin": 13007,
											"end": 13084,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13044,
											"end": 13051,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13073,
											"end": 13078,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 13062,
											"end": 13078,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13062,
											"end": 13078,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13007,
											"end": 13084,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 13007,
											"end": 13084,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13007,
											"end": 13084,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13007,
											"end": 13084,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13090,
											"end": 13150,
											"name": "tag",
											"source": 8,
											"value": "246"
										},
										{
											"begin": 13090,
											"end": 13150,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13118,
											"end": 13121,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13139,
											"end": 13144,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 13132,
											"end": 13144,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13132,
											"end": 13144,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13090,
											"end": 13150,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 13090,
											"end": 13150,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13090,
											"end": 13150,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13090,
											"end": 13150,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13156,
											"end": 13296,
											"name": "tag",
											"source": 8,
											"value": "247"
										},
										{
											"begin": 13156,
											"end": 13296,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13205,
											"end": 13214,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13238,
											"end": 13290,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "411"
										},
										{
											"begin": 13256,
											"end": 13289,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "412"
										},
										{
											"begin": 13265,
											"end": 13288,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "413"
										},
										{
											"begin": 13282,
											"end": 13287,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 13265,
											"end": 13288,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "216"
										},
										{
											"begin": 13265,
											"end": 13288,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13265,
											"end": 13288,
											"name": "tag",
											"source": 8,
											"value": "413"
										},
										{
											"begin": 13265,
											"end": 13288,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13256,
											"end": 13289,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "246"
										},
										{
											"begin": 13256,
											"end": 13289,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13256,
											"end": 13289,
											"name": "tag",
											"source": 8,
											"value": "412"
										},
										{
											"begin": 13256,
											"end": 13289,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13238,
											"end": 13290,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "245"
										},
										{
											"begin": 13238,
											"end": 13290,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13238,
											"end": 13290,
											"name": "tag",
											"source": 8,
											"value": "411"
										},
										{
											"begin": 13238,
											"end": 13290,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13225,
											"end": 13290,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13225,
											"end": 13290,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13156,
											"end": 13296,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 13156,
											"end": 13296,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13156,
											"end": 13296,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13156,
											"end": 13296,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13302,
											"end": 13431,
											"name": "tag",
											"source": 8,
											"value": "248"
										},
										{
											"begin": 13302,
											"end": 13431,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13388,
											"end": 13424,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "415"
										},
										{
											"begin": 13418,
											"end": 13423,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 13388,
											"end": 13424,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "247"
										},
										{
											"begin": 13388,
											"end": 13424,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13388,
											"end": 13424,
											"name": "tag",
											"source": 8,
											"value": "415"
										},
										{
											"begin": 13388,
											"end": 13424,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13383,
											"end": 13386,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 13376,
											"end": 13425,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 13302,
											"end": 13431,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13302,
											"end": 13431,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13302,
											"end": 13431,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13437,
											"end": 13877,
											"name": "tag",
											"source": 8,
											"value": "90"
										},
										{
											"begin": 13437,
											"end": 13877,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13585,
											"end": 13589,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13623,
											"end": 13625,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 13612,
											"end": 13621,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 13608,
											"end": 13626,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13600,
											"end": 13626,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13600,
											"end": 13626,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13636,
											"end": 13707,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "417"
										},
										{
											"begin": 13704,
											"end": 13705,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13693,
											"end": 13702,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 13689,
											"end": 13706,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13680,
											"end": 13686,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 13636,
											"end": 13707,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "220"
										},
										{
											"begin": 13636,
											"end": 13707,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13636,
											"end": 13707,
											"name": "tag",
											"source": 8,
											"value": "417"
										},
										{
											"begin": 13636,
											"end": 13707,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13717,
											"end": 13788,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "418"
										},
										{
											"begin": 13784,
											"end": 13786,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 13773,
											"end": 13782,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 13769,
											"end": 13787,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13760,
											"end": 13766,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 13717,
											"end": 13788,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "248"
										},
										{
											"begin": 13717,
											"end": 13788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13717,
											"end": 13788,
											"name": "tag",
											"source": 8,
											"value": "418"
										},
										{
											"begin": 13717,
											"end": 13788,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13798,
											"end": 13870,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "419"
										},
										{
											"begin": 13866,
											"end": 13868,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 13855,
											"end": 13864,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 13851,
											"end": 13869,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13842,
											"end": 13848,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 13798,
											"end": 13870,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "220"
										},
										{
											"begin": 13798,
											"end": 13870,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13798,
											"end": 13870,
											"name": "tag",
											"source": 8,
											"value": "419"
										},
										{
											"begin": 13798,
											"end": 13870,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13437,
											"end": 13877,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 13437,
											"end": 13877,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 13437,
											"end": 13877,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13437,
											"end": 13877,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13437,
											"end": 13877,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13437,
											"end": 13877,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13437,
											"end": 13877,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13883,
											"end": 14065,
											"name": "tag",
											"source": 8,
											"value": "249"
										},
										{
											"begin": 13883,
											"end": 14065,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14023,
											"end": 14057,
											"name": "PUSH",
											"source": 8,
											"value": "54686520696E70757420616464726573732063616E6E6F74206265207A65726F"
										},
										{
											"begin": 14019,
											"end": 14020,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 14011,
											"end": 14017,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 14007,
											"end": 14021,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 14000,
											"end": 14058,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 13883,
											"end": 14065,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13883,
											"end": 14065,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 14071,
											"end": 14437,
											"name": "tag",
											"source": 8,
											"value": "250"
										},
										{
											"begin": 14071,
											"end": 14437,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14213,
											"end": 14216,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 14234,
											"end": 14301,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "422"
										},
										{
											"begin": 14298,
											"end": 14300,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 14293,
											"end": 14296,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 14234,
											"end": 14301,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "241"
										},
										{
											"begin": 14234,
											"end": 14301,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 14234,
											"end": 14301,
											"name": "tag",
											"source": 8,
											"value": "422"
										},
										{
											"begin": 14234,
											"end": 14301,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14227,
											"end": 14301,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 14227,
											"end": 14301,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14310,
											"end": 14403,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "423"
										},
										{
											"begin": 14399,
											"end": 14402,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 14310,
											"end": 14403,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "249"
										},
										{
											"begin": 14310,
											"end": 14403,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 14310,
											"end": 14403,
											"name": "tag",
											"source": 8,
											"value": "423"
										},
										{
											"begin": 14310,
											"end": 14403,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14428,
											"end": 14430,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 14423,
											"end": 14426,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 14419,
											"end": 14431,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 14412,
											"end": 14431,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 14412,
											"end": 14431,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14071,
											"end": 14437,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 14071,
											"end": 14437,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 14071,
											"end": 14437,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14071,
											"end": 14437,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 14443,
											"end": 14862,
											"name": "tag",
											"source": 8,
											"value": "94"
										},
										{
											"begin": 14443,
											"end": 14862,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14609,
											"end": 14613,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 14647,
											"end": 14649,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 14636,
											"end": 14645,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 14632,
											"end": 14650,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 14624,
											"end": 14650,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 14624,
											"end": 14650,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14696,
											"end": 14705,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 14690,
											"end": 14694,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 14686,
											"end": 14706,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 14682,
											"end": 14683,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 14671,
											"end": 14680,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 14667,
											"end": 14684,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 14660,
											"end": 14707,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 14724,
											"end": 14855,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "425"
										},
										{
											"begin": 14850,
											"end": 14854,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 14724,
											"end": 14855,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "250"
										},
										{
											"begin": 14724,
											"end": 14855,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 14724,
											"end": 14855,
											"name": "tag",
											"source": 8,
											"value": "425"
										},
										{
											"begin": 14724,
											"end": 14855,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14716,
											"end": 14855,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 14716,
											"end": 14855,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14443,
											"end": 14862,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 14443,
											"end": 14862,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 14443,
											"end": 14862,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14443,
											"end": 14862,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 14868,
											"end": 15048,
											"name": "tag",
											"source": 8,
											"value": "97"
										},
										{
											"begin": 14868,
											"end": 15048,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14916,
											"end": 14993,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 14913,
											"end": 14914,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 14906,
											"end": 14994,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 15013,
											"end": 15017,
											"name": "PUSH",
											"source": 8,
											"value": "32"
										},
										{
											"begin": 15010,
											"end": 15011,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 15003,
											"end": 15018,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 15037,
											"end": 15041,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 15034,
											"end": 15035,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 15027,
											"end": 15042,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 15054,
											"end": 15300,
											"name": "tag",
											"source": 8,
											"value": "251"
										},
										{
											"begin": 15054,
											"end": 15300,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15194,
											"end": 15228,
											"name": "PUSH",
											"source": 8,
											"value": "5468652061646472657373206F6620746865206F776E657220616E6420746865"
										},
										{
											"begin": 15190,
											"end": 15191,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 15182,
											"end": 15188,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 15178,
											"end": 15192,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 15171,
											"end": 15229,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 15263,
											"end": 15292,
											"name": "PUSH",
											"source": 8,
											"value": "206F70657261746F72206D75737420626520646966666572656E740000000000"
										},
										{
											"begin": 15258,
											"end": 15260,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 15250,
											"end": 15256,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 15246,
											"end": 15261,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 15239,
											"end": 15293,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 15054,
											"end": 15300,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15054,
											"end": 15300,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 15306,
											"end": 15672,
											"name": "tag",
											"source": 8,
											"value": "252"
										},
										{
											"begin": 15306,
											"end": 15672,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15448,
											"end": 15451,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 15469,
											"end": 15536,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "429"
										},
										{
											"begin": 15533,
											"end": 15535,
											"name": "PUSH",
											"source": 8,
											"value": "3B"
										},
										{
											"begin": 15528,
											"end": 15531,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 15469,
											"end": 15536,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "241"
										},
										{
											"begin": 15469,
											"end": 15536,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 15469,
											"end": 15536,
											"name": "tag",
											"source": 8,
											"value": "429"
										},
										{
											"begin": 15469,
											"end": 15536,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15462,
											"end": 15536,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 15462,
											"end": 15536,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15545,
											"end": 15638,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "430"
										},
										{
											"begin": 15634,
											"end": 15637,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 15545,
											"end": 15638,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "251"
										},
										{
											"begin": 15545,
											"end": 15638,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 15545,
											"end": 15638,
											"name": "tag",
											"source": 8,
											"value": "430"
										},
										{
											"begin": 15545,
											"end": 15638,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15663,
											"end": 15665,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 15658,
											"end": 15661,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 15654,
											"end": 15666,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 15647,
											"end": 15666,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 15647,
											"end": 15666,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15306,
											"end": 15672,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 15306,
											"end": 15672,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 15306,
											"end": 15672,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15306,
											"end": 15672,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 15678,
											"end": 16097,
											"name": "tag",
											"source": 8,
											"value": "109"
										},
										{
											"begin": 15678,
											"end": 16097,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15844,
											"end": 15848,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 15882,
											"end": 15884,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 15871,
											"end": 15880,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 15867,
											"end": 15885,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 15859,
											"end": 15885,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 15859,
											"end": 15885,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15931,
											"end": 15940,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 15925,
											"end": 15929,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 15921,
											"end": 15941,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 15917,
											"end": 15918,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 15906,
											"end": 15915,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 15902,
											"end": 15919,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 15895,
											"end": 15942,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 15959,
											"end": 16090,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "432"
										},
										{
											"begin": 16085,
											"end": 16089,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 15959,
											"end": 16090,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "252"
										},
										{
											"begin": 15959,
											"end": 16090,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 15959,
											"end": 16090,
											"name": "tag",
											"source": 8,
											"value": "432"
										},
										{
											"begin": 15959,
											"end": 16090,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15951,
											"end": 16090,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 15951,
											"end": 16090,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15678,
											"end": 16097,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 15678,
											"end": 16097,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 15678,
											"end": 16097,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15678,
											"end": 16097,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 16103,
											"end": 16251,
											"name": "tag",
											"source": 8,
											"value": "253"
										},
										{
											"begin": 16103,
											"end": 16251,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16205,
											"end": 16216,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 16242,
											"end": 16245,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 16227,
											"end": 16245,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 16227,
											"end": 16245,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16103,
											"end": 16251,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 16103,
											"end": 16251,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 16103,
											"end": 16251,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16103,
											"end": 16251,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16103,
											"end": 16251,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 16257,
											"end": 16647,
											"name": "tag",
											"source": 8,
											"value": "254"
										},
										{
											"begin": 16257,
											"end": 16647,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16363,
											"end": 16366,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 16391,
											"end": 16430,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "435"
										},
										{
											"begin": 16424,
											"end": 16429,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 16391,
											"end": 16430,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "240"
										},
										{
											"begin": 16391,
											"end": 16430,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 16391,
											"end": 16430,
											"name": "tag",
											"source": 8,
											"value": "435"
										},
										{
											"begin": 16391,
											"end": 16430,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16446,
											"end": 16535,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "436"
										},
										{
											"begin": 16528,
											"end": 16534,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 16523,
											"end": 16526,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 16446,
											"end": 16535,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "253"
										},
										{
											"begin": 16446,
											"end": 16535,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 16446,
											"end": 16535,
											"name": "tag",
											"source": 8,
											"value": "436"
										},
										{
											"begin": 16446,
											"end": 16535,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16439,
											"end": 16535,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 16439,
											"end": 16535,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16544,
											"end": 16609,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "437"
										},
										{
											"begin": 16602,
											"end": 16608,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 16597,
											"end": 16600,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 16590,
											"end": 16594,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 16583,
											"end": 16588,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 16579,
											"end": 16595,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 16544,
											"end": 16609,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "242"
										},
										{
											"begin": 16544,
											"end": 16609,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 16544,
											"end": 16609,
											"name": "tag",
											"source": 8,
											"value": "437"
										},
										{
											"begin": 16544,
											"end": 16609,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16634,
											"end": 16640,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 16629,
											"end": 16632,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 16625,
											"end": 16641,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 16618,
											"end": 16641,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 16618,
											"end": 16641,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16367,
											"end": 16647,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16257,
											"end": 16647,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 16257,
											"end": 16647,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 16257,
											"end": 16647,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16257,
											"end": 16647,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16257,
											"end": 16647,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 16653,
											"end": 17088,
											"name": "tag",
											"source": 8,
											"value": "129"
										},
										{
											"begin": 16653,
											"end": 17088,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16833,
											"end": 16836,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 16855,
											"end": 16950,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "439"
										},
										{
											"begin": 16946,
											"end": 16949,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 16937,
											"end": 16943,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 16855,
											"end": 16950,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "254"
										},
										{
											"begin": 16855,
											"end": 16950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 16855,
											"end": 16950,
											"name": "tag",
											"source": 8,
											"value": "439"
										},
										{
											"begin": 16855,
											"end": 16950,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16848,
											"end": 16950,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 16848,
											"end": 16950,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16967,
											"end": 17062,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "440"
										},
										{
											"begin": 17058,
											"end": 17061,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 17049,
											"end": 17055,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 16967,
											"end": 17062,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "254"
										},
										{
											"begin": 16967,
											"end": 17062,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 16967,
											"end": 17062,
											"name": "tag",
											"source": 8,
											"value": "440"
										},
										{
											"begin": 16967,
											"end": 17062,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16960,
											"end": 17062,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 16960,
											"end": 17062,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17079,
											"end": 17082,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 17072,
											"end": 17082,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 17072,
											"end": 17082,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16653,
											"end": 17088,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 16653,
											"end": 17088,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 16653,
											"end": 17088,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16653,
											"end": 17088,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16653,
											"end": 17088,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16653,
											"end": 17088,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 17094,
											"end": 17397,
											"name": "tag",
											"source": 8,
											"value": "255"
										},
										{
											"begin": 17094,
											"end": 17397,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17234,
											"end": 17268,
											"name": "PUSH",
											"source": 8,
											"value": "54686520494420656E746572656420697320696E76616C69642E204974206D75"
										},
										{
											"begin": 17230,
											"end": 17231,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 17222,
											"end": 17228,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 17218,
											"end": 17232,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 17211,
											"end": 17269,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 17303,
											"end": 17337,
											"name": "PUSH",
											"source": 8,
											"value": "737420626520696E207468697320696E74657276616C2030203C206964203C3D"
										},
										{
											"begin": 17298,
											"end": 17300,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 17290,
											"end": 17296,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 17286,
											"end": 17301,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 17279,
											"end": 17338,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 17372,
											"end": 17389,
											"name": "PUSH",
											"source": 8,
											"value": "2063757272656E7420746F6B656E730000000000000000000000000000000000"
										},
										{
											"begin": 17367,
											"end": 17369,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 17359,
											"end": 17365,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 17355,
											"end": 17370,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 17348,
											"end": 17390,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 17094,
											"end": 17397,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17094,
											"end": 17397,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 17403,
											"end": 17769,
											"name": "tag",
											"source": 8,
											"value": "256"
										},
										{
											"begin": 17403,
											"end": 17769,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17545,
											"end": 17548,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 17566,
											"end": 17633,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "443"
										},
										{
											"begin": 17630,
											"end": 17632,
											"name": "PUSH",
											"source": 8,
											"value": "4F"
										},
										{
											"begin": 17625,
											"end": 17628,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 17566,
											"end": 17633,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "241"
										},
										{
											"begin": 17566,
											"end": 17633,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 17566,
											"end": 17633,
											"name": "tag",
											"source": 8,
											"value": "443"
										},
										{
											"begin": 17566,
											"end": 17633,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17559,
											"end": 17633,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 17559,
											"end": 17633,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17642,
											"end": 17735,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "444"
										},
										{
											"begin": 17731,
											"end": 17734,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 17642,
											"end": 17735,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "255"
										},
										{
											"begin": 17642,
											"end": 17735,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 17642,
											"end": 17735,
											"name": "tag",
											"source": 8,
											"value": "444"
										},
										{
											"begin": 17642,
											"end": 17735,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17760,
											"end": 17762,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 17755,
											"end": 17758,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 17751,
											"end": 17763,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 17744,
											"end": 17763,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 17744,
											"end": 17763,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17403,
											"end": 17769,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 17403,
											"end": 17769,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 17403,
											"end": 17769,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17403,
											"end": 17769,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 17775,
											"end": 18194,
											"name": "tag",
											"source": 8,
											"value": "141"
										},
										{
											"begin": 17775,
											"end": 18194,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17941,
											"end": 17945,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 17979,
											"end": 17981,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 17968,
											"end": 17977,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 17964,
											"end": 17982,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 17956,
											"end": 17982,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 17956,
											"end": 17982,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18028,
											"end": 18037,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 18022,
											"end": 18026,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 18018,
											"end": 18038,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 18014,
											"end": 18015,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 18003,
											"end": 18012,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 17999,
											"end": 18016,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 17992,
											"end": 18039,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 18056,
											"end": 18187,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "446"
										},
										{
											"begin": 18182,
											"end": 18186,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 18056,
											"end": 18187,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "256"
										},
										{
											"begin": 18056,
											"end": 18187,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 18056,
											"end": 18187,
											"name": "tag",
											"source": 8,
											"value": "446"
										},
										{
											"begin": 18056,
											"end": 18187,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18048,
											"end": 18187,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 18048,
											"end": 18187,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17775,
											"end": 18194,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 17775,
											"end": 18194,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 17775,
											"end": 18194,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17775,
											"end": 18194,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 18200,
											"end": 18298,
											"name": "tag",
											"source": 8,
											"value": "257"
										},
										{
											"begin": 18200,
											"end": 18298,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18251,
											"end": 18257,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 18285,
											"end": 18290,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 18279,
											"end": 18291,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 18269,
											"end": 18291,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 18269,
											"end": 18291,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18200,
											"end": 18298,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 18200,
											"end": 18298,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 18200,
											"end": 18298,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18200,
											"end": 18298,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 18304,
											"end": 18472,
											"name": "tag",
											"source": 8,
											"value": "258"
										},
										{
											"begin": 18304,
											"end": 18472,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18387,
											"end": 18398,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 18421,
											"end": 18427,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 18416,
											"end": 18419,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 18409,
											"end": 18428,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 18461,
											"end": 18465,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 18456,
											"end": 18459,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 18452,
											"end": 18466,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 18437,
											"end": 18466,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 18437,
											"end": 18466,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18304,
											"end": 18472,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 18304,
											"end": 18472,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 18304,
											"end": 18472,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18304,
											"end": 18472,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18304,
											"end": 18472,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 18478,
											"end": 18851,
											"name": "tag",
											"source": 8,
											"value": "259"
										},
										{
											"begin": 18478,
											"end": 18851,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18564,
											"end": 18567,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 18592,
											"end": 18630,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "450"
										},
										{
											"begin": 18624,
											"end": 18629,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 18592,
											"end": 18630,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "257"
										},
										{
											"begin": 18592,
											"end": 18630,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 18592,
											"end": 18630,
											"name": "tag",
											"source": 8,
											"value": "450"
										},
										{
											"begin": 18592,
											"end": 18630,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18646,
											"end": 18716,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "451"
										},
										{
											"begin": 18709,
											"end": 18715,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 18704,
											"end": 18707,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 18646,
											"end": 18716,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "258"
										},
										{
											"begin": 18646,
											"end": 18716,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 18646,
											"end": 18716,
											"name": "tag",
											"source": 8,
											"value": "451"
										},
										{
											"begin": 18646,
											"end": 18716,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18639,
											"end": 18716,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 18639,
											"end": 18716,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18725,
											"end": 18790,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "452"
										},
										{
											"begin": 18783,
											"end": 18789,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 18778,
											"end": 18781,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 18771,
											"end": 18775,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 18764,
											"end": 18769,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 18760,
											"end": 18776,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 18725,
											"end": 18790,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "242"
										},
										{
											"begin": 18725,
											"end": 18790,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 18725,
											"end": 18790,
											"name": "tag",
											"source": 8,
											"value": "452"
										},
										{
											"begin": 18725,
											"end": 18790,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18815,
											"end": 18844,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "453"
										},
										{
											"begin": 18837,
											"end": 18843,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 18815,
											"end": 18844,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "228"
										},
										{
											"begin": 18815,
											"end": 18844,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 18815,
											"end": 18844,
											"name": "tag",
											"source": 8,
											"value": "453"
										},
										{
											"begin": 18815,
											"end": 18844,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18810,
											"end": 18813,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 18806,
											"end": 18845,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 18799,
											"end": 18845,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 18799,
											"end": 18845,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18568,
											"end": 18851,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18478,
											"end": 18851,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 18478,
											"end": 18851,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 18478,
											"end": 18851,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18478,
											"end": 18851,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18478,
											"end": 18851,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 18857,
											"end": 19493,
											"name": "tag",
											"source": 8,
											"value": "149"
										},
										{
											"begin": 18857,
											"end": 19493,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 19050,
											"end": 19054,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 19088,
											"end": 19091,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 19077,
											"end": 19086,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 19073,
											"end": 19092,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 19065,
											"end": 19092,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 19065,
											"end": 19092,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19102,
											"end": 19173,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "455"
										},
										{
											"begin": 19170,
											"end": 19171,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 19159,
											"end": 19168,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 19155,
											"end": 19172,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 19146,
											"end": 19152,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 19102,
											"end": 19173,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "220"
										},
										{
											"begin": 19102,
											"end": 19173,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 19102,
											"end": 19173,
											"name": "tag",
											"source": 8,
											"value": "455"
										},
										{
											"begin": 19102,
											"end": 19173,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 19183,
											"end": 19255,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "456"
										},
										{
											"begin": 19251,
											"end": 19253,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 19240,
											"end": 19249,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 19236,
											"end": 19254,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 19227,
											"end": 19233,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 19183,
											"end": 19255,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "220"
										},
										{
											"begin": 19183,
											"end": 19255,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 19183,
											"end": 19255,
											"name": "tag",
											"source": 8,
											"value": "456"
										},
										{
											"begin": 19183,
											"end": 19255,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 19265,
											"end": 19335,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "457"
										},
										{
											"begin": 19331,
											"end": 19333,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 19320,
											"end": 19329,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 19316,
											"end": 19334,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 19307,
											"end": 19313,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 19265,
											"end": 19335,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "219"
										},
										{
											"begin": 19265,
											"end": 19335,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 19265,
											"end": 19335,
											"name": "tag",
											"source": 8,
											"value": "457"
										},
										{
											"begin": 19265,
											"end": 19335,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 19382,
											"end": 19391,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 19376,
											"end": 19380,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 19372,
											"end": 19392,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 19367,
											"end": 19369,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 19356,
											"end": 19365,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 19352,
											"end": 19370,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 19345,
											"end": 19393,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 19410,
											"end": 19486,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "458"
										},
										{
											"begin": 19481,
											"end": 19485,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 19472,
											"end": 19478,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 19410,
											"end": 19486,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "259"
										},
										{
											"begin": 19410,
											"end": 19486,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 19410,
											"end": 19486,
											"name": "tag",
											"source": 8,
											"value": "458"
										},
										{
											"begin": 19410,
											"end": 19486,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 19402,
											"end": 19486,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 19402,
											"end": 19486,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18857,
											"end": 19493,
											"name": "SWAP6",
											"source": 8
										},
										{
											"begin": 18857,
											"end": 19493,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 18857,
											"end": 19493,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18857,
											"end": 19493,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18857,
											"end": 19493,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18857,
											"end": 19493,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18857,
											"end": 19493,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18857,
											"end": 19493,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 19499,
											"end": 19619,
											"name": "tag",
											"source": 8,
											"value": "260"
										},
										{
											"begin": 19499,
											"end": 19619,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 19571,
											"end": 19594,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "460"
										},
										{
											"begin": 19588,
											"end": 19593,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 19571,
											"end": 19594,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "238"
										},
										{
											"begin": 19571,
											"end": 19594,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 19571,
											"end": 19594,
											"name": "tag",
											"source": 8,
											"value": "460"
										},
										{
											"begin": 19571,
											"end": 19594,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 19564,
											"end": 19569,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 19561,
											"end": 19595,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 19551,
											"end": 19613,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "461"
										},
										{
											"begin": 19551,
											"end": 19613,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 19609,
											"end": 19610,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 19606,
											"end": 19607,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 19599,
											"end": 19611,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 19551,
											"end": 19613,
											"name": "tag",
											"source": 8,
											"value": "461"
										},
										{
											"begin": 19551,
											"end": 19613,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 19499,
											"end": 19619,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19499,
											"end": 19619,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 19625,
											"end": 19766,
											"name": "tag",
											"source": 8,
											"value": "261"
										},
										{
											"begin": 19625,
											"end": 19766,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 19681,
											"end": 19686,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 19712,
											"end": 19718,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 19706,
											"end": 19719,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 19697,
											"end": 19719,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 19697,
											"end": 19719,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19728,
											"end": 19760,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "463"
										},
										{
											"begin": 19754,
											"end": 19759,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 19728,
											"end": 19760,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "260"
										},
										{
											"begin": 19728,
											"end": 19760,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 19728,
											"end": 19760,
											"name": "tag",
											"source": 8,
											"value": "463"
										},
										{
											"begin": 19728,
											"end": 19760,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 19625,
											"end": 19766,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 19625,
											"end": 19766,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 19625,
											"end": 19766,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19625,
											"end": 19766,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19625,
											"end": 19766,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 19772,
											"end": 20121,
											"name": "tag",
											"source": 8,
											"value": "152"
										},
										{
											"begin": 19772,
											"end": 20121,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 19841,
											"end": 19847,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 19890,
											"end": 19892,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 19878,
											"end": 19887,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 19869,
											"end": 19876,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 19865,
											"end": 19888,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 19861,
											"end": 19893,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 19858,
											"end": 19977,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 19858,
											"end": 19977,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "465"
										},
										{
											"begin": 19858,
											"end": 19977,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 19896,
											"end": 19975,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "466"
										},
										{
											"begin": 19896,
											"end": 19975,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "210"
										},
										{
											"begin": 19896,
											"end": 19975,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 19896,
											"end": 19975,
											"name": "tag",
											"source": 8,
											"value": "466"
										},
										{
											"begin": 19896,
											"end": 19975,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 19858,
											"end": 19977,
											"name": "tag",
											"source": 8,
											"value": "465"
										},
										{
											"begin": 19858,
											"end": 19977,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 20016,
											"end": 20017,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 20041,
											"end": 20104,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "467"
										},
										{
											"begin": 20096,
											"end": 20103,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 20087,
											"end": 20093,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 20076,
											"end": 20085,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 20072,
											"end": 20094,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 20041,
											"end": 20104,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "261"
										},
										{
											"begin": 20041,
											"end": 20104,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 20041,
											"end": 20104,
											"name": "tag",
											"source": 8,
											"value": "467"
										},
										{
											"begin": 20041,
											"end": 20104,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 20031,
											"end": 20104,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 20031,
											"end": 20104,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19987,
											"end": 20114,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19772,
											"end": 20121,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 19772,
											"end": 20121,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 19772,
											"end": 20121,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19772,
											"end": 20121,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19772,
											"end": 20121,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 20127,
											"end": 20307,
											"name": "tag",
											"source": 8,
											"value": "177"
										},
										{
											"begin": 20127,
											"end": 20307,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 20175,
											"end": 20252,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 20172,
											"end": 20173,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 20165,
											"end": 20253,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 20272,
											"end": 20276,
											"name": "PUSH",
											"source": 8,
											"value": "12"
										},
										{
											"begin": 20269,
											"end": 20270,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 20262,
											"end": 20277,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 20296,
											"end": 20300,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 20293,
											"end": 20294,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 20286,
											"end": 20301,
											"name": "REVERT",
											"source": 8
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contracts/ERC721TokenContractName.sol",
								"contracts/IERc721TokenContractNameReceiver.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"approve(address,uint16)": "e560ca43",
							"balanceOf(address)": "70a08231",
							"getApproved(uint16)": "93b871f2",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"onERC721Received(address,address,uint16,bytes)": "b1cff380",
							"ownerOf(uint16)": "82a7cf1e",
							"safeTransferFrom(address,address,uint16)": "07394401",
							"safeTransferFrom(address,address,uint16,bytes)": "b145ae31",
							"setApprovalForAll(address,bool)": "a22cb465",
							"symbol()": "95d89b41",
							"tokenURI(uint16)": "dd7d8440",
							"transferFrom(address,address,uint16)": "4ec3dcfe"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes20\",\"name\":\"name_\",\"type\":\"bytes20\"},{\"internalType\":\"bytes10\",\"name\":\"symbol_\",\"type\":\"bytes10\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint16\",\"name\":\"tokenId\",\"type\":\"uint16\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint16\",\"name\":\"tokenId\",\"type\":\"uint16\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"tokenId\",\"type\":\"uint16\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"tokenId\",\"type\":\"uint16\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"bytes20\",\"name\":\"\",\"type\":\"bytes20\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"tokenId\",\"type\":\"uint16\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"tokenId\",\"type\":\"uint16\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"tokenId\",\"type\":\"uint16\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"tokenId\",\"type\":\"uint16\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"bytes10\",\"name\":\"\",\"type\":\"bytes10\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"tokenId\",\"type\":\"uint16\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"tokenId\",\"type\":\"uint16\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint16,bytes)\":{\"details\":\"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ERC721TokenContractName.sol\":\"ERC721TokenContractName\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]},\"contracts/ERC721TokenContractName.sol\":{\"keccak256\":\"0xfe52fef71e294fc3c87be830e6e21c3057b8ad4cd5874f94ae55b4f62aec39db\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6baa0c83c7c6394e2e189edd2d6ccf944b8e931481d5744ef317f93f2a3696e\",\"dweb:/ipfs/QmVqUMbpNuMEQzTNoR3ALdEfkyEwqPRZcRFm28AdFi3BfK\"]},\"contracts/IERc721TokenContractNameReceiver.sol\":{\"keccak256\":\"0x5500a399830fcc4dc5fba902a63c6bc9da68012fcd48f3d4b3b53d975d8dc041\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3260bc39f05cbfa81ae34d8ae4be651ffcf775952aaf49d5d15302d15b9f2d34\",\"dweb:/ipfs/QmeWiK2iyapqi6ufS351ne83cV3XNay3Cpaf3nuXs4PL6A\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1880,
								"contract": "contracts/ERC721TokenContractName.sol:ERC721TokenContractName",
								"label": "_name",
								"offset": 0,
								"slot": "0",
								"type": "t_bytes20"
							},
							{
								"astId": 1882,
								"contract": "contracts/ERC721TokenContractName.sol:ERC721TokenContractName",
								"label": "_symbol",
								"offset": 20,
								"slot": "0",
								"type": "t_bytes10"
							},
							{
								"astId": 1890,
								"contract": "contracts/ERC721TokenContractName.sol:ERC721TokenContractName",
								"label": "mintInfo",
								"offset": 0,
								"slot": "1",
								"type": "t_struct(MintInfo)1887_storage"
							},
							{
								"astId": 1894,
								"contract": "contracts/ERC721TokenContractName.sol:ERC721TokenContractName",
								"label": "_owners",
								"offset": 0,
								"slot": "2",
								"type": "t_array(t_address)1201_storage"
							},
							{
								"astId": 1898,
								"contract": "contracts/ERC721TokenContractName.sol:ERC721TokenContractName",
								"label": "ban",
								"offset": 0,
								"slot": "1203",
								"type": "t_array(t_bool)1201_storage"
							},
							{
								"astId": 1904,
								"contract": "contracts/ERC721TokenContractName.sol:ERC721TokenContractName",
								"label": "_balanceAndTokId",
								"offset": 0,
								"slot": "1241",
								"type": "t_mapping(t_address,t_array(t_uint16)1201_storage)"
							},
							{
								"astId": 1908,
								"contract": "contracts/ERC721TokenContractName.sol:ERC721TokenContractName",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "1242",
								"type": "t_mapping(t_uint16,t_address)"
							},
							{
								"astId": 1914,
								"contract": "contracts/ERC721TokenContractName.sol:ERC721TokenContractName",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "1243",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_address)1201_storage": {
								"base": "t_address",
								"encoding": "inplace",
								"label": "address[1201]",
								"numberOfBytes": "38432"
							},
							"t_array(t_bool)1201_storage": {
								"base": "t_bool",
								"encoding": "inplace",
								"label": "bool[1201]",
								"numberOfBytes": "1216"
							},
							"t_array(t_uint16)1201_storage": {
								"base": "t_uint16",
								"encoding": "inplace",
								"label": "uint16[1201]",
								"numberOfBytes": "2432"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes10": {
								"encoding": "inplace",
								"label": "bytes10",
								"numberOfBytes": "10"
							},
							"t_bytes20": {
								"encoding": "inplace",
								"label": "bytes20",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_array(t_uint16)1201_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint16[1201])",
								"numberOfBytes": "32",
								"value": "t_array(t_uint16)1201_storage"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_uint16,t_address)": {
								"encoding": "mapping",
								"key": "t_uint16",
								"label": "mapping(uint16 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_struct(MintInfo)1887_storage": {
								"encoding": "inplace",
								"label": "struct ERC721TokenContractName.MintInfo",
								"members": [
									{
										"astId": 1884,
										"contract": "contracts/ERC721TokenContractName.sol:ERC721TokenContractName",
										"label": "maxMinted",
										"offset": 0,
										"slot": "0",
										"type": "t_uint16"
									},
									{
										"astId": 1886,
										"contract": "contracts/ERC721TokenContractName.sol:ERC721TokenContractName",
										"label": "currentTokens",
										"offset": 2,
										"slot": "0",
										"type": "t_uint16"
									}
								],
								"numberOfBytes": "32"
							},
							"t_uint16": {
								"encoding": "inplace",
								"label": "uint16",
								"numberOfBytes": "2"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/IERc721TokenContractNameReceiver.sol": {
				"IERC721TCNReceiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint16",
									"name": "tokenId",
									"type": "uint16"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC721Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for any contract that wants to support safeTransfers from ERC-721 asset contracts.",
						"kind": "dev",
						"methods": {
							"onERC721Received(address,address,uint16,bytes)": {
								"details": "Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."
							}
						},
						"title": "ERC-721 token receiver interface",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"onERC721Received(address,address,uint16,bytes)": "b1cff380"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"tokenId\",\"type\":\"uint16\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for any contract that wants to support safeTransfers from ERC-721 asset contracts.\",\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint16,bytes)\":{\"details\":\"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\"}},\"title\":\"ERC-721 token receiver interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/IERc721TokenContractNameReceiver.sol\":\"IERC721TCNReceiver\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/IERc721TokenContractNameReceiver.sol\":{\"keccak256\":\"0x5500a399830fcc4dc5fba902a63c6bc9da68012fcd48f3d4b3b53d975d8dc041\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3260bc39f05cbfa81ae34d8ae4be651ffcf775952aaf49d5d15302d15b9f2d34\",\"dweb:/ipfs/QmeWiK2iyapqi6ufS351ne83cV3XNay3Cpaf3nuXs4PL6A\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							136
						],
						"IERC20Errors": [
							41
						],
						"IERC721Errors": [
							89
						]
					},
					"id": 137,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "138:139:0",
								"text": " @dev Standard ERC20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens."
							},
							"fullyImplemented": true,
							"id": 41,
							"linearizedBaseContracts": [
								41
							],
							"name": "IERC20Errors",
							"nameLocation": "288:12:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "307:309:0",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 11,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "627:24:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "660:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "652:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "676:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "668:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 6,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "693:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "685:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "685:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "651:49:0"
									},
									"src": "621:80:0"
								},
								{
									"documentation": {
										"id": 12,
										"nodeType": "StructuredDocumentation",
										"src": "707:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 16,
									"name": "ERC20InvalidSender",
									"nameLocation": "870:18:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "897:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "889:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "889:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "888:16:0"
									},
									"src": "864:41:0"
								},
								{
									"documentation": {
										"id": 17,
										"nodeType": "StructuredDocumentation",
										"src": "911:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 21,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1081:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 20,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 19,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1110:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 21,
												"src": "1102:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 18,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1102:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1101:18:0"
									},
									"src": "1075:45:0"
								},
								{
									"documentation": {
										"id": 22,
										"nodeType": "StructuredDocumentation",
										"src": "1126:345:0",
										"text": " @dev Indicates a failure with the `spender`â€™s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 30,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1482:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1517:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1509:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 23,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1509:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 26,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1534:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1526:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 25,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1526:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 28,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1553:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1545:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 27,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1545:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1508:52:0"
									},
									"src": "1476:85:0"
								},
								{
									"documentation": {
										"id": 31,
										"nodeType": "StructuredDocumentation",
										"src": "1567:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 35,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1752:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 33,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1781:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 35,
												"src": "1773:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 32,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1773:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1772:18:0"
									},
									"src": "1746:45:0"
								},
								{
									"documentation": {
										"id": 36,
										"nodeType": "StructuredDocumentation",
										"src": "1797:195:0",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 40,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2003:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 39,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 38,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2031:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "2023:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 37,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2023:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2022:17:0"
									},
									"src": "1997:43:0"
								}
							],
							"scope": 137,
							"src": "278:1764:0",
							"usedErrors": [
								11,
								16,
								21,
								30,
								35,
								40
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 42,
								"nodeType": "StructuredDocumentation",
								"src": "2044:141:0",
								"text": " @dev Standard ERC721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens."
							},
							"fullyImplemented": true,
							"id": 89,
							"linearizedBaseContracts": [
								89
							],
							"name": "IERC721Errors",
							"nameLocation": "2196:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 43,
										"nodeType": "StructuredDocumentation",
										"src": "2216:219:0",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 47,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2446:18:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 46,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 45,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2473:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 47,
												"src": "2465:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 44,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2465:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2464:15:0"
									},
									"src": "2440:40:0"
								},
								{
									"documentation": {
										"id": 48,
										"nodeType": "StructuredDocumentation",
										"src": "2486:132:0",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 52,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2629:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 51,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 50,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2660:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 52,
												"src": "2652:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 49,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2652:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2651:17:0"
									},
									"src": "2623:46:0"
								},
								{
									"documentation": {
										"id": 53,
										"nodeType": "StructuredDocumentation",
										"src": "2675:289:0",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 61,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2975:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 55,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3004:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "2996:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 54,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2996:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3020:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "3012:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 56,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3012:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3037:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "3029:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 58,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3029:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2995:48:0"
									},
									"src": "2969:75:0"
								},
								{
									"documentation": {
										"id": 62,
										"nodeType": "StructuredDocumentation",
										"src": "3050:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 66,
									"name": "ERC721InvalidSender",
									"nameLocation": "3213:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 65,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 64,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3241:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 66,
												"src": "3233:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 63,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3233:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3232:16:0"
									},
									"src": "3207:42:0"
								},
								{
									"documentation": {
										"id": 67,
										"nodeType": "StructuredDocumentation",
										"src": "3255:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 71,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3425:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3455:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 71,
												"src": "3447:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3447:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3446:18:0"
									},
									"src": "3419:46:0"
								},
								{
									"documentation": {
										"id": 72,
										"nodeType": "StructuredDocumentation",
										"src": "3471:247:0",
										"text": " @dev Indicates a failure with the `operator`â€™s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 78,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3729:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 77,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3764:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 78,
												"src": "3756:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 73,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3756:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 76,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3782:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 78,
												"src": "3774:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 75,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3774:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3755:35:0"
									},
									"src": "3723:68:0"
								},
								{
									"documentation": {
										"id": 79,
										"nodeType": "StructuredDocumentation",
										"src": "3797:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 83,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3982:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 82,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 81,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4012:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 83,
												"src": "4004:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 80,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4004:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4003:18:0"
									},
									"src": "3976:46:0"
								},
								{
									"documentation": {
										"id": 84,
										"nodeType": "StructuredDocumentation",
										"src": "4028:197:0",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 88,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4236:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 86,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4266:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 88,
												"src": "4258:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 85,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4258:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4257:18:0"
									},
									"src": "4230:46:0"
								}
							],
							"scope": 137,
							"src": "2186:2092:0",
							"usedErrors": [
								47,
								52,
								61,
								66,
								71,
								78,
								83,
								88
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 90,
								"nodeType": "StructuredDocumentation",
								"src": "4280:143:0",
								"text": " @dev Standard ERC1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens."
							},
							"fullyImplemented": true,
							"id": 136,
							"linearizedBaseContracts": [
								136
							],
							"name": "IERC1155Errors",
							"nameLocation": "4434:14:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 91,
										"nodeType": "StructuredDocumentation",
										"src": "4455:361:0",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 101,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4827:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 93,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4862:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4854:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 92,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4854:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 95,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4878:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4870:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 94,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4870:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4895:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4887:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 96,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4887:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 99,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4911:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4903:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 98,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4903:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4853:66:0"
									},
									"src": "4821:99:0"
								},
								{
									"documentation": {
										"id": 102,
										"nodeType": "StructuredDocumentation",
										"src": "4926:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 106,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5089:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 104,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5118:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 106,
												"src": "5110:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 103,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5110:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5109:16:0"
									},
									"src": "5083:43:0"
								},
								{
									"documentation": {
										"id": 107,
										"nodeType": "StructuredDocumentation",
										"src": "5132:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 111,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5302:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 110,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 109,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5333:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "5325:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 108,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5325:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5324:18:0"
									},
									"src": "5296:47:0"
								},
								{
									"documentation": {
										"id": 112,
										"nodeType": "StructuredDocumentation",
										"src": "5349:256:0",
										"text": " @dev Indicates a failure with the `operator`â€™s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 118,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5616:28:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 117,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 114,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5653:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 118,
												"src": "5645:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 113,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5645:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 116,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5671:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 118,
												"src": "5663:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 115,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5663:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5644:33:0"
									},
									"src": "5610:68:0"
								},
								{
									"documentation": {
										"id": 119,
										"nodeType": "StructuredDocumentation",
										"src": "5684:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 123,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5869:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 122,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 121,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5900:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 123,
												"src": "5892:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 120,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5892:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5891:18:0"
									},
									"src": "5863:47:0"
								},
								{
									"documentation": {
										"id": 124,
										"nodeType": "StructuredDocumentation",
										"src": "5916:197:0",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 128,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6124:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 127,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 126,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6155:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "6147:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 125,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6147:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6146:18:0"
									},
									"src": "6118:47:0"
								},
								{
									"documentation": {
										"id": 129,
										"nodeType": "StructuredDocumentation",
										"src": "6171:280:0",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 135,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6462:25:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 134,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 131,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6496:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "6488:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 130,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6488:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 133,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6515:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "6507:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 132,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6507:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6487:41:0"
									},
									"src": "6456:73:0"
								}
							],
							"scope": 137,
							"src": "4424:2107:0",
							"usedErrors": [
								101,
								106,
								111,
								118,
								123,
								128,
								135
							],
							"usedEvents": []
						}
					],
					"src": "112:6420:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							389
						]
					},
					"id": 390,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 138,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Address",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 139,
								"nodeType": "StructuredDocumentation",
								"src": "127:67:1",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 389,
							"linearizedBaseContracts": [
								389
							],
							"name": "Address",
							"nameLocation": "203:7:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 140,
										"nodeType": "StructuredDocumentation",
										"src": "217:94:1",
										"text": " @dev The ETH balance of the account is not enough to perform the operation."
									},
									"errorSelector": "cd786059",
									"id": 144,
									"name": "AddressInsufficientBalance",
									"nameLocation": "322:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 143,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 142,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "357:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 144,
												"src": "349:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 141,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "349:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "348:17:1"
									},
									"src": "316:50:1"
								},
								{
									"documentation": {
										"id": 145,
										"nodeType": "StructuredDocumentation",
										"src": "372:75:1",
										"text": " @dev There's no code at `target` (it is not a contract)."
									},
									"errorSelector": "9996b315",
									"id": 149,
									"name": "AddressEmptyCode",
									"nameLocation": "458:16:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 148,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 147,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "483:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 149,
												"src": "475:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 146,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "475:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "474:16:1"
									},
									"src": "452:39:1"
								},
								{
									"documentation": {
										"id": 150,
										"nodeType": "StructuredDocumentation",
										"src": "497:89:1",
										"text": " @dev A call to an address target failed. The target may have reverted."
									},
									"errorSelector": "1425ea42",
									"id": 152,
									"name": "FailedInnerCall",
									"nameLocation": "597:15:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 151,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "612:2:1"
									},
									"src": "591:24:1"
								},
								{
									"body": {
										"id": 192,
										"nodeType": "Block",
										"src": "1602:260:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 166,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 162,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1624:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Address_$389",
																		"typeString": "library Address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Address_$389",
																		"typeString": "library Address"
																	}
																],
																"id": 161,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1616:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 160,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1616:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 163,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1616:13:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 164,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1630:7:1",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "1616:21:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 165,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 157,
														"src": "1640:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1616:30:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 175,
												"nodeType": "IfStatement",
												"src": "1612:109:1",
												"trueBody": {
													"id": 174,
													"nodeType": "Block",
													"src": "1648:73:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 170,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "1704:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_Address_$389",
																					"typeString": "library Address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_Address_$389",
																					"typeString": "library Address"
																				}
																			],
																			"id": 169,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1696:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 168,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1696:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 171,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1696:13:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 167,
																	"name": "AddressInsufficientBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 144,
																	"src": "1669:26:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 172,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1669:41:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 173,
															"nodeType": "RevertStatement",
															"src": "1662:48:1"
														}
													]
												}
											},
											{
												"assignments": [
													177,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 177,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "1737:7:1",
														"nodeType": "VariableDeclaration",
														"scope": 192,
														"src": "1732:12:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 176,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1732:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 184,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 182,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1780:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 178,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 155,
																"src": "1750:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 179,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1760:4:1",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "1750:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 181,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 180,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 157,
																"src": "1772:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "1750:29:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 183,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1750:33:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1731:52:1"
											},
											{
												"condition": {
													"id": 186,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "1797:8:1",
													"subExpression": {
														"id": 185,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 177,
														"src": "1798:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 191,
												"nodeType": "IfStatement",
												"src": "1793:63:1",
												"trueBody": {
													"id": 190,
													"nodeType": "Block",
													"src": "1807:49:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 187,
																	"name": "FailedInnerCall",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 152,
																	"src": "1828:15:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 188,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1828:17:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 189,
															"nodeType": "RevertStatement",
															"src": "1821:24:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 153,
										"nodeType": "StructuredDocumentation",
										"src": "621:905:1",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 193,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "1540:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 155,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1566:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 193,
												"src": "1550:25:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 154,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1550:15:1",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 157,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1585:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 193,
												"src": "1577:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1577:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1549:43:1"
									},
									"returnParameters": {
										"id": 159,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1602:0:1"
									},
									"scope": 389,
									"src": "1531:331:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 209,
										"nodeType": "Block",
										"src": "2794:62:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 204,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 196,
															"src": "2833:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 205,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 198,
															"src": "2841:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 206,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2847:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"id": 203,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 256,
														"src": "2811:21:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256) returns (bytes memory)"
														}
													},
													"id": 207,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2811:38:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 202,
												"id": 208,
												"nodeType": "Return",
												"src": "2804:45:1"
											}
										]
									},
									"documentation": {
										"id": 194,
										"nodeType": "StructuredDocumentation",
										"src": "1868:832:1",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason or custom error, it is bubbled\n up by this function (like regular Solidity function calls). However, if\n the call reverted with no returned reason, this function reverts with a\n {FailedInnerCall} error.\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert."
									},
									"id": 210,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "2714:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 196,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "2735:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 210,
												"src": "2727:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 195,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2727:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2756:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 210,
												"src": "2743:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 197,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2743:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2726:35:1"
									},
									"returnParameters": {
										"id": 202,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 201,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 210,
												"src": "2780:12:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 200,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2780:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2779:14:1"
									},
									"scope": 389,
									"src": "2705:151:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 255,
										"nodeType": "Block",
										"src": "3293:279:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 228,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 224,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3315:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Address_$389",
																		"typeString": "library Address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Address_$389",
																		"typeString": "library Address"
																	}
																],
																"id": 223,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3307:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 222,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3307:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 225,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3307:13:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 226,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3321:7:1",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "3307:21:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 227,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 217,
														"src": "3331:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3307:29:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 237,
												"nodeType": "IfStatement",
												"src": "3303:108:1",
												"trueBody": {
													"id": 236,
													"nodeType": "Block",
													"src": "3338:73:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 232,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "3394:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_Address_$389",
																					"typeString": "library Address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_Address_$389",
																					"typeString": "library Address"
																				}
																			],
																			"id": 231,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3386:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 230,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "3386:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 233,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3386:13:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 229,
																	"name": "AddressInsufficientBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 144,
																	"src": "3359:26:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 234,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3359:41:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 235,
															"nodeType": "RevertStatement",
															"src": "3352:48:1"
														}
													]
												}
											},
											{
												"assignments": [
													239,
													241
												],
												"declarations": [
													{
														"constant": false,
														"id": 239,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "3426:7:1",
														"nodeType": "VariableDeclaration",
														"scope": 255,
														"src": "3421:12:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 238,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3421:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 241,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3448:10:1",
														"nodeType": "VariableDeclaration",
														"scope": 255,
														"src": "3435:23:1",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 240,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3435:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 248,
												"initialValue": {
													"arguments": [
														{
															"id": 246,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 215,
															"src": "3488:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 242,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 213,
																"src": "3462:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 243,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3469:4:1",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "3462:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 245,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 244,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 217,
																"src": "3481:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "3462:25:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 247,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3462:31:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3420:73:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 250,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 213,
															"src": "3537:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 251,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 239,
															"src": "3545:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 252,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 241,
															"src": "3554:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 249,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 348,
														"src": "3510:26:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 253,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3510:55:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 221,
												"id": 254,
												"nodeType": "Return",
												"src": "3503:62:1"
											}
										]
									},
									"documentation": {
										"id": 211,
										"nodeType": "StructuredDocumentation",
										"src": "2862:313:1",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`."
									},
									"id": 256,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "3189:21:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 213,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3219:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "3211:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 212,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3211:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 215,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3240:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "3227:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 214,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3227:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3254:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "3246:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 216,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3246:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3210:50:1"
									},
									"returnParameters": {
										"id": 221,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 220,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "3279:12:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 219,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3279:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3278:14:1"
									},
									"scope": 389,
									"src": "3180:392:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 281,
										"nodeType": "Block",
										"src": "3811:154:1",
										"statements": [
											{
												"assignments": [
													267,
													269
												],
												"declarations": [
													{
														"constant": false,
														"id": 267,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "3827:7:1",
														"nodeType": "VariableDeclaration",
														"scope": 281,
														"src": "3822:12:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 266,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3822:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 269,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3849:10:1",
														"nodeType": "VariableDeclaration",
														"scope": 281,
														"src": "3836:23:1",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 268,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3836:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 274,
												"initialValue": {
													"arguments": [
														{
															"id": 272,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 261,
															"src": "3881:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 270,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 259,
															"src": "3863:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 271,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3870:10:1",
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "3863:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 273,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3863:23:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3821:65:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 276,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 259,
															"src": "3930:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 277,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 267,
															"src": "3938:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 278,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 269,
															"src": "3947:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 275,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 348,
														"src": "3903:26:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 279,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3903:55:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 265,
												"id": 280,
												"nodeType": "Return",
												"src": "3896:62:1"
											}
										]
									},
									"documentation": {
										"id": 257,
										"nodeType": "StructuredDocumentation",
										"src": "3578:128:1",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call."
									},
									"id": 282,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "3720:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 262,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 259,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3747:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 282,
												"src": "3739:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 258,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3739:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 261,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3768:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 282,
												"src": "3755:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 260,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3755:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3738:35:1"
									},
									"returnParameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 282,
												"src": "3797:12:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 263,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3797:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3796:14:1"
									},
									"scope": 389,
									"src": "3711:254:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 307,
										"nodeType": "Block",
										"src": "4203:156:1",
										"statements": [
											{
												"assignments": [
													293,
													295
												],
												"declarations": [
													{
														"constant": false,
														"id": 293,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "4219:7:1",
														"nodeType": "VariableDeclaration",
														"scope": 307,
														"src": "4214:12:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 292,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4214:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 295,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "4241:10:1",
														"nodeType": "VariableDeclaration",
														"scope": 307,
														"src": "4228:23:1",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 294,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4228:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 300,
												"initialValue": {
													"arguments": [
														{
															"id": 298,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 287,
															"src": "4275:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 296,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 285,
															"src": "4255:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 297,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4262:12:1",
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "4255:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 299,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4255:25:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4213:67:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 302,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 285,
															"src": "4324:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 303,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 293,
															"src": "4332:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 304,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 295,
															"src": "4341:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 301,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 348,
														"src": "4297:26:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 305,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4297:55:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 291,
												"id": 306,
												"nodeType": "Return",
												"src": "4290:62:1"
											}
										]
									},
									"documentation": {
										"id": 283,
										"nodeType": "StructuredDocumentation",
										"src": "3971:130:1",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call."
									},
									"id": 308,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "4115:20:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 288,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 285,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4144:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 308,
												"src": "4136:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 284,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4136:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 287,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4165:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 308,
												"src": "4152:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 286,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4152:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4135:35:1"
									},
									"returnParameters": {
										"id": 291,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 290,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 308,
												"src": "4189:12:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 289,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4189:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4188:14:1"
									},
									"scope": 389,
									"src": "4106:253:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 347,
										"nodeType": "Block",
										"src": "4783:424:1",
										"statements": [
											{
												"condition": {
													"id": 321,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4797:8:1",
													"subExpression": {
														"id": 320,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 313,
														"src": "4798:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 345,
													"nodeType": "Block",
													"src": "4857:344:1",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 336,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 330,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 327,
																			"name": "returndata",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 315,
																			"src": "5045:10:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 328,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5056:6:1",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "5045:17:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 329,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5066:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5045:22:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 335,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"expression": {
																				"id": 331,
																				"name": "target",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 311,
																				"src": "5071:6:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"id": 332,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "5078:4:1",
																			"memberName": "code",
																			"nodeType": "MemberAccess",
																			"src": "5071:11:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 333,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5083:6:1",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "5071:18:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 334,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5093:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5071:23:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "5045:49:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 342,
															"nodeType": "IfStatement",
															"src": "5041:119:1",
															"trueBody": {
																"id": 341,
																"nodeType": "Block",
																"src": "5096:64:1",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 338,
																					"name": "target",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 311,
																					"src": "5138:6:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 337,
																				"name": "AddressEmptyCode",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 149,
																				"src": "5121:16:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																					"typeString": "function (address) pure"
																				}
																			},
																			"id": 339,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5121:24:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 340,
																		"nodeType": "RevertStatement",
																		"src": "5114:31:1"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 343,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 315,
																"src": "5180:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 319,
															"id": 344,
															"nodeType": "Return",
															"src": "5173:17:1"
														}
													]
												},
												"id": 346,
												"nodeType": "IfStatement",
												"src": "4793:408:1",
												"trueBody": {
													"id": 326,
													"nodeType": "Block",
													"src": "4807:44:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 323,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 315,
																		"src": "4829:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 322,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 388,
																	"src": "4821:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory) pure"
																	}
																},
																"id": 324,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4821:19:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 325,
															"nodeType": "ExpressionStatement",
															"src": "4821:19:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 309,
										"nodeType": "StructuredDocumentation",
										"src": "4365:255:1",
										"text": " @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\n unsuccessful call."
									},
									"id": 348,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResultFromTarget",
									"nameLocation": "4634:26:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 316,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 311,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4678:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 348,
												"src": "4670:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 310,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4670:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 313,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "4699:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 348,
												"src": "4694:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 312,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4694:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 315,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "4729:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 348,
												"src": "4716:23:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 314,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4716:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4660:85:1"
									},
									"returnParameters": {
										"id": 319,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 318,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 348,
												"src": "4769:12:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 317,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4769:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4768:14:1"
									},
									"scope": 389,
									"src": "4625:582:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 369,
										"nodeType": "Block",
										"src": "5509:122:1",
										"statements": [
											{
												"condition": {
													"id": 359,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "5523:8:1",
													"subExpression": {
														"id": 358,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 351,
														"src": "5524:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 367,
													"nodeType": "Block",
													"src": "5583:42:1",
													"statements": [
														{
															"expression": {
																"id": 365,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 353,
																"src": "5604:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 357,
															"id": 366,
															"nodeType": "Return",
															"src": "5597:17:1"
														}
													]
												},
												"id": 368,
												"nodeType": "IfStatement",
												"src": "5519:106:1",
												"trueBody": {
													"id": 364,
													"nodeType": "Block",
													"src": "5533:44:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 361,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 353,
																		"src": "5555:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 360,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 388,
																	"src": "5547:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory) pure"
																	}
																},
																"id": 362,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5547:19:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 363,
															"nodeType": "ExpressionStatement",
															"src": "5547:19:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 349,
										"nodeType": "StructuredDocumentation",
										"src": "5213:189:1",
										"text": " @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n revert reason or with a default {FailedInnerCall} error."
									},
									"id": 370,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "5416:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 354,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 351,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "5438:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 370,
												"src": "5433:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 350,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5433:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 353,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "5460:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 370,
												"src": "5447:23:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 352,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5447:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5432:39:1"
									},
									"returnParameters": {
										"id": 357,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 356,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 370,
												"src": "5495:12:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 355,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5495:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5494:14:1"
									},
									"scope": 389,
									"src": "5407:224:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 387,
										"nodeType": "Block",
										"src": "5798:461:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 379,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 376,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 373,
															"src": "5874:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 377,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5885:6:1",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5874:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 378,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5894:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5874:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 385,
													"nodeType": "Block",
													"src": "6204:49:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 382,
																	"name": "FailedInnerCall",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 152,
																	"src": "6225:15:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 383,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6225:17:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 384,
															"nodeType": "RevertStatement",
															"src": "6218:24:1"
														}
													]
												},
												"id": 386,
												"nodeType": "IfStatement",
												"src": "5870:383:1",
												"trueBody": {
													"id": 381,
													"nodeType": "Block",
													"src": "5897:301:1",
													"statements": [
														{
															"AST": {
																"nodeType": "YulBlock",
																"src": "6055:133:1",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "6073:40:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "returndata",
																					"nodeType": "YulIdentifier",
																					"src": "6102:10:1"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "6096:5:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6096:17:1"
																		},
																		"variables": [
																			{
																				"name": "returndata_size",
																				"nodeType": "YulTypedName",
																				"src": "6077:15:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "6141:2:1",
																							"type": "",
																							"value": "32"
																						},
																						{
																							"name": "returndata",
																							"nodeType": "YulIdentifier",
																							"src": "6145:10:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "6137:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6137:19:1"
																				},
																				{
																					"name": "returndata_size",
																					"nodeType": "YulIdentifier",
																					"src": "6158:15:1"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6130:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6130:44:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6130:44:1"
																	}
																]
															},
															"documentation": "@solidity memory-safe-assembly",
															"evmVersion": "shanghai",
															"externalReferences": [
																{
																	"declaration": 373,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "6102:10:1",
																	"valueSize": 1
																},
																{
																	"declaration": 373,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "6145:10:1",
																	"valueSize": 1
																}
															],
															"id": 380,
															"nodeType": "InlineAssembly",
															"src": "6046:142:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 371,
										"nodeType": "StructuredDocumentation",
										"src": "5637:101:1",
										"text": " @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}."
									},
									"id": 388,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revert",
									"nameLocation": "5752:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 374,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 373,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "5773:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 388,
												"src": "5760:23:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 372,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5760:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5759:25:1"
									},
									"returnParameters": {
										"id": 375,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5798:0:1"
									},
									"scope": 389,
									"src": "5743:516:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 390,
							"src": "195:6066:1",
							"usedErrors": [
								144,
								149,
								152
							],
							"usedEvents": []
						}
					],
					"src": "101:6161:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							419
						]
					},
					"id": 420,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 391,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:2"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 392,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:2",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 419,
							"linearizedBaseContracts": [
								419
							],
							"name": "Context",
							"nameLocation": "642:7:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 400,
										"nodeType": "Block",
										"src": "718:34:2",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 397,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 398,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:2",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 396,
												"id": 399,
												"nodeType": "Return",
												"src": "728:17:2"
											}
										]
									},
									"id": 401,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 393,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:2"
									},
									"returnParameters": {
										"id": 396,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 395,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 401,
												"src": "709:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 394,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:2"
									},
									"scope": 419,
									"src": "656:96:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 409,
										"nodeType": "Block",
										"src": "825:32:2",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 406,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 407,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:2",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 405,
												"id": 408,
												"nodeType": "Return",
												"src": "835:15:2"
											}
										]
									},
									"id": 410,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 402,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:2"
									},
									"returnParameters": {
										"id": 405,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 404,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 410,
												"src": "809:14:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 403,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:2"
									},
									"scope": 419,
									"src": "758:99:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 417,
										"nodeType": "Block",
										"src": "935:25:2",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 415,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:2",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 414,
												"id": 416,
												"nodeType": "Return",
												"src": "945:8:2"
											}
										]
									},
									"id": 418,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 411,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:2"
									},
									"returnParameters": {
										"id": 414,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 413,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 418,
												"src": "926:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 412,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:2"
									},
									"scope": 419,
									"src": "863:97:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 420,
							"src": "624:338:2",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
					"exportedSymbols": {
						"Math": [
							1728
						],
						"SignedMath": [
							1833
						],
						"Strings": [
							674
						]
					},
					"id": 675,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 421,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
							"file": "./math/Math.sol",
							"id": 423,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 675,
							"sourceUnit": 1729,
							"src": "127:37:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 422,
										"name": "Math",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1728,
										"src": "135:4:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SignedMath.sol",
							"file": "./math/SignedMath.sol",
							"id": 425,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 675,
							"sourceUnit": 1834,
							"src": "165:49:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 424,
										"name": "SignedMath",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1833,
										"src": "173:10:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Strings",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 426,
								"nodeType": "StructuredDocumentation",
								"src": "216:34:3",
								"text": " @dev String operations."
							},
							"fullyImplemented": true,
							"id": 674,
							"linearizedBaseContracts": [
								674
							],
							"name": "Strings",
							"nameLocation": "259:7:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 429,
									"mutability": "constant",
									"name": "HEX_DIGITS",
									"nameLocation": "298:10:3",
									"nodeType": "VariableDeclaration",
									"scope": 674,
									"src": "273:56:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes16",
										"typeString": "bytes16"
									},
									"typeName": {
										"id": 427,
										"name": "bytes16",
										"nodeType": "ElementaryTypeName",
										"src": "273:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes16",
											"typeString": "bytes16"
										}
									},
									"value": {
										"hexValue": "30313233343536373839616263646566",
										"id": 428,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "311:18:3",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f",
											"typeString": "literal_string \"0123456789abcdef\""
										},
										"value": "0123456789abcdef"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 432,
									"mutability": "constant",
									"name": "ADDRESS_LENGTH",
									"nameLocation": "358:14:3",
									"nodeType": "VariableDeclaration",
									"scope": 674,
									"src": "335:42:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 430,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "335:5:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "3230",
										"id": 431,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "375:2:3",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_20_by_1",
											"typeString": "int_const 20"
										},
										"value": "20"
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 433,
										"nodeType": "StructuredDocumentation",
										"src": "384:81:3",
										"text": " @dev The `value` string doesn't fit in the specified `length`."
									},
									"errorSelector": "e22e27eb",
									"id": 439,
									"name": "StringsInsufficientHexLength",
									"nameLocation": "476:28:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 438,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 435,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "513:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 439,
												"src": "505:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 434,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "505:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 437,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "528:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 439,
												"src": "520:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 436,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "520:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "504:31:3"
									},
									"src": "470:66:3"
								},
								{
									"body": {
										"id": 486,
										"nodeType": "Block",
										"src": "708:627:3",
										"statements": [
											{
												"id": 485,
												"nodeType": "UncheckedBlock",
												"src": "718:611:3",
												"statements": [
													{
														"assignments": [
															448
														],
														"declarations": [
															{
																"constant": false,
																"id": 448,
																"mutability": "mutable",
																"name": "length",
																"nameLocation": "750:6:3",
																"nodeType": "VariableDeclaration",
																"scope": 485,
																"src": "742:14:3",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 447,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "742:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 455,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 454,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 451,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 442,
																		"src": "770:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 449,
																		"name": "Math",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1728,
																		"src": "759:4:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Math_$1728_$",
																			"typeString": "type(library Math)"
																		}
																	},
																	"id": 450,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "764:5:3",
																	"memberName": "log10",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1548,
																	"src": "759:10:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256) pure returns (uint256)"
																	}
																},
																"id": 452,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "759:17:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "31",
																"id": 453,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "779:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "759:21:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "742:38:3"
													},
													{
														"assignments": [
															457
														],
														"declarations": [
															{
																"constant": false,
																"id": 457,
																"mutability": "mutable",
																"name": "buffer",
																"nameLocation": "808:6:3",
																"nodeType": "VariableDeclaration",
																"scope": 485,
																"src": "794:20:3",
																"stateVariable": false,
																"storageLocation": "memory",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string"
																},
																"typeName": {
																	"id": 456,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "794:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 462,
														"initialValue": {
															"arguments": [
																{
																	"id": 460,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 448,
																	"src": "828:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 459,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "NewExpression",
																"src": "817:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																},
																"typeName": {
																	"id": 458,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "821:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																}
															},
															"id": 461,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "817:18:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "794:41:3"
													},
													{
														"assignments": [
															464
														],
														"declarations": [
															{
																"constant": false,
																"id": 464,
																"mutability": "mutable",
																"name": "ptr",
																"nameLocation": "857:3:3",
																"nodeType": "VariableDeclaration",
																"scope": 485,
																"src": "849:11:3",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 463,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "849:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 465,
														"nodeType": "VariableDeclarationStatement",
														"src": "849:11:3"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "930:67:3",
															"statements": [
																{
																	"nodeType": "YulAssignment",
																	"src": "948:35:3",
																	"value": {
																		"arguments": [
																			{
																				"name": "buffer",
																				"nodeType": "YulIdentifier",
																				"src": "959:6:3"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "971:2:3",
																						"type": "",
																						"value": "32"
																					},
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "975:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "967:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "967:15:3"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "955:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "955:28:3"
																	},
																	"variableNames": [
																		{
																			"name": "ptr",
																			"nodeType": "YulIdentifier",
																			"src": "948:3:3"
																		}
																	]
																}
															]
														},
														"documentation": "@solidity memory-safe-assembly",
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 457,
																"isOffset": false,
																"isSlot": false,
																"src": "959:6:3",
																"valueSize": 1
															},
															{
																"declaration": 448,
																"isOffset": false,
																"isSlot": false,
																"src": "975:6:3",
																"valueSize": 1
															},
															{
																"declaration": 464,
																"isOffset": false,
																"isSlot": false,
																"src": "948:3:3",
																"valueSize": 1
															}
														],
														"id": 466,
														"nodeType": "InlineAssembly",
														"src": "921:76:3"
													},
													{
														"body": {
															"id": 481,
															"nodeType": "Block",
															"src": "1023:269:3",
															"statements": [
																{
																	"expression": {
																		"id": 469,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "--",
																		"prefix": false,
																		"src": "1041:5:3",
																		"subExpression": {
																			"id": 468,
																			"name": "ptr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 464,
																			"src": "1041:3:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 470,
																	"nodeType": "ExpressionStatement",
																	"src": "1041:5:3"
																},
																{
																	"AST": {
																		"nodeType": "YulBlock",
																		"src": "1124:86:3",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "ptr",
																							"nodeType": "YulIdentifier",
																							"src": "1154:3:3"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value",
																											"nodeType": "YulIdentifier",
																											"src": "1168:5:3"
																										},
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "1175:2:3",
																											"type": "",
																											"value": "10"
																										}
																									],
																									"functionName": {
																										"name": "mod",
																										"nodeType": "YulIdentifier",
																										"src": "1164:3:3"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "1164:14:3"
																								},
																								{
																									"name": "HEX_DIGITS",
																									"nodeType": "YulIdentifier",
																									"src": "1180:10:3"
																								}
																							],
																							"functionName": {
																								"name": "byte",
																								"nodeType": "YulIdentifier",
																								"src": "1159:4:3"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1159:32:3"
																						}
																					],
																					"functionName": {
																						"name": "mstore8",
																						"nodeType": "YulIdentifier",
																						"src": "1146:7:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1146:46:3"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "1146:46:3"
																			}
																		]
																	},
																	"documentation": "@solidity memory-safe-assembly",
																	"evmVersion": "shanghai",
																	"externalReferences": [
																		{
																			"declaration": 429,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1180:10:3",
																			"valueSize": 1
																		},
																		{
																			"declaration": 464,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1154:3:3",
																			"valueSize": 1
																		},
																		{
																			"declaration": 442,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1168:5:3",
																			"valueSize": 1
																		}
																	],
																	"id": 471,
																	"nodeType": "InlineAssembly",
																	"src": "1115:95:3"
																},
																{
																	"expression": {
																		"id": 474,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 472,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 442,
																			"src": "1227:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"hexValue": "3130",
																			"id": 473,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1236:2:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10_by_1",
																				"typeString": "int_const 10"
																			},
																			"value": "10"
																		},
																		"src": "1227:11:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 475,
																	"nodeType": "ExpressionStatement",
																	"src": "1227:11:3"
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 478,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 476,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 442,
																			"src": "1260:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 477,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1269:1:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1260:10:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 480,
																	"nodeType": "IfStatement",
																	"src": "1256:21:3",
																	"trueBody": {
																		"id": 479,
																		"nodeType": "Break",
																		"src": "1272:5:3"
																	}
																}
															]
														},
														"condition": {
															"hexValue": "74727565",
															"id": 467,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1017:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														"id": 482,
														"nodeType": "WhileStatement",
														"src": "1010:282:3"
													},
													{
														"expression": {
															"id": 483,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 457,
															"src": "1312:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 446,
														"id": 484,
														"nodeType": "Return",
														"src": "1305:13:3"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 440,
										"nodeType": "StructuredDocumentation",
										"src": "542:90:3",
										"text": " @dev Converts a `uint256` to its ASCII `string` decimal representation."
									},
									"id": 487,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toString",
									"nameLocation": "646:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 443,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 442,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "663:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 487,
												"src": "655:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 441,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "655:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "654:15:3"
									},
									"returnParameters": {
										"id": 446,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 445,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 487,
												"src": "693:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 444,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "693:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:15:3"
									},
									"scope": 674,
									"src": "637:698:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 512,
										"nodeType": "Block",
										"src": "1511:92:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 500,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 498,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 490,
																	"src": "1542:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 499,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1550:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "1542:9:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseExpression": {
																"hexValue": "",
																"id": 502,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1560:2:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																},
																"value": ""
															},
															"id": 503,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "Conditional",
															"src": "1542:20:3",
															"trueExpression": {
																"hexValue": "2d",
																"id": 501,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1554:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561",
																	"typeString": "literal_string \"-\""
																},
																"value": "-"
															},
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 507,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 490,
																			"src": "1588:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		],
																		"expression": {
																			"id": 505,
																			"name": "SignedMath",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1833,
																			"src": "1573:10:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_SignedMath_$1833_$",
																				"typeString": "type(library SignedMath)"
																			}
																		},
																		"id": 506,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1584:3:3",
																		"memberName": "abs",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1832,
																		"src": "1573:14:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_int256_$returns$_t_uint256_$",
																			"typeString": "function (int256) pure returns (uint256)"
																		}
																	},
																	"id": 508,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1573:21:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 504,
																"name": "toString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 487,
																"src": "1564:8:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																}
															},
															"id": 509,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1564:31:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"expression": {
															"id": 496,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1528:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																"typeString": "type(string storage pointer)"
															},
															"typeName": {
																"id": 495,
																"name": "string",
																"nodeType": "ElementaryTypeName",
																"src": "1528:6:3",
																"typeDescriptions": {}
															}
														},
														"id": 497,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1535:6:3",
														"memberName": "concat",
														"nodeType": "MemberAccess",
														"src": "1528:13:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () pure returns (string memory)"
														}
													},
													"id": 510,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1528:68:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 494,
												"id": 511,
												"nodeType": "Return",
												"src": "1521:75:3"
											}
										]
									},
									"documentation": {
										"id": 488,
										"nodeType": "StructuredDocumentation",
										"src": "1341:89:3",
										"text": " @dev Converts a `int256` to its ASCII `string` decimal representation."
									},
									"id": 513,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toStringSigned",
									"nameLocation": "1444:14:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 491,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 490,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1466:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 513,
												"src": "1459:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 489,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1459:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1458:14:3"
									},
									"returnParameters": {
										"id": 494,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 493,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 513,
												"src": "1496:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 492,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1496:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1495:15:3"
									},
									"scope": 674,
									"src": "1435:168:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 532,
										"nodeType": "Block",
										"src": "1782:100:3",
										"statements": [
											{
												"id": 531,
												"nodeType": "UncheckedBlock",
												"src": "1792:84:3",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 522,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 516,
																	"src": "1835:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 528,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"id": 525,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 516,
																				"src": "1854:5:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 523,
																				"name": "Math",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1728,
																				"src": "1842:4:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_Math_$1728_$",
																					"typeString": "type(library Math)"
																				}
																			},
																			"id": 524,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "1847:6:3",
																			"memberName": "log256",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1670,
																			"src": "1842:11:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																				"typeString": "function (uint256) pure returns (uint256)"
																			}
																		},
																		"id": 526,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1842:18:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 527,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1863:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "1842:22:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 521,
																"name": "toHexString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	533,
																	616,
																	636
																],
																"referencedDeclaration": 616,
																"src": "1823:11:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256,uint256) pure returns (string memory)"
																}
															},
															"id": 529,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1823:42:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 520,
														"id": 530,
														"nodeType": "Return",
														"src": "1816:49:3"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 514,
										"nodeType": "StructuredDocumentation",
										"src": "1609:94:3",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."
									},
									"id": 533,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1717:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 517,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 516,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1737:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 533,
												"src": "1729:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 515,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1729:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1728:15:3"
									},
									"returnParameters": {
										"id": 520,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 519,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 533,
												"src": "1767:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 518,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1767:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1766:15:3"
									},
									"scope": 674,
									"src": "1708:174:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 615,
										"nodeType": "Block",
										"src": "2095:435:3",
										"statements": [
											{
												"assignments": [
													544
												],
												"declarations": [
													{
														"constant": false,
														"id": 544,
														"mutability": "mutable",
														"name": "localValue",
														"nameLocation": "2113:10:3",
														"nodeType": "VariableDeclaration",
														"scope": 615,
														"src": "2105:18:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 543,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2105:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 546,
												"initialValue": {
													"id": 545,
													"name": "value",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 536,
													"src": "2126:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2105:26:3"
											},
											{
												"assignments": [
													548
												],
												"declarations": [
													{
														"constant": false,
														"id": 548,
														"mutability": "mutable",
														"name": "buffer",
														"nameLocation": "2154:6:3",
														"nodeType": "VariableDeclaration",
														"scope": 615,
														"src": "2141:19:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 547,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "2141:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 557,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 555,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 553,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 551,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2173:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 552,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 538,
																	"src": "2177:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2173:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "32",
																"id": 554,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2186:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "2173:14:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 550,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "2163:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 549,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "2167:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 556,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2163:25:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2141:47:3"
											},
											{
												"expression": {
													"id": 562,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 558,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 548,
															"src": "2198:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 560,
														"indexExpression": {
															"hexValue": "30",
															"id": 559,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2205:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2198:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 561,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2210:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
															"typeString": "literal_string \"0\""
														},
														"value": "0"
													},
													"src": "2198:15:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 563,
												"nodeType": "ExpressionStatement",
												"src": "2198:15:3"
											},
											{
												"expression": {
													"id": 568,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 564,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 548,
															"src": "2223:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 566,
														"indexExpression": {
															"hexValue": "31",
															"id": 565,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2230:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2223:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "78",
														"id": 567,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2235:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83",
															"typeString": "literal_string \"x\""
														},
														"value": "x"
													},
													"src": "2223:15:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 569,
												"nodeType": "ExpressionStatement",
												"src": "2223:15:3"
											},
											{
												"body": {
													"id": 598,
													"nodeType": "Block",
													"src": "2293:95:3",
													"statements": [
														{
															"expression": {
																"id": 592,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 584,
																		"name": "buffer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 548,
																		"src": "2307:6:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 586,
																	"indexExpression": {
																		"id": 585,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 571,
																		"src": "2314:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "2307:9:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 587,
																		"name": "HEX_DIGITS",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 429,
																		"src": "2319:10:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes16",
																			"typeString": "bytes16"
																		}
																	},
																	"id": 591,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 590,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 588,
																			"name": "localValue",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 544,
																			"src": "2330:10:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&",
																		"rightExpression": {
																			"hexValue": "307866",
																			"id": 589,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2343:3:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_15_by_1",
																				"typeString": "int_const 15"
																			},
																			"value": "0xf"
																		},
																		"src": "2330:16:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2319:28:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "2307:40:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 593,
															"nodeType": "ExpressionStatement",
															"src": "2307:40:3"
														},
														{
															"expression": {
																"id": 596,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 594,
																	"name": "localValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 544,
																	"src": "2361:10:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "34",
																	"id": 595,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2376:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "2361:16:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 597,
															"nodeType": "ExpressionStatement",
															"src": "2361:16:3"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 580,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 578,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 571,
														"src": "2281:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "31",
														"id": 579,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2285:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "2281:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 599,
												"initializationExpression": {
													"assignments": [
														571
													],
													"declarations": [
														{
															"constant": false,
															"id": 571,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "2261:1:3",
															"nodeType": "VariableDeclaration",
															"scope": 599,
															"src": "2253:9:3",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 570,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2253:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 577,
													"initialValue": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 576,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 574,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "32",
																"id": 572,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2265:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 573,
																"name": "length",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 538,
																"src": "2269:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2265:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 575,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2278:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "2265:14:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "2253:26:3"
												},
												"loopExpression": {
													"expression": {
														"id": 582,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "--",
														"prefix": true,
														"src": "2288:3:3",
														"subExpression": {
															"id": 581,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 571,
															"src": "2290:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 583,
													"nodeType": "ExpressionStatement",
													"src": "2288:3:3"
												},
												"nodeType": "ForStatement",
												"src": "2248:140:3"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 602,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 600,
														"name": "localValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 544,
														"src": "2401:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 601,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2415:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2401:15:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 609,
												"nodeType": "IfStatement",
												"src": "2397:96:3",
												"trueBody": {
													"id": 608,
													"nodeType": "Block",
													"src": "2418:75:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 604,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 536,
																		"src": "2468:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 605,
																		"name": "length",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 538,
																		"src": "2475:6:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 603,
																	"name": "StringsInsufficientHexLength",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 439,
																	"src": "2439:28:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$",
																		"typeString": "function (uint256,uint256) pure"
																	}
																},
																"id": 606,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2439:43:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 607,
															"nodeType": "RevertStatement",
															"src": "2432:50:3"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 612,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 548,
															"src": "2516:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 611,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2509:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 610,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "2509:6:3",
															"typeDescriptions": {}
														}
													},
													"id": 613,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2509:14:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 542,
												"id": 614,
												"nodeType": "Return",
												"src": "2502:21:3"
											}
										]
									},
									"documentation": {
										"id": 534,
										"nodeType": "StructuredDocumentation",
										"src": "1888:112:3",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."
									},
									"id": 616,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "2014:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 539,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 536,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2034:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 616,
												"src": "2026:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 535,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2026:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 538,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "2049:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 616,
												"src": "2041:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 537,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2041:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2025:31:3"
									},
									"returnParameters": {
										"id": 542,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 541,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 616,
												"src": "2080:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 540,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2080:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2079:15:3"
									},
									"scope": 674,
									"src": "2005:525:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 635,
										"nodeType": "Block",
										"src": "2762:75:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 629,
																			"name": "addr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 619,
																			"src": "2807:4:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 628,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2799:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint160_$",
																			"typeString": "type(uint160)"
																		},
																		"typeName": {
																			"id": 627,
																			"name": "uint160",
																			"nodeType": "ElementaryTypeName",
																			"src": "2799:7:3",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 630,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2799:13:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																],
																"id": 626,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2791:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 625,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2791:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 631,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2791:22:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 632,
															"name": "ADDRESS_LENGTH",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 432,
															"src": "2815:14:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 624,
														"name": "toHexString",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															533,
															616,
															636
														],
														"referencedDeclaration": 616,
														"src": "2779:11:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (string memory)"
														}
													},
													"id": 633,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2779:51:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 623,
												"id": 634,
												"nodeType": "Return",
												"src": "2772:58:3"
											}
										]
									},
									"documentation": {
										"id": 617,
										"nodeType": "StructuredDocumentation",
										"src": "2536:148:3",
										"text": " @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n representation."
									},
									"id": 636,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "2698:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 620,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 619,
												"mutability": "mutable",
												"name": "addr",
												"nameLocation": "2718:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 636,
												"src": "2710:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 618,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2710:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2709:14:3"
									},
									"returnParameters": {
										"id": 623,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 622,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 636,
												"src": "2747:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 621,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2747:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2746:15:3"
									},
									"scope": 674,
									"src": "2689:148:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 672,
										"nodeType": "Block",
										"src": "2992:104:3",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 670,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 656,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 648,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 639,
																		"src": "3015:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 647,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3009:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 646,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "3009:5:3",
																		"typeDescriptions": {}
																	}
																},
																"id": 649,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3009:8:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 650,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3018:6:3",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "3009:15:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 653,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 641,
																		"src": "3034:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 652,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3028:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 651,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "3028:5:3",
																		"typeDescriptions": {}
																	}
																},
																"id": 654,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3028:8:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 655,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3037:6:3",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "3028:15:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3009:34:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"id": 669,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 660,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 639,
																			"src": "3063:1:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		],
																		"id": 659,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3057:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 658,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "3057:5:3",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 661,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3057:8:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 657,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967288,
																"src": "3047:9:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 662,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3047:19:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 666,
																			"name": "b",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 641,
																			"src": "3086:1:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		],
																		"id": 665,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3080:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 664,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "3080:5:3",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 667,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3080:8:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 663,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967288,
																"src": "3070:9:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 668,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3070:19:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"src": "3047:42:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "3009:80:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 645,
												"id": 671,
												"nodeType": "Return",
												"src": "3002:87:3"
											}
										]
									},
									"documentation": {
										"id": 637,
										"nodeType": "StructuredDocumentation",
										"src": "2843:66:3",
										"text": " @dev Returns true if the two strings are equal."
									},
									"id": 673,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "equal",
									"nameLocation": "2923:5:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 642,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 639,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2943:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 673,
												"src": "2929:15:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 638,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2929:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 641,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2960:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 673,
												"src": "2946:15:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 640,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2946:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2928:34:3"
									},
									"returnParameters": {
										"id": 645,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 644,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 673,
												"src": "2986:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 643,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2986:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2985:6:3"
									},
									"scope": 674,
									"src": "2914:182:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 675,
							"src": "251:2847:3",
							"usedErrors": [
								439
							],
							"usedEvents": []
						}
					],
					"src": "101:2998:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
					"exportedSymbols": {
						"Math": [
							1728
						]
					},
					"id": 1729,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 676,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "103:24:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Math",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 677,
								"nodeType": "StructuredDocumentation",
								"src": "129:73:4",
								"text": " @dev Standard math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 1728,
							"linearizedBaseContracts": [
								1728
							],
							"name": "Math",
							"nameLocation": "211:4:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 678,
										"nodeType": "StructuredDocumentation",
										"src": "222:50:4",
										"text": " @dev Muldiv operation overflow."
									},
									"errorSelector": "227bc153",
									"id": 680,
									"name": "MathOverflowedMulDiv",
									"nameLocation": "283:20:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 679,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "303:2:4"
									},
									"src": "277:29:4"
								},
								{
									"canonicalName": "Math.Rounding",
									"id": 685,
									"members": [
										{
											"id": 681,
											"name": "Floor",
											"nameLocation": "336:5:4",
											"nodeType": "EnumValue",
											"src": "336:5:4"
										},
										{
											"id": 682,
											"name": "Ceil",
											"nameLocation": "379:4:4",
											"nodeType": "EnumValue",
											"src": "379:4:4"
										},
										{
											"id": 683,
											"name": "Trunc",
											"nameLocation": "421:5:4",
											"nodeType": "EnumValue",
											"src": "421:5:4"
										},
										{
											"id": 684,
											"name": "Expand",
											"nameLocation": "451:6:4",
											"nodeType": "EnumValue",
											"src": "451:6:4"
										}
									],
									"name": "Rounding",
									"nameLocation": "317:8:4",
									"nodeType": "EnumDefinition",
									"src": "312:169:4"
								},
								{
									"body": {
										"id": 716,
										"nodeType": "Block",
										"src": "661:140:4",
										"statements": [
											{
												"id": 715,
												"nodeType": "UncheckedBlock",
												"src": "671:124:4",
												"statements": [
													{
														"assignments": [
															698
														],
														"declarations": [
															{
																"constant": false,
																"id": 698,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "703:1:4",
																"nodeType": "VariableDeclaration",
																"scope": 715,
																"src": "695:9:4",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 697,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "695:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 702,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 701,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 699,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 688,
																"src": "707:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 700,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 690,
																"src": "711:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "707:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "695:17:4"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 705,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 703,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 698,
																"src": "730:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 704,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 688,
																"src": "734:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "730:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 710,
														"nodeType": "IfStatement",
														"src": "726:28:4",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 706,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "745:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 707,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "752:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 708,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "744:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 696,
															"id": 709,
															"nodeType": "Return",
															"src": "737:17:4"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 711,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "776:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 712,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 698,
																	"src": "782:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 713,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "775:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 696,
														"id": 714,
														"nodeType": "Return",
														"src": "768:16:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 686,
										"nodeType": "StructuredDocumentation",
										"src": "487:93:4",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag."
									},
									"id": 717,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "594:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 691,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 688,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "609:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 717,
												"src": "601:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 687,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "601:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 690,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "620:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 717,
												"src": "612:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 689,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "612:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "600:22:4"
									},
									"returnParameters": {
										"id": 696,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 693,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 717,
												"src": "646:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 692,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "646:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 695,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 717,
												"src": "652:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 694,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "645:15:4"
									},
									"scope": 1728,
									"src": "585:216:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 744,
										"nodeType": "Block",
										"src": "984:113:4",
										"statements": [
											{
												"id": 743,
												"nodeType": "UncheckedBlock",
												"src": "994:97:4",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 731,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 729,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 722,
																"src": "1022:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 730,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 720,
																"src": "1026:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1022:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 736,
														"nodeType": "IfStatement",
														"src": "1018:28:4",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 732,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1037:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 733,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1044:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 734,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1036:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 728,
															"id": 735,
															"nodeType": "Return",
															"src": "1029:17:4"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 737,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1068:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 740,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 738,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 720,
																		"src": "1074:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 739,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 722,
																		"src": "1078:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1074:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 741,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1067:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 728,
														"id": 742,
														"nodeType": "Return",
														"src": "1060:20:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 718,
										"nodeType": "StructuredDocumentation",
										"src": "807:96:4",
										"text": " @dev Returns the subtraction of two unsigned integers, with an overflow flag."
									},
									"id": 745,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "917:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 723,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 720,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "932:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 745,
												"src": "924:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 719,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "924:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 722,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "943:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 745,
												"src": "935:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 721,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "935:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "923:22:4"
									},
									"returnParameters": {
										"id": 728,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 725,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 745,
												"src": "969:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 724,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "969:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 727,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 745,
												"src": "975:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 726,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "975:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "968:15:4"
									},
									"scope": 1728,
									"src": "908:189:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 786,
										"nodeType": "Block",
										"src": "1283:417:4",
										"statements": [
											{
												"id": 785,
												"nodeType": "UncheckedBlock",
												"src": "1293:401:4",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 759,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 757,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 748,
																"src": "1551:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 758,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1556:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1551:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 764,
														"nodeType": "IfStatement",
														"src": "1547:28:4",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 760,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1567:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 761,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1573:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 762,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1566:9:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 756,
															"id": 763,
															"nodeType": "Return",
															"src": "1559:16:4"
														}
													},
													{
														"assignments": [
															766
														],
														"declarations": [
															{
																"constant": false,
																"id": 766,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1597:1:4",
																"nodeType": "VariableDeclaration",
																"scope": 785,
																"src": "1589:9:4",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 765,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1589:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 770,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 769,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 767,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 748,
																"src": "1601:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 768,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 750,
																"src": "1605:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1601:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1589:17:4"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 775,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 773,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 771,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 766,
																	"src": "1624:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 772,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 748,
																	"src": "1628:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1624:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 774,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 750,
																"src": "1633:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1624:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 780,
														"nodeType": "IfStatement",
														"src": "1620:33:4",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 776,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1644:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 777,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1651:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 778,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1643:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 756,
															"id": 779,
															"nodeType": "Return",
															"src": "1636:17:4"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 781,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1675:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 782,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 766,
																	"src": "1681:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 783,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1674:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 756,
														"id": 784,
														"nodeType": "Return",
														"src": "1667:16:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 746,
										"nodeType": "StructuredDocumentation",
										"src": "1103:99:4",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag."
									},
									"id": 787,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1216:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 751,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 748,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1231:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 787,
												"src": "1223:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 747,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 750,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1242:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 787,
												"src": "1234:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 749,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1222:22:4"
									},
									"returnParameters": {
										"id": 756,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 753,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 787,
												"src": "1268:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 752,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1268:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 755,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 787,
												"src": "1274:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 754,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1274:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1267:15:4"
									},
									"scope": 1728,
									"src": "1207:493:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 814,
										"nodeType": "Block",
										"src": "1887:114:4",
										"statements": [
											{
												"id": 813,
												"nodeType": "UncheckedBlock",
												"src": "1897:98:4",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 801,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 799,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 792,
																"src": "1925:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 800,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1930:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1925:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 806,
														"nodeType": "IfStatement",
														"src": "1921:29:4",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 802,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1941:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 803,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1948:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 804,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1940:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 798,
															"id": 805,
															"nodeType": "Return",
															"src": "1933:17:4"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 807,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1972:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 810,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 808,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 790,
																		"src": "1978:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 809,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 792,
																		"src": "1982:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1978:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 811,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1971:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 798,
														"id": 812,
														"nodeType": "Return",
														"src": "1964:20:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 788,
										"nodeType": "StructuredDocumentation",
										"src": "1706:100:4",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag."
									},
									"id": 815,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1820:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 793,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 790,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1835:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 815,
												"src": "1827:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 789,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1827:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 792,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1846:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 815,
												"src": "1838:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 791,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1838:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1826:22:4"
									},
									"returnParameters": {
										"id": 798,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 795,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 815,
												"src": "1872:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 794,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1872:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 797,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 815,
												"src": "1878:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 796,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1878:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1871:15:4"
									},
									"scope": 1728,
									"src": "1811:190:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 842,
										"nodeType": "Block",
										"src": "2198:114:4",
										"statements": [
											{
												"id": 841,
												"nodeType": "UncheckedBlock",
												"src": "2208:98:4",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 829,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 827,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 820,
																"src": "2236:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 828,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2241:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2236:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 834,
														"nodeType": "IfStatement",
														"src": "2232:29:4",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 830,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2252:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 831,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2259:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 832,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2251:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 826,
															"id": 833,
															"nodeType": "Return",
															"src": "2244:17:4"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 835,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2283:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 838,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 836,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 818,
																		"src": "2289:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 837,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 820,
																		"src": "2293:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2289:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 839,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2282:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 826,
														"id": 840,
														"nodeType": "Return",
														"src": "2275:20:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 816,
										"nodeType": "StructuredDocumentation",
										"src": "2007:110:4",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag."
									},
									"id": 843,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2131:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 821,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 818,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2146:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 843,
												"src": "2138:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 817,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2138:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 820,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2157:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 843,
												"src": "2149:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 819,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2149:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2137:22:4"
									},
									"returnParameters": {
										"id": 826,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 823,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 843,
												"src": "2183:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 822,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2183:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 825,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 843,
												"src": "2189:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 824,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2189:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2182:15:4"
									},
									"scope": 1728,
									"src": "2122:190:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 860,
										"nodeType": "Block",
										"src": "2449:37:4",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 855,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 853,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 846,
															"src": "2466:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 854,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 848,
															"src": "2470:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2466:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 857,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 848,
														"src": "2478:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 858,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2466:13:4",
													"trueExpression": {
														"id": 856,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 846,
														"src": "2474:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 852,
												"id": 859,
												"nodeType": "Return",
												"src": "2459:20:4"
											}
										]
									},
									"documentation": {
										"id": 844,
										"nodeType": "StructuredDocumentation",
										"src": "2318:59:4",
										"text": " @dev Returns the largest of two numbers."
									},
									"id": 861,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "2391:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 849,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 846,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2403:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 861,
												"src": "2395:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 845,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2395:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 848,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2414:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 861,
												"src": "2406:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 847,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2406:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2394:22:4"
									},
									"returnParameters": {
										"id": 852,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 851,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 861,
												"src": "2440:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 850,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2440:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2439:9:4"
									},
									"scope": 1728,
									"src": "2382:104:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 878,
										"nodeType": "Block",
										"src": "2624:37:4",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 873,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 871,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 864,
															"src": "2641:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 872,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 866,
															"src": "2645:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2641:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 875,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 866,
														"src": "2653:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 876,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2641:13:4",
													"trueExpression": {
														"id": 874,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 864,
														"src": "2649:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 870,
												"id": 877,
												"nodeType": "Return",
												"src": "2634:20:4"
											}
										]
									},
									"documentation": {
										"id": 862,
										"nodeType": "StructuredDocumentation",
										"src": "2492:60:4",
										"text": " @dev Returns the smallest of two numbers."
									},
									"id": 879,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "2566:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 867,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 864,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2578:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 879,
												"src": "2570:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 863,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 866,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2589:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 879,
												"src": "2581:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 865,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2581:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:22:4"
									},
									"returnParameters": {
										"id": 870,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 869,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 879,
												"src": "2615:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 868,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2615:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2614:9:4"
									},
									"scope": 1728,
									"src": "2557:104:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 901,
										"nodeType": "Block",
										"src": "2845:82:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 899,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 891,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 889,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 882,
																	"src": "2900:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 890,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 884,
																	"src": "2904:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2900:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 892,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2899:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 898,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 895,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 893,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 882,
																		"src": "2910:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "^",
																	"rightExpression": {
																		"id": 894,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 884,
																		"src": "2914:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2910:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 896,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2909:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "32",
															"id": 897,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2919:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "2909:11:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2899:21:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 888,
												"id": 900,
												"nodeType": "Return",
												"src": "2892:28:4"
											}
										]
									},
									"documentation": {
										"id": 880,
										"nodeType": "StructuredDocumentation",
										"src": "2667:102:4",
										"text": " @dev Returns the average of two numbers. The result is rounded towards\n zero."
									},
									"id": 902,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "2783:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 885,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 882,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2799:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 902,
												"src": "2791:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 881,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2791:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 884,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2810:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 902,
												"src": "2802:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 883,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2802:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2790:22:4"
									},
									"returnParameters": {
										"id": 888,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 887,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 902,
												"src": "2836:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 886,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2836:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2835:9:4"
									},
									"scope": 1728,
									"src": "2774:153:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 935,
										"nodeType": "Block",
										"src": "3219:260:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 914,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 912,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 907,
														"src": "3233:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 913,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3238:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3233:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 920,
												"nodeType": "IfStatement",
												"src": "3229:127:4",
												"trueBody": {
													"id": 919,
													"nodeType": "Block",
													"src": "3241:115:4",
													"statements": [
														{
															"expression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 917,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 915,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 905,
																	"src": "3340:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 916,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 907,
																	"src": "3344:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3340:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 911,
															"id": 918,
															"nodeType": "Return",
															"src": "3333:12:4"
														}
													]
												}
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 923,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 921,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 905,
															"src": "3444:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 922,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3449:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "3444:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 932,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 930,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 927,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 925,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 905,
																			"src": "3458:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 926,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3462:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "3458:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 928,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3457:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 929,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 907,
																"src": "3467:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3457:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 931,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3471:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "3457:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 933,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "3444:28:4",
													"trueExpression": {
														"hexValue": "30",
														"id": 924,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3453:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 911,
												"id": 934,
												"nodeType": "Return",
												"src": "3437:35:4"
											}
										]
									},
									"documentation": {
										"id": 903,
										"nodeType": "StructuredDocumentation",
										"src": "2933:210:4",
										"text": " @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds towards infinity instead\n of rounding towards zero."
									},
									"id": 936,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ceilDiv",
									"nameLocation": "3157:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 908,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 905,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3173:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 936,
												"src": "3165:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 904,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3165:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 907,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3184:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 936,
												"src": "3176:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 906,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3176:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3164:22:4"
									},
									"returnParameters": {
										"id": 911,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 910,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 936,
												"src": "3210:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 909,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3210:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3209:9:4"
									},
									"scope": 1728,
									"src": "3148:331:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1061,
										"nodeType": "Block",
										"src": "3901:4018:4",
										"statements": [
											{
												"id": 1060,
												"nodeType": "UncheckedBlock",
												"src": "3911:4002:4",
												"statements": [
													{
														"assignments": [
															949
														],
														"declarations": [
															{
																"constant": false,
																"id": 949,
																"mutability": "mutable",
																"name": "prod0",
																"nameLocation": "4240:5:4",
																"nodeType": "VariableDeclaration",
																"scope": 1060,
																"src": "4232:13:4",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 948,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4232:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 953,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 952,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 950,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 939,
																"src": "4248:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 951,
																"name": "y",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 941,
																"src": "4252:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4248:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4232:21:4"
													},
													{
														"assignments": [
															955
														],
														"declarations": [
															{
																"constant": false,
																"id": 955,
																"mutability": "mutable",
																"name": "prod1",
																"nameLocation": "4320:5:4",
																"nodeType": "VariableDeclaration",
																"scope": 1060,
																"src": "4312:13:4",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 954,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4312:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 956,
														"nodeType": "VariableDeclarationStatement",
														"src": "4312:13:4"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "4392:122:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4410:30:4",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "4427:1:4"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "4430:1:4"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4437:1:4",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "4433:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4433:6:4"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nodeType": "YulIdentifier",
																			"src": "4420:6:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4420:20:4"
																	},
																	"variables": [
																		{
																			"name": "mm",
																			"nodeType": "YulTypedName",
																			"src": "4414:2:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4457:43:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nodeType": "YulIdentifier",
																						"src": "4474:2:4"
																					},
																					{
																						"name": "prod0",
																						"nodeType": "YulIdentifier",
																						"src": "4478:5:4"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "4470:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4470:14:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nodeType": "YulIdentifier",
																						"src": "4489:2:4"
																					},
																					{
																						"name": "prod0",
																						"nodeType": "YulIdentifier",
																						"src": "4493:5:4"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "4486:2:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4486:13:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4466:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4466:34:4"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nodeType": "YulIdentifier",
																			"src": "4457:5:4"
																		}
																	]
																}
															]
														},
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 949,
																"isOffset": false,
																"isSlot": false,
																"src": "4478:5:4",
																"valueSize": 1
															},
															{
																"declaration": 949,
																"isOffset": false,
																"isSlot": false,
																"src": "4493:5:4",
																"valueSize": 1
															},
															{
																"declaration": 955,
																"isOffset": false,
																"isSlot": false,
																"src": "4457:5:4",
																"valueSize": 1
															},
															{
																"declaration": 939,
																"isOffset": false,
																"isSlot": false,
																"src": "4427:1:4",
																"valueSize": 1
															},
															{
																"declaration": 941,
																"isOffset": false,
																"isSlot": false,
																"src": "4430:1:4",
																"valueSize": 1
															}
														],
														"id": 957,
														"nodeType": "InlineAssembly",
														"src": "4383:131:4"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 960,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 958,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 955,
																"src": "4595:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 959,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4604:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4595:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 966,
														"nodeType": "IfStatement",
														"src": "4591:368:4",
														"trueBody": {
															"id": 965,
															"nodeType": "Block",
															"src": "4607:352:4",
															"statements": [
																{
																	"expression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 963,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 961,
																			"name": "prod0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 949,
																			"src": "4925:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 962,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 943,
																			"src": "4933:11:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "4925:19:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"functionReturnParameters": 947,
																	"id": 964,
																	"nodeType": "Return",
																	"src": "4918:26:4"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 969,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 967,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 943,
																"src": "5065:11:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 968,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 955,
																"src": "5080:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5065:20:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 974,
														"nodeType": "IfStatement",
														"src": "5061:88:4",
														"trueBody": {
															"id": 973,
															"nodeType": "Block",
															"src": "5087:62:4",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 970,
																			"name": "MathOverflowedMulDiv",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 680,
																			"src": "5112:20:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 971,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5112:22:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 972,
																	"nodeType": "RevertStatement",
																	"src": "5105:29:4"
																}
															]
														}
													},
													{
														"assignments": [
															976
														],
														"declarations": [
															{
																"constant": false,
																"id": 976,
																"mutability": "mutable",
																"name": "remainder",
																"nameLocation": "5412:9:4",
																"nodeType": "VariableDeclaration",
																"scope": 1060,
																"src": "5404:17:4",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 975,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "5404:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 977,
														"nodeType": "VariableDeclarationStatement",
														"src": "5404:17:4"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "5444:291:4",
															"statements": [
																{
																	"nodeType": "YulAssignment",
																	"src": "5513:38:4",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "5533:1:4"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "5536:1:4"
																			},
																			{
																				"name": "denominator",
																				"nodeType": "YulIdentifier",
																				"src": "5539:11:4"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nodeType": "YulIdentifier",
																			"src": "5526:6:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5526:25:4"
																	},
																	"variableNames": [
																		{
																			"name": "remainder",
																			"nodeType": "YulIdentifier",
																			"src": "5513:9:4"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5633:41:4",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod1",
																				"nodeType": "YulIdentifier",
																				"src": "5646:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "remainder",
																						"nodeType": "YulIdentifier",
																						"src": "5656:9:4"
																					},
																					{
																						"name": "prod0",
																						"nodeType": "YulIdentifier",
																						"src": "5667:5:4"
																					}
																				],
																				"functionName": {
																					"name": "gt",
																					"nodeType": "YulIdentifier",
																					"src": "5653:2:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5653:20:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5642:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5642:32:4"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nodeType": "YulIdentifier",
																			"src": "5633:5:4"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5691:30:4",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nodeType": "YulIdentifier",
																				"src": "5704:5:4"
																			},
																			{
																				"name": "remainder",
																				"nodeType": "YulIdentifier",
																				"src": "5711:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5700:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5700:21:4"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nodeType": "YulIdentifier",
																			"src": "5691:5:4"
																		}
																	]
																}
															]
														},
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 943,
																"isOffset": false,
																"isSlot": false,
																"src": "5539:11:4",
																"valueSize": 1
															},
															{
																"declaration": 949,
																"isOffset": false,
																"isSlot": false,
																"src": "5667:5:4",
																"valueSize": 1
															},
															{
																"declaration": 949,
																"isOffset": false,
																"isSlot": false,
																"src": "5691:5:4",
																"valueSize": 1
															},
															{
																"declaration": 949,
																"isOffset": false,
																"isSlot": false,
																"src": "5704:5:4",
																"valueSize": 1
															},
															{
																"declaration": 955,
																"isOffset": false,
																"isSlot": false,
																"src": "5633:5:4",
																"valueSize": 1
															},
															{
																"declaration": 955,
																"isOffset": false,
																"isSlot": false,
																"src": "5646:5:4",
																"valueSize": 1
															},
															{
																"declaration": 976,
																"isOffset": false,
																"isSlot": false,
																"src": "5513:9:4",
																"valueSize": 1
															},
															{
																"declaration": 976,
																"isOffset": false,
																"isSlot": false,
																"src": "5656:9:4",
																"valueSize": 1
															},
															{
																"declaration": 976,
																"isOffset": false,
																"isSlot": false,
																"src": "5711:9:4",
																"valueSize": 1
															},
															{
																"declaration": 939,
																"isOffset": false,
																"isSlot": false,
																"src": "5533:1:4",
																"valueSize": 1
															},
															{
																"declaration": 941,
																"isOffset": false,
																"isSlot": false,
																"src": "5536:1:4",
																"valueSize": 1
															}
														],
														"id": 978,
														"nodeType": "InlineAssembly",
														"src": "5435:300:4"
													},
													{
														"assignments": [
															980
														],
														"declarations": [
															{
																"constant": false,
																"id": 980,
																"mutability": "mutable",
																"name": "twos",
																"nameLocation": "5947:4:4",
																"nodeType": "VariableDeclaration",
																"scope": 1060,
																"src": "5939:12:4",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 979,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "5939:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 987,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 986,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 981,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 943,
																"src": "5954:11:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 984,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "30",
																			"id": 982,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5969:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"id": 983,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 943,
																			"src": "5973:11:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "5969:15:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 985,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "5968:17:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5954:31:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "5939:46:4"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "6008:362:4",
															"statements": [
																{
																	"nodeType": "YulAssignment",
																	"src": "6073:37:4",
																	"value": {
																		"arguments": [
																			{
																				"name": "denominator",
																				"nodeType": "YulIdentifier",
																				"src": "6092:11:4"
																			},
																			{
																				"name": "twos",
																				"nodeType": "YulIdentifier",
																				"src": "6105:4:4"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nodeType": "YulIdentifier",
																			"src": "6088:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6088:22:4"
																	},
																	"variableNames": [
																		{
																			"name": "denominator",
																			"nodeType": "YulIdentifier",
																			"src": "6073:11:4"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6177:25:4",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nodeType": "YulIdentifier",
																				"src": "6190:5:4"
																			},
																			{
																				"name": "twos",
																				"nodeType": "YulIdentifier",
																				"src": "6197:4:4"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nodeType": "YulIdentifier",
																			"src": "6186:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6186:16:4"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nodeType": "YulIdentifier",
																			"src": "6177:5:4"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6317:39:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "6337:1:4",
																								"type": "",
																								"value": "0"
																							},
																							{
																								"name": "twos",
																								"nodeType": "YulIdentifier",
																								"src": "6340:4:4"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "6333:3:4"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "6333:12:4"
																					},
																					{
																						"name": "twos",
																						"nodeType": "YulIdentifier",
																						"src": "6347:4:4"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "6329:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6329:23:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6354:1:4",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6325:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6325:31:4"
																	},
																	"variableNames": [
																		{
																			"name": "twos",
																			"nodeType": "YulIdentifier",
																			"src": "6317:4:4"
																		}
																	]
																}
															]
														},
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 943,
																"isOffset": false,
																"isSlot": false,
																"src": "6073:11:4",
																"valueSize": 1
															},
															{
																"declaration": 943,
																"isOffset": false,
																"isSlot": false,
																"src": "6092:11:4",
																"valueSize": 1
															},
															{
																"declaration": 949,
																"isOffset": false,
																"isSlot": false,
																"src": "6177:5:4",
																"valueSize": 1
															},
															{
																"declaration": 949,
																"isOffset": false,
																"isSlot": false,
																"src": "6190:5:4",
																"valueSize": 1
															},
															{
																"declaration": 980,
																"isOffset": false,
																"isSlot": false,
																"src": "6105:4:4",
																"valueSize": 1
															},
															{
																"declaration": 980,
																"isOffset": false,
																"isSlot": false,
																"src": "6197:4:4",
																"valueSize": 1
															},
															{
																"declaration": 980,
																"isOffset": false,
																"isSlot": false,
																"src": "6317:4:4",
																"valueSize": 1
															},
															{
																"declaration": 980,
																"isOffset": false,
																"isSlot": false,
																"src": "6340:4:4",
																"valueSize": 1
															},
															{
																"declaration": 980,
																"isOffset": false,
																"isSlot": false,
																"src": "6347:4:4",
																"valueSize": 1
															}
														],
														"id": 988,
														"nodeType": "InlineAssembly",
														"src": "5999:371:4"
													},
													{
														"expression": {
															"id": 993,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 989,
																"name": "prod0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 949,
																"src": "6436:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "|=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 992,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 990,
																	"name": "prod1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 955,
																	"src": "6445:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 991,
																	"name": "twos",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 980,
																	"src": "6453:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6445:12:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6436:21:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 994,
														"nodeType": "ExpressionStatement",
														"src": "6436:21:4"
													},
													{
														"assignments": [
															996
														],
														"declarations": [
															{
																"constant": false,
																"id": 996,
																"mutability": "mutable",
																"name": "inverse",
																"nameLocation": "6783:7:4",
																"nodeType": "VariableDeclaration",
																"scope": 1060,
																"src": "6775:15:4",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 995,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "6775:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1003,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1002,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 999,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "33",
																			"id": 997,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "6794:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_3_by_1",
																				"typeString": "int_const 3"
																			},
																			"value": "3"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 998,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 943,
																			"src": "6798:11:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6794:15:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1000,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "6793:17:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "^",
															"rightExpression": {
																"hexValue": "32",
																"id": 1001,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6813:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "6793:21:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "6775:39:4"
													},
													{
														"expression": {
															"id": 1010,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1004,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 996,
																"src": "7031:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1009,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1005,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7042:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1008,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1006,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 943,
																		"src": "7046:11:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1007,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 996,
																		"src": "7060:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7046:21:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7042:25:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7031:36:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1011,
														"nodeType": "ExpressionStatement",
														"src": "7031:36:4"
													},
													{
														"expression": {
															"id": 1018,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1012,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 996,
																"src": "7100:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1017,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1013,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7111:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1016,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1014,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 943,
																		"src": "7115:11:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1015,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 996,
																		"src": "7129:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7115:21:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7111:25:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7100:36:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1019,
														"nodeType": "ExpressionStatement",
														"src": "7100:36:4"
													},
													{
														"expression": {
															"id": 1026,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1020,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 996,
																"src": "7170:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1025,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1021,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7181:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1024,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1022,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 943,
																		"src": "7185:11:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1023,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 996,
																		"src": "7199:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7185:21:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7181:25:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7170:36:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1027,
														"nodeType": "ExpressionStatement",
														"src": "7170:36:4"
													},
													{
														"expression": {
															"id": 1034,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1028,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 996,
																"src": "7240:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1033,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1029,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7251:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1032,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1030,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 943,
																		"src": "7255:11:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1031,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 996,
																		"src": "7269:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7255:21:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7251:25:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7240:36:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1035,
														"nodeType": "ExpressionStatement",
														"src": "7240:36:4"
													},
													{
														"expression": {
															"id": 1042,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1036,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 996,
																"src": "7310:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1041,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1037,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7321:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1040,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1038,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 943,
																		"src": "7325:11:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1039,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 996,
																		"src": "7339:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7325:21:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7321:25:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7310:36:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1043,
														"nodeType": "ExpressionStatement",
														"src": "7310:36:4"
													},
													{
														"expression": {
															"id": 1050,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1044,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 996,
																"src": "7381:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1049,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1045,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7392:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1048,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1046,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 943,
																		"src": "7396:11:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1047,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 996,
																		"src": "7410:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7396:21:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7392:25:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7381:36:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1051,
														"nodeType": "ExpressionStatement",
														"src": "7381:36:4"
													},
													{
														"expression": {
															"id": 1056,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1052,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 946,
																"src": "7851:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1055,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1053,
																	"name": "prod0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 949,
																	"src": "7860:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1054,
																	"name": "inverse",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 996,
																	"src": "7868:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7860:15:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7851:24:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1057,
														"nodeType": "ExpressionStatement",
														"src": "7851:24:4"
													},
													{
														"expression": {
															"id": 1058,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 946,
															"src": "7896:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 947,
														"id": 1059,
														"nodeType": "Return",
														"src": "7889:13:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 937,
										"nodeType": "StructuredDocumentation",
										"src": "3485:313:4",
										"text": " @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n denominator == 0.\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n Uniswap Labs also under MIT license."
									},
									"id": 1062,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "3812:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 944,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 939,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "3827:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 1062,
												"src": "3819:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 938,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3819:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 941,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "3838:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 1062,
												"src": "3830:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 940,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3830:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 943,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "3849:11:4",
												"nodeType": "VariableDeclaration",
												"scope": 1062,
												"src": "3841:19:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 942,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3841:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3818:43:4"
									},
									"returnParameters": {
										"id": 947,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 946,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "3893:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1062,
												"src": "3885:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 945,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3885:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3884:16:4"
									},
									"scope": 1728,
									"src": "3803:4116:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1104,
										"nodeType": "Block",
										"src": "8161:192:4",
										"statements": [
											{
												"assignments": [
													1078
												],
												"declarations": [
													{
														"constant": false,
														"id": 1078,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "8179:6:4",
														"nodeType": "VariableDeclaration",
														"scope": 1104,
														"src": "8171:14:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1077,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8171:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1084,
												"initialValue": {
													"arguments": [
														{
															"id": 1080,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1065,
															"src": "8195:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1081,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1067,
															"src": "8198:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1082,
															"name": "denominator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1069,
															"src": "8201:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1079,
														"name": "mulDiv",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1062,
															1105
														],
														"referencedDeclaration": 1062,
														"src": "8188:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1083,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8188:25:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8171:42:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1095,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 1086,
																"name": "rounding",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1072,
																"src": "8244:8:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Rounding_$685",
																	"typeString": "enum Math.Rounding"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_enum$_Rounding_$685",
																	"typeString": "enum Math.Rounding"
																}
															],
															"id": 1085,
															"name": "unsignedRoundsUp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1727,
															"src": "8227:16:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$685_$returns$_t_bool_$",
																"typeString": "function (enum Math.Rounding) pure returns (bool)"
															}
														},
														"id": 1087,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8227:26:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1094,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 1089,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1065,
																	"src": "8264:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1090,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1067,
																	"src": "8267:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1091,
																	"name": "denominator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1069,
																	"src": "8270:11:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1088,
																"name": "mulmod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967280,
																"src": "8257:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1092,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8257:25:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 1093,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8285:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8257:29:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "8227:59:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1101,
												"nodeType": "IfStatement",
												"src": "8223:101:4",
												"trueBody": {
													"id": 1100,
													"nodeType": "Block",
													"src": "8288:36:4",
													"statements": [
														{
															"expression": {
																"id": 1098,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1096,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1078,
																	"src": "8302:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 1097,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8312:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "8302:11:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1099,
															"nodeType": "ExpressionStatement",
															"src": "8302:11:4"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1102,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1078,
													"src": "8340:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1076,
												"id": 1103,
												"nodeType": "Return",
												"src": "8333:13:4"
											}
										]
									},
									"documentation": {
										"id": 1063,
										"nodeType": "StructuredDocumentation",
										"src": "7925:121:4",
										"text": " @notice Calculates x * y / denominator with full precision, following the selected rounding direction."
									},
									"id": 1105,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "8060:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1073,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1065,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "8075:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 1105,
												"src": "8067:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1064,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8067:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1067,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "8086:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 1105,
												"src": "8078:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1066,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8078:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1069,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "8097:11:4",
												"nodeType": "VariableDeclaration",
												"scope": 1105,
												"src": "8089:19:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1068,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8089:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1072,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "8119:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1105,
												"src": "8110:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$685",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1071,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1070,
														"name": "Rounding",
														"nameLocations": [
															"8110:8:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 685,
														"src": "8110:8:4"
													},
													"referencedDeclaration": 685,
													"src": "8110:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$685",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8066:62:4"
									},
									"returnParameters": {
										"id": 1076,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1075,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1105,
												"src": "8152:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1074,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8152:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8151:9:4"
									},
									"scope": 1728,
									"src": "8051:302:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1216,
										"nodeType": "Block",
										"src": "8644:1585:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1115,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1113,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1108,
														"src": "8658:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1114,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8663:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8658:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1119,
												"nodeType": "IfStatement",
												"src": "8654:45:4",
												"trueBody": {
													"id": 1118,
													"nodeType": "Block",
													"src": "8666:33:4",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 1116,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8687:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 1112,
															"id": 1117,
															"nodeType": "Return",
															"src": "8680:8:4"
														}
													]
												}
											},
											{
												"assignments": [
													1121
												],
												"declarations": [
													{
														"constant": false,
														"id": 1121,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "9386:6:4",
														"nodeType": "VariableDeclaration",
														"scope": 1216,
														"src": "9378:14:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1120,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9378:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1130,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1129,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 1122,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9395:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1127,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 1124,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1108,
																			"src": "9406:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 1123,
																		"name": "log2",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			1384,
																			1419
																		],
																		"referencedDeclaration": 1384,
																		"src": "9401:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1125,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9401:7:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1126,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9412:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9401:12:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1128,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "9400:14:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9395:19:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9378:36:4"
											},
											{
												"id": 1215,
												"nodeType": "UncheckedBlock",
												"src": "9815:408:4",
												"statements": [
													{
														"expression": {
															"id": 1140,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1131,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1121,
																"src": "9839:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1139,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1136,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1132,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1121,
																				"src": "9849:6:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1135,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1133,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1108,
																					"src": "9858:1:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1134,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1121,
																					"src": "9862:6:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9858:10:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9849:19:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1137,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9848:21:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1138,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9873:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9848:26:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9839:35:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1141,
														"nodeType": "ExpressionStatement",
														"src": "9839:35:4"
													},
													{
														"expression": {
															"id": 1151,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1142,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1121,
																"src": "9888:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1150,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1147,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1143,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1121,
																				"src": "9898:6:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1146,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1144,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1108,
																					"src": "9907:1:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1145,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1121,
																					"src": "9911:6:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9907:10:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9898:19:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1148,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9897:21:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1149,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9922:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9897:26:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9888:35:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1152,
														"nodeType": "ExpressionStatement",
														"src": "9888:35:4"
													},
													{
														"expression": {
															"id": 1162,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1153,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1121,
																"src": "9937:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1161,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1158,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1154,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1121,
																				"src": "9947:6:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1157,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1155,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1108,
																					"src": "9956:1:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1156,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1121,
																					"src": "9960:6:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9956:10:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9947:19:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1159,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9946:21:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1160,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9971:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9946:26:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9937:35:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1163,
														"nodeType": "ExpressionStatement",
														"src": "9937:35:4"
													},
													{
														"expression": {
															"id": 1173,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1164,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1121,
																"src": "9986:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1172,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1169,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1165,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1121,
																				"src": "9996:6:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1168,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1166,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1108,
																					"src": "10005:1:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1167,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1121,
																					"src": "10009:6:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10005:10:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9996:19:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1170,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9995:21:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1171,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10020:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9995:26:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9986:35:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1174,
														"nodeType": "ExpressionStatement",
														"src": "9986:35:4"
													},
													{
														"expression": {
															"id": 1184,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1175,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1121,
																"src": "10035:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1183,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1180,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1176,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1121,
																				"src": "10045:6:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1179,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1177,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1108,
																					"src": "10054:1:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1178,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1121,
																					"src": "10058:6:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10054:10:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10045:19:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1181,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10044:21:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1182,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10069:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10044:26:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10035:35:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1185,
														"nodeType": "ExpressionStatement",
														"src": "10035:35:4"
													},
													{
														"expression": {
															"id": 1195,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1186,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1121,
																"src": "10084:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1194,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1191,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1187,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1121,
																				"src": "10094:6:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1190,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1188,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1108,
																					"src": "10103:1:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1189,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1121,
																					"src": "10107:6:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10103:10:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10094:19:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1192,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10093:21:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1193,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10118:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10093:26:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10084:35:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1196,
														"nodeType": "ExpressionStatement",
														"src": "10084:35:4"
													},
													{
														"expression": {
															"id": 1206,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1197,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1121,
																"src": "10133:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1205,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1202,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1198,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1121,
																				"src": "10143:6:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1201,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1199,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1108,
																					"src": "10152:1:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1200,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1121,
																					"src": "10156:6:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10152:10:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10143:19:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1203,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10142:21:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1204,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10167:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10142:26:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10133:35:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1207,
														"nodeType": "ExpressionStatement",
														"src": "10133:35:4"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 1209,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1121,
																	"src": "10193:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1212,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1210,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1108,
																		"src": "10201:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 1211,
																		"name": "result",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1121,
																		"src": "10205:6:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "10201:10:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1208,
																"name": "min",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 879,
																"src": "10189:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1213,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10189:23:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1112,
														"id": 1214,
														"nodeType": "Return",
														"src": "10182:30:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1106,
										"nodeType": "StructuredDocumentation",
										"src": "8359:223:4",
										"text": " @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n towards zero.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."
									},
									"id": 1217,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "8596:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1109,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1108,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "8609:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 1217,
												"src": "8601:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1107,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8601:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8600:11:4"
									},
									"returnParameters": {
										"id": 1112,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1111,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1217,
												"src": "8635:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1110,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8635:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8634:9:4"
									},
									"scope": 1728,
									"src": "8587:1642:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1251,
										"nodeType": "Block",
										"src": "10405:164:4",
										"statements": [
											{
												"id": 1250,
												"nodeType": "UncheckedBlock",
												"src": "10415:148:4",
												"statements": [
													{
														"assignments": [
															1229
														],
														"declarations": [
															{
																"constant": false,
																"id": 1229,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "10447:6:4",
																"nodeType": "VariableDeclaration",
																"scope": 1250,
																"src": "10439:14:4",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1228,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "10439:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1233,
														"initialValue": {
															"arguments": [
																{
																	"id": 1231,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1220,
																	"src": "10461:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1230,
																"name": "sqrt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1217,
																	1252
																],
																"referencedDeclaration": 1217,
																"src": "10456:4:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 1232,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10456:7:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "10439:24:4"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1248,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1234,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1229,
																"src": "10484:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 1243,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 1236,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1223,
																						"src": "10511:8:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$685",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$685",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 1235,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1727,
																					"src": "10494:16:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$685_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 1237,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "10494:26:4",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1242,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1240,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1238,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1229,
																						"src": "10524:6:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"id": 1239,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1229,
																						"src": "10533:6:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "10524:15:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 1241,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1220,
																					"src": "10542:1:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10524:19:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "10494:49:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 1245,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10550:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 1246,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "10494:57:4",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 1244,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10546:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 1247,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "10493:59:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "10484:68:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1227,
														"id": 1249,
														"nodeType": "Return",
														"src": "10477:75:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1218,
										"nodeType": "StructuredDocumentation",
										"src": "10235:89:4",
										"text": " @notice Calculates sqrt(a), following the selected rounding direction."
									},
									"id": 1252,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "10338:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1224,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1220,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "10351:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 1252,
												"src": "10343:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1219,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10343:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1223,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "10363:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1252,
												"src": "10354:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$685",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1222,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1221,
														"name": "Rounding",
														"nameLocations": [
															"10354:8:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 685,
														"src": "10354:8:4"
													},
													"referencedDeclaration": 685,
													"src": "10354:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$685",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10342:30:4"
									},
									"returnParameters": {
										"id": 1227,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1226,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1252,
												"src": "10396:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1225,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10396:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10395:9:4"
									},
									"scope": 1728,
									"src": "10329:240:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1383,
										"nodeType": "Block",
										"src": "10760:922:4",
										"statements": [
											{
												"assignments": [
													1261
												],
												"declarations": [
													{
														"constant": false,
														"id": 1261,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "10778:6:4",
														"nodeType": "VariableDeclaration",
														"scope": 1383,
														"src": "10770:14:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1260,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10770:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1263,
												"initialValue": {
													"hexValue": "30",
													"id": 1262,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "10787:1:4",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10770:18:4"
											},
											{
												"id": 1380,
												"nodeType": "UncheckedBlock",
												"src": "10798:855:4",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1268,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1266,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1264,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1255,
																	"src": "10826:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 1265,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10835:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "10826:12:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1267,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10841:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "10826:16:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1278,
														"nodeType": "IfStatement",
														"src": "10822:99:4",
														"trueBody": {
															"id": 1277,
															"nodeType": "Block",
															"src": "10844:77:4",
															"statements": [
																{
																	"expression": {
																		"id": 1271,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1269,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1255,
																			"src": "10862:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 1270,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10872:3:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "10862:13:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1272,
																	"nodeType": "ExpressionStatement",
																	"src": "10862:13:4"
																},
																{
																	"expression": {
																		"id": 1275,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1273,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1261,
																			"src": "10893:6:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 1274,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10903:3:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "10893:13:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1276,
																	"nodeType": "ExpressionStatement",
																	"src": "10893:13:4"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1283,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1281,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1279,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1255,
																	"src": "10938:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 1280,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10947:2:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "10938:11:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1282,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10952:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "10938:15:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1293,
														"nodeType": "IfStatement",
														"src": "10934:96:4",
														"trueBody": {
															"id": 1292,
															"nodeType": "Block",
															"src": "10955:75:4",
															"statements": [
																{
																	"expression": {
																		"id": 1286,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1284,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1255,
																			"src": "10973:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 1285,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10983:2:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "10973:12:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1287,
																	"nodeType": "ExpressionStatement",
																	"src": "10973:12:4"
																},
																{
																	"expression": {
																		"id": 1290,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1288,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1261,
																			"src": "11003:6:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 1289,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11013:2:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "11003:12:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1291,
																	"nodeType": "ExpressionStatement",
																	"src": "11003:12:4"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1298,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1296,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1294,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1255,
																	"src": "11047:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 1295,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11056:2:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "11047:11:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1297,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11061:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11047:15:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1308,
														"nodeType": "IfStatement",
														"src": "11043:96:4",
														"trueBody": {
															"id": 1307,
															"nodeType": "Block",
															"src": "11064:75:4",
															"statements": [
																{
																	"expression": {
																		"id": 1301,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1299,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1255,
																			"src": "11082:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 1300,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11092:2:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "11082:12:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1302,
																	"nodeType": "ExpressionStatement",
																	"src": "11082:12:4"
																},
																{
																	"expression": {
																		"id": 1305,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1303,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1261,
																			"src": "11112:6:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 1304,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11122:2:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "11112:12:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1306,
																	"nodeType": "ExpressionStatement",
																	"src": "11112:12:4"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1313,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1311,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1309,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1255,
																	"src": "11156:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 1310,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11165:2:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "11156:11:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1312,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11170:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11156:15:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1323,
														"nodeType": "IfStatement",
														"src": "11152:96:4",
														"trueBody": {
															"id": 1322,
															"nodeType": "Block",
															"src": "11173:75:4",
															"statements": [
																{
																	"expression": {
																		"id": 1316,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1314,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1255,
																			"src": "11191:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1315,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11201:2:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11191:12:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1317,
																	"nodeType": "ExpressionStatement",
																	"src": "11191:12:4"
																},
																{
																	"expression": {
																		"id": 1320,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1318,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1261,
																			"src": "11221:6:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1319,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11231:2:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11221:12:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1321,
																	"nodeType": "ExpressionStatement",
																	"src": "11221:12:4"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1328,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1326,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1324,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1255,
																	"src": "11265:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 1325,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11274:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "11265:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1327,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11278:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11265:14:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1338,
														"nodeType": "IfStatement",
														"src": "11261:93:4",
														"trueBody": {
															"id": 1337,
															"nodeType": "Block",
															"src": "11281:73:4",
															"statements": [
																{
																	"expression": {
																		"id": 1331,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1329,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1255,
																			"src": "11299:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 1330,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11309:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "11299:11:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1332,
																	"nodeType": "ExpressionStatement",
																	"src": "11299:11:4"
																},
																{
																	"expression": {
																		"id": 1335,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1333,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1261,
																			"src": "11328:6:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 1334,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11338:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "11328:11:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1336,
																	"nodeType": "ExpressionStatement",
																	"src": "11328:11:4"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1343,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1341,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1339,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1255,
																	"src": "11371:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 1340,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11380:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "11371:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1342,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11384:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11371:14:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1353,
														"nodeType": "IfStatement",
														"src": "11367:93:4",
														"trueBody": {
															"id": 1352,
															"nodeType": "Block",
															"src": "11387:73:4",
															"statements": [
																{
																	"expression": {
																		"id": 1346,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1344,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1255,
																			"src": "11405:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 1345,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11415:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "11405:11:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1347,
																	"nodeType": "ExpressionStatement",
																	"src": "11405:11:4"
																},
																{
																	"expression": {
																		"id": 1350,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1348,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1261,
																			"src": "11434:6:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 1349,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11444:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "11434:11:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1351,
																	"nodeType": "ExpressionStatement",
																	"src": "11434:11:4"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1358,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1356,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1354,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1255,
																	"src": "11477:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 1355,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11486:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "11477:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1357,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11490:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11477:14:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1368,
														"nodeType": "IfStatement",
														"src": "11473:93:4",
														"trueBody": {
															"id": 1367,
															"nodeType": "Block",
															"src": "11493:73:4",
															"statements": [
																{
																	"expression": {
																		"id": 1361,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1359,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1255,
																			"src": "11511:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 1360,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11521:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "11511:11:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1362,
																	"nodeType": "ExpressionStatement",
																	"src": "11511:11:4"
																},
																{
																	"expression": {
																		"id": 1365,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1363,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1261,
																			"src": "11540:6:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 1364,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11550:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "11540:11:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1366,
																	"nodeType": "ExpressionStatement",
																	"src": "11540:11:4"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1373,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1371,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1369,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1255,
																	"src": "11583:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1370,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11592:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "11583:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1372,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11596:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11583:14:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1379,
														"nodeType": "IfStatement",
														"src": "11579:64:4",
														"trueBody": {
															"id": 1378,
															"nodeType": "Block",
															"src": "11599:44:4",
															"statements": [
																{
																	"expression": {
																		"id": 1376,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1374,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1261,
																			"src": "11617:6:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 1375,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11627:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "11617:11:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1377,
																	"nodeType": "ExpressionStatement",
																	"src": "11617:11:4"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 1381,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1261,
													"src": "11669:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1259,
												"id": 1382,
												"nodeType": "Return",
												"src": "11662:13:4"
											}
										]
									},
									"documentation": {
										"id": 1253,
										"nodeType": "StructuredDocumentation",
										"src": "10575:119:4",
										"text": " @dev Return the log in base 2 of a positive value rounded towards zero.\n Returns 0 if given 0."
									},
									"id": 1384,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "10708:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1256,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1255,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10721:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1384,
												"src": "10713:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1254,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10713:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10712:15:4"
									},
									"returnParameters": {
										"id": 1259,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1258,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1384,
												"src": "10751:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1257,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10751:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10750:9:4"
									},
									"scope": 1728,
									"src": "10699:983:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1418,
										"nodeType": "Block",
										"src": "11915:168:4",
										"statements": [
											{
												"id": 1417,
												"nodeType": "UncheckedBlock",
												"src": "11925:152:4",
												"statements": [
													{
														"assignments": [
															1396
														],
														"declarations": [
															{
																"constant": false,
																"id": 1396,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "11957:6:4",
																"nodeType": "VariableDeclaration",
																"scope": 1417,
																"src": "11949:14:4",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1395,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "11949:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1400,
														"initialValue": {
															"arguments": [
																{
																	"id": 1398,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1387,
																	"src": "11971:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1397,
																"name": "log2",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1384,
																	1419
																],
																"referencedDeclaration": 1384,
																"src": "11966:4:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 1399,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11966:11:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "11949:28:4"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1415,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1401,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1396,
																"src": "11998:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 1410,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 1403,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1390,
																						"src": "12025:8:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$685",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$685",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 1402,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1727,
																					"src": "12008:16:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$685_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 1404,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "12008:26:4",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1409,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1407,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 1405,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "12038:1:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"id": 1406,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1396,
																						"src": "12043:6:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "12038:11:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 1408,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1387,
																					"src": "12052:5:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "12038:19:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "12008:49:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 1412,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12064:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 1413,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "12008:57:4",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 1411,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12060:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 1414,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "12007:59:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "11998:68:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1394,
														"id": 1416,
														"nodeType": "Return",
														"src": "11991:75:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1385,
										"nodeType": "StructuredDocumentation",
										"src": "11688:142:4",
										"text": " @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 1419,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "11844:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1391,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1387,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11857:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1419,
												"src": "11849:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1386,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11849:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1390,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "11873:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1419,
												"src": "11864:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$685",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1389,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1388,
														"name": "Rounding",
														"nameLocations": [
															"11864:8:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 685,
														"src": "11864:8:4"
													},
													"referencedDeclaration": 685,
													"src": "11864:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$685",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11848:34:4"
									},
									"returnParameters": {
										"id": 1394,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1393,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1419,
												"src": "11906:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1392,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11906:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11905:9:4"
									},
									"scope": 1728,
									"src": "11835:248:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1547,
										"nodeType": "Block",
										"src": "12276:854:4",
										"statements": [
											{
												"assignments": [
													1428
												],
												"declarations": [
													{
														"constant": false,
														"id": 1428,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "12294:6:4",
														"nodeType": "VariableDeclaration",
														"scope": 1547,
														"src": "12286:14:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1427,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "12286:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1430,
												"initialValue": {
													"hexValue": "30",
													"id": 1429,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "12303:1:4",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12286:18:4"
											},
											{
												"id": 1544,
												"nodeType": "UncheckedBlock",
												"src": "12314:787:4",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1435,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1431,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1422,
																"src": "12342:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																},
																"id": 1434,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1432,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12351:2:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 1433,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12357:2:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "12351:8:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																}
															},
															"src": "12342:17:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1447,
														"nodeType": "IfStatement",
														"src": "12338:103:4",
														"trueBody": {
															"id": 1446,
															"nodeType": "Block",
															"src": "12361:80:4",
															"statements": [
																{
																	"expression": {
																		"id": 1440,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1436,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1422,
																			"src": "12379:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			},
																			"id": 1439,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1437,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12388:2:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3634",
																				"id": 1438,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12394:2:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_64_by_1",
																					"typeString": "int_const 64"
																				},
																				"value": "64"
																			},
																			"src": "12388:8:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			}
																		},
																		"src": "12379:17:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1441,
																	"nodeType": "ExpressionStatement",
																	"src": "12379:17:4"
																},
																{
																	"expression": {
																		"id": 1444,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1442,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1428,
																			"src": "12414:6:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 1443,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12424:2:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "12414:12:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1445,
																	"nodeType": "ExpressionStatement",
																	"src": "12414:12:4"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1452,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1448,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1422,
																"src": "12458:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																},
																"id": 1451,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1449,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12467:2:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 1450,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12473:2:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "12467:8:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																}
															},
															"src": "12458:17:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1464,
														"nodeType": "IfStatement",
														"src": "12454:103:4",
														"trueBody": {
															"id": 1463,
															"nodeType": "Block",
															"src": "12477:80:4",
															"statements": [
																{
																	"expression": {
																		"id": 1457,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1453,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1422,
																			"src": "12495:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			},
																			"id": 1456,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1454,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12504:2:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3332",
																				"id": 1455,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12510:2:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_32_by_1",
																					"typeString": "int_const 32"
																				},
																				"value": "32"
																			},
																			"src": "12504:8:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			}
																		},
																		"src": "12495:17:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1458,
																	"nodeType": "ExpressionStatement",
																	"src": "12495:17:4"
																},
																{
																	"expression": {
																		"id": 1461,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1459,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1428,
																			"src": "12530:6:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 1460,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12540:2:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "12530:12:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1462,
																	"nodeType": "ExpressionStatement",
																	"src": "12530:12:4"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1469,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1465,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1422,
																"src": "12574:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																},
																"id": 1468,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1466,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12583:2:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 1467,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12589:2:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "12583:8:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																}
															},
															"src": "12574:17:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1481,
														"nodeType": "IfStatement",
														"src": "12570:103:4",
														"trueBody": {
															"id": 1480,
															"nodeType": "Block",
															"src": "12593:80:4",
															"statements": [
																{
																	"expression": {
																		"id": 1474,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1470,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1422,
																			"src": "12611:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			},
																			"id": 1473,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1471,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12620:2:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3136",
																				"id": 1472,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12626:2:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_16_by_1",
																					"typeString": "int_const 16"
																				},
																				"value": "16"
																			},
																			"src": "12620:8:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			}
																		},
																		"src": "12611:17:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1475,
																	"nodeType": "ExpressionStatement",
																	"src": "12611:17:4"
																},
																{
																	"expression": {
																		"id": 1478,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1476,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1428,
																			"src": "12646:6:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1477,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12656:2:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "12646:12:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1479,
																	"nodeType": "ExpressionStatement",
																	"src": "12646:12:4"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1486,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1482,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1422,
																"src": "12690:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																},
																"id": 1485,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1483,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12699:2:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 1484,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12705:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "12699:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																}
															},
															"src": "12690:16:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1498,
														"nodeType": "IfStatement",
														"src": "12686:100:4",
														"trueBody": {
															"id": 1497,
															"nodeType": "Block",
															"src": "12708:78:4",
															"statements": [
																{
																	"expression": {
																		"id": 1491,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1487,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1422,
																			"src": "12726:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			},
																			"id": 1490,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1488,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12735:2:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "38",
																				"id": 1489,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12741:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_8_by_1",
																					"typeString": "int_const 8"
																				},
																				"value": "8"
																			},
																			"src": "12735:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			}
																		},
																		"src": "12726:16:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1492,
																	"nodeType": "ExpressionStatement",
																	"src": "12726:16:4"
																},
																{
																	"expression": {
																		"id": 1495,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1493,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1428,
																			"src": "12760:6:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 1494,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12770:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "12760:11:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1496,
																	"nodeType": "ExpressionStatement",
																	"src": "12760:11:4"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1503,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1499,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1422,
																"src": "12803:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																},
																"id": 1502,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1500,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12812:2:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 1501,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12818:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "12812:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																}
															},
															"src": "12803:16:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1515,
														"nodeType": "IfStatement",
														"src": "12799:100:4",
														"trueBody": {
															"id": 1514,
															"nodeType": "Block",
															"src": "12821:78:4",
															"statements": [
																{
																	"expression": {
																		"id": 1508,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1504,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1422,
																			"src": "12839:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			},
																			"id": 1507,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1505,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12848:2:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "34",
																				"id": 1506,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12854:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_4_by_1",
																					"typeString": "int_const 4"
																				},
																				"value": "4"
																			},
																			"src": "12848:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			}
																		},
																		"src": "12839:16:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1509,
																	"nodeType": "ExpressionStatement",
																	"src": "12839:16:4"
																},
																{
																	"expression": {
																		"id": 1512,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1510,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1428,
																			"src": "12873:6:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 1511,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12883:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "12873:11:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1513,
																	"nodeType": "ExpressionStatement",
																	"src": "12873:11:4"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1520,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1516,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1422,
																"src": "12916:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"id": 1519,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1517,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12925:2:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 1518,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12931:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "12925:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																}
															},
															"src": "12916:16:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1532,
														"nodeType": "IfStatement",
														"src": "12912:100:4",
														"trueBody": {
															"id": 1531,
															"nodeType": "Block",
															"src": "12934:78:4",
															"statements": [
																{
																	"expression": {
																		"id": 1525,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1521,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1422,
																			"src": "12952:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			},
																			"id": 1524,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1522,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12961:2:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "32",
																				"id": 1523,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12967:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				},
																				"value": "2"
																			},
																			"src": "12961:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			}
																		},
																		"src": "12952:16:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1526,
																	"nodeType": "ExpressionStatement",
																	"src": "12952:16:4"
																},
																{
																	"expression": {
																		"id": 1529,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1527,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1428,
																			"src": "12986:6:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 1528,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12996:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "12986:11:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1530,
																	"nodeType": "ExpressionStatement",
																	"src": "12986:11:4"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1537,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1533,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1422,
																"src": "13029:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"id": 1536,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1534,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13038:2:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1535,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13044:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "13038:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																}
															},
															"src": "13029:16:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1543,
														"nodeType": "IfStatement",
														"src": "13025:66:4",
														"trueBody": {
															"id": 1542,
															"nodeType": "Block",
															"src": "13047:44:4",
															"statements": [
																{
																	"expression": {
																		"id": 1540,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1538,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1428,
																			"src": "13065:6:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 1539,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13075:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "13065:11:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1541,
																	"nodeType": "ExpressionStatement",
																	"src": "13065:11:4"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 1545,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1428,
													"src": "13117:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1426,
												"id": 1546,
												"nodeType": "Return",
												"src": "13110:13:4"
											}
										]
									},
									"documentation": {
										"id": 1420,
										"nodeType": "StructuredDocumentation",
										"src": "12089:120:4",
										"text": " @dev Return the log in base 10 of a positive value rounded towards zero.\n Returns 0 if given 0."
									},
									"id": 1548,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "12223:5:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1423,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1422,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "12237:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1548,
												"src": "12229:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1421,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12229:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12228:15:4"
									},
									"returnParameters": {
										"id": 1426,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1425,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1548,
												"src": "12267:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1424,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12267:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12266:9:4"
									},
									"scope": 1728,
									"src": "12214:916:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1582,
										"nodeType": "Block",
										"src": "13365:170:4",
										"statements": [
											{
												"id": 1581,
												"nodeType": "UncheckedBlock",
												"src": "13375:154:4",
												"statements": [
													{
														"assignments": [
															1560
														],
														"declarations": [
															{
																"constant": false,
																"id": 1560,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "13407:6:4",
																"nodeType": "VariableDeclaration",
																"scope": 1581,
																"src": "13399:14:4",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1559,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "13399:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1564,
														"initialValue": {
															"arguments": [
																{
																	"id": 1562,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1551,
																	"src": "13422:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1561,
																"name": "log10",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1548,
																	1583
																],
																"referencedDeclaration": 1548,
																"src": "13416:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 1563,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13416:12:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "13399:29:4"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1579,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1565,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1560,
																"src": "13449:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 1574,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 1567,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1554,
																						"src": "13476:8:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$685",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$685",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 1566,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1727,
																					"src": "13459:16:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$685_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 1568,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "13459:26:4",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1573,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1571,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "3130",
																						"id": 1569,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "13489:2:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_10_by_1",
																							"typeString": "int_const 10"
																						},
																						"value": "10"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "**",
																					"rightExpression": {
																						"id": 1570,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1560,
																						"src": "13495:6:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "13489:12:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 1572,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1551,
																					"src": "13504:5:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "13489:20:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "13459:50:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 1576,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13516:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 1577,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "13459:58:4",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 1575,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13512:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 1578,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "13458:60:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "13449:69:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1558,
														"id": 1580,
														"nodeType": "Return",
														"src": "13442:76:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1549,
										"nodeType": "StructuredDocumentation",
										"src": "13136:143:4",
										"text": " @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 1583,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "13293:5:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1555,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1551,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "13307:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1583,
												"src": "13299:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1550,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13299:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1554,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "13323:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1583,
												"src": "13314:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$685",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1553,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1552,
														"name": "Rounding",
														"nameLocations": [
															"13314:8:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 685,
														"src": "13314:8:4"
													},
													"referencedDeclaration": 685,
													"src": "13314:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$685",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13298:34:4"
									},
									"returnParameters": {
										"id": 1558,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1557,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1583,
												"src": "13356:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1556,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13356:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13355:9:4"
									},
									"scope": 1728,
									"src": "13284:251:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1669,
										"nodeType": "Block",
										"src": "13855:600:4",
										"statements": [
											{
												"assignments": [
													1592
												],
												"declarations": [
													{
														"constant": false,
														"id": 1592,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "13873:6:4",
														"nodeType": "VariableDeclaration",
														"scope": 1669,
														"src": "13865:14:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1591,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "13865:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1594,
												"initialValue": {
													"hexValue": "30",
													"id": 1593,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "13882:1:4",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13865:18:4"
											},
											{
												"id": 1666,
												"nodeType": "UncheckedBlock",
												"src": "13893:533:4",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1599,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1597,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1595,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1586,
																	"src": "13921:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 1596,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13930:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "13921:12:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1598,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "13936:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "13921:16:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1609,
														"nodeType": "IfStatement",
														"src": "13917:98:4",
														"trueBody": {
															"id": 1608,
															"nodeType": "Block",
															"src": "13939:76:4",
															"statements": [
																{
																	"expression": {
																		"id": 1602,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1600,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1586,
																			"src": "13957:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 1601,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13967:3:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "13957:13:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1603,
																	"nodeType": "ExpressionStatement",
																	"src": "13957:13:4"
																},
																{
																	"expression": {
																		"id": 1606,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1604,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1592,
																			"src": "13988:6:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1605,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13998:2:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "13988:12:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1607,
																	"nodeType": "ExpressionStatement",
																	"src": "13988:12:4"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1614,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1612,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1610,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1586,
																	"src": "14032:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 1611,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14041:2:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "14032:11:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1613,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14046:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14032:15:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1624,
														"nodeType": "IfStatement",
														"src": "14028:95:4",
														"trueBody": {
															"id": 1623,
															"nodeType": "Block",
															"src": "14049:74:4",
															"statements": [
																{
																	"expression": {
																		"id": 1617,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1615,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1586,
																			"src": "14067:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 1616,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14077:2:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "14067:12:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1618,
																	"nodeType": "ExpressionStatement",
																	"src": "14067:12:4"
																},
																{
																	"expression": {
																		"id": 1621,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1619,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1592,
																			"src": "14097:6:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 1620,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14107:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "14097:11:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1622,
																	"nodeType": "ExpressionStatement",
																	"src": "14097:11:4"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1629,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1627,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1625,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1586,
																	"src": "14140:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 1626,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14149:2:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "14140:11:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1628,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14154:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14140:15:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1639,
														"nodeType": "IfStatement",
														"src": "14136:95:4",
														"trueBody": {
															"id": 1638,
															"nodeType": "Block",
															"src": "14157:74:4",
															"statements": [
																{
																	"expression": {
																		"id": 1632,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1630,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1586,
																			"src": "14175:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 1631,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14185:2:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "14175:12:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1633,
																	"nodeType": "ExpressionStatement",
																	"src": "14175:12:4"
																},
																{
																	"expression": {
																		"id": 1636,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1634,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1592,
																			"src": "14205:6:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 1635,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14215:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "14205:11:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1637,
																	"nodeType": "ExpressionStatement",
																	"src": "14205:11:4"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1644,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1642,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1640,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1586,
																	"src": "14248:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 1641,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14257:2:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "14248:11:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1643,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14262:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14248:15:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1654,
														"nodeType": "IfStatement",
														"src": "14244:95:4",
														"trueBody": {
															"id": 1653,
															"nodeType": "Block",
															"src": "14265:74:4",
															"statements": [
																{
																	"expression": {
																		"id": 1647,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1645,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1586,
																			"src": "14283:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1646,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14293:2:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "14283:12:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1648,
																	"nodeType": "ExpressionStatement",
																	"src": "14283:12:4"
																},
																{
																	"expression": {
																		"id": 1651,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1649,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1592,
																			"src": "14313:6:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 1650,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14323:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "14313:11:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1652,
																	"nodeType": "ExpressionStatement",
																	"src": "14313:11:4"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1659,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1657,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1655,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1586,
																	"src": "14356:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 1656,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14365:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "14356:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1658,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14369:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14356:14:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1665,
														"nodeType": "IfStatement",
														"src": "14352:64:4",
														"trueBody": {
															"id": 1664,
															"nodeType": "Block",
															"src": "14372:44:4",
															"statements": [
																{
																	"expression": {
																		"id": 1662,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1660,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1592,
																			"src": "14390:6:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 1661,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14400:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "14390:11:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1663,
																	"nodeType": "ExpressionStatement",
																	"src": "14390:11:4"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 1667,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1592,
													"src": "14442:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1590,
												"id": 1668,
												"nodeType": "Return",
												"src": "14435:13:4"
											}
										]
									},
									"documentation": {
										"id": 1584,
										"nodeType": "StructuredDocumentation",
										"src": "13541:246:4",
										"text": " @dev Return the log in base 256 of a positive value rounded towards zero.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."
									},
									"id": 1670,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "13801:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1587,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1586,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "13816:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1670,
												"src": "13808:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1585,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13808:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13807:15:4"
									},
									"returnParameters": {
										"id": 1590,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1589,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1670,
												"src": "13846:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1588,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13846:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13845:9:4"
									},
									"scope": 1728,
									"src": "13792:663:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1707,
										"nodeType": "Block",
										"src": "14692:177:4",
										"statements": [
											{
												"id": 1706,
												"nodeType": "UncheckedBlock",
												"src": "14702:161:4",
												"statements": [
													{
														"assignments": [
															1682
														],
														"declarations": [
															{
																"constant": false,
																"id": 1682,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "14734:6:4",
																"nodeType": "VariableDeclaration",
																"scope": 1706,
																"src": "14726:14:4",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1681,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "14726:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1686,
														"initialValue": {
															"arguments": [
																{
																	"id": 1684,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1673,
																	"src": "14750:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1683,
																"name": "log256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1670,
																	1708
																],
																"referencedDeclaration": 1670,
																"src": "14743:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 1685,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14743:13:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "14726:30:4"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1704,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1687,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1682,
																"src": "14777:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 1699,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 1689,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1676,
																						"src": "14804:8:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$685",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$685",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 1688,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1727,
																					"src": "14787:16:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$685_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 1690,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "14787:26:4",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1698,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1696,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 1691,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "14817:1:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"components": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 1694,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 1692,
																									"name": "result",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1682,
																									"src": "14823:6:4",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "<<",
																								"rightExpression": {
																									"hexValue": "33",
																									"id": 1693,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "14833:1:4",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_3_by_1",
																										"typeString": "int_const 3"
																									},
																									"value": "3"
																								},
																								"src": "14823:11:4",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"id": 1695,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "14822:13:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "14817:18:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 1697,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1673,
																					"src": "14838:5:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "14817:26:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "14787:56:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 1701,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14850:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 1702,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "14787:64:4",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 1700,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14846:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 1703,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "14786:66:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "14777:75:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1680,
														"id": 1705,
														"nodeType": "Return",
														"src": "14770:82:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1671,
										"nodeType": "StructuredDocumentation",
										"src": "14461:144:4",
										"text": " @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 1708,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "14619:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1677,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1673,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "14634:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1708,
												"src": "14626:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1672,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14626:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1676,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "14650:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1708,
												"src": "14641:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$685",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1675,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1674,
														"name": "Rounding",
														"nameLocations": [
															"14641:8:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 685,
														"src": "14641:8:4"
													},
													"referencedDeclaration": 685,
													"src": "14641:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$685",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14625:34:4"
									},
									"returnParameters": {
										"id": 1680,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1679,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1708,
												"src": "14683:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1678,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14683:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14682:9:4"
									},
									"scope": 1728,
									"src": "14610:259:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1726,
										"nodeType": "Block",
										"src": "15067:48:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													},
													"id": 1724,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"id": 1722,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 1719,
																	"name": "rounding",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1712,
																	"src": "15090:8:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_Rounding_$685",
																		"typeString": "enum Math.Rounding"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_enum$_Rounding_$685",
																		"typeString": "enum Math.Rounding"
																	}
																],
																"id": 1718,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "15084:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint8_$",
																	"typeString": "type(uint8)"
																},
																"typeName": {
																	"id": 1717,
																	"name": "uint8",
																	"nodeType": "ElementaryTypeName",
																	"src": "15084:5:4",
																	"typeDescriptions": {}
																}
															},
															"id": 1720,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15084:15:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "%",
														"rightExpression": {
															"hexValue": "32",
															"id": 1721,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15102:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "15084:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "31",
														"id": 1723,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "15107:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "15084:24:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1716,
												"id": 1725,
												"nodeType": "Return",
												"src": "15077:31:4"
											}
										]
									},
									"documentation": {
										"id": 1709,
										"nodeType": "StructuredDocumentation",
										"src": "14875:113:4",
										"text": " @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers."
									},
									"id": 1727,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unsignedRoundsUp",
									"nameLocation": "15002:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1713,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1712,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "15028:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1727,
												"src": "15019:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$685",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1711,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1710,
														"name": "Rounding",
														"nameLocations": [
															"15019:8:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 685,
														"src": "15019:8:4"
													},
													"referencedDeclaration": 685,
													"src": "15019:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$685",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15018:19:4"
									},
									"returnParameters": {
										"id": 1716,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1715,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1727,
												"src": "15061:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1714,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15061:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15060:6:4"
									},
									"scope": 1728,
									"src": "14993:122:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1729,
							"src": "203:14914:4",
							"usedErrors": [
								680
							],
							"usedEvents": []
						}
					],
					"src": "103:15015:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/SignedMath.sol",
					"exportedSymbols": {
						"SignedMath": [
							1833
						]
					},
					"id": 1834,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1730,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "109:24:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SignedMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1731,
								"nodeType": "StructuredDocumentation",
								"src": "135:80:5",
								"text": " @dev Standard signed math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 1833,
							"linearizedBaseContracts": [
								1833
							],
							"name": "SignedMath",
							"nameLocation": "224:10:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1748,
										"nodeType": "Block",
										"src": "376:37:5",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 1743,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1741,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1734,
															"src": "393:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 1742,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1736,
															"src": "397:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "393:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 1745,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1736,
														"src": "405:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 1746,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "393:13:5",
													"trueExpression": {
														"id": 1744,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1734,
														"src": "401:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 1740,
												"id": 1747,
												"nodeType": "Return",
												"src": "386:20:5"
											}
										]
									},
									"documentation": {
										"id": 1732,
										"nodeType": "StructuredDocumentation",
										"src": "241:66:5",
										"text": " @dev Returns the largest of two signed numbers."
									},
									"id": 1749,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "321:3:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1737,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1734,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "332:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 1749,
												"src": "325:8:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1733,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "325:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1736,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "342:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 1749,
												"src": "335:8:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1735,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "335:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "324:20:5"
									},
									"returnParameters": {
										"id": 1740,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1739,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1749,
												"src": "368:6:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1738,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "368:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "367:8:5"
									},
									"scope": 1833,
									"src": "312:101:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1766,
										"nodeType": "Block",
										"src": "555:37:5",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 1761,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1759,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1752,
															"src": "572:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 1760,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1754,
															"src": "576:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "572:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 1763,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1754,
														"src": "584:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 1764,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "572:13:5",
													"trueExpression": {
														"id": 1762,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1752,
														"src": "580:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 1758,
												"id": 1765,
												"nodeType": "Return",
												"src": "565:20:5"
											}
										]
									},
									"documentation": {
										"id": 1750,
										"nodeType": "StructuredDocumentation",
										"src": "419:67:5",
										"text": " @dev Returns the smallest of two signed numbers."
									},
									"id": 1767,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "500:3:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1755,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1752,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "511:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 1767,
												"src": "504:8:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1751,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "504:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1754,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "521:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 1767,
												"src": "514:8:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1753,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "514:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "503:20:5"
									},
									"returnParameters": {
										"id": 1758,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1757,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1767,
												"src": "547:6:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1756,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "547:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "546:8:5"
									},
									"scope": 1833,
									"src": "491:101:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1810,
										"nodeType": "Block",
										"src": "797:162:5",
										"statements": [
											{
												"assignments": [
													1778
												],
												"declarations": [
													{
														"constant": false,
														"id": 1778,
														"mutability": "mutable",
														"name": "x",
														"nameLocation": "866:1:5",
														"nodeType": "VariableDeclaration",
														"scope": 1810,
														"src": "859:8:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 1777,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "859:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1791,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 1790,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 1781,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1779,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1770,
																	"src": "871:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 1780,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1772,
																	"src": "875:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "871:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 1782,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "870:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 1788,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 1785,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1783,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1770,
																				"src": "882:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 1784,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1772,
																				"src": "886:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "882:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 1786,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "881:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1787,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "892:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "881:12:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 1789,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "880:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "870:24:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "859:35:5"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 1808,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1792,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1778,
														"src": "911:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 1806,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1800,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 1797,
																						"name": "x",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1778,
																						"src": "931:1:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					],
																					"id": 1796,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "923:7:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint256_$",
																						"typeString": "type(uint256)"
																					},
																					"typeName": {
																						"id": 1795,
																						"name": "uint256",
																						"nodeType": "ElementaryTypeName",
																						"src": "923:7:5",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 1798,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "923:10:5",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">>",
																			"rightExpression": {
																				"hexValue": "323535",
																				"id": 1799,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "937:3:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_255_by_1",
																					"typeString": "int_const 255"
																				},
																				"value": "255"
																			},
																			"src": "923:17:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 1794,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "916:6:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_int256_$",
																			"typeString": "type(int256)"
																		},
																		"typeName": {
																			"id": 1793,
																			"name": "int256",
																			"nodeType": "ElementaryTypeName",
																			"src": "916:6:5",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1801,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "916:25:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 1804,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1802,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1770,
																				"src": "945:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 1803,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1772,
																				"src": "949:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "945:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 1805,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "944:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "916:35:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 1807,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "915:37:5",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "911:41:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 1776,
												"id": 1809,
												"nodeType": "Return",
												"src": "904:48:5"
											}
										]
									},
									"documentation": {
										"id": 1768,
										"nodeType": "StructuredDocumentation",
										"src": "598:126:5",
										"text": " @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."
									},
									"id": 1811,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "738:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1773,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1770,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "753:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 1811,
												"src": "746:8:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1769,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "746:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1772,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "763:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 1811,
												"src": "756:8:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1771,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "756:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "745:20:5"
									},
									"returnParameters": {
										"id": 1776,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1775,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1811,
												"src": "789:6:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1774,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "789:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "788:8:5"
									},
									"scope": 1833,
									"src": "729:230:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1831,
										"nodeType": "Block",
										"src": "1103:158:5",
										"statements": [
											{
												"id": 1830,
												"nodeType": "UncheckedBlock",
												"src": "1113:142:5",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		"id": 1823,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1821,
																			"name": "n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1814,
																			"src": "1228:1:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1822,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1233:1:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1228:6:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseExpression": {
																		"id": 1826,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "-",
																		"prefix": true,
																		"src": "1241:2:5",
																		"subExpression": {
																			"id": 1825,
																			"name": "n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1814,
																			"src": "1242:1:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"id": 1827,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "Conditional",
																	"src": "1228:15:5",
																	"trueExpression": {
																		"id": 1824,
																		"name": "n",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1814,
																		"src": "1237:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																],
																"id": 1820,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1220:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 1819,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1220:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 1828,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1220:24:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1818,
														"id": 1829,
														"nodeType": "Return",
														"src": "1213:31:5"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1812,
										"nodeType": "StructuredDocumentation",
										"src": "965:78:5",
										"text": " @dev Returns the absolute unsigned value of a signed value."
									},
									"id": 1832,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "abs",
									"nameLocation": "1057:3:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1815,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1814,
												"mutability": "mutable",
												"name": "n",
												"nameLocation": "1068:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 1832,
												"src": "1061:8:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1813,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1061:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1060:10:5"
									},
									"returnParameters": {
										"id": 1818,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1817,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1832,
												"src": "1094:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1816,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1094:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1093:9:5"
									},
									"scope": 1833,
									"src": "1048:213:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1834,
							"src": "216:1047:5",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "109:1155:5"
				},
				"id": 5
			},
			"contracts/ERC721TokenContractName.sol": {
				"ast": {
					"absolutePath": "contracts/ERC721TokenContractName.sol",
					"exportedSymbols": {
						"Address": [
							389
						],
						"Context": [
							419
						],
						"ERC721TokenContractName": [
							2367
						],
						"IERC721Errors": [
							89
						],
						"IERC721TCNReceiver": [
							2385
						],
						"Math": [
							1728
						],
						"SignedMath": [
							1833
						],
						"Strings": [
							674
						]
					},
					"id": 2368,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1835,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
							"file": "@openzeppelin/contracts/utils/Address.sol",
							"id": 1836,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2368,
							"sourceUnit": 390,
							"src": "63:51:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
							"file": "@openzeppelin/contracts/utils/Strings.sol",
							"id": 1837,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2368,
							"sourceUnit": 675,
							"src": "116:51:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "@openzeppelin/contracts/utils/Context.sol",
							"id": 1838,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2368,
							"sourceUnit": 420,
							"src": "169:51:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"id": 1840,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2368,
							"sourceUnit": 137,
							"src": "222:84:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1839,
										"name": "IERC721Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 89,
										"src": "230:13:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/IERc721TokenContractNameReceiver.sol",
							"file": "contracts/IERc721TokenContractNameReceiver.sol",
							"id": 1842,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2368,
							"sourceUnit": 2386,
							"src": "308:82:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1841,
										"name": "IERC721TCNReceiver",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2385,
										"src": "316:18:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1843,
										"name": "Context",
										"nameLocations": [
											"436:7:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 419,
										"src": "436:7:6"
									},
									"id": 1844,
									"nodeType": "InheritanceSpecifier",
									"src": "436:7:6"
								},
								{
									"baseName": {
										"id": 1845,
										"name": "IERC721Errors",
										"nameLocations": [
											"445:13:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 89,
										"src": "445:13:6"
									},
									"id": 1846,
									"nodeType": "InheritanceSpecifier",
									"src": "445:13:6"
								},
								{
									"baseName": {
										"id": 1847,
										"name": "IERC721TCNReceiver",
										"nameLocations": [
											"460:18:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2385,
										"src": "460:18:6"
									},
									"id": 1848,
									"nodeType": "InheritanceSpecifier",
									"src": "460:18:6"
								}
							],
							"canonicalName": "ERC721TokenContractName",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 2367,
							"linearizedBaseContracts": [
								2367,
								2385,
								89,
								419
							],
							"name": "ERC721TokenContractName",
							"nameLocation": "409:23:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"eventSelector": "0a9d294fd4bd42bb30e96cba2b478d149a783fba3c729b1e5c42bec89d95b85a",
									"id": 1856,
									"name": "Approval",
									"nameLocation": "492:8:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1855,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1850,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "517:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1856,
												"src": "501:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1849,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "501:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1852,
												"indexed": true,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "540:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1856,
												"src": "524:24:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1851,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "524:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1854,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "565:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1856,
												"src": "550:22:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 1853,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "550:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "500:73:6"
									},
									"src": "486:88:6"
								},
								{
									"anonymous": false,
									"eventSelector": "17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31",
									"id": 1864,
									"name": "ApprovalForAll",
									"nameLocation": "586:14:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1863,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1858,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "617:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1864,
												"src": "601:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1857,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "601:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1860,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "640:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1864,
												"src": "624:24:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1859,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "624:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1862,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "655:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1864,
												"src": "650:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1861,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "650:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "600:64:6"
									},
									"src": "580:85:6"
								},
								{
									"anonymous": false,
									"eventSelector": "89896edbd223c9360ce42ddfed7522a2bffb20c056e4c42d42370cb493b65676",
									"id": 1872,
									"name": "Transfer",
									"nameLocation": "677:8:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1871,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1866,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "702:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1872,
												"src": "686:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1865,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "686:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1868,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "724:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1872,
												"src": "708:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1867,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "708:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1870,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "743:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1872,
												"src": "728:22:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 1869,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "728:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "685:66:6"
									},
									"src": "671:81:6"
								},
								{
									"global": false,
									"id": 1875,
									"libraryName": {
										"id": 1873,
										"name": "Address",
										"nameLocations": [
											"768:7:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 389,
										"src": "768:7:6"
									},
									"nodeType": "UsingForDirective",
									"src": "762:26:6",
									"typeName": {
										"id": 1874,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "780:7:6",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"global": false,
									"id": 1878,
									"libraryName": {
										"id": 1876,
										"name": "Strings",
										"nameLocations": [
											"800:7:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 674,
										"src": "800:7:6"
									},
									"nodeType": "UsingForDirective",
									"src": "794:25:6",
									"typeName": {
										"id": 1877,
										"name": "uint16",
										"nodeType": "ElementaryTypeName",
										"src": "812:6:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint16",
											"typeString": "uint16"
										}
									}
								},
								{
									"constant": false,
									"id": 1880,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "845:5:6",
									"nodeType": "VariableDeclaration",
									"scope": 2367,
									"src": "829:21:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes20",
										"typeString": "bytes20"
									},
									"typeName": {
										"id": 1879,
										"name": "bytes20",
										"nodeType": "ElementaryTypeName",
										"src": "829:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes20",
											"typeString": "bytes20"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1882,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "877:7:6",
									"nodeType": "VariableDeclaration",
									"scope": 2367,
									"src": "861:23:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes10",
										"typeString": "bytes10"
									},
									"typeName": {
										"id": 1881,
										"name": "bytes10",
										"nodeType": "ElementaryTypeName",
										"src": "861:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes10",
											"typeString": "bytes10"
										}
									},
									"visibility": "private"
								},
								{
									"canonicalName": "ERC721TokenContractName.MintInfo",
									"id": 1887,
									"members": [
										{
											"constant": false,
											"id": 1884,
											"mutability": "mutable",
											"name": "maxMinted",
											"nameLocation": "927:9:6",
											"nodeType": "VariableDeclaration",
											"scope": 1887,
											"src": "920:16:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint16",
												"typeString": "uint16"
											},
											"typeName": {
												"id": 1883,
												"name": "uint16",
												"nodeType": "ElementaryTypeName",
												"src": "920:6:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1886,
											"mutability": "mutable",
											"name": "currentTokens",
											"nameLocation": "954:13:6",
											"nodeType": "VariableDeclaration",
											"scope": 1887,
											"src": "947:20:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint16",
												"typeString": "uint16"
											},
											"typeName": {
												"id": 1885,
												"name": "uint16",
												"nodeType": "ElementaryTypeName",
												"src": "947:6:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "MintInfo",
									"nameLocation": "900:8:6",
									"nodeType": "StructDefinition",
									"scope": 2367,
									"src": "893:82:6",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 1890,
									"mutability": "mutable",
									"name": "mintInfo",
									"nameLocation": "1003:8:6",
									"nodeType": "VariableDeclaration",
									"scope": 2367,
									"src": "986:25:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_struct$_MintInfo_$1887_storage",
										"typeString": "struct ERC721TokenContractName.MintInfo"
									},
									"typeName": {
										"id": 1889,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1888,
											"name": "MintInfo",
											"nameLocations": [
												"986:8:6"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1887,
											"src": "986:8:6"
										},
										"referencedDeclaration": 1887,
										"src": "986:8:6",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_MintInfo_$1887_storage_ptr",
											"typeString": "struct ERC721TokenContractName.MintInfo"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1894,
									"mutability": "mutable",
									"name": "_owners",
									"nameLocation": "1044:7:6",
									"nodeType": "VariableDeclaration",
									"scope": 2367,
									"src": "1022:29:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_address_$1201_storage",
										"typeString": "address[1201]"
									},
									"typeName": {
										"baseType": {
											"id": 1891,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1022:7:6",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"id": 1893,
										"length": {
											"hexValue": "31323031",
											"id": 1892,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "1030:4:6",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1201_by_1",
												"typeString": "int_const 1201"
											},
											"value": "1201"
										},
										"nodeType": "ArrayTypeName",
										"src": "1022:13:6",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_address_$1201_storage_ptr",
											"typeString": "address[1201]"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1898,
									"mutability": "mutable",
									"name": "ban",
									"nameLocation": "1079:3:6",
									"nodeType": "VariableDeclaration",
									"scope": 2367,
									"src": "1060:22:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_bool_$1201_storage",
										"typeString": "bool[1201]"
									},
									"typeName": {
										"baseType": {
											"id": 1895,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "1060:4:6",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										},
										"id": 1897,
										"length": {
											"hexValue": "31323031",
											"id": 1896,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "1065:4:6",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1201_by_1",
												"typeString": "int_const 1201"
											},
											"value": "1201"
										},
										"nodeType": "ArrayTypeName",
										"src": "1060:10:6",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_bool_$1201_storage_ptr",
											"typeString": "bool[1201]"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1904,
									"mutability": "mutable",
									"name": "_balanceAndTokId",
									"nameLocation": "1138:16:6",
									"nodeType": "VariableDeclaration",
									"scope": 2367,
									"src": "1091:63:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint16_$1201_storage_$",
										"typeString": "mapping(address => uint16[1201])"
									},
									"typeName": {
										"id": 1903,
										"keyName": "owner",
										"keyNameLocation": "1107:5:6",
										"keyType": {
											"id": 1899,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1099:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1091:38:6",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint16_$1201_storage_$",
											"typeString": "mapping(address => uint16[1201])"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"baseType": {
												"id": 1900,
												"name": "uint16",
												"nodeType": "ElementaryTypeName",
												"src": "1116:6:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												}
											},
											"id": 1902,
											"length": {
												"hexValue": "31323031",
												"id": 1901,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "1123:4:6",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_1201_by_1",
													"typeString": "int_const 1201"
												},
												"value": "1201"
											},
											"nodeType": "ArrayTypeName",
											"src": "1116:12:6",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_uint16_$1201_storage_ptr",
												"typeString": "uint16[1201]"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1908,
									"mutability": "mutable",
									"name": "_tokenApprovals",
									"nameLocation": "1217:15:6",
									"nodeType": "VariableDeclaration",
									"scope": 2367,
									"src": "1165:67:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint16_$_t_address_$",
										"typeString": "mapping(uint16 => address)"
									},
									"typeName": {
										"id": 1907,
										"keyName": "tokenId",
										"keyNameLocation": "1180:7:6",
										"keyType": {
											"id": 1905,
											"name": "uint16",
											"nodeType": "ElementaryTypeName",
											"src": "1173:6:6",
											"typeDescriptions": {
												"typeIdentifier": "t_uint16",
												"typeString": "uint16"
											}
										},
										"nodeType": "Mapping",
										"src": "1165:43:6",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint16_$_t_address_$",
											"typeString": "mapping(uint16 => address)"
										},
										"valueName": "operator",
										"valueNameLocation": "1199:8:6",
										"valueType": {
											"id": 1906,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1191:7:6",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1914,
									"mutability": "mutable",
									"name": "_operatorApprovals",
									"nameLocation": "1311:18:6",
									"nodeType": "VariableDeclaration",
									"scope": 2367,
									"src": "1243:86:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
										"typeString": "mapping(address => mapping(address => bool))"
									},
									"typeName": {
										"id": 1913,
										"keyName": "owner",
										"keyNameLocation": "1259:5:6",
										"keyType": {
											"id": 1909,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1251:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1243:59:6",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
											"typeString": "mapping(address => mapping(address => bool))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1912,
											"keyName": "operator",
											"keyNameLocation": "1284:8:6",
											"keyType": {
												"id": 1910,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1276:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1268:33:6",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 1911,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1296:4:6",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 1929,
										"nodeType": "Block",
										"src": "1384:60:6",
										"statements": [
											{
												"expression": {
													"id": 1923,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1921,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1880,
														"src": "1395:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes20",
															"typeString": "bytes20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1922,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1916,
														"src": "1403:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes20",
															"typeString": "bytes20"
														}
													},
													"src": "1395:13:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes20",
														"typeString": "bytes20"
													}
												},
												"id": 1924,
												"nodeType": "ExpressionStatement",
												"src": "1395:13:6"
											},
											{
												"expression": {
													"id": 1927,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1925,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1882,
														"src": "1419:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes10",
															"typeString": "bytes10"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1926,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1918,
														"src": "1429:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes10",
															"typeString": "bytes10"
														}
													},
													"src": "1419:17:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes10",
														"typeString": "bytes10"
													}
												},
												"id": 1928,
												"nodeType": "ExpressionStatement",
												"src": "1419:17:6"
											}
										]
									},
									"id": 1930,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1919,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1916,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1360:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1930,
												"src": "1352:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes20",
													"typeString": "bytes20"
												},
												"typeName": {
													"id": 1915,
													"name": "bytes20",
													"nodeType": "ElementaryTypeName",
													"src": "1352:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes20",
														"typeString": "bytes20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1918,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1375:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1930,
												"src": "1367:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes10",
													"typeString": "bytes10"
												},
												"typeName": {
													"id": 1917,
													"name": "bytes10",
													"nodeType": "ElementaryTypeName",
													"src": "1367:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes10",
														"typeString": "bytes10"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1351:32:6"
									},
									"returnParameters": {
										"id": 1920,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1384:0:6"
									},
									"scope": 2367,
									"src": "1340:104:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1937,
										"nodeType": "Block",
										"src": "1500:31:6",
										"statements": [
											{
												"expression": {
													"id": 1935,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1880,
													"src": "1518:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes20",
														"typeString": "bytes20"
													}
												},
												"functionReturnParameters": 1934,
												"id": 1936,
												"nodeType": "Return",
												"src": "1511:12:6"
											}
										]
									},
									"functionSelector": "06fdde03",
									"id": 1938,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "1463:4:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1931,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1467:2:6"
									},
									"returnParameters": {
										"id": 1934,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1933,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1938,
												"src": "1491:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes20",
													"typeString": "bytes20"
												},
												"typeName": {
													"id": 1932,
													"name": "bytes20",
													"nodeType": "ElementaryTypeName",
													"src": "1491:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes20",
														"typeString": "bytes20"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1490:9:6"
									},
									"scope": 2367,
									"src": "1454:77:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1945,
										"nodeType": "Block",
										"src": "1589:33:6",
										"statements": [
											{
												"expression": {
													"id": 1943,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1882,
													"src": "1607:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes10",
														"typeString": "bytes10"
													}
												},
												"functionReturnParameters": 1942,
												"id": 1944,
												"nodeType": "Return",
												"src": "1600:14:6"
											}
										]
									},
									"functionSelector": "95d89b41",
									"id": 1946,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "1550:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1939,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1556:2:6"
									},
									"returnParameters": {
										"id": 1942,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1941,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1946,
												"src": "1580:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes10",
													"typeString": "bytes10"
												},
												"typeName": {
													"id": 1940,
													"name": "bytes10",
													"nodeType": "ElementaryTypeName",
													"src": "1580:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes10",
														"typeString": "bytes10"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1579:9:6"
									},
									"scope": 2367,
									"src": "1541:81:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1969,
										"nodeType": "Block",
										"src": "1695:126:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1959,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1954,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1948,
																"src": "1714:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1957,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1731:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1956,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1723:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1955,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1723:7:6",
																		"typeDescriptions": {}
																	}
																},
																"id": 1958,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1723:10:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1714:19:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "54686520696e70757420616464726573732063616e6e6f74206265207a65726f",
															"id": 1960,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1734:34:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a0ed4e8cad639975e700098d07f166902169c365243b6972750486c0b152b957",
																"typeString": "literal_string \"The input address cannot be zero\""
															},
															"value": "The input address cannot be zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a0ed4e8cad639975e700098d07f166902169c365243b6972750486c0b152b957",
																"typeString": "literal_string \"The input address cannot be zero\""
															}
														],
														"id": 1953,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1706:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1961,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1706:63:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1962,
												"nodeType": "ExpressionStatement",
												"src": "1706:63:6"
											},
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 1963,
															"name": "_balanceAndTokId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1904,
															"src": "1787:16:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint16_$1201_storage_$",
																"typeString": "mapping(address => uint16[1201] storage ref)"
															}
														},
														"id": 1965,
														"indexExpression": {
															"id": 1964,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1948,
															"src": "1804:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "1787:23:6",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint16_$1201_storage",
															"typeString": "uint16[1201] storage ref"
														}
													},
													"id": 1967,
													"indexExpression": {
														"hexValue": "30",
														"id": 1966,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1811:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1787:26:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"functionReturnParameters": 1952,
												"id": 1968,
												"nodeType": "Return",
												"src": "1780:33:6"
											}
										]
									},
									"functionSelector": "70a08231",
									"id": 1970,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "1641:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1949,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1948,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1659:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1970,
												"src": "1651:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1947,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1651:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1650:15:6"
									},
									"returnParameters": {
										"id": 1952,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1951,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1970,
												"src": "1687:6:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 1950,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "1687:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1686:8:6"
									},
									"scope": 2367,
									"src": "1632:189:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1981,
										"nodeType": "Block",
										"src": "1894:48:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1978,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1972,
															"src": "1926:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															}
														],
														"id": 1977,
														"name": "_requireOwned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2281,
														"src": "1912:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint16_$returns$_t_address_$",
															"typeString": "function (uint16) view returns (address)"
														}
													},
													"id": 1979,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1912:22:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1976,
												"id": 1980,
												"nodeType": "Return",
												"src": "1905:29:6"
											}
										]
									},
									"functionSelector": "82a7cf1e",
									"id": 1982,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "1840:7:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1973,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1972,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1855:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1982,
												"src": "1848:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 1971,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "1848:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1847:16:6"
									},
									"returnParameters": {
										"id": 1976,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1975,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1982,
												"src": "1885:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1974,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1885:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1884:9:6"
									},
									"scope": 2367,
									"src": "1831:111:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2016,
										"nodeType": "Block",
										"src": "2022:170:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1990,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1984,
															"src": "2047:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															}
														],
														"id": 1989,
														"name": "_requireOwned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2281,
														"src": "2033:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint16_$returns$_t_address_$",
															"typeString": "function (uint16) view returns (address)"
														}
													},
													"id": 1991,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2033:22:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1992,
												"nodeType": "ExpressionStatement",
												"src": "2033:22:6"
											},
											{
												"assignments": [
													1994
												],
												"declarations": [
													{
														"constant": false,
														"id": 1994,
														"mutability": "mutable",
														"name": "base",
														"nameLocation": "2080:4:6",
														"nodeType": "VariableDeclaration",
														"scope": 2016,
														"src": "2066:18:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 1993,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "2066:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1997,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1995,
														"name": "_baseURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2289,
														"src": "2087:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () pure returns (string memory)"
														}
													},
													"id": 1996,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2087:10:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2066:31:6"
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2004,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 2000,
																		"name": "base",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1994,
																		"src": "2121:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1999,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2115:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 1998,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "2115:5:6",
																		"typeDescriptions": {}
																	}
																},
																"id": 2001,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2115:11:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 2002,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2127:6:6",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "2115:18:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 2003,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2136:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "2115:22:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"hexValue": "",
														"id": 2013,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2182:2:6",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
															"typeString": "literal_string \"\""
														},
														"value": ""
													},
													"id": 2014,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2115:69:6",
													"trueExpression": {
														"arguments": [
															{
																"id": 2008,
																"name": "base",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1994,
																"src": "2154:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															{
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 2009,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1984,
																		"src": "2160:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint16",
																			"typeString": "uint16"
																		}
																	},
																	"id": 2010,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2168:8:6",
																	"memberName": "toString",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 487,
																	"src": "2160:16:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$attached_to$_t_uint256_$",
																		"typeString": "function (uint256) pure returns (string memory)"
																	}
																},
																"id": 2011,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2160:18:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																},
																{
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															],
															"expression": {
																"id": 2006,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2140:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																	"typeString": "type(string storage pointer)"
																},
																"typeName": {
																	"id": 2005,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "2140:6:6",
																	"typeDescriptions": {}
																}
															},
															"id": 2007,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2147:6:6",
															"memberName": "concat",
															"nodeType": "MemberAccess",
															"src": "2140:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$",
																"typeString": "function () pure returns (string memory)"
															}
														},
														"id": 2012,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2140:39:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1988,
												"id": 2015,
												"nodeType": "Return",
												"src": "2108:76:6"
											}
										]
									},
									"functionSelector": "dd7d8440",
									"id": 2017,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "1961:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1985,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1984,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1977:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 2017,
												"src": "1970:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 1983,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "1970:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1969:16:6"
									},
									"returnParameters": {
										"id": 1988,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1987,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2017,
												"src": "2007:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1986,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2007:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2006:15:6"
									},
									"scope": 2367,
									"src": "1952:240:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2031,
										"nodeType": "Block",
										"src": "2254:53:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2025,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2019,
															"src": "2273:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2026,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2021,
															"src": "2277:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 2027,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 401,
																"src": "2286:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 2028,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2286:12:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2024,
														"name": "_aprove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2257,
														"src": "2265:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint16_$_t_address_$returns$__$",
															"typeString": "function (address,uint16,address)"
														}
													},
													"id": 2029,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2265:34:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2030,
												"nodeType": "ExpressionStatement",
												"src": "2265:34:6"
											}
										]
									},
									"functionSelector": "e560ca43",
									"id": 2032,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2211:7:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2022,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2019,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2227:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 2032,
												"src": "2219:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2018,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2219:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2021,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2238:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 2032,
												"src": "2231:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 2020,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "2231:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2218:28:6"
									},
									"returnParameters": {
										"id": 2023,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2254:0:6"
									},
									"scope": 2367,
									"src": "2202:105:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2047,
										"nodeType": "Block",
										"src": "2390:85:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2040,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2034,
															"src": "2415:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															}
														],
														"id": 2039,
														"name": "_requireOwned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2281,
														"src": "2401:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint16_$returns$_t_address_$",
															"typeString": "function (uint16) view returns (address)"
														}
													},
													"id": 2041,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2401:22:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2042,
												"nodeType": "ExpressionStatement",
												"src": "2401:22:6"
											},
											{
												"expression": {
													"baseExpression": {
														"id": 2043,
														"name": "_tokenApprovals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1908,
														"src": "2443:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint16_$_t_address_$",
															"typeString": "mapping(uint16 => address)"
														}
													},
													"id": 2045,
													"indexExpression": {
														"id": 2044,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2034,
														"src": "2459:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint16",
															"typeString": "uint16"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2443:24:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 2038,
												"id": 2046,
												"nodeType": "Return",
												"src": "2436:31:6"
											}
										]
									},
									"functionSelector": "93b871f2",
									"id": 2048,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "2324:11:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2035,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2034,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2343:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 2048,
												"src": "2336:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 2033,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "2336:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2335:16:6"
									},
									"returnParameters": {
										"id": 2038,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2037,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2048,
												"src": "2381:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2036,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2381:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2380:9:6"
									},
									"scope": 2367,
									"src": "2315:160:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2091,
										"nodeType": "Block",
										"src": "2550:357:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2059,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 2056,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 401,
																	"src": "2569:10:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 2057,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2569:12:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 2058,
																"name": "operator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2050,
																"src": "2585:8:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2569:24:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5468652061646472657373206f6620746865206f776e657220616e6420746865206f70657261746f72206d75737420626520646966666572656e74",
															"id": 2060,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2595:61:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_04ac8f36c142f1891048ed77339b8705d10008afae0986d82fa07e197d36aa25",
																"typeString": "literal_string \"The address of the owner and the operator must be different\""
															},
															"value": "The address of the owner and the operator must be different"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_04ac8f36c142f1891048ed77339b8705d10008afae0986d82fa07e197d36aa25",
																"typeString": "literal_string \"The address of the owner and the operator must be different\""
															}
														],
														"id": 2055,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2561:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2061,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2561:96:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2062,
												"nodeType": "ExpressionStatement",
												"src": "2561:96:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 2068,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2063,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2050,
														"src": "2672:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 2066,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2692:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 2065,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2684:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 2064,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2684:7:6",
																"typeDescriptions": {}
															}
														},
														"id": 2067,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2684:10:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2672:22:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2074,
												"nodeType": "IfStatement",
												"src": "2668:93:6",
												"trueBody": {
													"id": 2073,
													"nodeType": "Block",
													"src": "2696:65:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 2070,
																		"name": "operator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2050,
																		"src": "2740:8:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 2069,
																	"name": "ERC721InvalidOperator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 88,
																	"src": "2718:21:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 2071,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2718:31:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2072,
															"nodeType": "RevertStatement",
															"src": "2711:38:6"
														}
													]
												}
											},
											{
												"expression": {
													"id": 2082,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 2075,
																"name": "_operatorApprovals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1914,
																"src": "2781:18:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																	"typeString": "mapping(address => mapping(address => bool))"
																}
															},
															"id": 2079,
															"indexExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 2076,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 401,
																	"src": "2800:10:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 2077,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2800:12:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2781:32:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 2080,
														"indexExpression": {
															"id": 2078,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2050,
															"src": "2814:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2781:42:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2081,
														"name": "approved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2052,
														"src": "2826:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "2781:53:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2083,
												"nodeType": "ExpressionStatement",
												"src": "2781:53:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 2085,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 401,
																"src": "2866:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 2086,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2866:12:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2087,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2050,
															"src": "2880:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2088,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2052,
															"src": "2890:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 2084,
														"name": "ApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1864,
														"src": "2851:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 2089,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2851:48:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2090,
												"nodeType": "EmitStatement",
												"src": "2846:53:6"
											}
										]
									},
									"functionSelector": "a22cb465",
									"id": 2092,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "2492:17:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2053,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2050,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "2518:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 2092,
												"src": "2510:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2049,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2510:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2052,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "2533:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 2092,
												"src": "2528:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2051,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2528:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2509:33:6"
									},
									"returnParameters": {
										"id": 2054,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2550:0:6"
									},
									"scope": 2367,
									"src": "2483:424:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2107,
										"nodeType": "Block",
										"src": "3003:61:6",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 2101,
															"name": "_operatorApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1914,
															"src": "3021:18:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																"typeString": "mapping(address => mapping(address => bool))"
															}
														},
														"id": 2103,
														"indexExpression": {
															"id": 2102,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2094,
															"src": "3040:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3021:25:6",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 2105,
													"indexExpression": {
														"id": 2104,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2096,
														"src": "3047:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3021:35:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2100,
												"id": 2106,
												"nodeType": "Return",
												"src": "3014:42:6"
											}
										]
									},
									"functionSelector": "e985e9c5",
									"id": 2108,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "2926:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2097,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2094,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2951:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 2108,
												"src": "2943:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2093,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2943:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2096,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "2966:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 2108,
												"src": "2958:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2095,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2958:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2942:33:6"
									},
									"returnParameters": {
										"id": 2100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2099,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2108,
												"src": "2997:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2098,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2997:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2996:6:6"
									},
									"scope": 2367,
									"src": "2917:147:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2152,
										"nodeType": "Block",
										"src": "3151:510:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 2122,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2117,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2112,
														"src": "3166:2:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 2120,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3180:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 2119,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3172:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 2118,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "3172:7:6",
																"typeDescriptions": {}
															}
														},
														"id": 2121,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3172:10:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3166:16:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2131,
												"nodeType": "IfStatement",
												"src": "3162:89:6",
												"trueBody": {
													"id": 2130,
													"nodeType": "Block",
													"src": "3184:67:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 2126,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3236:1:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 2125,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3228:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 2124,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "3228:7:6",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 2127,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3228:10:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 2123,
																	"name": "ERC721InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 71,
																	"src": "3206:21:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 2128,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3206:33:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2129,
															"nodeType": "RevertStatement",
															"src": "3199:40:6"
														}
													]
												}
											},
											{
												"assignments": [
													2133
												],
												"declarations": [
													{
														"constant": false,
														"id": 2133,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "3482:13:6",
														"nodeType": "VariableDeclaration",
														"scope": 2152,
														"src": "3474:21:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 2132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3474:7:6",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2140,
												"initialValue": {
													"arguments": [
														{
															"id": 2135,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2112,
															"src": "3506:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2136,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2114,
															"src": "3510:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 2137,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 401,
																"src": "3519:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 2138,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3519:12:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2134,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2207,
														"src": "3498:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint16_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint16,address) returns (address)"
														}
													},
													"id": 2139,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3498:34:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3474:58:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 2143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2141,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2133,
														"src": "3547:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 2142,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2110,
														"src": "3564:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3547:21:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2151,
												"nodeType": "IfStatement",
												"src": "3543:111:6",
												"trueBody": {
													"id": 2150,
													"nodeType": "Block",
													"src": "3570:84:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 2145,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2110,
																		"src": "3613:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2146,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2114,
																		"src": "3619:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint16",
																			"typeString": "uint16"
																		}
																	},
																	{
																		"id": 2147,
																		"name": "previousOwner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2133,
																		"src": "3628:13:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint16",
																			"typeString": "uint16"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 2144,
																	"name": "ERC721IncorrectOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 61,
																	"src": "3592:20:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_address_$returns$__$",
																		"typeString": "function (address,uint256,address) pure"
																	}
																},
																"id": 2148,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3592:50:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2149,
															"nodeType": "RevertStatement",
															"src": "3585:57:6"
														}
													]
												}
											}
										]
									},
									"functionSelector": "4ec3dcfe",
									"id": 2153,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "3081:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2115,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2110,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3102:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 2153,
												"src": "3094:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2109,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3094:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2112,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3116:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 2153,
												"src": "3108:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2111,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3108:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2114,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3127:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 2153,
												"src": "3120:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 2113,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "3120:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3093:42:6"
									},
									"returnParameters": {
										"id": 2116,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3151:0:6"
									},
									"scope": 2367,
									"src": "3072:589:6",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2169,
										"nodeType": "Block",
										"src": "3744:58:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2163,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2155,
															"src": "3772:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2164,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2157,
															"src": "3778:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2165,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2159,
															"src": "3782:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															}
														},
														{
															"hexValue": "",
															"id": 2166,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3791:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 2162,
														"name": "safeTransferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2170,
															2195
														],
														"referencedDeclaration": 2195,
														"src": "3755:16:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint16_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint16,bytes memory)"
														}
													},
													"id": 2167,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3755:39:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2168,
												"nodeType": "ExpressionStatement",
												"src": "3755:39:6"
											}
										]
									},
									"functionSelector": "07394401",
									"id": 2170,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "3678:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2160,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2155,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3703:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 2170,
												"src": "3695:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2154,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3695:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2157,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3717:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 2170,
												"src": "3709:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2156,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3709:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2159,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3728:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 2170,
												"src": "3721:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 2158,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "3721:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3694:42:6"
									},
									"returnParameters": {
										"id": 2161,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3744:0:6"
									},
									"scope": 2367,
									"src": "3669:133:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2194,
										"nodeType": "Block",
										"src": "3912:108:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2182,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2172,
															"src": "3936:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2183,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2174,
															"src": "3942:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2184,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2176,
															"src": "3946:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															}
														],
														"id": 2181,
														"name": "transferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2153,
														"src": "3923:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint16_$returns$__$",
															"typeString": "function (address,address,uint16)"
														}
													},
													"id": 2185,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3923:31:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2186,
												"nodeType": "ExpressionStatement",
												"src": "3923:31:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2188,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2172,
															"src": "3988:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2189,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2174,
															"src": "3994:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2190,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2176,
															"src": "3998:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															}
														},
														{
															"id": 2191,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2178,
															"src": "4007:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2187,
														"name": "_checkOnERC721Received",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2352,
														"src": "3965:22:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint16_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint16,bytes memory)"
														}
													},
													"id": 2192,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3965:47:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2193,
												"nodeType": "ExpressionStatement",
												"src": "3965:47:6"
											}
										]
									},
									"functionSelector": "b145ae31",
									"id": 2195,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "3819:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2179,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2172,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3844:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 2195,
												"src": "3836:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2171,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3836:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2174,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3858:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 2195,
												"src": "3850:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2173,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3850:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2176,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3869:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 2195,
												"src": "3862:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 2175,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "3862:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2178,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3891:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 2195,
												"src": "3878:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2177,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3878:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3835:61:6"
									},
									"returnParameters": {
										"id": 2180,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3912:0:6"
									},
									"scope": 2367,
									"src": "3810:210:6",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2206,
										"nodeType": "Block",
										"src": "4115:10:6",
										"statements": []
									},
									"id": 2207,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "4039:7:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2202,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2197,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4055:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 2207,
												"src": "4047:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2196,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4047:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2199,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4066:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 2207,
												"src": "4059:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 2198,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "4059:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2201,
												"mutability": "mutable",
												"name": "auth",
												"nameLocation": "4083:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 2207,
												"src": "4075:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2200,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4075:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4046:42:6"
									},
									"returnParameters": {
										"id": 2205,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2204,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2207,
												"src": "4106:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2203,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4106:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4105:9:6"
									},
									"scope": 2367,
									"src": "4030:95:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 2256,
										"nodeType": "Block",
										"src": "4202:354:6",
										"statements": [
											{
												"assignments": [
													2217
												],
												"declarations": [
													{
														"constant": false,
														"id": 2217,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4221:5:6",
														"nodeType": "VariableDeclaration",
														"scope": 2256,
														"src": "4213:13:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 2216,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4213:7:6",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2221,
												"initialValue": {
													"arguments": [
														{
															"id": 2219,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2211,
															"src": "4243:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															}
														],
														"id": 2218,
														"name": "_requireOwned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2281,
														"src": "4229:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint16_$returns$_t_address_$",
															"typeString": "function (uint16) view returns (address)"
														}
													},
													"id": 2220,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4229:22:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4213:38:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2225,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2223,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2217,
																"src": "4270:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 2224,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2209,
																"src": "4279:2:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "4270:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5468652061646472657373206f6620746865206f776e657220616e6420746865206f70657261746f72206d75737420626520646966666572656e74",
															"id": 2226,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4283:61:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_04ac8f36c142f1891048ed77339b8705d10008afae0986d82fa07e197d36aa25",
																"typeString": "literal_string \"The address of the owner and the operator must be different\""
															},
															"value": "The address of the owner and the operator must be different"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_04ac8f36c142f1891048ed77339b8705d10008afae0986d82fa07e197d36aa25",
																"typeString": "literal_string \"The address of the owner and the operator must be different\""
															}
														],
														"id": 2222,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4262:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2227,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4262:83:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2228,
												"nodeType": "ExpressionStatement",
												"src": "4262:83:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 2237,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 2231,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2229,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2217,
															"src": "4359:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"id": 2230,
															"name": "auth",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2213,
															"src": "4368:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "4359:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 2236,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "4376:30:6",
														"subExpression": {
															"arguments": [
																{
																	"id": 2233,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2217,
																	"src": "4394:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 2234,
																	"name": "auth",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2213,
																	"src": "4401:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2232,
																"name": "isApprovedForAll",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2108,
																"src": "4377:16:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address,address) view returns (bool)"
																}
															},
															"id": 2235,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4377:29:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4359:47:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2243,
												"nodeType": "IfStatement",
												"src": "4355:108:6",
												"trueBody": {
													"id": 2242,
													"nodeType": "Block",
													"src": "4407:56:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 2239,
																		"name": "auth",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2213,
																		"src": "4447:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 2238,
																	"name": "ERC721InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 83,
																	"src": "4425:21:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 2240,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4425:27:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2241,
															"nodeType": "RevertStatement",
															"src": "4418:34:6"
														}
													]
												}
											},
											{
												"expression": {
													"id": 2248,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2244,
															"name": "_tokenApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1908,
															"src": "4475:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint16_$_t_address_$",
																"typeString": "mapping(uint16 => address)"
															}
														},
														"id": 2246,
														"indexExpression": {
															"id": 2245,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2211,
															"src": "4491:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4475:24:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2247,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2209,
														"src": "4502:2:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4475:29:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2249,
												"nodeType": "ExpressionStatement",
												"src": "4475:29:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2251,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2217,
															"src": "4529:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2252,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2209,
															"src": "4536:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2253,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2211,
															"src": "4540:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															}
														],
														"id": 2250,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1856,
														"src": "4520:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint16_$returns$__$",
															"typeString": "function (address,address,uint16)"
														}
													},
													"id": 2254,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4520:28:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2255,
												"nodeType": "EmitStatement",
												"src": "4515:33:6"
											}
										]
									},
									"id": 2257,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_aprove",
									"nameLocation": "4144:7:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2214,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2209,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4160:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 2257,
												"src": "4152:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2208,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4152:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2211,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4171:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 2257,
												"src": "4164:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 2210,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "4164:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2213,
												"mutability": "mutable",
												"name": "auth",
												"nameLocation": "4188:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 2257,
												"src": "4180:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2212,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4180:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4151:42:6"
									},
									"returnParameters": {
										"id": 2215,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4202:0:6"
									},
									"scope": 2367,
									"src": "4135:421:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 2280,
										"nodeType": "Block",
										"src": "4644:194:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 2272,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint16",
																	"typeString": "uint16"
																},
																"id": 2267,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "30",
																	"id": 2265,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4663:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 2266,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2259,
																	"src": "4667:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint16",
																		"typeString": "uint16"
																	}
																},
																"src": "4663:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint16",
																	"typeString": "uint16"
																},
																"id": 2271,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2268,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2259,
																	"src": "4678:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint16",
																		"typeString": "uint16"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<=",
																"rightExpression": {
																	"expression": {
																		"id": 2269,
																		"name": "mintInfo",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1890,
																		"src": "4689:8:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_MintInfo_$1887_storage",
																			"typeString": "struct ERC721TokenContractName.MintInfo storage ref"
																		}
																	},
																	"id": 2270,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4698:13:6",
																	"memberName": "currentTokens",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1886,
																	"src": "4689:22:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint16",
																		"typeString": "uint16"
																	}
																},
																"src": "4678:33:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "4663:48:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "54686520494420656e746572656420697320696e76616c69642e204974206d75737420626520696e207468697320696e74657276616c2030203c206964203c3d2063757272656e7420746f6b656e73",
															"id": 2273,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4713:81:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d01a6ddc51808b791794e2bc370247f685df6f3cfeea0cd79f01cec6a9ccb52f",
																"typeString": "literal_string \"The ID entered is invalid. It must be in this interval 0 < id <= current tokens\""
															},
															"value": "The ID entered is invalid. It must be in this interval 0 < id <= current tokens"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d01a6ddc51808b791794e2bc370247f685df6f3cfeea0cd79f01cec6a9ccb52f",
																"typeString": "literal_string \"The ID entered is invalid. It must be in this interval 0 < id <= current tokens\""
															}
														],
														"id": 2264,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4655:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2274,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4655:140:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2275,
												"nodeType": "ExpressionStatement",
												"src": "4655:140:6"
											},
											{
												"expression": {
													"baseExpression": {
														"id": 2276,
														"name": "_owners",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1894,
														"src": "4814:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$1201_storage",
															"typeString": "address[1201] storage ref"
														}
													},
													"id": 2278,
													"indexExpression": {
														"id": 2277,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2259,
														"src": "4822:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint16",
															"typeString": "uint16"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4814:16:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 2263,
												"id": 2279,
												"nodeType": "Return",
												"src": "4807:23:6"
											}
										]
									},
									"id": 2281,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requireOwned",
									"nameLocation": "4583:13:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2260,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2259,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4604:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 2281,
												"src": "4597:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 2258,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "4597:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4596:16:6"
									},
									"returnParameters": {
										"id": 2263,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2262,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2281,
												"src": "4635:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2261,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4635:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4634:9:6"
									},
									"scope": 2367,
									"src": "4574:264:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 2288,
										"nodeType": "Block",
										"src": "4905:28:6",
										"statements": [
											{
												"expression": {
													"hexValue": "",
													"id": 2286,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4923:2:6",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
														"typeString": "literal_string \"\""
													},
													"value": ""
												},
												"functionReturnParameters": 2285,
												"id": 2287,
												"nodeType": "Return",
												"src": "4916:9:6"
											}
										]
									},
									"id": 2289,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_baseURI",
									"nameLocation": "4857:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2282,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4865:2:6"
									},
									"returnParameters": {
										"id": 2285,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2284,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2289,
												"src": "4890:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2283,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4890:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4889:15:6"
									},
									"scope": 2367,
									"src": "4848:85:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 2351,
										"nodeType": "Block",
										"src": "5042:703:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2304,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 2300,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2293,
																"src": "5057:2:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 2301,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5060:4:6",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "5057:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 2302,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5065:6:6",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5057:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 2303,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5074:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5057:18:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2350,
												"nodeType": "IfStatement",
												"src": "5053:685:6",
												"trueBody": {
													"id": 2349,
													"nodeType": "Block",
													"src": "5077:661:6",
													"statements": [
														{
															"clauses": [
																{
																	"block": {
																		"id": 2329,
																		"nodeType": "Block",
																		"src": "5195:169:6",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					},
																					"id": 2322,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 2318,
																						"name": "retval",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2316,
																						"src": "5218:6:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "!=",
																					"rightExpression": {
																						"expression": {
																							"expression": {
																								"id": 2319,
																								"name": "IERC721TCNReceiver",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2385,
																								"src": "5228:18:6",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_IERC721TCNReceiver_$2385_$",
																									"typeString": "type(contract IERC721TCNReceiver)"
																								}
																							},
																							"id": 2320,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"memberLocation": "5247:16:6",
																							"memberName": "onERC721Received",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 2384,
																							"src": "5228:35:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint16_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$",
																								"typeString": "function IERC721TCNReceiver.onERC721Received(address,address,uint16,bytes calldata) returns (bytes4)"
																							}
																						},
																						"id": 2321,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"memberLocation": "5264:8:6",
																						"memberName": "selector",
																						"nodeType": "MemberAccess",
																						"src": "5228:44:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"src": "5218:54:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 2328,
																				"nodeType": "IfStatement",
																				"src": "5214:135:6",
																				"trueBody": {
																					"id": 2327,
																					"nodeType": "Block",
																					"src": "5274:75:6",
																					"statements": [
																						{
																							"errorCall": {
																								"arguments": [
																									{
																										"id": 2324,
																										"name": "to",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 2293,
																										"src": "5326:2:6",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									],
																									"id": 2323,
																									"name": "ERC721InvalidReceiver",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 71,
																									"src": "5304:21:6",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																										"typeString": "function (address) pure"
																									}
																								},
																								"id": 2325,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "5304:25:6",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 2326,
																							"nodeType": "RevertStatement",
																							"src": "5297:32:6"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 2330,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 2317,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 2316,
																				"mutability": "mutable",
																				"name": "retval",
																				"nameLocation": "5187:6:6",
																				"nodeType": "VariableDeclaration",
																				"scope": 2330,
																				"src": "5180:13:6",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				},
																				"typeName": {
																					"id": 2315,
																					"name": "bytes4",
																					"nodeType": "ElementaryTypeName",
																					"src": "5180:6:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "5179:15:6"
																	},
																	"src": "5171:193:6"
																},
																{
																	"block": {
																		"id": 2346,
																		"nodeType": "Block",
																		"src": "5393:334:6",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2337,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"expression": {
																							"id": 2334,
																							"name": "reason",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2332,
																							"src": "5416:6:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes_memory_ptr",
																								"typeString": "bytes memory"
																							}
																						},
																						"id": 2335,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "5423:6:6",
																						"memberName": "length",
																						"nodeType": "MemberAccess",
																						"src": "5416:13:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "==",
																					"rightExpression": {
																						"hexValue": "30",
																						"id": 2336,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "5433:1:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					},
																					"src": "5416:18:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"falseBody": {
																					"id": 2344,
																					"nodeType": "Block",
																					"src": "5517:195:6",
																					"statements": [
																						{
																							"AST": {
																								"nodeType": "YulBlock",
																								"src": "5605:88:6",
																								"statements": [
																									{
																										"expression": {
																											"arguments": [
																												{
																													"arguments": [
																														{
																															"kind": "number",
																															"nodeType": "YulLiteral",
																															"src": "5643:2:6",
																															"type": "",
																															"value": "32"
																														},
																														{
																															"name": "reason",
																															"nodeType": "YulIdentifier",
																															"src": "5647:6:6"
																														}
																													],
																													"functionName": {
																														"name": "add",
																														"nodeType": "YulIdentifier",
																														"src": "5639:3:6"
																													},
																													"nodeType": "YulFunctionCall",
																													"src": "5639:15:6"
																												},
																												{
																													"arguments": [
																														{
																															"name": "reason",
																															"nodeType": "YulIdentifier",
																															"src": "5662:6:6"
																														}
																													],
																													"functionName": {
																														"name": "mload",
																														"nodeType": "YulIdentifier",
																														"src": "5656:5:6"
																													},
																													"nodeType": "YulFunctionCall",
																													"src": "5656:13:6"
																												}
																											],
																											"functionName": {
																												"name": "revert",
																												"nodeType": "YulIdentifier",
																												"src": "5632:6:6"
																											},
																											"nodeType": "YulFunctionCall",
																											"src": "5632:38:6"
																										},
																										"nodeType": "YulExpressionStatement",
																										"src": "5632:38:6"
																									}
																								]
																							},
																							"documentation": "@solidity memory-safe-assembly",
																							"evmVersion": "shanghai",
																							"externalReferences": [
																								{
																									"declaration": 2332,
																									"isOffset": false,
																									"isSlot": false,
																									"src": "5647:6:6",
																									"valueSize": 1
																								},
																								{
																									"declaration": 2332,
																									"isOffset": false,
																									"isSlot": false,
																									"src": "5662:6:6",
																									"valueSize": 1
																								}
																							],
																							"id": 2343,
																							"nodeType": "InlineAssembly",
																							"src": "5596:97:6"
																						}
																					]
																				},
																				"id": 2345,
																				"nodeType": "IfStatement",
																				"src": "5412:300:6",
																				"trueBody": {
																					"id": 2342,
																					"nodeType": "Block",
																					"src": "5436:75:6",
																					"statements": [
																						{
																							"errorCall": {
																								"arguments": [
																									{
																										"id": 2339,
																										"name": "to",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 2293,
																										"src": "5488:2:6",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									],
																									"id": 2338,
																									"name": "ERC721InvalidReceiver",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 71,
																									"src": "5466:21:6",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																										"typeString": "function (address) pure"
																									}
																								},
																								"id": 2340,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "5466:25:6",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 2341,
																							"nodeType": "RevertStatement",
																							"src": "5459:32:6"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 2347,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 2333,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 2332,
																				"mutability": "mutable",
																				"name": "reason",
																				"nameLocation": "5385:6:6",
																				"nodeType": "VariableDeclaration",
																				"scope": 2347,
																				"src": "5372:19:6",
																				"stateVariable": false,
																				"storageLocation": "memory",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes"
																				},
																				"typeName": {
																					"id": 2331,
																					"name": "bytes",
																					"nodeType": "ElementaryTypeName",
																					"src": "5372:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_storage_ptr",
																						"typeString": "bytes"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "5371:21:6"
																	},
																	"src": "5365:362:6"
																}
															],
															"externalCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 2309,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 401,
																			"src": "5136:10:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 2310,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5136:12:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2311,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2291,
																		"src": "5150:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2312,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2295,
																		"src": "5156:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint16",
																			"typeString": "uint16"
																		}
																	},
																	{
																		"id": 2313,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2297,
																		"src": "5165:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint16",
																			"typeString": "uint16"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 2306,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2293,
																				"src": "5115:2:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 2305,
																			"name": "IERC721TCNReceiver",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2385,
																			"src": "5096:18:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721TCNReceiver_$2385_$",
																				"typeString": "type(contract IERC721TCNReceiver)"
																			}
																		},
																		"id": 2307,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5096:22:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC721TCNReceiver_$2385",
																			"typeString": "contract IERC721TCNReceiver"
																		}
																	},
																	"id": 2308,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5119:16:6",
																	"memberName": "onERC721Received",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2384,
																	"src": "5096:39:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint16_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																		"typeString": "function (address,address,uint16,bytes memory) external returns (bytes4)"
																	}
																},
																"id": 2314,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5096:74:6",
																"tryCall": true,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"id": 2348,
															"nodeType": "TryStatement",
															"src": "5092:635:6"
														}
													]
												}
											}
										]
									},
									"id": 2352,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOnERC721Received",
									"nameLocation": "4950:22:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2298,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2291,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4981:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 2352,
												"src": "4973:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2290,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4973:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2293,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4995:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 2352,
												"src": "4987:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2292,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4987:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2295,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5006:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 2352,
												"src": "4999:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 2294,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "4999:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2297,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5028:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 2352,
												"src": "5015:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2296,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5015:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4972:61:6"
									},
									"returnParameters": {
										"id": 2299,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5042:0:6"
									},
									"scope": 2367,
									"src": "4941:804:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"baseFunctions": [
										2384
									],
									"body": {
										"id": 2365,
										"nodeType": "Block",
										"src": "5916:2:6",
										"statements": []
									},
									"functionSelector": "b1cff380",
									"id": 2366,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "onERC721Received",
									"nameLocation": "5762:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2361,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2354,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5797:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 2366,
												"src": "5789:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2353,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5789:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2356,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5824:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 2366,
												"src": "5816:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2355,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5816:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2358,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5846:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 2366,
												"src": "5839:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 2357,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "5839:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2360,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5879:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 2366,
												"src": "5864:19:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2359,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5864:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5778:112:6"
									},
									"returnParameters": {
										"id": 2364,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2363,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2366,
												"src": "5909:6:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 2362,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "5909:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5908:8:6"
									},
									"scope": 2367,
									"src": "5753:165:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2368,
							"src": "400:5531:6",
							"usedErrors": [
								47,
								52,
								61,
								66,
								71,
								78,
								83,
								88
							],
							"usedEvents": [
								1856,
								1864,
								1872
							]
						}
					],
					"src": "33:5898:6"
				},
				"id": 6
			},
			"contracts/IERc721TokenContractNameReceiver.sol": {
				"ast": {
					"absolutePath": "contracts/IERc721TokenContractNameReceiver.sol",
					"exportedSymbols": {
						"IERC721TCNReceiver": [
							2385
						]
					},
					"id": 2386,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2369,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "35:24:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721TCNReceiver",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2370,
								"nodeType": "StructuredDocumentation",
								"src": "63:158:7",
								"text": " @title ERC-721 token receiver interface\n @dev Interface for any contract that wants to support safeTransfers\n from ERC-721 asset contracts."
							},
							"fullyImplemented": false,
							"id": 2385,
							"linearizedBaseContracts": [
								2385
							],
							"name": "IERC721TCNReceiver",
							"nameLocation": "233:18:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 2371,
										"nodeType": "StructuredDocumentation",
										"src": "259:509:7",
										"text": " @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n by `operator` from `from`, this function is called.\n It must return its Solidity selector to confirm the token transfer.\n If any other value is returned or the interface is not implemented by the recipient, the transfer will be\n reverted.\n The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."
									},
									"functionSelector": "b1cff380",
									"id": 2384,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC721Received",
									"nameLocation": "783:16:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2380,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2373,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "818:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 2384,
												"src": "810:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2372,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "810:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2375,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "845:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 2384,
												"src": "837:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2374,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "837:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2377,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "867:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 2384,
												"src": "860:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 2376,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "860:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2379,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "900:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 2384,
												"src": "885:19:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2378,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "885:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "799:112:7"
									},
									"returnParameters": {
										"id": 2383,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2382,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2384,
												"src": "930:6:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 2381,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "930:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "929:8:7"
									},
									"scope": 2385,
									"src": "774:164:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2386,
							"src": "223:718:7",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "35:906:7"
				},
				"id": 7
			}
		}
	}
}