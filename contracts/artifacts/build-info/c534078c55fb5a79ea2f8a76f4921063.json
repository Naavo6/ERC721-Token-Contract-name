{
	"id": "c534078c55fb5a79ea2f8a76f4921063",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.20",
	"solcLongVersion": "0.8.20+commit.a1b79de6",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/ERC721TokenContractName.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.20;\r\n\r\n\r\nimport \"@openzeppelin/contracts/utils/Address.sol\";\r\nimport \"@openzeppelin/contracts/utils/Strings.sol\";\r\nimport \"@openzeppelin/contracts/utils/Context.sol\";\r\nimport {IERC721Errors} from \"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\";\r\n\r\n\r\n\r\n\r\ncontract ERC721TokenContractName is Context, IERC721Errors {\r\n    event Approval(address indexed owner, address indexed approved, uint16 indexed tokenId);\r\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\r\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\r\n\r\n\r\n    using Address for address;\r\n    using Strings for uint16;\r\n\r\n\r\n    bytes20 private _name;\r\n\r\n\r\n    bytes10 private _symbol;\r\n\r\n    struct TokInfo {\r\n        uint16 maxMinted;\r\n        uint16 currentTokens;\r\n    }\r\n\r\n    TokInfo private tokInfo;\r\n\r\n\r\n    address[1201] private _owners;\r\n\r\n\r\n    mapping(address owner => uint16[1201]) private _balanceAndTokId;\r\n\r\n\r\n    mapping(uint16 tokenId => address operator) private _tokenApprovals;\r\n\r\n\r\n    mapping(address owner => mapping(address operator => bool)) private _operatorApprovals;\r\n\r\n\r\n    constructor(bytes20 name_, bytes10 symbol_) {\r\n        _name = name_;\r\n        _symbol = symbol_;\r\n    }\r\n\r\n\r\n    function name() public view returns (bytes20) {\r\n        return _name;\r\n    }\r\n\r\n\r\n    function symbol() public view returns (bytes10) {\r\n        return _symbol;\r\n    }\r\n\r\n\r\n    function balanceOf(address owner) public view returns (uint16) {\r\n        require(owner != address(0),\"The input address cannot be zero\");\r\n        return _balanceAndTokId[owner][0];\r\n    }\r\n\r\n\r\n    function ownerOf(uint16 tokenId) public view returns (address) {\r\n        return _requireOwned(tokenId);\r\n    }\r\n\r\n\r\n    function tokenURI(uint16 tokenId) public view returns (string memory) {\r\n        _requireOwned(tokenId);\r\n        string memory base = _baseURI();\r\n        return bytes(base).length > 0 ? string.concat(base, tokenId.toString()) : \"\";\r\n    }\r\n\r\n\r\n    function approve(address to, uint16 tokenId) public {\r\n        _aprove(to, tokenId, _msgSender());\r\n    }\r\n\r\n    function getApproved(uint16 tokenId) public view virtual returns (address) {\r\n        _requireOwned(tokenId);\r\n\r\n        return _tokenApprovals[tokenId];\r\n    }\r\n\r\n    function setApprovalForAll(address operator, bool approved) public {\r\n        require(_msgSender() != operator, \"The address of the owner and the operator must be different\");\r\n        if (operator == address(0)) {\r\n            revert ERC721InvalidOperator(operator);\r\n        }\r\n        \r\n        _operatorApprovals[_msgSender()][operator] = approved;\r\n         emit ApprovalForAll(_msgSender(), operator, approved);\r\n    }\r\n\r\n\r\n    function isApprovedForAll(address owner, address operator) public view returns (bool) {\r\n        return _operatorApprovals[owner][operator];\r\n    }\r\n\r\n\r\n\r\n\r\n    function _aprove(address to, uint16 tokenId, address auth) internal {\r\n        address owner = _requireOwned(tokenId);\r\n        require(owner != to, \"The address of the owner and the operator must be different\");\r\n       if (owner != auth && !isApprovedForAll(owner, auth)){\r\n        revert ERC721InvalidApprover(auth);\r\n       }\r\n\r\n        _tokenApprovals[tokenId] = to;\r\n        emit Approval(owner, to, tokenId);\r\n    }\r\n\r\n    \r\n\r\n\r\n    function _requireOwned(uint16 tokenId) internal view returns (address) {\r\n        require(0 < tokenId && tokenId <= tokInfo.currentTokens, \"The ID entered is invalid. It must be in this interval 0 < id <= current tokens\"); \r\n        return _owners[tokenId];\r\n    }\r\n\r\n\r\n    function _baseURI() internal pure returns (string memory) {\r\n        return \"\";\r\n    }\r\n\r\n\r\n    \r\n}"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Strings.sol)\n\npragma solidity ^0.8.20;\n\nimport {Math} from \"./math/Math.sol\";\nimport {SignedMath} from \"./math/SignedMath.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant HEX_DIGITS = \"0123456789abcdef\";\n    uint8 private constant ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev The `value` string doesn't fit in the specified `length`.\n     */\n    error StringsInsufficientHexLength(uint256 value, uint256 length);\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            /// @solidity memory-safe-assembly\n            assembly {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                /// @solidity memory-safe-assembly\n                assembly {\n                    mstore8(ptr, byte(mod(value, 10), HEX_DIGITS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toStringSigned(int256 value) internal pure returns (string memory) {\n        return string.concat(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value)));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        uint256 localValue = value;\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = HEX_DIGITS[localValue & 0xf];\n            localValue >>= 4;\n        }\n        if (localValue != 0) {\n            revert StringsInsufficientHexLength(value, length);\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n     * representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return bytes(a).length == bytes(b).length && keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Address.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev The ETH balance of the account is not enough to perform the operation.\n     */\n    error AddressInsufficientBalance(address account);\n\n    /**\n     * @dev There's no code at `target` (it is not a contract).\n     */\n    error AddressEmptyCode(address target);\n\n    /**\n     * @dev A call to an address target failed. The target may have reverted.\n     */\n    error FailedInnerCall();\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        if (address(this).balance < amount) {\n            revert AddressInsufficientBalance(address(this));\n        }\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        if (!success) {\n            revert FailedInnerCall();\n        }\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason or custom error, it is bubbled\n     * up by this function (like regular Solidity function calls). However, if\n     * the call reverted with no returned reason, this function reverts with a\n     * {FailedInnerCall} error.\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        if (address(this).balance < value) {\n            revert AddressInsufficientBalance(address(this));\n        }\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n     * was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\n     * unsuccessful call.\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata\n    ) internal view returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            // only check if target is a contract if the call was successful and the return data is empty\n            // otherwise we already know that it was a contract\n            if (returndata.length == 0 && target.code.length == 0) {\n                revert AddressEmptyCode(target);\n            }\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n     * revert reason or with a default {FailedInnerCall} error.\n     */\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}.\n     */\n    function _revert(bytes memory returndata) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert FailedInnerCall();\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // must be unchecked in order to support `n = type(int256).min`\n            return uint256(n >= 0 ? n : -n);\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    /**\n     * @dev Muldiv operation overflow.\n     */\n    error MathOverflowedMulDiv();\n\n    enum Rounding {\n        Floor, // Toward negative infinity\n        Ceil, // Toward positive infinity\n        Trunc, // Toward zero\n        Expand // Away from zero\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds towards infinity instead\n     * of rounding towards zero.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (b == 0) {\n            // Guarantee the same behavior as in a regular Solidity division.\n            return a / b;\n        }\n\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n     * denominator == 0.\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n     * Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0 = x * y; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            if (denominator <= prod1) {\n                revert MathOverflowedMulDiv();\n            }\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\n\n            uint256 twos = denominator & (0 - denominator);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\n            // works in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n     * towards zero.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (unsignedRoundsUp(rounding) && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (unsignedRoundsUp(rounding) && 10 ** result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << (result << 3) < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\n     */\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\n        return uint8(rounding) % 2 == 1;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"Address": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								}
							],
							"name": "AddressEmptyCode",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "AddressInsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "FailedInnerCall",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"errors": {
							"AddressEmptyCode(address)": [
								{
									"details": "There's no code at `target` (it is not a contract)."
								}
							],
							"AddressInsufficientBalance(address)": [
								{
									"details": "The ETH balance of the account is not enough to perform the operation."
								}
							],
							"FailedInnerCall()": [
								{
									"details": "A call to an address target failed. The target may have reverted."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Address.sol\":195:6261  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Address.sol\":195:6261  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220dc1ce83ea60e1b632553fae24c0f2ab7a9207d097799c8a0d5a58d7ccdb10b9164736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220dc1ce83ea60e1b632553fae24c0f2ab7a9207d097799c8a0d5a58d7ccdb10b9164736f6c63430008140033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDC SHR 0xE8 RETURNDATACOPY 0xA6 0xE SHL PUSH4 0x2553FAE2 0x4C 0xF 0x2A 0xB7 0xA9 KECCAK256 PUSH30 0x97799C8A0D5A58D7CCDB10B9164736F6C63430008140033000000000000 ",
							"sourceMap": "195:6066:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220dc1ce83ea60e1b632553fae24c0f2ab7a9207d097799c8a0d5a58d7ccdb10b9164736f6c63430008140033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDC SHR 0xE8 RETURNDATACOPY 0xA6 0xE SHL PUSH4 0x2553FAE2 0x4C 0xF 0x2A 0xB7 0xA9 KECCAK256 PUSH30 0x97799C8A0D5A58D7CCDB10B9164736F6C63430008140033000000000000 ",
							"sourceMap": "195:6066:1:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"_revert(bytes memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory)": "infinite",
								"verifyCallResultFromTarget(address,bool,bytes memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 1,
									"value": "B"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "BYTE",
									"source": 1
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "ADDRESS",
									"source": 1
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MSTORE8",
									"source": 1
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220dc1ce83ea60e1b632553fae24c0f2ab7a9207d097799c8a0d5a58d7ccdb10b9164736f6c63430008140033",
									".code": [
										{
											"begin": 195,
											"end": 6261,
											"name": "PUSHDEPLOYADDRESS",
											"source": 1
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "REVERT",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contracts/ERC721TokenContractName.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"AddressInsufficientBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"AddressInsufficientBalance(address)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"Strings": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "length",
									"type": "uint256"
								}
							],
							"name": "StringsInsufficientHexLength",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "String operations.",
						"errors": {
							"StringsInsufficientHexLength(uint256,uint256)": [
								{
									"details": "The `value` string doesn't fit in the specified `length`."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Strings.sol\":251:3098  library Strings {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":251:3098  library Strings {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212202f16324ec2eab48f4026b0a3390ff328f7839bb31295ad3f723794aa24ff365664736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212202f16324ec2eab48f4026b0a3390ff328f7839bb31295ad3f723794aa24ff365664736f6c63430008140033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2F AND ORIGIN 0x4E 0xC2 0xEA 0xB4 DUP16 BLOCKHASH 0x26 0xB0 LOG3 CODECOPY 0xF RETURN 0x28 0xF7 DUP4 SWAP12 0xB3 SLT SWAP6 0xAD EXTCODEHASH PUSH19 0x3794AA24FF365664736F6C6343000814003300 ",
							"sourceMap": "251:2847:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212202f16324ec2eab48f4026b0a3390ff328f7839bb31295ad3f723794aa24ff365664736f6c63430008140033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2F AND ORIGIN 0x4E 0xC2 0xEA 0xB4 DUP16 BLOCKHASH 0x26 0xB0 LOG3 CODECOPY 0xF RETURN 0x28 0xF7 DUP4 SWAP12 0xB3 SLT SWAP6 0xAD EXTCODEHASH PUSH19 0x3794AA24FF365664736F6C6343000814003300 ",
							"sourceMap": "251:2847:3:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"equal(string memory,string memory)": "infinite",
								"toHexString(address)": "infinite",
								"toHexString(uint256)": "infinite",
								"toHexString(uint256,uint256)": "infinite",
								"toString(uint256)": "infinite",
								"toStringSigned(int256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 3,
									"value": "B"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "BYTE",
									"source": 3
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "EQ",
									"source": 3
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 3,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 3,
									"value": "24"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "ADDRESS",
									"source": 3
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE8",
									"source": 3
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212202f16324ec2eab48f4026b0a3390ff328f7839bb31295ad3f723794aa24ff365664736f6c63430008140033",
									".code": [
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSHDEPLOYADDRESS",
											"source": 3
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "ADDRESS",
											"source": 3
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "REVERT",
											"source": 3
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contracts/ERC721TokenContractName.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"StringsInsufficientHexLength\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"String operations.\",\"errors\":{\"StringsInsufficientHexLength(uint256,uint256)\":[{\"details\":\"The `value` string doesn't fit in the specified `length`.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"Math": {
					"abi": [
						{
							"inputs": [],
							"name": "MathOverflowedMulDiv",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard math utilities missing in the Solidity language.",
						"errors": {
							"MathOverflowedMulDiv()": [
								{
									"details": "Muldiv operation overflow."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/Math.sol\":203:15117  library Math {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":203:15117  library Math {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212204a90bcf65ffb48e9c51d3503f33f51a10bd9a2c31b2d95cf873206fc780da2d364736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212204a90bcf65ffb48e9c51d3503f33f51a10bd9a2c31b2d95cf873206fc780da2d364736f6c63430008140033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4A SWAP1 0xBC 0xF6 PUSH0 0xFB BASEFEE 0xE9 0xC5 SAR CALLDATALOAD SUB RETURN EXTCODEHASH MLOAD LOG1 SIGNEXTEND 0xD9 LOG2 0xC3 SHL 0x2D SWAP6 0xCF DUP8 ORIGIN MOD 0xFC PUSH25 0xDA2D364736F6C634300081400330000000000000000000000 ",
							"sourceMap": "203:14914:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212204a90bcf65ffb48e9c51d3503f33f51a10bd9a2c31b2d95cf873206fc780da2d364736f6c63430008140033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4A SWAP1 0xBC 0xF6 PUSH0 0xFB BASEFEE 0xE9 0xC5 SAR CALLDATALOAD SUB RETURN EXTCODEHASH MLOAD LOG1 SIGNEXTEND 0xD9 LOG2 0xC3 SHL 0x2D SWAP6 0xCF DUP8 ORIGIN MOD 0xFC PUSH25 0xDA2D364736F6C634300081400330000000000000000000000 ",
							"sourceMap": "203:14914:4:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"average(uint256,uint256)": "infinite",
								"ceilDiv(uint256,uint256)": "infinite",
								"log10(uint256)": "infinite",
								"log10(uint256,enum Math.Rounding)": "infinite",
								"log2(uint256)": "infinite",
								"log2(uint256,enum Math.Rounding)": "infinite",
								"log256(uint256)": "infinite",
								"log256(uint256,enum Math.Rounding)": "infinite",
								"max(uint256,uint256)": "infinite",
								"min(uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256,enum Math.Rounding)": "infinite",
								"sqrt(uint256)": "infinite",
								"sqrt(uint256,enum Math.Rounding)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite",
								"unsignedRoundsUp(enum Math.Rounding)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 4,
									"value": "B"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "BYTE",
									"source": 4
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 4,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "ADDRESS",
									"source": 4
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE8",
									"source": 4
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212204a90bcf65ffb48e9c51d3503f33f51a10bd9a2c31b2d95cf873206fc780da2d364736f6c63430008140033",
									".code": [
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSHDEPLOYADDRESS",
											"source": 4
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "REVERT",
											"source": 4
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contracts/ERC721TokenContractName.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"MathOverflowedMulDiv\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"errors\":{\"MathOverflowedMulDiv()\":[{\"details\":\"Muldiv operation overflow.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"SignedMath": {
					"abi": [],
					"devdoc": {
						"details": "Standard signed math utilities missing in the Solidity language.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/SignedMath.sol\":216:1263  library SignedMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/SignedMath.sol\":216:1263  library SignedMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220044fef6072ee027e05d8404bd9cda4f0cf185bbbfa2c422bd29b8b68644a106364736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220044fef6072ee027e05d8404bd9cda4f0cf185bbbfa2c422bd29b8b68644a106364736f6c63430008140033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DIV 0x4F 0xEF PUSH1 0x72 0xEE MUL PUSH31 0x5D8404BD9CDA4F0CF185BBBFA2C422BD29B8B68644A106364736F6C634300 ADDMOD EQ STOP CALLER ",
							"sourceMap": "216:1047:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220044fef6072ee027e05d8404bd9cda4f0cf185bbbfa2c422bd29b8b68644a106364736f6c63430008140033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DIV 0x4F 0xEF PUSH1 0x72 0xEE MUL PUSH31 0x5D8404BD9CDA4F0CF185BBBFA2C422BD29B8B68644A106364736F6C634300 ADDMOD EQ STOP CALLER ",
							"sourceMap": "216:1047:5:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"abs(int256)": "infinite",
								"average(int256,int256)": "infinite",
								"max(int256,int256)": "infinite",
								"min(int256,int256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 5,
									"value": "B"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "BYTE",
									"source": 5
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 5,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "ADDRESS",
									"source": 5
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE8",
									"source": 5
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220044fef6072ee027e05d8404bd9cda4f0cf185bbbfa2c422bd29b8b68644a106364736f6c63430008140033",
									".code": [
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSHDEPLOYADDRESS",
											"source": 5
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "REVERT",
											"source": 5
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contracts/ERC721TokenContractName.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/ERC721TokenContractName.sol": {
				"ERC721TokenContractName": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes20",
									"name": "name_",
									"type": "bytes20"
								},
								{
									"internalType": "bytes10",
									"name": "symbol_",
									"type": "bytes10"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint16",
									"name": "tokenId",
									"type": "uint16"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint16",
									"name": "tokenId",
									"type": "uint16"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint16",
									"name": "",
									"type": "uint16"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint16",
									"name": "tokenId",
									"type": "uint16"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "bytes20",
									"name": "",
									"type": "bytes20"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint16",
									"name": "tokenId",
									"type": "uint16"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "bytes10",
									"name": "",
									"type": "bytes10"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint16",
									"name": "tokenId",
									"type": "uint16"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/ERC721TokenContractName.sol\":316:3753  contract ERC721TokenContractName is Context, IERC721Errors {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/ERC721TokenContractName.sol\":1202:1306  constructor(bytes20 name_, bytes10 symbol_) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/ERC721TokenContractName.sol\":1265:1270  name_ */\n  dup2\n    /* \"contracts/ERC721TokenContractName.sol\":1257:1262  _name */\n  0x00\n  dup1\n    /* \"contracts/ERC721TokenContractName.sol\":1257:1270  _name = name_ */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0x60\n  shr\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/ERC721TokenContractName.sol\":1291:1298  symbol_ */\n  dup1\n    /* \"contracts/ERC721TokenContractName.sol\":1281:1288  _symbol */\n  0x00\n  0x14\n    /* \"contracts/ERC721TokenContractName.sol\":1281:1298  _symbol = symbol_ */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xb0\n  shr\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/ERC721TokenContractName.sol\":1202:1306  constructor(bytes20 name_, bytes10 symbol_) {... */\n  pop\n  pop\n    /* \"contracts/ERC721TokenContractName.sol\":316:3753  contract ERC721TokenContractName is Context, IERC721Errors {... */\n  jump(tag_6)\n    /* \"#utility.yul\":88:205   */\ntag_8:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:484   */\ntag_10:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:477   */\n  0xffffffffffffffffffffffffffffffffffffffff000000000000000000000000\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:478   */\n  and\n    /* \"#utility.yul\":389:478   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:484   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":490:612   */\ntag_11:\n    /* \"#utility.yul\":563:587   */\n  tag_22\n    /* \"#utility.yul\":581:586   */\n  dup2\n    /* \"#utility.yul\":563:587   */\n  tag_10\n  jump\t// in\ntag_22:\n    /* \"#utility.yul\":556:561   */\n  dup2\n    /* \"#utility.yul\":553:588   */\n  eq\n    /* \"#utility.yul\":543:606   */\n  tag_23\n  jumpi\n    /* \"#utility.yul\":602:603   */\n  0x00\n    /* \"#utility.yul\":599:600   */\n  dup1\n    /* \"#utility.yul\":592:604   */\n  revert\n    /* \"#utility.yul\":543:606   */\ntag_23:\n    /* \"#utility.yul\":490:612   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":618:761   */\ntag_12:\n    /* \"#utility.yul\":675:680   */\n  0x00\n    /* \"#utility.yul\":706:712   */\n  dup2\n    /* \"#utility.yul\":700:713   */\n  mload\n    /* \"#utility.yul\":691:713   */\n  swap1\n  pop\n    /* \"#utility.yul\":722:755   */\n  tag_25\n    /* \"#utility.yul\":749:754   */\n  dup2\n    /* \"#utility.yul\":722:755   */\n  tag_11\n  jump\t// in\ntag_25:\n    /* \"#utility.yul\":618:761   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":767:917   */\ntag_13:\n    /* \"#utility.yul\":804:811   */\n  0x00\n    /* \"#utility.yul\":844:910   */\n  0xffffffffffffffffffff00000000000000000000000000000000000000000000\n    /* \"#utility.yul\":837:842   */\n  dup3\n    /* \"#utility.yul\":833:911   */\n  and\n    /* \"#utility.yul\":822:911   */\n  swap1\n  pop\n    /* \"#utility.yul\":767:917   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":923:1045   */\ntag_14:\n    /* \"#utility.yul\":996:1020   */\n  tag_28\n    /* \"#utility.yul\":1014:1019   */\n  dup2\n    /* \"#utility.yul\":996:1020   */\n  tag_13\n  jump\t// in\ntag_28:\n    /* \"#utility.yul\":989:994   */\n  dup2\n    /* \"#utility.yul\":986:1021   */\n  eq\n    /* \"#utility.yul\":976:1039   */\n  tag_29\n  jumpi\n    /* \"#utility.yul\":1035:1036   */\n  0x00\n    /* \"#utility.yul\":1032:1033   */\n  dup1\n    /* \"#utility.yul\":1025:1037   */\n  revert\n    /* \"#utility.yul\":976:1039   */\ntag_29:\n    /* \"#utility.yul\":923:1045   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1051:1194   */\ntag_15:\n    /* \"#utility.yul\":1108:1113   */\n  0x00\n    /* \"#utility.yul\":1139:1145   */\n  dup2\n    /* \"#utility.yul\":1133:1146   */\n  mload\n    /* \"#utility.yul\":1124:1146   */\n  swap1\n  pop\n    /* \"#utility.yul\":1155:1188   */\n  tag_31\n    /* \"#utility.yul\":1182:1187   */\n  dup2\n    /* \"#utility.yul\":1155:1188   */\n  tag_14\n  jump\t// in\ntag_31:\n    /* \"#utility.yul\":1051:1194   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1200:1707   */\ntag_3:\n    /* \"#utility.yul\":1279:1285   */\n  0x00\n    /* \"#utility.yul\":1287:1293   */\n  dup1\n    /* \"#utility.yul\":1336:1338   */\n  0x40\n    /* \"#utility.yul\":1324:1333   */\n  dup4\n    /* \"#utility.yul\":1315:1322   */\n  dup6\n    /* \"#utility.yul\":1311:1334   */\n  sub\n    /* \"#utility.yul\":1307:1339   */\n  slt\n    /* \"#utility.yul\":1304:1423   */\n  iszero\n  tag_33\n  jumpi\n    /* \"#utility.yul\":1342:1421   */\n  tag_34\n  tag_8\n  jump\t// in\ntag_34:\n    /* \"#utility.yul\":1304:1423   */\ntag_33:\n    /* \"#utility.yul\":1462:1463   */\n  0x00\n    /* \"#utility.yul\":1487:1551   */\n  tag_35\n    /* \"#utility.yul\":1543:1550   */\n  dup6\n    /* \"#utility.yul\":1534:1540   */\n  dup3\n    /* \"#utility.yul\":1523:1532   */\n  dup7\n    /* \"#utility.yul\":1519:1541   */\n  add\n    /* \"#utility.yul\":1487:1551   */\n  tag_12\n  jump\t// in\ntag_35:\n    /* \"#utility.yul\":1477:1551   */\n  swap3\n  pop\n    /* \"#utility.yul\":1433:1561   */\n  pop\n    /* \"#utility.yul\":1600:1602   */\n  0x20\n    /* \"#utility.yul\":1626:1690   */\n  tag_36\n    /* \"#utility.yul\":1682:1689   */\n  dup6\n    /* \"#utility.yul\":1673:1679   */\n  dup3\n    /* \"#utility.yul\":1662:1671   */\n  dup7\n    /* \"#utility.yul\":1658:1680   */\n  add\n    /* \"#utility.yul\":1626:1690   */\n  tag_15\n  jump\t// in\ntag_36:\n    /* \"#utility.yul\":1616:1690   */\n  swap2\n  pop\n    /* \"#utility.yul\":1571:1700   */\n  pop\n    /* \"#utility.yul\":1200:1707   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"contracts/ERC721TokenContractName.sol\":316:3753  contract ERC721TokenContractName is Context, IERC721Errors {... */\ntag_6:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/ERC721TokenContractName.sol\":316:3753  contract ERC721TokenContractName is Context, IERC721Errors {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x95d89b41\n      gt\n      tag_12\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xa22cb465\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xdd7d8440\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xe560ca43\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xe985e9c5\n      eq\n      tag_11\n      jumpi\n      jump(tag_2)\n    tag_12:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x82a7cf1e\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x93b871f2\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/ERC721TokenContractName.sol\":1316:1393  function name() public view returns (bytes20) {... */\n    tag_3:\n      tag_13\n      tag_14\n      jump\t// in\n    tag_13:\n      mload(0x40)\n      tag_15\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ERC721TokenContractName.sol\":1494:1683  function balanceOf(address owner) public view returns (uint16) {... */\n    tag_4:\n      tag_17\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_18\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_18:\n      tag_20\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      tag_21\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_21:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ERC721TokenContractName.sol\":1693:1804  function ownerOf(uint16 tokenId) public view returns (address) {... */\n    tag_5:\n      tag_23\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_24\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_24:\n      tag_26\n      jump\t// in\n    tag_23:\n      mload(0x40)\n      tag_27\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ERC721TokenContractName.sol\":2177:2337  function getApproved(uint16 tokenId) public view virtual returns (address) {... */\n    tag_6:\n      tag_29\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_30\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_30:\n      tag_31\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      tag_32\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ERC721TokenContractName.sol\":1403:1484  function symbol() public view returns (bytes10) {... */\n    tag_7:\n      tag_33\n      tag_34\n      jump\t// in\n    tag_33:\n      mload(0x40)\n      tag_35\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_35:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ERC721TokenContractName.sol\":2345:2769  function setApprovalForAll(address operator, bool approved) public {... */\n    tag_8:\n      tag_37\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_38\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_38:\n      tag_40\n      jump\t// in\n    tag_37:\n      stop\n        /* \"contracts/ERC721TokenContractName.sol\":1814:2054  function tokenURI(uint16 tokenId) public view returns (string memory) {... */\n    tag_9:\n      tag_41\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_42\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_42:\n      tag_43\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      tag_44\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ERC721TokenContractName.sol\":2064:2169  function approve(address to, uint16 tokenId) public {... */\n    tag_10:\n      tag_46\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_47\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_47:\n      tag_49\n      jump\t// in\n    tag_46:\n      stop\n        /* \"contracts/ERC721TokenContractName.sol\":2779:2926  function isApprovedForAll(address owner, address operator) public view returns (bool) {... */\n    tag_11:\n      tag_50\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_51\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n    tag_51:\n      tag_53\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      tag_54\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_54:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ERC721TokenContractName.sol\":1316:1393  function name() public view returns (bytes20) {... */\n    tag_14:\n        /* \"contracts/ERC721TokenContractName.sol\":1353:1360  bytes20 */\n      0x00\n        /* \"contracts/ERC721TokenContractName.sol\":1380:1385  _name */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0x60\n      shl\n        /* \"contracts/ERC721TokenContractName.sol\":1373:1385  return _name */\n      swap1\n      pop\n        /* \"contracts/ERC721TokenContractName.sol\":1316:1393  function name() public view returns (bytes20) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/ERC721TokenContractName.sol\":1494:1683  function balanceOf(address owner) public view returns (uint16) {... */\n    tag_20:\n        /* \"contracts/ERC721TokenContractName.sol\":1549:1555  uint16 */\n      0x00\n        /* \"contracts/ERC721TokenContractName.sol\":1593:1594  0 */\n      dup1\n        /* \"contracts/ERC721TokenContractName.sol\":1576:1595  owner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ERC721TokenContractName.sol\":1576:1581  owner */\n      dup3\n        /* \"contracts/ERC721TokenContractName.sol\":1576:1595  owner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/ERC721TokenContractName.sol\":1568:1631  require(owner != address(0),\"The input address cannot be zero\") */\n      tag_58\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_59\n      swap1\n      tag_60\n      jump\t// in\n    tag_59:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_58:\n        /* \"contracts/ERC721TokenContractName.sol\":1649:1665  _balanceAndTokId */\n      0x04b3\n        /* \"contracts/ERC721TokenContractName.sol\":1649:1672  _balanceAndTokId[owner] */\n      0x00\n        /* \"contracts/ERC721TokenContractName.sol\":1666:1671  owner */\n      dup4\n        /* \"contracts/ERC721TokenContractName.sol\":1649:1672  _balanceAndTokId[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/ERC721TokenContractName.sol\":1673:1674  0 */\n      0x00\n        /* \"contracts/ERC721TokenContractName.sol\":1649:1675  _balanceAndTokId[owner][0] */\n      0x04b1\n      dup2\n      lt\n      tag_61\n      jumpi\n      tag_62\n      tag_63\n      jump\t// in\n    tag_62:\n    tag_61:\n      0x10\n      swap2\n      dup3\n      dup3\n      div\n      add\n      swap2\n      swap1\n      mod\n      0x02\n      mul\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffff\n      and\n        /* \"contracts/ERC721TokenContractName.sol\":1642:1675  return _balanceAndTokId[owner][0] */\n      swap1\n      pop\n        /* \"contracts/ERC721TokenContractName.sol\":1494:1683  function balanceOf(address owner) public view returns (uint16) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/ERC721TokenContractName.sol\":1693:1804  function ownerOf(uint16 tokenId) public view returns (address) {... */\n    tag_26:\n        /* \"contracts/ERC721TokenContractName.sol\":1747:1754  address */\n      0x00\n        /* \"contracts/ERC721TokenContractName.sol\":1774:1796  _requireOwned(tokenId) */\n      tag_66\n        /* \"contracts/ERC721TokenContractName.sol\":1788:1795  tokenId */\n      dup3\n        /* \"contracts/ERC721TokenContractName.sol\":1774:1787  _requireOwned */\n      tag_67\n        /* \"contracts/ERC721TokenContractName.sol\":1774:1796  _requireOwned(tokenId) */\n      jump\t// in\n    tag_66:\n        /* \"contracts/ERC721TokenContractName.sol\":1767:1796  return _requireOwned(tokenId) */\n      swap1\n      pop\n        /* \"contracts/ERC721TokenContractName.sol\":1693:1804  function ownerOf(uint16 tokenId) public view returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/ERC721TokenContractName.sol\":2177:2337  function getApproved(uint16 tokenId) public view virtual returns (address) {... */\n    tag_31:\n        /* \"contracts/ERC721TokenContractName.sol\":2243:2250  address */\n      0x00\n        /* \"contracts/ERC721TokenContractName.sol\":2263:2285  _requireOwned(tokenId) */\n      tag_69\n        /* \"contracts/ERC721TokenContractName.sol\":2277:2284  tokenId */\n      dup3\n        /* \"contracts/ERC721TokenContractName.sol\":2263:2276  _requireOwned */\n      tag_67\n        /* \"contracts/ERC721TokenContractName.sol\":2263:2285  _requireOwned(tokenId) */\n      jump\t// in\n    tag_69:\n      pop\n        /* \"contracts/ERC721TokenContractName.sol\":2305:2320  _tokenApprovals */\n      0x04b4\n        /* \"contracts/ERC721TokenContractName.sol\":2305:2329  _tokenApprovals[tokenId] */\n      0x00\n        /* \"contracts/ERC721TokenContractName.sol\":2321:2328  tokenId */\n      dup4\n        /* \"contracts/ERC721TokenContractName.sol\":2305:2329  _tokenApprovals[tokenId] */\n      0xffff\n      and\n      0xffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ERC721TokenContractName.sol\":2298:2329  return _tokenApprovals[tokenId] */\n      swap1\n      pop\n        /* \"contracts/ERC721TokenContractName.sol\":2177:2337  function getApproved(uint16 tokenId) public view virtual returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/ERC721TokenContractName.sol\":1403:1484  function symbol() public view returns (bytes10) {... */\n    tag_34:\n        /* \"contracts/ERC721TokenContractName.sol\":1442:1449  bytes10 */\n      0x00\n        /* \"contracts/ERC721TokenContractName.sol\":1469:1476  _symbol */\n      dup1\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xb0\n      shl\n        /* \"contracts/ERC721TokenContractName.sol\":1462:1476  return _symbol */\n      swap1\n      pop\n        /* \"contracts/ERC721TokenContractName.sol\":1403:1484  function symbol() public view returns (bytes10) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/ERC721TokenContractName.sol\":2345:2769  function setApprovalForAll(address operator, bool approved) public {... */\n    tag_40:\n        /* \"contracts/ERC721TokenContractName.sol\":2447:2455  operator */\n      dup2\n        /* \"contracts/ERC721TokenContractName.sol\":2431:2455  _msgSender() != operator */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ERC721TokenContractName.sol\":2431:2443  _msgSender() */\n      tag_72\n        /* \"contracts/ERC721TokenContractName.sol\":2431:2441  _msgSender */\n      tag_73\n        /* \"contracts/ERC721TokenContractName.sol\":2431:2443  _msgSender() */\n      jump\t// in\n    tag_72:\n        /* \"contracts/ERC721TokenContractName.sol\":2431:2455  _msgSender() != operator */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/ERC721TokenContractName.sol\":2423:2519  require(_msgSender() != operator, \"The address of the owner and the operator must be different\") */\n      tag_74\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_75\n      swap1\n      tag_76\n      jump\t// in\n    tag_75:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_74:\n        /* \"contracts/ERC721TokenContractName.sol\":2554:2555  0 */\n      0x00\n        /* \"contracts/ERC721TokenContractName.sol\":2534:2556  operator == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ERC721TokenContractName.sol\":2534:2542  operator */\n      dup3\n        /* \"contracts/ERC721TokenContractName.sol\":2534:2556  operator == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/ERC721TokenContractName.sol\":2530:2623  if (operator == address(0)) {... */\n      tag_77\n      jumpi\n        /* \"contracts/ERC721TokenContractName.sol\":2602:2610  operator */\n      dup2\n        /* \"contracts/ERC721TokenContractName.sol\":2580:2611  ERC721InvalidOperator(operator) */\n      mload(0x40)\n      0x5b08ba1800000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_78\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_78:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/ERC721TokenContractName.sol\":2530:2623  if (operator == address(0)) {... */\n    tag_77:\n        /* \"contracts/ERC721TokenContractName.sol\":2688:2696  approved */\n      dup1\n        /* \"contracts/ERC721TokenContractName.sol\":2643:2661  _operatorApprovals */\n      0x04b5\n        /* \"contracts/ERC721TokenContractName.sol\":2643:2675  _operatorApprovals[_msgSender()] */\n      0x00\n        /* \"contracts/ERC721TokenContractName.sol\":2662:2674  _msgSender() */\n      tag_79\n        /* \"contracts/ERC721TokenContractName.sol\":2662:2672  _msgSender */\n      tag_73\n        /* \"contracts/ERC721TokenContractName.sol\":2662:2674  _msgSender() */\n      jump\t// in\n    tag_79:\n        /* \"contracts/ERC721TokenContractName.sol\":2643:2675  _operatorApprovals[_msgSender()] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/ERC721TokenContractName.sol\":2643:2685  _operatorApprovals[_msgSender()][operator] */\n      0x00\n        /* \"contracts/ERC721TokenContractName.sol\":2676:2684  operator */\n      dup5\n        /* \"contracts/ERC721TokenContractName.sol\":2643:2685  _operatorApprovals[_msgSender()][operator] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/ERC721TokenContractName.sol\":2643:2696  _operatorApprovals[_msgSender()][operator] = approved */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/ERC721TokenContractName.sol\":2742:2750  operator */\n      dup2\n        /* \"contracts/ERC721TokenContractName.sol\":2713:2761  ApprovalForAll(_msgSender(), operator, approved) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ERC721TokenContractName.sol\":2728:2740  _msgSender() */\n      tag_80\n        /* \"contracts/ERC721TokenContractName.sol\":2728:2738  _msgSender */\n      tag_73\n        /* \"contracts/ERC721TokenContractName.sol\":2728:2740  _msgSender() */\n      jump\t// in\n    tag_80:\n        /* \"contracts/ERC721TokenContractName.sol\":2713:2761  ApprovalForAll(_msgSender(), operator, approved) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31\n        /* \"contracts/ERC721TokenContractName.sol\":2752:2760  approved */\n      dup4\n        /* \"contracts/ERC721TokenContractName.sol\":2713:2761  ApprovalForAll(_msgSender(), operator, approved) */\n      mload(0x40)\n      tag_81\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_81:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/ERC721TokenContractName.sol\":2345:2769  function setApprovalForAll(address operator, bool approved) public {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC721TokenContractName.sol\":1814:2054  function tokenURI(uint16 tokenId) public view returns (string memory) {... */\n    tag_43:\n        /* \"contracts/ERC721TokenContractName.sol\":1869:1882  string memory */\n      0x60\n        /* \"contracts/ERC721TokenContractName.sol\":1895:1917  _requireOwned(tokenId) */\n      tag_83\n        /* \"contracts/ERC721TokenContractName.sol\":1909:1916  tokenId */\n      dup3\n        /* \"contracts/ERC721TokenContractName.sol\":1895:1908  _requireOwned */\n      tag_67\n        /* \"contracts/ERC721TokenContractName.sol\":1895:1917  _requireOwned(tokenId) */\n      jump\t// in\n    tag_83:\n      pop\n        /* \"contracts/ERC721TokenContractName.sol\":1928:1946  string memory base */\n      0x00\n        /* \"contracts/ERC721TokenContractName.sol\":1949:1959  _baseURI() */\n      tag_84\n        /* \"contracts/ERC721TokenContractName.sol\":1949:1957  _baseURI */\n      tag_85\n        /* \"contracts/ERC721TokenContractName.sol\":1949:1959  _baseURI() */\n      jump\t// in\n    tag_84:\n        /* \"contracts/ERC721TokenContractName.sol\":1928:1959  string memory base = _baseURI() */\n      swap1\n      pop\n        /* \"contracts/ERC721TokenContractName.sol\":1998:1999  0 */\n      0x00\n        /* \"contracts/ERC721TokenContractName.sol\":1983:1987  base */\n      dup2\n        /* \"contracts/ERC721TokenContractName.sol\":1977:1995  bytes(base).length */\n      mload\n        /* \"contracts/ERC721TokenContractName.sol\":1977:1999  bytes(base).length > 0 */\n      gt\n        /* \"contracts/ERC721TokenContractName.sol\":1977:2046  bytes(base).length > 0 ? string.concat(base, tokenId.toString()) : \"\" */\n      tag_86\n      jumpi\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n      jump(tag_87)\n    tag_86:\n        /* \"contracts/ERC721TokenContractName.sol\":2016:2020  base */\n      dup1\n        /* \"contracts/ERC721TokenContractName.sol\":2022:2040  tokenId.toString() */\n      tag_88\n        /* \"contracts/ERC721TokenContractName.sol\":2022:2029  tokenId */\n      dup5\n        /* \"contracts/ERC721TokenContractName.sol\":2022:2038  tokenId.toString */\n      0xffff\n      and\n      tag_89\n        /* \"contracts/ERC721TokenContractName.sol\":2022:2040  tokenId.toString() */\n      jump\t// in\n    tag_88:\n        /* \"contracts/ERC721TokenContractName.sol\":2002:2041  string.concat(base, tokenId.toString()) */\n      add(0x20, mload(0x40))\n      tag_90\n      swap3\n      swap2\n      swap1\n      tag_91\n      jump\t// in\n    tag_90:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"contracts/ERC721TokenContractName.sol\":1977:2046  bytes(base).length > 0 ? string.concat(base, tokenId.toString()) : \"\" */\n    tag_87:\n        /* \"contracts/ERC721TokenContractName.sol\":1970:2046  return bytes(base).length > 0 ? string.concat(base, tokenId.toString()) : \"\" */\n      swap2\n      pop\n      pop\n        /* \"contracts/ERC721TokenContractName.sol\":1814:2054  function tokenURI(uint16 tokenId) public view returns (string memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/ERC721TokenContractName.sol\":2064:2169  function approve(address to, uint16 tokenId) public {... */\n    tag_49:\n        /* \"contracts/ERC721TokenContractName.sol\":2127:2161  _aprove(to, tokenId, _msgSender()) */\n      tag_93\n        /* \"contracts/ERC721TokenContractName.sol\":2135:2137  to */\n      dup3\n        /* \"contracts/ERC721TokenContractName.sol\":2139:2146  tokenId */\n      dup3\n        /* \"contracts/ERC721TokenContractName.sol\":2148:2160  _msgSender() */\n      tag_94\n        /* \"contracts/ERC721TokenContractName.sol\":2148:2158  _msgSender */\n      tag_73\n        /* \"contracts/ERC721TokenContractName.sol\":2148:2160  _msgSender() */\n      jump\t// in\n    tag_94:\n        /* \"contracts/ERC721TokenContractName.sol\":2127:2134  _aprove */\n      tag_95\n        /* \"contracts/ERC721TokenContractName.sol\":2127:2161  _aprove(to, tokenId, _msgSender()) */\n      jump\t// in\n    tag_93:\n        /* \"contracts/ERC721TokenContractName.sol\":2064:2169  function approve(address to, uint16 tokenId) public {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC721TokenContractName.sol\":2779:2926  function isApprovedForAll(address owner, address operator) public view returns (bool) {... */\n    tag_53:\n        /* \"contracts/ERC721TokenContractName.sol\":2859:2863  bool */\n      0x00\n        /* \"contracts/ERC721TokenContractName.sol\":2883:2901  _operatorApprovals */\n      0x04b5\n        /* \"contracts/ERC721TokenContractName.sol\":2883:2908  _operatorApprovals[owner] */\n      0x00\n        /* \"contracts/ERC721TokenContractName.sol\":2902:2907  owner */\n      dup5\n        /* \"contracts/ERC721TokenContractName.sol\":2883:2908  _operatorApprovals[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/ERC721TokenContractName.sol\":2883:2918  _operatorApprovals[owner][operator] */\n      0x00\n        /* \"contracts/ERC721TokenContractName.sol\":2909:2917  operator */\n      dup4\n        /* \"contracts/ERC721TokenContractName.sol\":2883:2918  _operatorApprovals[owner][operator] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/ERC721TokenContractName.sol\":2876:2918  return _operatorApprovals[owner][operator] */\n      swap1\n      pop\n        /* \"contracts/ERC721TokenContractName.sol\":2779:2926  function isApprovedForAll(address owner, address operator) public view returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC721TokenContractName.sol\":3380:3644  function _requireOwned(uint16 tokenId) internal view returns (address) {... */\n    tag_67:\n        /* \"contracts/ERC721TokenContractName.sol\":3442:3449  address */\n      0x00\n        /* \"contracts/ERC721TokenContractName.sol\":3474:3481  tokenId */\n      dup2\n        /* \"contracts/ERC721TokenContractName.sol\":3470:3481  0 < tokenId */\n      0xffff\n      and\n        /* \"contracts/ERC721TokenContractName.sol\":3470:3471  0 */\n      0x00\n        /* \"contracts/ERC721TokenContractName.sol\":3470:3481  0 < tokenId */\n      lt\n        /* \"contracts/ERC721TokenContractName.sol\":3470:3517  0 < tokenId && tokenId <= tokInfo.currentTokens */\n      dup1\n      iszero\n      tag_98\n      jumpi\n      pop\n        /* \"contracts/ERC721TokenContractName.sol\":3496:3503  tokInfo */\n      0x01\n        /* \"contracts/ERC721TokenContractName.sol\":3496:3517  tokInfo.currentTokens */\n      0x00\n      add\n      0x02\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffff\n      and\n        /* \"contracts/ERC721TokenContractName.sol\":3485:3517  tokenId <= tokInfo.currentTokens */\n      0xffff\n      and\n        /* \"contracts/ERC721TokenContractName.sol\":3485:3492  tokenId */\n      dup3\n        /* \"contracts/ERC721TokenContractName.sol\":3485:3517  tokenId <= tokInfo.currentTokens */\n      0xffff\n      and\n      gt\n      iszero\n        /* \"contracts/ERC721TokenContractName.sol\":3470:3517  0 < tokenId && tokenId <= tokInfo.currentTokens */\n    tag_98:\n        /* \"contracts/ERC721TokenContractName.sol\":3462:3601  require(0 < tokenId && tokenId <= tokInfo.currentTokens, \"The ID entered is invalid. It must be in this interval 0 < id <= current tokens\") */\n      tag_99\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_100\n      swap1\n      tag_101\n      jump\t// in\n    tag_100:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_99:\n        /* \"contracts/ERC721TokenContractName.sol\":3620:3627  _owners */\n      0x02\n        /* \"contracts/ERC721TokenContractName.sol\":3628:3635  tokenId */\n      dup3\n        /* \"contracts/ERC721TokenContractName.sol\":3620:3636  _owners[tokenId] */\n      0xffff\n      and\n      0x04b1\n      dup2\n      lt\n      tag_102\n      jumpi\n      tag_103\n      tag_63\n      jump\t// in\n    tag_103:\n    tag_102:\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ERC721TokenContractName.sol\":3613:3636  return _owners[tokenId] */\n      swap1\n      pop\n        /* \"contracts/ERC721TokenContractName.sol\":3380:3644  function _requireOwned(uint16 tokenId) internal view returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_73:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/ERC721TokenContractName.sol\":3654:3740  function _baseURI() internal pure returns (string memory) {... */\n    tag_85:\n        /* \"contracts/ERC721TokenContractName.sol\":3697:3710  string memory */\n      0x60\n        /* \"contracts/ERC721TokenContractName.sol\":3723:3732  return \"\" */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n      swap1\n      pop\n        /* \"contracts/ERC721TokenContractName.sol\":3654:3740  function _baseURI() internal pure returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":637:1335  function toString(uint256 value) internal pure returns (string memory) {... */\n    tag_89:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":693:706  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":742:756  uint256 length */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":779:780  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":759:776  Math.log10(value) */\n      tag_108\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":770:775  value */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":759:769  Math.log10 */\n      tag_109\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":759:776  Math.log10(value) */\n      jump\t// in\n    tag_108:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":759:780  Math.log10(value) + 1 */\n      add\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":742:780  uint256 length = Math.log10(value) + 1 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":794:814  string memory buffer */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":828:834  length */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":817:835  new string(length) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_110\n      jumpi\n      tag_111\n      tag_112\n      jump\t// in\n    tag_111:\n    tag_110:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x1f\n      add\n      not(0x1f)\n      and\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_113\n      jumpi\n      dup2\n      0x20\n      add\n      0x01\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      dup1\n      dup3\n      add\n      swap2\n      pop\n      pop\n      swap1\n      pop\n    tag_113:\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":794:835  string memory buffer = new string(length) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":849:860  uint256 ptr */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":975:981  length */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":971:973  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":967:982  add(32, length) */\n      add\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":959:965  buffer */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":955:983  add(buffer, add(32, length)) */\n      add\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":948:983  ptr := add(buffer, add(32, length)) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1010:1292  while (true) {... */\n    tag_114:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1017:1021  true */\n      0x01\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1010:1292  while (true) {... */\n      iszero\n      tag_115\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1041:1046  ptr-- */\n      dup1\n      dup1\n      0x01\n      swap1\n      sub\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1180:1190  HEX_DIGITS */\n      0x3031323334353637383961626364656600000000000000000000000000000000\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1175:1177  10 */\n      0x0a\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1168:1173  value */\n      dup7\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1164:1178  mod(value, 10) */\n      mod\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1159:1191  byte(mod(value, 10), HEX_DIGITS) */\n      byte\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1154:1157  ptr */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1146:1192  mstore8(ptr, byte(mod(value, 10), HEX_DIGITS)) */\n      mstore8\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1236:1238  10 */\n      0x0a\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1227:1238  value /= 10 */\n      dup6\n      dup2\n      tag_116\n      jumpi\n      tag_117\n      tag_118\n      jump\t// in\n    tag_117:\n    tag_116:\n      div\n      swap5\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1269:1270  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1260:1265  value */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1260:1270  value == 0 */\n      sub\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1010:1292  while (true) {... */\n      tag_114\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1256:1277  if (value == 0) break */\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1010:1292  while (true) {... */\n    tag_115:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1312:1318  buffer */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1305:1318  return buffer */\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":637:1335  function toString(uint256 value) internal pure returns (string memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/ERC721TokenContractName.sol\":2940:3362  function _aprove(address to, uint16 tokenId, address auth) internal {... */\n    tag_95:\n        /* \"contracts/ERC721TokenContractName.sol\":3019:3032  address owner */\n      0x00\n        /* \"contracts/ERC721TokenContractName.sol\":3035:3057  _requireOwned(tokenId) */\n      tag_121\n        /* \"contracts/ERC721TokenContractName.sol\":3049:3056  tokenId */\n      dup4\n        /* \"contracts/ERC721TokenContractName.sol\":3035:3048  _requireOwned */\n      tag_67\n        /* \"contracts/ERC721TokenContractName.sol\":3035:3057  _requireOwned(tokenId) */\n      jump\t// in\n    tag_121:\n        /* \"contracts/ERC721TokenContractName.sol\":3019:3057  address owner = _requireOwned(tokenId) */\n      swap1\n      pop\n        /* \"contracts/ERC721TokenContractName.sol\":3085:3087  to */\n      dup4\n        /* \"contracts/ERC721TokenContractName.sol\":3076:3087  owner != to */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ERC721TokenContractName.sol\":3076:3081  owner */\n      dup2\n        /* \"contracts/ERC721TokenContractName.sol\":3076:3087  owner != to */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/ERC721TokenContractName.sol\":3068:3151  require(owner != to, \"The address of the owner and the operator must be different\") */\n      tag_122\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_123\n      swap1\n      tag_76\n      jump\t// in\n    tag_123:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_122:\n        /* \"contracts/ERC721TokenContractName.sol\":3174:3178  auth */\n      dup2\n        /* \"contracts/ERC721TokenContractName.sol\":3165:3178  owner != auth */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ERC721TokenContractName.sol\":3165:3170  owner */\n      dup2\n        /* \"contracts/ERC721TokenContractName.sol\":3165:3178  owner != auth */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/ERC721TokenContractName.sol\":3165:3212  owner != auth && !isApprovedForAll(owner, auth) */\n      dup1\n      iszero\n      tag_124\n      jumpi\n      pop\n        /* \"contracts/ERC721TokenContractName.sol\":3183:3212  isApprovedForAll(owner, auth) */\n      tag_125\n        /* \"contracts/ERC721TokenContractName.sol\":3200:3205  owner */\n      dup2\n        /* \"contracts/ERC721TokenContractName.sol\":3207:3211  auth */\n      dup4\n        /* \"contracts/ERC721TokenContractName.sol\":3183:3199  isApprovedForAll */\n      tag_53\n        /* \"contracts/ERC721TokenContractName.sol\":3183:3212  isApprovedForAll(owner, auth) */\n      jump\t// in\n    tag_125:\n        /* \"contracts/ERC721TokenContractName.sol\":3182:3212  !isApprovedForAll(owner, auth) */\n      iszero\n        /* \"contracts/ERC721TokenContractName.sol\":3165:3212  owner != auth && !isApprovedForAll(owner, auth) */\n    tag_124:\n        /* \"contracts/ERC721TokenContractName.sol\":3161:3269  if (owner != auth && !isApprovedForAll(owner, auth)){... */\n      iszero\n      tag_126\n      jumpi\n        /* \"contracts/ERC721TokenContractName.sol\":3253:3257  auth */\n      dup2\n        /* \"contracts/ERC721TokenContractName.sol\":3231:3258  ERC721InvalidApprover(auth) */\n      mload(0x40)\n      0xa9fbf51f00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_127\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_127:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/ERC721TokenContractName.sol\":3161:3269  if (owner != auth && !isApprovedForAll(owner, auth)){... */\n    tag_126:\n        /* \"contracts/ERC721TokenContractName.sol\":3308:3310  to */\n      dup4\n        /* \"contracts/ERC721TokenContractName.sol\":3281:3296  _tokenApprovals */\n      0x04b4\n        /* \"contracts/ERC721TokenContractName.sol\":3281:3305  _tokenApprovals[tokenId] */\n      0x00\n        /* \"contracts/ERC721TokenContractName.sol\":3297:3304  tokenId */\n      dup6\n        /* \"contracts/ERC721TokenContractName.sol\":3281:3305  _tokenApprovals[tokenId] */\n      0xffff\n      and\n      0xffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/ERC721TokenContractName.sol\":3281:3310  _tokenApprovals[tokenId] = to */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/ERC721TokenContractName.sol\":3346:3353  tokenId */\n      dup3\n        /* \"contracts/ERC721TokenContractName.sol\":3326:3354  Approval(owner, to, tokenId) */\n      0xffff\n      and\n        /* \"contracts/ERC721TokenContractName.sol\":3342:3344  to */\n      dup5\n        /* \"contracts/ERC721TokenContractName.sol\":3326:3354  Approval(owner, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ERC721TokenContractName.sol\":3335:3340  owner */\n      dup3\n        /* \"contracts/ERC721TokenContractName.sol\":3326:3354  Approval(owner, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x0a9d294fd4bd42bb30e96cba2b478d149a783fba3c729b1e5c42bec89d95b85a\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"contracts/ERC721TokenContractName.sol\":3008:3362  {... */\n      pop\n        /* \"contracts/ERC721TokenContractName.sol\":2940:3362  function _aprove(address to, uint16 tokenId, address auth) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12214:13130  function log10(uint256 value) internal pure returns (uint256) {... */\n    tag_109:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12267:12274  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12286:12300  uint256 result */\n      dup1\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12303:12304  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12286:12304  uint256 result = 0 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12351:12359  10 ** 64 */\n      0x184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12342:12347  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12342:12359  value >= 10 ** 64 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12338:12441  if (value >= 10 ** 64) {... */\n      tag_129\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12388:12396  10 ** 64 */\n      0x184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12379:12396  value /= 10 ** 64 */\n      dup4\n      dup2\n      tag_130\n      jumpi\n      tag_131\n      tag_118\n      jump\t// in\n    tag_131:\n    tag_130:\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12424:12426  64 */\n      0x40\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12414:12426  result += 64 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12338:12441  if (value >= 10 ** 64) {... */\n    tag_129:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12467:12475  10 ** 32 */\n      0x04ee2d6d415b85acef8100000000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12458:12463  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12458:12475  value >= 10 ** 32 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12454:12557  if (value >= 10 ** 32) {... */\n      tag_132\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12504:12512  10 ** 32 */\n      0x04ee2d6d415b85acef8100000000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12495:12512  value /= 10 ** 32 */\n      dup4\n      dup2\n      tag_133\n      jumpi\n      tag_134\n      tag_118\n      jump\t// in\n    tag_134:\n    tag_133:\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12540:12542  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12530:12542  result += 32 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12454:12557  if (value >= 10 ** 32) {... */\n    tag_132:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12583:12591  10 ** 16 */\n      0x2386f26fc10000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12574:12579  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12574:12591  value >= 10 ** 16 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12570:12673  if (value >= 10 ** 16) {... */\n      tag_135\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12620:12628  10 ** 16 */\n      0x2386f26fc10000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12611:12628  value /= 10 ** 16 */\n      dup4\n      dup2\n      tag_136\n      jumpi\n      tag_137\n      tag_118\n      jump\t// in\n    tag_137:\n    tag_136:\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12656:12658  16 */\n      0x10\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12646:12658  result += 16 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12570:12673  if (value >= 10 ** 16) {... */\n    tag_135:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12699:12706  10 ** 8 */\n      0x05f5e100\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12690:12695  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12690:12706  value >= 10 ** 8 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12686:12786  if (value >= 10 ** 8) {... */\n      tag_138\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12735:12742  10 ** 8 */\n      0x05f5e100\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12726:12742  value /= 10 ** 8 */\n      dup4\n      dup2\n      tag_139\n      jumpi\n      tag_140\n      tag_118\n      jump\t// in\n    tag_140:\n    tag_139:\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12770:12771  8 */\n      0x08\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12760:12771  result += 8 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12686:12786  if (value >= 10 ** 8) {... */\n    tag_138:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12812:12819  10 ** 4 */\n      0x2710\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12803:12808  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12803:12819  value >= 10 ** 4 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12799:12899  if (value >= 10 ** 4) {... */\n      tag_141\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12848:12855  10 ** 4 */\n      0x2710\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12839:12855  value /= 10 ** 4 */\n      dup4\n      dup2\n      tag_142\n      jumpi\n      tag_143\n      tag_118\n      jump\t// in\n    tag_143:\n    tag_142:\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12883:12884  4 */\n      0x04\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12873:12884  result += 4 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12799:12899  if (value >= 10 ** 4) {... */\n    tag_141:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12925:12932  10 ** 2 */\n      0x64\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12916:12921  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12916:12932  value >= 10 ** 2 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12912:13012  if (value >= 10 ** 2) {... */\n      tag_144\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12961:12968  10 ** 2 */\n      0x64\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12952:12968  value /= 10 ** 2 */\n      dup4\n      dup2\n      tag_145\n      jumpi\n      tag_146\n      tag_118\n      jump\t// in\n    tag_146:\n    tag_145:\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12996:12997  2 */\n      0x02\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12986:12997  result += 2 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12912:13012  if (value >= 10 ** 2) {... */\n    tag_144:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13038:13045  10 ** 1 */\n      0x0a\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13029:13034  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13029:13045  value >= 10 ** 1 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13025:13091  if (value >= 10 ** 1) {... */\n      tag_147\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13075:13076  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13065:13076  result += 1 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13025:13091  if (value >= 10 ** 1) {... */\n    tag_147:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13117:13123  result */\n      dup1\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13110:13123  return result */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12214:13130  function log10(uint256 value) internal pure returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:157   */\n    tag_148:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":84:150   */\n      0xffffffffffffffffffffffffffffffffffffffff000000000000000000000000\n        /* \"#utility.yul\":77:82   */\n      dup3\n        /* \"#utility.yul\":73:151   */\n      and\n        /* \"#utility.yul\":62:151   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:157   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":163:281   */\n    tag_149:\n        /* \"#utility.yul\":250:274   */\n      tag_184\n        /* \"#utility.yul\":268:273   */\n      dup2\n        /* \"#utility.yul\":250:274   */\n      tag_148\n      jump\t// in\n    tag_184:\n        /* \"#utility.yul\":245:248   */\n      dup3\n        /* \"#utility.yul\":238:275   */\n      mstore\n        /* \"#utility.yul\":163:281   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":287:509   */\n    tag_16:\n        /* \"#utility.yul\":380:384   */\n      0x00\n        /* \"#utility.yul\":418:420   */\n      0x20\n        /* \"#utility.yul\":407:416   */\n      dup3\n        /* \"#utility.yul\":403:421   */\n      add\n        /* \"#utility.yul\":395:421   */\n      swap1\n      pop\n        /* \"#utility.yul\":431:502   */\n      tag_186\n        /* \"#utility.yul\":499:500   */\n      0x00\n        /* \"#utility.yul\":488:497   */\n      dup4\n        /* \"#utility.yul\":484:501   */\n      add\n        /* \"#utility.yul\":475:481   */\n      dup5\n        /* \"#utility.yul\":431:502   */\n      tag_149\n      jump\t// in\n    tag_186:\n        /* \"#utility.yul\":287:509   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":596:713   */\n    tag_151:\n        /* \"#utility.yul\":705:706   */\n      0x00\n        /* \"#utility.yul\":702:703   */\n      dup1\n        /* \"#utility.yul\":695:707   */\n      revert\n        /* \"#utility.yul\":842:968   */\n    tag_153:\n        /* \"#utility.yul\":879:886   */\n      0x00\n        /* \"#utility.yul\":919:961   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":912:917   */\n      dup3\n        /* \"#utility.yul\":908:962   */\n      and\n        /* \"#utility.yul\":897:962   */\n      swap1\n      pop\n        /* \"#utility.yul\":842:968   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":974:1070   */\n    tag_154:\n        /* \"#utility.yul\":1011:1018   */\n      0x00\n        /* \"#utility.yul\":1040:1064   */\n      tag_192\n        /* \"#utility.yul\":1058:1063   */\n      dup3\n        /* \"#utility.yul\":1040:1064   */\n      tag_153\n      jump\t// in\n    tag_192:\n        /* \"#utility.yul\":1029:1064   */\n      swap1\n      pop\n        /* \"#utility.yul\":974:1070   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1076:1198   */\n    tag_155:\n        /* \"#utility.yul\":1149:1173   */\n      tag_194\n        /* \"#utility.yul\":1167:1172   */\n      dup2\n        /* \"#utility.yul\":1149:1173   */\n      tag_154\n      jump\t// in\n    tag_194:\n        /* \"#utility.yul\":1142:1147   */\n      dup2\n        /* \"#utility.yul\":1139:1174   */\n      eq\n        /* \"#utility.yul\":1129:1192   */\n      tag_195\n      jumpi\n        /* \"#utility.yul\":1188:1189   */\n      0x00\n        /* \"#utility.yul\":1185:1186   */\n      dup1\n        /* \"#utility.yul\":1178:1190   */\n      revert\n        /* \"#utility.yul\":1129:1192   */\n    tag_195:\n        /* \"#utility.yul\":1076:1198   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1204:1343   */\n    tag_156:\n        /* \"#utility.yul\":1250:1255   */\n      0x00\n        /* \"#utility.yul\":1288:1294   */\n      dup2\n        /* \"#utility.yul\":1275:1295   */\n      calldataload\n        /* \"#utility.yul\":1266:1295   */\n      swap1\n      pop\n        /* \"#utility.yul\":1304:1337   */\n      tag_197\n        /* \"#utility.yul\":1331:1336   */\n      dup2\n        /* \"#utility.yul\":1304:1337   */\n      tag_155\n      jump\t// in\n    tag_197:\n        /* \"#utility.yul\":1204:1343   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1349:1678   */\n    tag_19:\n        /* \"#utility.yul\":1408:1414   */\n      0x00\n        /* \"#utility.yul\":1457:1459   */\n      0x20\n        /* \"#utility.yul\":1445:1454   */\n      dup3\n        /* \"#utility.yul\":1436:1443   */\n      dup5\n        /* \"#utility.yul\":1432:1455   */\n      sub\n        /* \"#utility.yul\":1428:1460   */\n      slt\n        /* \"#utility.yul\":1425:1544   */\n      iszero\n      tag_199\n      jumpi\n        /* \"#utility.yul\":1463:1542   */\n      tag_200\n      tag_151\n      jump\t// in\n    tag_200:\n        /* \"#utility.yul\":1425:1544   */\n    tag_199:\n        /* \"#utility.yul\":1583:1584   */\n      0x00\n        /* \"#utility.yul\":1608:1661   */\n      tag_201\n        /* \"#utility.yul\":1653:1660   */\n      dup5\n        /* \"#utility.yul\":1644:1650   */\n      dup3\n        /* \"#utility.yul\":1633:1642   */\n      dup6\n        /* \"#utility.yul\":1629:1651   */\n      add\n        /* \"#utility.yul\":1608:1661   */\n      tag_156\n      jump\t// in\n    tag_201:\n        /* \"#utility.yul\":1598:1661   */\n      swap2\n      pop\n        /* \"#utility.yul\":1554:1671   */\n      pop\n        /* \"#utility.yul\":1349:1678   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1684:1773   */\n    tag_157:\n        /* \"#utility.yul\":1720:1727   */\n      0x00\n        /* \"#utility.yul\":1760:1766   */\n      0xffff\n        /* \"#utility.yul\":1753:1758   */\n      dup3\n        /* \"#utility.yul\":1749:1767   */\n      and\n        /* \"#utility.yul\":1738:1767   */\n      swap1\n      pop\n        /* \"#utility.yul\":1684:1773   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1779:1894   */\n    tag_158:\n        /* \"#utility.yul\":1864:1887   */\n      tag_204\n        /* \"#utility.yul\":1881:1886   */\n      dup2\n        /* \"#utility.yul\":1864:1887   */\n      tag_157\n      jump\t// in\n    tag_204:\n        /* \"#utility.yul\":1859:1862   */\n      dup3\n        /* \"#utility.yul\":1852:1888   */\n      mstore\n        /* \"#utility.yul\":1779:1894   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1900:2118   */\n    tag_22:\n        /* \"#utility.yul\":1991:1995   */\n      0x00\n        /* \"#utility.yul\":2029:2031   */\n      0x20\n        /* \"#utility.yul\":2018:2027   */\n      dup3\n        /* \"#utility.yul\":2014:2032   */\n      add\n        /* \"#utility.yul\":2006:2032   */\n      swap1\n      pop\n        /* \"#utility.yul\":2042:2111   */\n      tag_206\n        /* \"#utility.yul\":2108:2109   */\n      0x00\n        /* \"#utility.yul\":2097:2106   */\n      dup4\n        /* \"#utility.yul\":2093:2110   */\n      add\n        /* \"#utility.yul\":2084:2090   */\n      dup5\n        /* \"#utility.yul\":2042:2111   */\n      tag_158\n      jump\t// in\n    tag_206:\n        /* \"#utility.yul\":1900:2118   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2124:2244   */\n    tag_159:\n        /* \"#utility.yul\":2196:2219   */\n      tag_208\n        /* \"#utility.yul\":2213:2218   */\n      dup2\n        /* \"#utility.yul\":2196:2219   */\n      tag_157\n      jump\t// in\n    tag_208:\n        /* \"#utility.yul\":2189:2194   */\n      dup2\n        /* \"#utility.yul\":2186:2220   */\n      eq\n        /* \"#utility.yul\":2176:2238   */\n      tag_209\n      jumpi\n        /* \"#utility.yul\":2234:2235   */\n      0x00\n        /* \"#utility.yul\":2231:2232   */\n      dup1\n        /* \"#utility.yul\":2224:2236   */\n      revert\n        /* \"#utility.yul\":2176:2238   */\n    tag_209:\n        /* \"#utility.yul\":2124:2244   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2250:2387   */\n    tag_160:\n        /* \"#utility.yul\":2295:2300   */\n      0x00\n        /* \"#utility.yul\":2333:2339   */\n      dup2\n        /* \"#utility.yul\":2320:2340   */\n      calldataload\n        /* \"#utility.yul\":2311:2340   */\n      swap1\n      pop\n        /* \"#utility.yul\":2349:2381   */\n      tag_211\n        /* \"#utility.yul\":2375:2380   */\n      dup2\n        /* \"#utility.yul\":2349:2381   */\n      tag_159\n      jump\t// in\n    tag_211:\n        /* \"#utility.yul\":2250:2387   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2393:2720   */\n    tag_25:\n        /* \"#utility.yul\":2451:2457   */\n      0x00\n        /* \"#utility.yul\":2500:2502   */\n      0x20\n        /* \"#utility.yul\":2488:2497   */\n      dup3\n        /* \"#utility.yul\":2479:2486   */\n      dup5\n        /* \"#utility.yul\":2475:2498   */\n      sub\n        /* \"#utility.yul\":2471:2503   */\n      slt\n        /* \"#utility.yul\":2468:2587   */\n      iszero\n      tag_213\n      jumpi\n        /* \"#utility.yul\":2506:2585   */\n      tag_214\n      tag_151\n      jump\t// in\n    tag_214:\n        /* \"#utility.yul\":2468:2587   */\n    tag_213:\n        /* \"#utility.yul\":2626:2627   */\n      0x00\n        /* \"#utility.yul\":2651:2703   */\n      tag_215\n        /* \"#utility.yul\":2695:2702   */\n      dup5\n        /* \"#utility.yul\":2686:2692   */\n      dup3\n        /* \"#utility.yul\":2675:2684   */\n      dup6\n        /* \"#utility.yul\":2671:2693   */\n      add\n        /* \"#utility.yul\":2651:2703   */\n      tag_160\n      jump\t// in\n    tag_215:\n        /* \"#utility.yul\":2641:2703   */\n      swap2\n      pop\n        /* \"#utility.yul\":2597:2713   */\n      pop\n        /* \"#utility.yul\":2393:2720   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2726:2844   */\n    tag_161:\n        /* \"#utility.yul\":2813:2837   */\n      tag_217\n        /* \"#utility.yul\":2831:2836   */\n      dup2\n        /* \"#utility.yul\":2813:2837   */\n      tag_154\n      jump\t// in\n    tag_217:\n        /* \"#utility.yul\":2808:2811   */\n      dup3\n        /* \"#utility.yul\":2801:2838   */\n      mstore\n        /* \"#utility.yul\":2726:2844   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2850:3072   */\n    tag_28:\n        /* \"#utility.yul\":2943:2947   */\n      0x00\n        /* \"#utility.yul\":2981:2983   */\n      0x20\n        /* \"#utility.yul\":2970:2979   */\n      dup3\n        /* \"#utility.yul\":2966:2984   */\n      add\n        /* \"#utility.yul\":2958:2984   */\n      swap1\n      pop\n        /* \"#utility.yul\":2994:3065   */\n      tag_219\n        /* \"#utility.yul\":3062:3063   */\n      0x00\n        /* \"#utility.yul\":3051:3060   */\n      dup4\n        /* \"#utility.yul\":3047:3064   */\n      add\n        /* \"#utility.yul\":3038:3044   */\n      dup5\n        /* \"#utility.yul\":2994:3065   */\n      tag_161\n      jump\t// in\n    tag_219:\n        /* \"#utility.yul\":2850:3072   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3078:3228   */\n    tag_162:\n        /* \"#utility.yul\":3115:3122   */\n      0x00\n        /* \"#utility.yul\":3155:3221   */\n      0xffffffffffffffffffff00000000000000000000000000000000000000000000\n        /* \"#utility.yul\":3148:3153   */\n      dup3\n        /* \"#utility.yul\":3144:3222   */\n      and\n        /* \"#utility.yul\":3133:3222   */\n      swap1\n      pop\n        /* \"#utility.yul\":3078:3228   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3234:3352   */\n    tag_163:\n        /* \"#utility.yul\":3321:3345   */\n      tag_222\n        /* \"#utility.yul\":3339:3344   */\n      dup2\n        /* \"#utility.yul\":3321:3345   */\n      tag_162\n      jump\t// in\n    tag_222:\n        /* \"#utility.yul\":3316:3319   */\n      dup3\n        /* \"#utility.yul\":3309:3346   */\n      mstore\n        /* \"#utility.yul\":3234:3352   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3358:3580   */\n    tag_36:\n        /* \"#utility.yul\":3451:3455   */\n      0x00\n        /* \"#utility.yul\":3489:3491   */\n      0x20\n        /* \"#utility.yul\":3478:3487   */\n      dup3\n        /* \"#utility.yul\":3474:3492   */\n      add\n        /* \"#utility.yul\":3466:3492   */\n      swap1\n      pop\n        /* \"#utility.yul\":3502:3573   */\n      tag_224\n        /* \"#utility.yul\":3570:3571   */\n      0x00\n        /* \"#utility.yul\":3559:3568   */\n      dup4\n        /* \"#utility.yul\":3555:3572   */\n      add\n        /* \"#utility.yul\":3546:3552   */\n      dup5\n        /* \"#utility.yul\":3502:3573   */\n      tag_163\n      jump\t// in\n    tag_224:\n        /* \"#utility.yul\":3358:3580   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3586:3676   */\n    tag_164:\n        /* \"#utility.yul\":3620:3627   */\n      0x00\n        /* \"#utility.yul\":3663:3668   */\n      dup2\n        /* \"#utility.yul\":3656:3669   */\n      iszero\n        /* \"#utility.yul\":3649:3670   */\n      iszero\n        /* \"#utility.yul\":3638:3670   */\n      swap1\n      pop\n        /* \"#utility.yul\":3586:3676   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3682:3798   */\n    tag_165:\n        /* \"#utility.yul\":3752:3773   */\n      tag_227\n        /* \"#utility.yul\":3767:3772   */\n      dup2\n        /* \"#utility.yul\":3752:3773   */\n      tag_164\n      jump\t// in\n    tag_227:\n        /* \"#utility.yul\":3745:3750   */\n      dup2\n        /* \"#utility.yul\":3742:3774   */\n      eq\n        /* \"#utility.yul\":3732:3792   */\n      tag_228\n      jumpi\n        /* \"#utility.yul\":3788:3789   */\n      0x00\n        /* \"#utility.yul\":3785:3786   */\n      dup1\n        /* \"#utility.yul\":3778:3790   */\n      revert\n        /* \"#utility.yul\":3732:3792   */\n    tag_228:\n        /* \"#utility.yul\":3682:3798   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3804:3937   */\n    tag_166:\n        /* \"#utility.yul\":3847:3852   */\n      0x00\n        /* \"#utility.yul\":3885:3891   */\n      dup2\n        /* \"#utility.yul\":3872:3892   */\n      calldataload\n        /* \"#utility.yul\":3863:3892   */\n      swap1\n      pop\n        /* \"#utility.yul\":3901:3931   */\n      tag_230\n        /* \"#utility.yul\":3925:3930   */\n      dup2\n        /* \"#utility.yul\":3901:3931   */\n      tag_165\n      jump\t// in\n    tag_230:\n        /* \"#utility.yul\":3804:3937   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3943:4411   */\n    tag_39:\n        /* \"#utility.yul\":4008:4014   */\n      0x00\n        /* \"#utility.yul\":4016:4022   */\n      dup1\n        /* \"#utility.yul\":4065:4067   */\n      0x40\n        /* \"#utility.yul\":4053:4062   */\n      dup4\n        /* \"#utility.yul\":4044:4051   */\n      dup6\n        /* \"#utility.yul\":4040:4063   */\n      sub\n        /* \"#utility.yul\":4036:4068   */\n      slt\n        /* \"#utility.yul\":4033:4152   */\n      iszero\n      tag_232\n      jumpi\n        /* \"#utility.yul\":4071:4150   */\n      tag_233\n      tag_151\n      jump\t// in\n    tag_233:\n        /* \"#utility.yul\":4033:4152   */\n    tag_232:\n        /* \"#utility.yul\":4191:4192   */\n      0x00\n        /* \"#utility.yul\":4216:4269   */\n      tag_234\n        /* \"#utility.yul\":4261:4268   */\n      dup6\n        /* \"#utility.yul\":4252:4258   */\n      dup3\n        /* \"#utility.yul\":4241:4250   */\n      dup7\n        /* \"#utility.yul\":4237:4259   */\n      add\n        /* \"#utility.yul\":4216:4269   */\n      tag_156\n      jump\t// in\n    tag_234:\n        /* \"#utility.yul\":4206:4269   */\n      swap3\n      pop\n        /* \"#utility.yul\":4162:4279   */\n      pop\n        /* \"#utility.yul\":4318:4320   */\n      0x20\n        /* \"#utility.yul\":4344:4394   */\n      tag_235\n        /* \"#utility.yul\":4386:4393   */\n      dup6\n        /* \"#utility.yul\":4377:4383   */\n      dup3\n        /* \"#utility.yul\":4366:4375   */\n      dup7\n        /* \"#utility.yul\":4362:4384   */\n      add\n        /* \"#utility.yul\":4344:4394   */\n      tag_166\n      jump\t// in\n    tag_235:\n        /* \"#utility.yul\":4334:4394   */\n      swap2\n      pop\n        /* \"#utility.yul\":4289:4404   */\n      pop\n        /* \"#utility.yul\":3943:4411   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4417:4516   */\n    tag_167:\n        /* \"#utility.yul\":4469:4475   */\n      0x00\n        /* \"#utility.yul\":4503:4508   */\n      dup2\n        /* \"#utility.yul\":4497:4509   */\n      mload\n        /* \"#utility.yul\":4487:4509   */\n      swap1\n      pop\n        /* \"#utility.yul\":4417:4516   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4522:4691   */\n    tag_168:\n        /* \"#utility.yul\":4606:4617   */\n      0x00\n        /* \"#utility.yul\":4640:4646   */\n      dup3\n        /* \"#utility.yul\":4635:4638   */\n      dup3\n        /* \"#utility.yul\":4628:4647   */\n      mstore\n        /* \"#utility.yul\":4680:4684   */\n      0x20\n        /* \"#utility.yul\":4675:4678   */\n      dup3\n        /* \"#utility.yul\":4671:4685   */\n      add\n        /* \"#utility.yul\":4656:4685   */\n      swap1\n      pop\n        /* \"#utility.yul\":4522:4691   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4697:4943   */\n    tag_169:\n        /* \"#utility.yul\":4778:4779   */\n      0x00\n        /* \"#utility.yul\":4788:4901   */\n    tag_239:\n        /* \"#utility.yul\":4802:4808   */\n      dup4\n        /* \"#utility.yul\":4799:4800   */\n      dup2\n        /* \"#utility.yul\":4796:4809   */\n      lt\n        /* \"#utility.yul\":4788:4901   */\n      iszero\n      tag_241\n      jumpi\n        /* \"#utility.yul\":4887:4888   */\n      dup1\n        /* \"#utility.yul\":4882:4885   */\n      dup3\n        /* \"#utility.yul\":4878:4889   */\n      add\n        /* \"#utility.yul\":4872:4890   */\n      mload\n        /* \"#utility.yul\":4868:4869   */\n      dup2\n        /* \"#utility.yul\":4863:4866   */\n      dup5\n        /* \"#utility.yul\":4859:4870   */\n      add\n        /* \"#utility.yul\":4852:4891   */\n      mstore\n        /* \"#utility.yul\":4824:4826   */\n      0x20\n        /* \"#utility.yul\":4821:4822   */\n      dup2\n        /* \"#utility.yul\":4817:4827   */\n      add\n        /* \"#utility.yul\":4812:4827   */\n      swap1\n      pop\n        /* \"#utility.yul\":4788:4901   */\n      jump(tag_239)\n    tag_241:\n        /* \"#utility.yul\":4935:4936   */\n      0x00\n        /* \"#utility.yul\":4926:4932   */\n      dup5\n        /* \"#utility.yul\":4921:4924   */\n      dup5\n        /* \"#utility.yul\":4917:4933   */\n      add\n        /* \"#utility.yul\":4910:4937   */\n      mstore\n        /* \"#utility.yul\":4759:4943   */\n      pop\n        /* \"#utility.yul\":4697:4943   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4949:5051   */\n    tag_170:\n        /* \"#utility.yul\":4990:4996   */\n      0x00\n        /* \"#utility.yul\":5041:5043   */\n      0x1f\n        /* \"#utility.yul\":5037:5044   */\n      not\n        /* \"#utility.yul\":5032:5034   */\n      0x1f\n        /* \"#utility.yul\":5025:5030   */\n      dup4\n        /* \"#utility.yul\":5021:5035   */\n      add\n        /* \"#utility.yul\":5017:5045   */\n      and\n        /* \"#utility.yul\":5007:5045   */\n      swap1\n      pop\n        /* \"#utility.yul\":4949:5051   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5057:5434   */\n    tag_171:\n        /* \"#utility.yul\":5145:5148   */\n      0x00\n        /* \"#utility.yul\":5173:5212   */\n      tag_244\n        /* \"#utility.yul\":5206:5211   */\n      dup3\n        /* \"#utility.yul\":5173:5212   */\n      tag_167\n      jump\t// in\n    tag_244:\n        /* \"#utility.yul\":5228:5299   */\n      tag_245\n        /* \"#utility.yul\":5292:5298   */\n      dup2\n        /* \"#utility.yul\":5287:5290   */\n      dup6\n        /* \"#utility.yul\":5228:5299   */\n      tag_168\n      jump\t// in\n    tag_245:\n        /* \"#utility.yul\":5221:5299   */\n      swap4\n      pop\n        /* \"#utility.yul\":5308:5373   */\n      tag_246\n        /* \"#utility.yul\":5366:5372   */\n      dup2\n        /* \"#utility.yul\":5361:5364   */\n      dup6\n        /* \"#utility.yul\":5354:5358   */\n      0x20\n        /* \"#utility.yul\":5347:5352   */\n      dup7\n        /* \"#utility.yul\":5343:5359   */\n      add\n        /* \"#utility.yul\":5308:5373   */\n      tag_169\n      jump\t// in\n    tag_246:\n        /* \"#utility.yul\":5398:5427   */\n      tag_247\n        /* \"#utility.yul\":5420:5426   */\n      dup2\n        /* \"#utility.yul\":5398:5427   */\n      tag_170\n      jump\t// in\n    tag_247:\n        /* \"#utility.yul\":5393:5396   */\n      dup5\n        /* \"#utility.yul\":5389:5428   */\n      add\n        /* \"#utility.yul\":5382:5428   */\n      swap2\n      pop\n        /* \"#utility.yul\":5149:5434   */\n      pop\n        /* \"#utility.yul\":5057:5434   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5440:5753   */\n    tag_45:\n        /* \"#utility.yul\":5553:5557   */\n      0x00\n        /* \"#utility.yul\":5591:5593   */\n      0x20\n        /* \"#utility.yul\":5580:5589   */\n      dup3\n        /* \"#utility.yul\":5576:5594   */\n      add\n        /* \"#utility.yul\":5568:5594   */\n      swap1\n      pop\n        /* \"#utility.yul\":5640:5649   */\n      dup2\n        /* \"#utility.yul\":5634:5638   */\n      dup2\n        /* \"#utility.yul\":5630:5650   */\n      sub\n        /* \"#utility.yul\":5626:5627   */\n      0x00\n        /* \"#utility.yul\":5615:5624   */\n      dup4\n        /* \"#utility.yul\":5611:5628   */\n      add\n        /* \"#utility.yul\":5604:5651   */\n      mstore\n        /* \"#utility.yul\":5668:5746   */\n      tag_249\n        /* \"#utility.yul\":5741:5745   */\n      dup2\n        /* \"#utility.yul\":5732:5738   */\n      dup5\n        /* \"#utility.yul\":5668:5746   */\n      tag_171\n      jump\t// in\n    tag_249:\n        /* \"#utility.yul\":5660:5746   */\n      swap1\n      pop\n        /* \"#utility.yul\":5440:5753   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5759:6231   */\n    tag_48:\n        /* \"#utility.yul\":5826:5832   */\n      0x00\n        /* \"#utility.yul\":5834:5840   */\n      dup1\n        /* \"#utility.yul\":5883:5885   */\n      0x40\n        /* \"#utility.yul\":5871:5880   */\n      dup4\n        /* \"#utility.yul\":5862:5869   */\n      dup6\n        /* \"#utility.yul\":5858:5881   */\n      sub\n        /* \"#utility.yul\":5854:5886   */\n      slt\n        /* \"#utility.yul\":5851:5970   */\n      iszero\n      tag_251\n      jumpi\n        /* \"#utility.yul\":5889:5968   */\n      tag_252\n      tag_151\n      jump\t// in\n    tag_252:\n        /* \"#utility.yul\":5851:5970   */\n    tag_251:\n        /* \"#utility.yul\":6009:6010   */\n      0x00\n        /* \"#utility.yul\":6034:6087   */\n      tag_253\n        /* \"#utility.yul\":6079:6086   */\n      dup6\n        /* \"#utility.yul\":6070:6076   */\n      dup3\n        /* \"#utility.yul\":6059:6068   */\n      dup7\n        /* \"#utility.yul\":6055:6077   */\n      add\n        /* \"#utility.yul\":6034:6087   */\n      tag_156\n      jump\t// in\n    tag_253:\n        /* \"#utility.yul\":6024:6087   */\n      swap3\n      pop\n        /* \"#utility.yul\":5980:6097   */\n      pop\n        /* \"#utility.yul\":6136:6138   */\n      0x20\n        /* \"#utility.yul\":6162:6214   */\n      tag_254\n        /* \"#utility.yul\":6206:6213   */\n      dup6\n        /* \"#utility.yul\":6197:6203   */\n      dup3\n        /* \"#utility.yul\":6186:6195   */\n      dup7\n        /* \"#utility.yul\":6182:6204   */\n      add\n        /* \"#utility.yul\":6162:6214   */\n      tag_160\n      jump\t// in\n    tag_254:\n        /* \"#utility.yul\":6152:6214   */\n      swap2\n      pop\n        /* \"#utility.yul\":6107:6224   */\n      pop\n        /* \"#utility.yul\":5759:6231   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6237:6711   */\n    tag_52:\n        /* \"#utility.yul\":6305:6311   */\n      0x00\n        /* \"#utility.yul\":6313:6319   */\n      dup1\n        /* \"#utility.yul\":6362:6364   */\n      0x40\n        /* \"#utility.yul\":6350:6359   */\n      dup4\n        /* \"#utility.yul\":6341:6348   */\n      dup6\n        /* \"#utility.yul\":6337:6360   */\n      sub\n        /* \"#utility.yul\":6333:6365   */\n      slt\n        /* \"#utility.yul\":6330:6449   */\n      iszero\n      tag_256\n      jumpi\n        /* \"#utility.yul\":6368:6447   */\n      tag_257\n      tag_151\n      jump\t// in\n    tag_257:\n        /* \"#utility.yul\":6330:6449   */\n    tag_256:\n        /* \"#utility.yul\":6488:6489   */\n      0x00\n        /* \"#utility.yul\":6513:6566   */\n      tag_258\n        /* \"#utility.yul\":6558:6565   */\n      dup6\n        /* \"#utility.yul\":6549:6555   */\n      dup3\n        /* \"#utility.yul\":6538:6547   */\n      dup7\n        /* \"#utility.yul\":6534:6556   */\n      add\n        /* \"#utility.yul\":6513:6566   */\n      tag_156\n      jump\t// in\n    tag_258:\n        /* \"#utility.yul\":6503:6566   */\n      swap3\n      pop\n        /* \"#utility.yul\":6459:6576   */\n      pop\n        /* \"#utility.yul\":6615:6617   */\n      0x20\n        /* \"#utility.yul\":6641:6694   */\n      tag_259\n        /* \"#utility.yul\":6686:6693   */\n      dup6\n        /* \"#utility.yul\":6677:6683   */\n      dup3\n        /* \"#utility.yul\":6666:6675   */\n      dup7\n        /* \"#utility.yul\":6662:6684   */\n      add\n        /* \"#utility.yul\":6641:6694   */\n      tag_156\n      jump\t// in\n    tag_259:\n        /* \"#utility.yul\":6631:6694   */\n      swap2\n      pop\n        /* \"#utility.yul\":6586:6704   */\n      pop\n        /* \"#utility.yul\":6237:6711   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6717:6826   */\n    tag_172:\n        /* \"#utility.yul\":6798:6819   */\n      tag_261\n        /* \"#utility.yul\":6813:6818   */\n      dup2\n        /* \"#utility.yul\":6798:6819   */\n      tag_164\n      jump\t// in\n    tag_261:\n        /* \"#utility.yul\":6793:6796   */\n      dup3\n        /* \"#utility.yul\":6786:6820   */\n      mstore\n        /* \"#utility.yul\":6717:6826   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6832:7042   */\n    tag_55:\n        /* \"#utility.yul\":6919:6923   */\n      0x00\n        /* \"#utility.yul\":6957:6959   */\n      0x20\n        /* \"#utility.yul\":6946:6955   */\n      dup3\n        /* \"#utility.yul\":6942:6960   */\n      add\n        /* \"#utility.yul\":6934:6960   */\n      swap1\n      pop\n        /* \"#utility.yul\":6970:7035   */\n      tag_263\n        /* \"#utility.yul\":7032:7033   */\n      0x00\n        /* \"#utility.yul\":7021:7030   */\n      dup4\n        /* \"#utility.yul\":7017:7034   */\n      add\n        /* \"#utility.yul\":7008:7014   */\n      dup5\n        /* \"#utility.yul\":6970:7035   */\n      tag_172\n      jump\t// in\n    tag_263:\n        /* \"#utility.yul\":6832:7042   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7048:7230   */\n    tag_173:\n        /* \"#utility.yul\":7188:7222   */\n      0x54686520696e70757420616464726573732063616e6e6f74206265207a65726f\n        /* \"#utility.yul\":7184:7185   */\n      0x00\n        /* \"#utility.yul\":7176:7182   */\n      dup3\n        /* \"#utility.yul\":7172:7186   */\n      add\n        /* \"#utility.yul\":7165:7223   */\n      mstore\n        /* \"#utility.yul\":7048:7230   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7236:7602   */\n    tag_174:\n        /* \"#utility.yul\":7378:7381   */\n      0x00\n        /* \"#utility.yul\":7399:7466   */\n      tag_266\n        /* \"#utility.yul\":7463:7465   */\n      0x20\n        /* \"#utility.yul\":7458:7461   */\n      dup4\n        /* \"#utility.yul\":7399:7466   */\n      tag_168\n      jump\t// in\n    tag_266:\n        /* \"#utility.yul\":7392:7466   */\n      swap2\n      pop\n        /* \"#utility.yul\":7475:7568   */\n      tag_267\n        /* \"#utility.yul\":7564:7567   */\n      dup3\n        /* \"#utility.yul\":7475:7568   */\n      tag_173\n      jump\t// in\n    tag_267:\n        /* \"#utility.yul\":7593:7595   */\n      0x20\n        /* \"#utility.yul\":7588:7591   */\n      dup3\n        /* \"#utility.yul\":7584:7596   */\n      add\n        /* \"#utility.yul\":7577:7596   */\n      swap1\n      pop\n        /* \"#utility.yul\":7236:7602   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7608:8027   */\n    tag_60:\n        /* \"#utility.yul\":7774:7778   */\n      0x00\n        /* \"#utility.yul\":7812:7814   */\n      0x20\n        /* \"#utility.yul\":7801:7810   */\n      dup3\n        /* \"#utility.yul\":7797:7815   */\n      add\n        /* \"#utility.yul\":7789:7815   */\n      swap1\n      pop\n        /* \"#utility.yul\":7861:7870   */\n      dup2\n        /* \"#utility.yul\":7855:7859   */\n      dup2\n        /* \"#utility.yul\":7851:7871   */\n      sub\n        /* \"#utility.yul\":7847:7848   */\n      0x00\n        /* \"#utility.yul\":7836:7845   */\n      dup4\n        /* \"#utility.yul\":7832:7849   */\n      add\n        /* \"#utility.yul\":7825:7872   */\n      mstore\n        /* \"#utility.yul\":7889:8020   */\n      tag_269\n        /* \"#utility.yul\":8015:8019   */\n      dup2\n        /* \"#utility.yul\":7889:8020   */\n      tag_174\n      jump\t// in\n    tag_269:\n        /* \"#utility.yul\":7881:8020   */\n      swap1\n      pop\n        /* \"#utility.yul\":7608:8027   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8033:8213   */\n    tag_63:\n        /* \"#utility.yul\":8081:8158   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":8078:8079   */\n      0x00\n        /* \"#utility.yul\":8071:8159   */\n      mstore\n        /* \"#utility.yul\":8178:8182   */\n      0x32\n        /* \"#utility.yul\":8175:8176   */\n      0x04\n        /* \"#utility.yul\":8168:8183   */\n      mstore\n        /* \"#utility.yul\":8202:8206   */\n      0x24\n        /* \"#utility.yul\":8199:8200   */\n      0x00\n        /* \"#utility.yul\":8192:8207   */\n      revert\n        /* \"#utility.yul\":8219:8465   */\n    tag_175:\n        /* \"#utility.yul\":8359:8393   */\n      0x5468652061646472657373206f6620746865206f776e657220616e6420746865\n        /* \"#utility.yul\":8355:8356   */\n      0x00\n        /* \"#utility.yul\":8347:8353   */\n      dup3\n        /* \"#utility.yul\":8343:8357   */\n      add\n        /* \"#utility.yul\":8336:8394   */\n      mstore\n        /* \"#utility.yul\":8428:8457   */\n      0x206f70657261746f72206d75737420626520646966666572656e740000000000\n        /* \"#utility.yul\":8423:8425   */\n      0x20\n        /* \"#utility.yul\":8415:8421   */\n      dup3\n        /* \"#utility.yul\":8411:8426   */\n      add\n        /* \"#utility.yul\":8404:8458   */\n      mstore\n        /* \"#utility.yul\":8219:8465   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8471:8837   */\n    tag_176:\n        /* \"#utility.yul\":8613:8616   */\n      0x00\n        /* \"#utility.yul\":8634:8701   */\n      tag_273\n        /* \"#utility.yul\":8698:8700   */\n      0x3b\n        /* \"#utility.yul\":8693:8696   */\n      dup4\n        /* \"#utility.yul\":8634:8701   */\n      tag_168\n      jump\t// in\n    tag_273:\n        /* \"#utility.yul\":8627:8701   */\n      swap2\n      pop\n        /* \"#utility.yul\":8710:8803   */\n      tag_274\n        /* \"#utility.yul\":8799:8802   */\n      dup3\n        /* \"#utility.yul\":8710:8803   */\n      tag_175\n      jump\t// in\n    tag_274:\n        /* \"#utility.yul\":8828:8830   */\n      0x40\n        /* \"#utility.yul\":8823:8826   */\n      dup3\n        /* \"#utility.yul\":8819:8831   */\n      add\n        /* \"#utility.yul\":8812:8831   */\n      swap1\n      pop\n        /* \"#utility.yul\":8471:8837   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8843:9262   */\n    tag_76:\n        /* \"#utility.yul\":9009:9013   */\n      0x00\n        /* \"#utility.yul\":9047:9049   */\n      0x20\n        /* \"#utility.yul\":9036:9045   */\n      dup3\n        /* \"#utility.yul\":9032:9050   */\n      add\n        /* \"#utility.yul\":9024:9050   */\n      swap1\n      pop\n        /* \"#utility.yul\":9096:9105   */\n      dup2\n        /* \"#utility.yul\":9090:9094   */\n      dup2\n        /* \"#utility.yul\":9086:9106   */\n      sub\n        /* \"#utility.yul\":9082:9083   */\n      0x00\n        /* \"#utility.yul\":9071:9080   */\n      dup4\n        /* \"#utility.yul\":9067:9084   */\n      add\n        /* \"#utility.yul\":9060:9107   */\n      mstore\n        /* \"#utility.yul\":9124:9255   */\n      tag_276\n        /* \"#utility.yul\":9250:9254   */\n      dup2\n        /* \"#utility.yul\":9124:9255   */\n      tag_176\n      jump\t// in\n    tag_276:\n        /* \"#utility.yul\":9116:9255   */\n      swap1\n      pop\n        /* \"#utility.yul\":8843:9262   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9268:9416   */\n    tag_177:\n        /* \"#utility.yul\":9370:9381   */\n      0x00\n        /* \"#utility.yul\":9407:9410   */\n      dup2\n        /* \"#utility.yul\":9392:9410   */\n      swap1\n      pop\n        /* \"#utility.yul\":9268:9416   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9422:9812   */\n    tag_178:\n        /* \"#utility.yul\":9528:9531   */\n      0x00\n        /* \"#utility.yul\":9556:9595   */\n      tag_279\n        /* \"#utility.yul\":9589:9594   */\n      dup3\n        /* \"#utility.yul\":9556:9595   */\n      tag_167\n      jump\t// in\n    tag_279:\n        /* \"#utility.yul\":9611:9700   */\n      tag_280\n        /* \"#utility.yul\":9693:9699   */\n      dup2\n        /* \"#utility.yul\":9688:9691   */\n      dup6\n        /* \"#utility.yul\":9611:9700   */\n      tag_177\n      jump\t// in\n    tag_280:\n        /* \"#utility.yul\":9604:9700   */\n      swap4\n      pop\n        /* \"#utility.yul\":9709:9774   */\n      tag_281\n        /* \"#utility.yul\":9767:9773   */\n      dup2\n        /* \"#utility.yul\":9762:9765   */\n      dup6\n        /* \"#utility.yul\":9755:9759   */\n      0x20\n        /* \"#utility.yul\":9748:9753   */\n      dup7\n        /* \"#utility.yul\":9744:9760   */\n      add\n        /* \"#utility.yul\":9709:9774   */\n      tag_169\n      jump\t// in\n    tag_281:\n        /* \"#utility.yul\":9799:9805   */\n      dup1\n        /* \"#utility.yul\":9794:9797   */\n      dup5\n        /* \"#utility.yul\":9790:9806   */\n      add\n        /* \"#utility.yul\":9783:9806   */\n      swap2\n      pop\n        /* \"#utility.yul\":9532:9812   */\n      pop\n        /* \"#utility.yul\":9422:9812   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9818:10253   */\n    tag_91:\n        /* \"#utility.yul\":9998:10001   */\n      0x00\n        /* \"#utility.yul\":10020:10115   */\n      tag_283\n        /* \"#utility.yul\":10111:10114   */\n      dup3\n        /* \"#utility.yul\":10102:10108   */\n      dup6\n        /* \"#utility.yul\":10020:10115   */\n      tag_178\n      jump\t// in\n    tag_283:\n        /* \"#utility.yul\":10013:10115   */\n      swap2\n      pop\n        /* \"#utility.yul\":10132:10227   */\n      tag_284\n        /* \"#utility.yul\":10223:10226   */\n      dup3\n        /* \"#utility.yul\":10214:10220   */\n      dup5\n        /* \"#utility.yul\":10132:10227   */\n      tag_178\n      jump\t// in\n    tag_284:\n        /* \"#utility.yul\":10125:10227   */\n      swap2\n      pop\n        /* \"#utility.yul\":10244:10247   */\n      dup2\n        /* \"#utility.yul\":10237:10247   */\n      swap1\n      pop\n        /* \"#utility.yul\":9818:10253   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10259:10562   */\n    tag_179:\n        /* \"#utility.yul\":10399:10433   */\n      0x54686520494420656e746572656420697320696e76616c69642e204974206d75\n        /* \"#utility.yul\":10395:10396   */\n      0x00\n        /* \"#utility.yul\":10387:10393   */\n      dup3\n        /* \"#utility.yul\":10383:10397   */\n      add\n        /* \"#utility.yul\":10376:10434   */\n      mstore\n        /* \"#utility.yul\":10468:10502   */\n      0x737420626520696e207468697320696e74657276616c2030203c206964203c3d\n        /* \"#utility.yul\":10463:10465   */\n      0x20\n        /* \"#utility.yul\":10455:10461   */\n      dup3\n        /* \"#utility.yul\":10451:10466   */\n      add\n        /* \"#utility.yul\":10444:10503   */\n      mstore\n        /* \"#utility.yul\":10537:10554   */\n      0x2063757272656e7420746f6b656e730000000000000000000000000000000000\n        /* \"#utility.yul\":10532:10534   */\n      0x40\n        /* \"#utility.yul\":10524:10530   */\n      dup3\n        /* \"#utility.yul\":10520:10535   */\n      add\n        /* \"#utility.yul\":10513:10555   */\n      mstore\n        /* \"#utility.yul\":10259:10562   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10568:10934   */\n    tag_180:\n        /* \"#utility.yul\":10710:10713   */\n      0x00\n        /* \"#utility.yul\":10731:10798   */\n      tag_287\n        /* \"#utility.yul\":10795:10797   */\n      0x4f\n        /* \"#utility.yul\":10790:10793   */\n      dup4\n        /* \"#utility.yul\":10731:10798   */\n      tag_168\n      jump\t// in\n    tag_287:\n        /* \"#utility.yul\":10724:10798   */\n      swap2\n      pop\n        /* \"#utility.yul\":10807:10900   */\n      tag_288\n        /* \"#utility.yul\":10896:10899   */\n      dup3\n        /* \"#utility.yul\":10807:10900   */\n      tag_179\n      jump\t// in\n    tag_288:\n        /* \"#utility.yul\":10925:10927   */\n      0x60\n        /* \"#utility.yul\":10920:10923   */\n      dup3\n        /* \"#utility.yul\":10916:10928   */\n      add\n        /* \"#utility.yul\":10909:10928   */\n      swap1\n      pop\n        /* \"#utility.yul\":10568:10934   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10940:11359   */\n    tag_101:\n        /* \"#utility.yul\":11106:11110   */\n      0x00\n        /* \"#utility.yul\":11144:11146   */\n      0x20\n        /* \"#utility.yul\":11133:11142   */\n      dup3\n        /* \"#utility.yul\":11129:11147   */\n      add\n        /* \"#utility.yul\":11121:11147   */\n      swap1\n      pop\n        /* \"#utility.yul\":11193:11202   */\n      dup2\n        /* \"#utility.yul\":11187:11191   */\n      dup2\n        /* \"#utility.yul\":11183:11203   */\n      sub\n        /* \"#utility.yul\":11179:11180   */\n      0x00\n        /* \"#utility.yul\":11168:11177   */\n      dup4\n        /* \"#utility.yul\":11164:11181   */\n      add\n        /* \"#utility.yul\":11157:11204   */\n      mstore\n        /* \"#utility.yul\":11221:11352   */\n      tag_290\n        /* \"#utility.yul\":11347:11351   */\n      dup2\n        /* \"#utility.yul\":11221:11352   */\n      tag_180\n      jump\t// in\n    tag_290:\n        /* \"#utility.yul\":11213:11352   */\n      swap1\n      pop\n        /* \"#utility.yul\":10940:11359   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11365:11545   */\n    tag_112:\n        /* \"#utility.yul\":11413:11490   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":11410:11411   */\n      0x00\n        /* \"#utility.yul\":11403:11491   */\n      mstore\n        /* \"#utility.yul\":11510:11514   */\n      0x41\n        /* \"#utility.yul\":11507:11508   */\n      0x04\n        /* \"#utility.yul\":11500:11515   */\n      mstore\n        /* \"#utility.yul\":11534:11538   */\n      0x24\n        /* \"#utility.yul\":11531:11532   */\n      0x00\n        /* \"#utility.yul\":11524:11539   */\n      revert\n        /* \"#utility.yul\":11551:11731   */\n    tag_118:\n        /* \"#utility.yul\":11599:11676   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":11596:11597   */\n      0x00\n        /* \"#utility.yul\":11589:11677   */\n      mstore\n        /* \"#utility.yul\":11696:11700   */\n      0x12\n        /* \"#utility.yul\":11693:11694   */\n      0x04\n        /* \"#utility.yul\":11686:11701   */\n      mstore\n        /* \"#utility.yul\":11720:11724   */\n      0x24\n        /* \"#utility.yul\":11717:11718   */\n      0x00\n        /* \"#utility.yul\":11710:11725   */\n      revert\n\n    auxdata: 0xa264697066735822122074227527dc031273894aa7740043449d768f84101047a6454aacb3e2c9c0da8d64736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1922": {
									"entryPoint": null,
									"id": 1922,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_t_bytes10_fromMemory": {
									"entryPoint": 303,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes20_fromMemory": {
									"entryPoint": 213,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes20t_bytes10_fromMemory": {
									"entryPoint": 325,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_bytes10": {
									"entryPoint": 235,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes20": {
									"entryPoint": 145,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 141,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_bytes10": {
									"entryPoint": 278,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes20": {
									"entryPoint": 188,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1710:7",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:7"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:7"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:7",
														"type": ""
													}
												],
												"src": "7:75:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:7"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:7"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:105:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:89:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "411:66:7",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "400:78:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:7",
														"type": ""
													}
												],
												"src": "334:150:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "533:79:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "590:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "599:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "602:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "592:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "592:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "592:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "556:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "581:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes20",
																					"nodeType": "YulIdentifier",
																					"src": "563:17:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "563:24:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "553:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "553:35:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "546:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "546:43:7"
															},
															"nodeType": "YulIf",
															"src": "543:63:7"
														}
													]
												},
												"name": "validator_revert_t_bytes20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "526:5:7",
														"type": ""
													}
												],
												"src": "490:122:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "681:80:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "691:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "706:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "700:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "700:13:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "691:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "749:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes20",
																	"nodeType": "YulIdentifier",
																	"src": "722:26:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "722:33:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "722:33:7"
														}
													]
												},
												"name": "abi_decode_t_bytes20_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "659:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "667:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "675:5:7",
														"type": ""
													}
												],
												"src": "618:143:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "812:105:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "822:89:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "837:5:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "844:66:7",
																		"type": "",
																		"value": "0xffffffffffffffffffff00000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "833:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "833:78:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "822:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "794:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "804:7:7",
														"type": ""
													}
												],
												"src": "767:150:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "966:79:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1023:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1032:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1035:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1025:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1025:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1025:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "989:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1014:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes10",
																					"nodeType": "YulIdentifier",
																					"src": "996:17:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "996:24:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "986:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "986:35:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "979:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "979:43:7"
															},
															"nodeType": "YulIf",
															"src": "976:63:7"
														}
													]
												},
												"name": "validator_revert_t_bytes10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "959:5:7",
														"type": ""
													}
												],
												"src": "923:122:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1114:80:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1124:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1139:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1133:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1133:13:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1124:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1182:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes10",
																	"nodeType": "YulIdentifier",
																	"src": "1155:26:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1155:33:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1155:33:7"
														}
													]
												},
												"name": "abi_decode_t_bytes10_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1092:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1100:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1108:5:7",
														"type": ""
													}
												],
												"src": "1051:143:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1294:413:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1340:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1342:77:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1342:79:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1342:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1315:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1324:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1311:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1311:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1336:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1307:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1307:32:7"
															},
															"nodeType": "YulIf",
															"src": "1304:119:7"
														},
														{
															"nodeType": "YulBlock",
															"src": "1433:128:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1448:15:7",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1462:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1452:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1477:74:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1523:9:7"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1534:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1519:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1519:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1543:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes20_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1487:31:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1487:64:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1477:6:7"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1571:129:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1586:16:7",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1600:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1590:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1616:74:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1662:9:7"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1673:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1658:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1658:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1682:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes10_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1626:31:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1626:64:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "1616:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes20t_bytes10_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1256:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1267:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1279:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1287:6:7",
														"type": ""
													}
												],
												"src": "1200:507:7"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes20(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes20(value) {\n        if iszero(eq(value, cleanup_t_bytes20(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes20_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes20(value)\n    }\n\n    function cleanup_t_bytes10(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffff00000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes10(value) {\n        if iszero(eq(value, cleanup_t_bytes10(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes10_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes10(value)\n    }\n\n    function abi_decode_tuple_t_bytes20t_bytes10_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes20_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bytes10_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801562000010575f80fd5b50604051620012fb380380620012fb833981810160405281019062000036919062000145565b815f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908360601c0217905550805f60146101000a81548169ffffffffffffffffffff021916908360b01c021790555050506200018a565b5f80fd5b5f7fffffffffffffffffffffffffffffffffffffffff00000000000000000000000082169050919050565b620000c78162000091565b8114620000d2575f80fd5b50565b5f81519050620000e581620000bc565b92915050565b5f7fffffffffffffffffffff0000000000000000000000000000000000000000000082169050919050565b6200012181620000eb565b81146200012c575f80fd5b50565b5f815190506200013f8162000116565b92915050565b5f80604083850312156200015e576200015d6200008d565b5b5f6200016d85828601620000d5565b925050602062000180858286016200012f565b9150509250929050565b61116380620001985f395ff3fe608060405234801561000f575f80fd5b5060043610610091575f3560e01c806395d89b411161006457806395d89b4114610143578063a22cb46514610161578063dd7d84401461017d578063e560ca43146101ad578063e985e9c5146101c957610091565b806306fdde031461009557806370a08231146100b357806382a7cf1e146100e357806393b871f214610113575b5f80fd5b61009d6101f9565b6040516100aa9190610b37565b60405180910390f35b6100cd60048036038101906100c89190610bae565b61020d565b6040516100da9190610bf5565b60405180910390f35b6100fd60048036038101906100f89190610c38565b6102ee565b60405161010a9190610c72565b60405180910390f35b61012d60048036038101906101289190610c38565b6102ff565b60405161013a9190610c72565b60405180910390f35b61014b61034b565b6040516101589190610cc5565b60405180910390f35b61017b60048036038101906101769190610d13565b610360565b005b61019760048036038101906101929190610c38565b61054c565b6040516101a49190610ddb565b60405180910390f35b6101c760048036038101906101c29190610dfb565b6105b6565b005b6101e360048036038101906101de9190610e39565b6105cc565b6040516101f09190610e86565b60405180910390f35b5f805f9054906101000a900460601b905090565b5f8073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361027c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161027390610ee9565b60405180910390fd5b6104b35f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6104b181106102cd576102cc610f07565b5b601091828204019190066002029054906101000a900461ffff169050919050565b5f6102f88261065b565b9050919050565b5f6103098261065b565b506104b45f8361ffff1661ffff1681526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b5f8060149054906101000a900460b01b905090565b8173ffffffffffffffffffffffffffffffffffffffff1661037f610709565b73ffffffffffffffffffffffffffffffffffffffff16036103d5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103cc90610fa4565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361044557816040517f5b08ba1800000000000000000000000000000000000000000000000000000000815260040161043c9190610c72565b60405180910390fd5b806104b55f610452610709565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff166104fb610709565b73ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31836040516105409190610e86565b60405180910390a35050565b60606105578261065b565b505f610561610710565b90505f81511161057f5760405180602001604052805f8152506105ae565b8061058d8461ffff16610726565b60405160200161059e929190610ffc565b6040516020818303038152906040525b915050919050565b6105c882826105c3610709565b6107f0565b5050565b5f6104b55f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905092915050565b5f8161ffff165f108015610689575060015f0160029054906101000a900461ffff1661ffff168261ffff1611155b6106c8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106bf906110b5565b60405180910390fd5b60028261ffff166104b181106106e1576106e0610f07565b5b015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b5f33905090565b606060405180602001604052805f815250905090565b60605f6001610734846109ac565b0190505f8167ffffffffffffffff811115610752576107516110d3565b5b6040519080825280601f01601f1916602001820160405280156107845781602001600182028036833780820191505090505b5090505f82602001820190505b6001156107e5578080600190039150507f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a85816107da576107d9611100565b5b0494505f8503610791575b819350505050919050565b5f6107fa8361065b565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361086a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161086190610fa4565b60405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141580156108ad57506108ab81836105cc565b155b156108ef57816040517fa9fbf51f0000000000000000000000000000000000000000000000000000000081526004016108e69190610c72565b60405180910390fd5b836104b45f8561ffff1661ffff1681526020019081526020015f205f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508261ffff168473ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f0a9d294fd4bd42bb30e96cba2b478d149a783fba3c729b1e5c42bec89d95b85a60405160405180910390a450505050565b5f805f90507a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008310610a08577a184f03e93ff9f4daa797ed6e38ed64bf6a1f01000000000000000083816109fe576109fd611100565b5b0492506040810190505b6d04ee2d6d415b85acef81000000008310610a45576d04ee2d6d415b85acef81000000008381610a3b57610a3a611100565b5b0492506020810190505b662386f26fc100008310610a7457662386f26fc100008381610a6a57610a69611100565b5b0492506010810190505b6305f5e1008310610a9d576305f5e1008381610a9357610a92611100565b5b0492506008810190505b6127108310610ac2576127108381610ab857610ab7611100565b5b0492506004810190505b60648310610ae55760648381610adb57610ada611100565b5b0492506002810190505b600a8310610af4576001810190505b80915050919050565b5f7fffffffffffffffffffffffffffffffffffffffff00000000000000000000000082169050919050565b610b3181610afd565b82525050565b5f602082019050610b4a5f830184610b28565b92915050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610b7d82610b54565b9050919050565b610b8d81610b73565b8114610b97575f80fd5b50565b5f81359050610ba881610b84565b92915050565b5f60208284031215610bc357610bc2610b50565b5b5f610bd084828501610b9a565b91505092915050565b5f61ffff82169050919050565b610bef81610bd9565b82525050565b5f602082019050610c085f830184610be6565b92915050565b610c1781610bd9565b8114610c21575f80fd5b50565b5f81359050610c3281610c0e565b92915050565b5f60208284031215610c4d57610c4c610b50565b5b5f610c5a84828501610c24565b91505092915050565b610c6c81610b73565b82525050565b5f602082019050610c855f830184610c63565b92915050565b5f7fffffffffffffffffffff0000000000000000000000000000000000000000000082169050919050565b610cbf81610c8b565b82525050565b5f602082019050610cd85f830184610cb6565b92915050565b5f8115159050919050565b610cf281610cde565b8114610cfc575f80fd5b50565b5f81359050610d0d81610ce9565b92915050565b5f8060408385031215610d2957610d28610b50565b5b5f610d3685828601610b9a565b9250506020610d4785828601610cff565b9150509250929050565b5f81519050919050565b5f82825260208201905092915050565b5f5b83811015610d88578082015181840152602081019050610d6d565b5f8484015250505050565b5f601f19601f8301169050919050565b5f610dad82610d51565b610db78185610d5b565b9350610dc7818560208601610d6b565b610dd081610d93565b840191505092915050565b5f6020820190508181035f830152610df38184610da3565b905092915050565b5f8060408385031215610e1157610e10610b50565b5b5f610e1e85828601610b9a565b9250506020610e2f85828601610c24565b9150509250929050565b5f8060408385031215610e4f57610e4e610b50565b5b5f610e5c85828601610b9a565b9250506020610e6d85828601610b9a565b9150509250929050565b610e8081610cde565b82525050565b5f602082019050610e995f830184610e77565b92915050565b7f54686520696e70757420616464726573732063616e6e6f74206265207a65726f5f82015250565b5f610ed3602083610d5b565b9150610ede82610e9f565b602082019050919050565b5f6020820190508181035f830152610f0081610ec7565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b7f5468652061646472657373206f6620746865206f776e657220616e64207468655f8201527f206f70657261746f72206d75737420626520646966666572656e740000000000602082015250565b5f610f8e603b83610d5b565b9150610f9982610f34565b604082019050919050565b5f6020820190508181035f830152610fbb81610f82565b9050919050565b5f81905092915050565b5f610fd682610d51565b610fe08185610fc2565b9350610ff0818560208601610d6b565b80840191505092915050565b5f6110078285610fcc565b91506110138284610fcc565b91508190509392505050565b7f54686520494420656e746572656420697320696e76616c69642e204974206d755f8201527f737420626520696e207468697320696e74657276616c2030203c206964203c3d60208201527f2063757272656e7420746f6b656e730000000000000000000000000000000000604082015250565b5f61109f604f83610d5b565b91506110aa8261101f565b606082019050919050565b5f6020820190508181035f8301526110cc81611093565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffdfea264697066735822122074227527dc031273894aa7740043449d768f84101047a6454aacb3e2c9c0da8d64736f6c63430008140033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x10 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x12FB CODESIZE SUB DUP1 PUSH3 0x12FB DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x36 SWAP2 SWAP1 PUSH3 0x145 JUMP JUMPDEST DUP2 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH1 0x60 SHR MUL OR SWAP1 SSTORE POP DUP1 PUSH0 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH10 0xFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH1 0xB0 SHR MUL OR SWAP1 SSTORE POP POP POP PUSH3 0x18A JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0xC7 DUP2 PUSH3 0x91 JUMP JUMPDEST DUP2 EQ PUSH3 0xD2 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH3 0xE5 DUP2 PUSH3 0xBC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH32 0xFFFFFFFFFFFFFFFFFFFF00000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x121 DUP2 PUSH3 0xEB JUMP JUMPDEST DUP2 EQ PUSH3 0x12C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH3 0x13F DUP2 PUSH3 0x116 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x15E JUMPI PUSH3 0x15D PUSH3 0x8D JUMP JUMPDEST JUMPDEST PUSH0 PUSH3 0x16D DUP6 DUP3 DUP7 ADD PUSH3 0xD5 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH3 0x180 DUP6 DUP3 DUP7 ADD PUSH3 0x12F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x1163 DUP1 PUSH3 0x198 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x91 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x95D89B41 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x143 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x161 JUMPI DUP1 PUSH4 0xDD7D8440 EQ PUSH2 0x17D JUMPI DUP1 PUSH4 0xE560CA43 EQ PUSH2 0x1AD JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x1C9 JUMPI PUSH2 0x91 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x95 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0xB3 JUMPI DUP1 PUSH4 0x82A7CF1E EQ PUSH2 0xE3 JUMPI DUP1 PUSH4 0x93B871F2 EQ PUSH2 0x113 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x9D PUSH2 0x1F9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xAA SWAP2 SWAP1 PUSH2 0xB37 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xCD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xC8 SWAP2 SWAP1 PUSH2 0xBAE JUMP JUMPDEST PUSH2 0x20D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xDA SWAP2 SWAP1 PUSH2 0xBF5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xFD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xF8 SWAP2 SWAP1 PUSH2 0xC38 JUMP JUMPDEST PUSH2 0x2EE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x10A SWAP2 SWAP1 PUSH2 0xC72 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x12D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x128 SWAP2 SWAP1 PUSH2 0xC38 JUMP JUMPDEST PUSH2 0x2FF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13A SWAP2 SWAP1 PUSH2 0xC72 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x14B PUSH2 0x34B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x158 SWAP2 SWAP1 PUSH2 0xCC5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x17B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x176 SWAP2 SWAP1 PUSH2 0xD13 JUMP JUMPDEST PUSH2 0x360 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x197 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x192 SWAP2 SWAP1 PUSH2 0xC38 JUMP JUMPDEST PUSH2 0x54C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A4 SWAP2 SWAP1 PUSH2 0xDDB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C2 SWAP2 SWAP1 PUSH2 0xDFB JUMP JUMPDEST PUSH2 0x5B6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1E3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1DE SWAP2 SWAP1 PUSH2 0xE39 JUMP JUMPDEST PUSH2 0x5CC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F0 SWAP2 SWAP1 PUSH2 0xE86 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x60 SHL SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x27C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x273 SWAP1 PUSH2 0xEE9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x4B3 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x4B1 DUP2 LT PUSH2 0x2CD JUMPI PUSH2 0x2CC PUSH2 0xF07 JUMP JUMPDEST JUMPDEST PUSH1 0x10 SWAP2 DUP3 DUP3 DIV ADD SWAP2 SWAP1 MOD PUSH1 0x2 MUL SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH2 0xFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2F8 DUP3 PUSH2 0x65B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x309 DUP3 PUSH2 0x65B JUMP JUMPDEST POP PUSH2 0x4B4 PUSH0 DUP4 PUSH2 0xFFFF AND PUSH2 0xFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xB0 SHL SWAP1 POP SWAP1 JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x37F PUSH2 0x709 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x3D5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3CC SWAP1 PUSH2 0xFA4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x445 JUMPI DUP2 PUSH1 0x40 MLOAD PUSH32 0x5B08BA1800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x43C SWAP2 SWAP1 PUSH2 0xC72 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH2 0x4B5 PUSH0 PUSH2 0x452 PUSH2 0x709 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x4FB PUSH2 0x709 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0x540 SWAP2 SWAP1 PUSH2 0xE86 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x557 DUP3 PUSH2 0x65B JUMP JUMPDEST POP PUSH0 PUSH2 0x561 PUSH2 0x710 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 MLOAD GT PUSH2 0x57F JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0x5AE JUMP JUMPDEST DUP1 PUSH2 0x58D DUP5 PUSH2 0xFFFF AND PUSH2 0x726 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x59E SWAP3 SWAP2 SWAP1 PUSH2 0xFFC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x5C8 DUP3 DUP3 PUSH2 0x5C3 PUSH2 0x709 JUMP JUMPDEST PUSH2 0x7F0 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH2 0x4B5 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 PUSH2 0xFFFF AND PUSH0 LT DUP1 ISZERO PUSH2 0x689 JUMPI POP PUSH1 0x1 PUSH0 ADD PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH2 0xFFFF AND PUSH2 0xFFFF AND DUP3 PUSH2 0xFFFF AND GT ISZERO JUMPDEST PUSH2 0x6C8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6BF SWAP1 PUSH2 0x10B5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 DUP3 PUSH2 0xFFFF AND PUSH2 0x4B1 DUP2 LT PUSH2 0x6E1 JUMPI PUSH2 0x6E0 PUSH2 0xF07 JUMP JUMPDEST JUMPDEST ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH1 0x1 PUSH2 0x734 DUP5 PUSH2 0x9AC JUMP JUMPDEST ADD SWAP1 POP PUSH0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x752 JUMPI PUSH2 0x751 PUSH2 0x10D3 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x784 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 DUP3 PUSH1 0x20 ADD DUP3 ADD SWAP1 POP JUMPDEST PUSH1 0x1 ISZERO PUSH2 0x7E5 JUMPI DUP1 DUP1 PUSH1 0x1 SWAP1 SUB SWAP2 POP POP PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DUP2 PUSH2 0x7DA JUMPI PUSH2 0x7D9 PUSH2 0x1100 JUMP JUMPDEST JUMPDEST DIV SWAP5 POP PUSH0 DUP6 SUB PUSH2 0x791 JUMPI JUMPDEST DUP2 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x7FA DUP4 PUSH2 0x65B JUMP JUMPDEST SWAP1 POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x86A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x861 SWAP1 PUSH2 0xFA4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x8AD JUMPI POP PUSH2 0x8AB DUP2 DUP4 PUSH2 0x5CC JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x8EF JUMPI DUP2 PUSH1 0x40 MLOAD PUSH32 0xA9FBF51F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8E6 SWAP2 SWAP1 PUSH2 0xC72 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP4 PUSH2 0x4B4 PUSH0 DUP6 PUSH2 0xFFFF AND PUSH2 0xFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP3 PUSH2 0xFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xA9D294FD4BD42BB30E96CBA2B478D149A783FBA3C729B1E5C42BEC89D95B85A PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 POP PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 LT PUSH2 0xA08 JUMPI PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 DUP2 PUSH2 0x9FE JUMPI PUSH2 0x9FD PUSH2 0x1100 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x40 DUP2 ADD SWAP1 POP JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0xA45 JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DUP2 PUSH2 0xA3B JUMPI PUSH2 0xA3A PUSH2 0x1100 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x20 DUP2 ADD SWAP1 POP JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0xA74 JUMPI PUSH7 0x2386F26FC10000 DUP4 DUP2 PUSH2 0xA6A JUMPI PUSH2 0xA69 PUSH2 0x1100 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x10 DUP2 ADD SWAP1 POP JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0xA9D JUMPI PUSH4 0x5F5E100 DUP4 DUP2 PUSH2 0xA93 JUMPI PUSH2 0xA92 PUSH2 0x1100 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x8 DUP2 ADD SWAP1 POP JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0xAC2 JUMPI PUSH2 0x2710 DUP4 DUP2 PUSH2 0xAB8 JUMPI PUSH2 0xAB7 PUSH2 0x1100 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x4 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0xAE5 JUMPI PUSH1 0x64 DUP4 DUP2 PUSH2 0xADB JUMPI PUSH2 0xADA PUSH2 0x1100 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x2 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0xAF4 JUMPI PUSH1 0x1 DUP2 ADD SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB31 DUP2 PUSH2 0xAFD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xB4A PUSH0 DUP4 ADD DUP5 PUSH2 0xB28 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xB7D DUP3 PUSH2 0xB54 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB8D DUP2 PUSH2 0xB73 JUMP JUMPDEST DUP2 EQ PUSH2 0xB97 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xBA8 DUP2 PUSH2 0xB84 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xBC3 JUMPI PUSH2 0xBC2 PUSH2 0xB50 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xBD0 DUP5 DUP3 DUP6 ADD PUSH2 0xB9A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xBEF DUP2 PUSH2 0xBD9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC08 PUSH0 DUP4 ADD DUP5 PUSH2 0xBE6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xC17 DUP2 PUSH2 0xBD9 JUMP JUMPDEST DUP2 EQ PUSH2 0xC21 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xC32 DUP2 PUSH2 0xC0E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC4D JUMPI PUSH2 0xC4C PUSH2 0xB50 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xC5A DUP5 DUP3 DUP6 ADD PUSH2 0xC24 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xC6C DUP2 PUSH2 0xB73 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC85 PUSH0 DUP4 ADD DUP5 PUSH2 0xC63 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH32 0xFFFFFFFFFFFFFFFFFFFF00000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xCBF DUP2 PUSH2 0xC8B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xCD8 PUSH0 DUP4 ADD DUP5 PUSH2 0xCB6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xCF2 DUP2 PUSH2 0xCDE JUMP JUMPDEST DUP2 EQ PUSH2 0xCFC JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xD0D DUP2 PUSH2 0xCE9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xD29 JUMPI PUSH2 0xD28 PUSH2 0xB50 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xD36 DUP6 DUP3 DUP7 ADD PUSH2 0xB9A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xD47 DUP6 DUP3 DUP7 ADD PUSH2 0xCFF JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xD88 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xD6D JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xDAD DUP3 PUSH2 0xD51 JUMP JUMPDEST PUSH2 0xDB7 DUP2 DUP6 PUSH2 0xD5B JUMP JUMPDEST SWAP4 POP PUSH2 0xDC7 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xD6B JUMP JUMPDEST PUSH2 0xDD0 DUP2 PUSH2 0xD93 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xDF3 DUP2 DUP5 PUSH2 0xDA3 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xE11 JUMPI PUSH2 0xE10 PUSH2 0xB50 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xE1E DUP6 DUP3 DUP7 ADD PUSH2 0xB9A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xE2F DUP6 DUP3 DUP7 ADD PUSH2 0xC24 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xE4F JUMPI PUSH2 0xE4E PUSH2 0xB50 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xE5C DUP6 DUP3 DUP7 ADD PUSH2 0xB9A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xE6D DUP6 DUP3 DUP7 ADD PUSH2 0xB9A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0xE80 DUP2 PUSH2 0xCDE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xE99 PUSH0 DUP4 ADD DUP5 PUSH2 0xE77 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x54686520696E70757420616464726573732063616E6E6F74206265207A65726F PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xED3 PUSH1 0x20 DUP4 PUSH2 0xD5B JUMP JUMPDEST SWAP2 POP PUSH2 0xEDE DUP3 PUSH2 0xE9F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xF00 DUP2 PUSH2 0xEC7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x5468652061646472657373206F6620746865206F776E657220616E6420746865 PUSH0 DUP3 ADD MSTORE PUSH32 0x206F70657261746F72206D75737420626520646966666572656E740000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xF8E PUSH1 0x3B DUP4 PUSH2 0xD5B JUMP JUMPDEST SWAP2 POP PUSH2 0xF99 DUP3 PUSH2 0xF34 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xFBB DUP2 PUSH2 0xF82 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xFD6 DUP3 PUSH2 0xD51 JUMP JUMPDEST PUSH2 0xFE0 DUP2 DUP6 PUSH2 0xFC2 JUMP JUMPDEST SWAP4 POP PUSH2 0xFF0 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xD6B JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1007 DUP3 DUP6 PUSH2 0xFCC JUMP JUMPDEST SWAP2 POP PUSH2 0x1013 DUP3 DUP5 PUSH2 0xFCC JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x54686520494420656E746572656420697320696E76616C69642E204974206D75 PUSH0 DUP3 ADD MSTORE PUSH32 0x737420626520696E207468697320696E74657276616C2030203C206964203C3D PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x2063757272656E7420746F6B656E730000000000000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x109F PUSH1 0x4F DUP4 PUSH2 0xD5B JUMP JUMPDEST SWAP2 POP PUSH2 0x10AA DUP3 PUSH2 0x101F JUMP JUMPDEST PUSH1 0x60 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x10CC DUP2 PUSH2 0x1093 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH21 0x227527DC031273894AA7740043449D768F84101047 0xA6 GASLIMIT 0x4A 0xAC 0xB3 0xE2 0xC9 0xC0 0xDA DUP14 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ",
							"sourceMap": "316:3437:6:-:0;;;1202:104;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1265:5;1257;;:13;;;;;;;;;;;;;;;;;;1291:7;1281;;:17;;;;;;;;;;;;;;;;;;1202:104;;316:3437;;88:117:7;197:1;194;187:12;334:150;371:7;411:66;404:5;400:78;389:89;;334:150;;;:::o;490:122::-;563:24;581:5;563:24;:::i;:::-;556:5;553:35;543:63;;602:1;599;592:12;543:63;490:122;:::o;618:143::-;675:5;706:6;700:13;691:22;;722:33;749:5;722:33;:::i;:::-;618:143;;;;:::o;767:150::-;804:7;844:66;837:5;833:78;822:89;;767:150;;;:::o;923:122::-;996:24;1014:5;996:24;:::i;:::-;989:5;986:35;976:63;;1035:1;1032;1025:12;976:63;923:122;:::o;1051:143::-;1108:5;1139:6;1133:13;1124:22;;1155:33;1182:5;1155:33;:::i;:::-;1051:143;;;;:::o;1200:507::-;1279:6;1287;1336:2;1324:9;1315:7;1311:23;1307:32;1304:119;;;1342:79;;:::i;:::-;1304:119;1462:1;1487:64;1543:7;1534:6;1523:9;1519:22;1487:64;:::i;:::-;1477:74;;1433:128;1600:2;1626:64;1682:7;1673:6;1662:9;1658:22;1626:64;:::i;:::-;1616:74;;1571:129;1200:507;;;;;:::o;316:3437:6:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_aprove_2150": {
									"entryPoint": 2032,
									"id": 2150,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_baseURI_2182": {
									"entryPoint": 1808,
									"id": 2182,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_msgSender_401": {
									"entryPoint": 1801,
									"id": 401,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_requireOwned_2174": {
									"entryPoint": 1627,
									"id": 2174,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@approve_2024": {
									"entryPoint": 1462,
									"id": 2024,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@balanceOf_1962": {
									"entryPoint": 525,
									"id": 1962,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getApproved_2040": {
									"entryPoint": 767,
									"id": 2040,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@isApprovedForAll_2100": {
									"entryPoint": 1484,
									"id": 2100,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@log10_1548": {
									"entryPoint": 2476,
									"id": 1548,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@name_1930": {
									"entryPoint": 505,
									"id": 1930,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@ownerOf_1974": {
									"entryPoint": 750,
									"id": 1974,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@setApprovalForAll_2084": {
									"entryPoint": 864,
									"id": 2084,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@symbol_1938": {
									"entryPoint": 843,
									"id": 1938,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@toString_487": {
									"entryPoint": 1830,
									"id": 487,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@tokenURI_2009": {
									"entryPoint": 1356,
									"id": 2009,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 2970,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool": {
									"entryPoint": 3327,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint16": {
									"entryPoint": 3108,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 2990,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 3641,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 3347,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint16": {
									"entryPoint": 3579,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint16": {
									"entryPoint": 3128,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 3171,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 3703,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes10_to_t_bytes10_fromStack": {
									"entryPoint": 3254,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes20_to_t_bytes20_fromStack": {
									"entryPoint": 2856,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3491,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 4044,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_04ac8f36c142f1891048ed77339b8705d10008afae0986d82fa07e197d36aa25_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3970,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_a0ed4e8cad639975e700098d07f166902169c365243b6972750486c0b152b957_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3783,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_d01a6ddc51808b791794e2bc370247f685df6f3cfeea0cd79f01cec6a9ccb52f_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4243,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint16_to_t_uint16_fromStack": {
									"entryPoint": 3046,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 4092,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 3186,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 3718,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes10__to_t_bytes10__fromStack_reversed": {
									"entryPoint": 3269,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes20__to_t_bytes20__fromStack_reversed": {
									"entryPoint": 2871,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3547,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_04ac8f36c142f1891048ed77339b8705d10008afae0986d82fa07e197d36aa25__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4004,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_a0ed4e8cad639975e700098d07f166902169c365243b6972750486c0b152b957__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3817,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d01a6ddc51808b791794e2bc370247f685df6f3cfeea0cd79f01cec6a9ccb52f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4277,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint16__to_t_uint16__fromStack_reversed": {
									"entryPoint": 3061,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 3409,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 3419,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 4034,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 2931,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 3294,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes10": {
									"entryPoint": 3211,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes20": {
									"entryPoint": 2813,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint16": {
									"entryPoint": 3033,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 2900,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 3435,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 4352,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 3847,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 4307,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 2896,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 3475,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_04ac8f36c142f1891048ed77339b8705d10008afae0986d82fa07e197d36aa25": {
									"entryPoint": 3892,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_a0ed4e8cad639975e700098d07f166902169c365243b6972750486c0b152b957": {
									"entryPoint": 3743,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_d01a6ddc51808b791794e2bc370247f685df6f3cfeea0cd79f01cec6a9ccb52f": {
									"entryPoint": 4127,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 2948,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 3305,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint16": {
									"entryPoint": 3086,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:11734:7",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "52:105:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "62:89:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "77:5:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "84:66:7",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "73:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "73:78:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "34:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "44:7:7",
														"type": ""
													}
												],
												"src": "7:150:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "228:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "245:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "268:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bytes20",
																			"nodeType": "YulIdentifier",
																			"src": "250:17:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "250:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "238:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "238:37:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "238:37:7"
														}
													]
												},
												"name": "abi_encode_t_bytes20_to_t_bytes20_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "216:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "223:3:7",
														"type": ""
													}
												],
												"src": "163:118:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "385:124:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "395:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "407:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "418:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "403:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "403:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "395:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "475:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "488:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "499:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "484:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "484:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes20_to_t_bytes20_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "431:43:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "431:71:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "431:71:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes20__to_t_bytes20__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "357:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "369:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "380:4:7",
														"type": ""
													}
												],
												"src": "287:222:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "555:35:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "565:19:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "581:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "575:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "575:9:7"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "565:6:7"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "548:6:7",
														"type": ""
													}
												],
												"src": "515:75:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "685:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "702:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "705:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "695:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "695:12:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "695:12:7"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "596:117:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "808:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "825:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "828:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "818:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "818:12:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "818:12:7"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "719:117:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "887:81:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "897:65:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "912:5:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "919:42:7",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "908:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "908:54:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "897:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "869:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "879:7:7",
														"type": ""
													}
												],
												"src": "842:126:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1019:51:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1029:35:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1058:5:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "1040:17:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1040:24:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1029:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1001:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1011:7:7",
														"type": ""
													}
												],
												"src": "974:96:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1119:79:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1176:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1185:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1188:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1178:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1178:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1178:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1142:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1167:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "1149:17:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1149:24:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1139:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1139:35:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1132:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1132:43:7"
															},
															"nodeType": "YulIf",
															"src": "1129:63:7"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1112:5:7",
														"type": ""
													}
												],
												"src": "1076:122:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1256:87:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1266:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1288:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1275:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1275:20:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1266:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1331:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "1304:26:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1304:33:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1304:33:7"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1234:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1242:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1250:5:7",
														"type": ""
													}
												],
												"src": "1204:139:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1415:263:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1461:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1463:77:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1463:79:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1463:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1436:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1445:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1432:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1432:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1457:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1428:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1428:32:7"
															},
															"nodeType": "YulIf",
															"src": "1425:119:7"
														},
														{
															"nodeType": "YulBlock",
															"src": "1554:117:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1569:15:7",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1583:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1573:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1598:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1633:9:7"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1644:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1629:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1629:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1653:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1608:20:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1608:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1598:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1385:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1396:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1408:6:7",
														"type": ""
													}
												],
												"src": "1349:329:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1728:45:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1738:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1753:5:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1760:6:7",
																		"type": "",
																		"value": "0xffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1749:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1749:18:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1738:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1710:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1720:7:7",
														"type": ""
													}
												],
												"src": "1684:89:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1842:52:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1859:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1881:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint16",
																			"nodeType": "YulIdentifier",
																			"src": "1864:16:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1864:23:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1852:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1852:36:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1852:36:7"
														}
													]
												},
												"name": "abi_encode_t_uint16_to_t_uint16_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1830:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1837:3:7",
														"type": ""
													}
												],
												"src": "1779:115:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1996:122:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2006:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2018:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2029:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2014:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2014:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2006:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2084:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2097:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2108:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2093:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2093:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint16_to_t_uint16_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2042:41:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2042:69:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2042:69:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint16__to_t_uint16__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1968:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1980:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1991:4:7",
														"type": ""
													}
												],
												"src": "1900:218:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2166:78:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2222:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2231:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2234:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2224:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2224:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2224:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2189:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2213:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint16",
																					"nodeType": "YulIdentifier",
																					"src": "2196:16:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2196:23:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2186:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2186:34:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2179:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2179:42:7"
															},
															"nodeType": "YulIf",
															"src": "2176:62:7"
														}
													]
												},
												"name": "validator_revert_t_uint16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2159:5:7",
														"type": ""
													}
												],
												"src": "2124:120:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2301:86:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2311:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2333:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2320:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2320:20:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2311:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2375:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint16",
																	"nodeType": "YulIdentifier",
																	"src": "2349:25:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2349:32:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2349:32:7"
														}
													]
												},
												"name": "abi_decode_t_uint16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2279:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2287:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2295:5:7",
														"type": ""
													}
												],
												"src": "2250:137:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2458:262:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2504:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2506:77:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2506:79:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2506:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2479:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2488:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2475:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2475:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2500:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2471:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2471:32:7"
															},
															"nodeType": "YulIf",
															"src": "2468:119:7"
														},
														{
															"nodeType": "YulBlock",
															"src": "2597:116:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2612:15:7",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2626:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2616:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2641:62:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2675:9:7"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2686:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2671:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2671:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2695:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint16",
																			"nodeType": "YulIdentifier",
																			"src": "2651:19:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2651:52:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2641:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2428:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2439:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2451:6:7",
														"type": ""
													}
												],
												"src": "2393:327:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2791:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2808:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2831:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2813:17:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2813:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2801:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2801:37:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2801:37:7"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2779:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2786:3:7",
														"type": ""
													}
												],
												"src": "2726:118:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2948:124:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2958:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2970:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2981:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2966:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2966:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2958:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3038:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3051:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3062:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3047:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3047:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2994:43:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2994:71:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2994:71:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2920:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2932:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2943:4:7",
														"type": ""
													}
												],
												"src": "2850:222:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3123:105:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3133:89:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3148:5:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3155:66:7",
																		"type": "",
																		"value": "0xffffffffffffffffffff00000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "3144:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3144:78:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "3133:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3105:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "3115:7:7",
														"type": ""
													}
												],
												"src": "3078:150:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3299:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3316:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3339:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bytes10",
																			"nodeType": "YulIdentifier",
																			"src": "3321:17:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3321:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3309:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3309:37:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3309:37:7"
														}
													]
												},
												"name": "abi_encode_t_bytes10_to_t_bytes10_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3287:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3294:3:7",
														"type": ""
													}
												],
												"src": "3234:118:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3456:124:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3466:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3478:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3489:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3474:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3474:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3466:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3546:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3559:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3570:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3555:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3555:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes10_to_t_bytes10_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3502:43:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3502:71:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3502:71:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes10__to_t_bytes10__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3428:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3440:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3451:4:7",
														"type": ""
													}
												],
												"src": "3358:222:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3628:48:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3638:32:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3663:5:7"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "3656:6:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3656:13:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3649:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3649:21:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "3638:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3610:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "3620:7:7",
														"type": ""
													}
												],
												"src": "3586:90:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3722:76:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3776:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3785:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3788:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3778:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3778:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3778:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3745:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "3767:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "3752:14:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3752:21:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "3742:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3742:32:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3735:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3735:40:7"
															},
															"nodeType": "YulIf",
															"src": "3732:60:7"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3715:5:7",
														"type": ""
													}
												],
												"src": "3682:116:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3853:84:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3863:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3885:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3872:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3872:20:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "3863:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3925:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "3901:23:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3901:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3901:30:7"
														}
													]
												},
												"name": "abi_decode_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "3831:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3839:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3847:5:7",
														"type": ""
													}
												],
												"src": "3804:133:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4023:388:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4069:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "4071:77:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4071:79:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4071:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4044:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4053:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4040:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4040:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4065:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4036:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4036:32:7"
															},
															"nodeType": "YulIf",
															"src": "4033:119:7"
														},
														{
															"nodeType": "YulBlock",
															"src": "4162:117:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4177:15:7",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4191:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4181:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4206:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4241:9:7"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4252:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4237:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4237:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4261:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4216:20:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4216:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "4206:6:7"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4289:115:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4304:16:7",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4318:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4308:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4334:60:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4366:9:7"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4377:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4362:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4362:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4386:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "4344:17:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4344:50:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "4334:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3985:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3996:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4008:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4016:6:7",
														"type": ""
													}
												],
												"src": "3943:468:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4476:40:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4487:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4503:5:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "4497:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4497:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "4487:6:7"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4459:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "4469:6:7",
														"type": ""
													}
												],
												"src": "4417:99:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4618:73:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4635:3:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4640:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4628:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4628:19:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4628:19:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4656:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4675:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4680:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4671:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4671:14:7"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "4656:11:7"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4590:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "4595:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "4606:11:7",
														"type": ""
													}
												],
												"src": "4522:169:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4759:184:7",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4769:10:7",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "4778:1:7",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "4773:1:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4838:63:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "4863:3:7"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "4868:1:7"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "4859:3:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4859:11:7"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "4882:3:7"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "4887:1:7"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "4878:3:7"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "4878:11:7"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "4872:5:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4872:18:7"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "4852:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4852:39:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4852:39:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "4799:1:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4802:6:7"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "4796:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4796:13:7"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "4810:19:7",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "4812:15:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "4821:1:7"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4824:2:7",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "4817:3:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4817:10:7"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "4812:1:7"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "4792:3:7",
																"statements": []
															},
															"src": "4788:113:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "4921:3:7"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "4926:6:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4917:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4917:16:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4935:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4910:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4910:27:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4910:27:7"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "4741:3:7",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "4746:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "4751:6:7",
														"type": ""
													}
												],
												"src": "4697:246:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4997:54:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5007:38:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5025:5:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5032:2:7",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5021:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5021:14:7"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5041:2:7",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "5037:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5037:7:7"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "5017:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5017:28:7"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "5007:6:7"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4980:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "4990:6:7",
														"type": ""
													}
												],
												"src": "4949:102:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5149:285:7",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5159:53:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5206:5:7"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "5173:32:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5173:39:7"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "5163:6:7",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5221:78:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5287:3:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "5292:6:7"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5228:58:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5228:71:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "5221:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5347:5:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5354:4:7",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5343:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5343:16:7"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5361:3:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "5366:6:7"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "5308:34:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5308:65:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5308:65:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5382:46:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5393:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "5420:6:7"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "5398:21:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5398:29:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5389:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5389:39:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "5382:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5130:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5137:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5145:3:7",
														"type": ""
													}
												],
												"src": "5057:377:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5558:195:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5568:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5580:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5591:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5576:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5576:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5568:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5615:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5626:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5611:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5611:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "5634:4:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5640:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5630:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5630:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5604:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5604:47:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5604:47:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5660:86:7",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5732:6:7"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "5741:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5668:63:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5668:78:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5660:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5530:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5542:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5553:4:7",
														"type": ""
													}
												],
												"src": "5440:313:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5841:390:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5887:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "5889:77:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5889:79:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5889:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5862:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5871:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5858:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5858:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5883:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5854:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5854:32:7"
															},
															"nodeType": "YulIf",
															"src": "5851:119:7"
														},
														{
															"nodeType": "YulBlock",
															"src": "5980:117:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5995:15:7",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6009:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5999:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6024:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6059:9:7"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6070:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6055:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6055:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6079:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "6034:20:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6034:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "6024:6:7"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "6107:117:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6122:16:7",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6136:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6126:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6152:62:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6186:9:7"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6197:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6182:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6182:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6206:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint16",
																			"nodeType": "YulIdentifier",
																			"src": "6162:19:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6162:52:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "6152:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5803:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5814:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5826:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5834:6:7",
														"type": ""
													}
												],
												"src": "5759:472:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6320:391:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6366:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "6368:77:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6368:79:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6368:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6341:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6350:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6337:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6337:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6362:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "6333:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6333:32:7"
															},
															"nodeType": "YulIf",
															"src": "6330:119:7"
														},
														{
															"nodeType": "YulBlock",
															"src": "6459:117:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6474:15:7",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6488:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6478:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6503:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6538:9:7"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6549:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6534:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6534:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6558:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "6513:20:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6513:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "6503:6:7"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "6586:118:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6601:16:7",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6615:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6605:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6631:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6666:9:7"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6677:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6662:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6662:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6686:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "6641:20:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6641:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "6631:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6282:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "6293:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6305:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "6313:6:7",
														"type": ""
													}
												],
												"src": "6237:474:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6776:50:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6793:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6813:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "6798:14:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6798:21:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6786:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6786:34:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6786:34:7"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6764:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6771:3:7",
														"type": ""
													}
												],
												"src": "6717:109:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6924:118:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6934:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6946:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6957:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6942:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6942:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6934:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "7008:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7021:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7032:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7017:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7017:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6970:37:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6970:65:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6970:65:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6896:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6908:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6919:4:7",
														"type": ""
													}
												],
												"src": "6832:210:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7154:76:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "7176:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7184:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7172:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7172:14:7"
																	},
																	{
																		"hexValue": "54686520696e70757420616464726573732063616e6e6f74206265207a65726f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7188:34:7",
																		"type": "",
																		"value": "The input address cannot be zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7165:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7165:58:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7165:58:7"
														}
													]
												},
												"name": "store_literal_in_memory_a0ed4e8cad639975e700098d07f166902169c365243b6972750486c0b152b957",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "7146:6:7",
														"type": ""
													}
												],
												"src": "7048:182:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7382:220:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7392:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7458:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7463:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7399:58:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7399:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "7392:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7564:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_a0ed4e8cad639975e700098d07f166902169c365243b6972750486c0b152b957",
																	"nodeType": "YulIdentifier",
																	"src": "7475:88:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7475:93:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7475:93:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7577:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7588:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7593:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7584:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7584:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "7577:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_a0ed4e8cad639975e700098d07f166902169c365243b6972750486c0b152b957_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7370:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "7378:3:7",
														"type": ""
													}
												],
												"src": "7236:366:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7779:248:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7789:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7801:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7812:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7797:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7797:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7789:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7836:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7847:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7832:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7832:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "7855:4:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7861:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7851:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7851:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7825:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7825:47:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7825:47:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7881:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "8015:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_a0ed4e8cad639975e700098d07f166902169c365243b6972750486c0b152b957_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7889:124:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7889:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7881:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_a0ed4e8cad639975e700098d07f166902169c365243b6972750486c0b152b957__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7759:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7774:4:7",
														"type": ""
													}
												],
												"src": "7608:419:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8061:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8078:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8081:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8071:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8071:88:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8071:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8175:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8178:4:7",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8168:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8168:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8168:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8199:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8202:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "8192:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8192:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8192:15:7"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "8033:180:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8325:140:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "8347:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8355:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8343:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8343:14:7"
																	},
																	{
																		"hexValue": "5468652061646472657373206f6620746865206f776e657220616e6420746865",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8359:34:7",
																		"type": "",
																		"value": "The address of the owner and the"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8336:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8336:58:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8336:58:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "8415:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8423:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8411:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8411:15:7"
																	},
																	{
																		"hexValue": "206f70657261746f72206d75737420626520646966666572656e74",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8428:29:7",
																		"type": "",
																		"value": " operator must be different"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8404:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8404:54:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8404:54:7"
														}
													]
												},
												"name": "store_literal_in_memory_04ac8f36c142f1891048ed77339b8705d10008afae0986d82fa07e197d36aa25",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "8317:6:7",
														"type": ""
													}
												],
												"src": "8219:246:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8617:220:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8627:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8693:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8698:2:7",
																		"type": "",
																		"value": "59"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8634:58:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8634:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "8627:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8799:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_04ac8f36c142f1891048ed77339b8705d10008afae0986d82fa07e197d36aa25",
																	"nodeType": "YulIdentifier",
																	"src": "8710:88:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8710:93:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8710:93:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8812:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8823:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8828:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8819:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8819:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "8812:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_04ac8f36c142f1891048ed77339b8705d10008afae0986d82fa07e197d36aa25_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "8605:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "8613:3:7",
														"type": ""
													}
												],
												"src": "8471:366:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9014:248:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9024:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9036:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9047:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9032:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9032:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9024:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9071:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9082:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9067:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9067:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "9090:4:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9096:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9086:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9086:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9060:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9060:47:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9060:47:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9116:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "9250:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_04ac8f36c142f1891048ed77339b8705d10008afae0986d82fa07e197d36aa25_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9124:124:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9124:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9116:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_04ac8f36c142f1891048ed77339b8705d10008afae0986d82fa07e197d36aa25__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8994:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9009:4:7",
														"type": ""
													}
												],
												"src": "8843:419:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9382:34:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9392:18:7",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "9407:3:7"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "9392:11:7"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "9354:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "9359:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "9370:11:7",
														"type": ""
													}
												],
												"src": "9268:148:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9532:280:7",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "9542:53:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "9589:5:7"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "9556:32:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9556:39:7"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "9546:6:7",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "9604:96:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9688:3:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "9693:6:7"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9611:76:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9611:89:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "9604:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "9748:5:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9755:4:7",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9744:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9744:16:7"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9762:3:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "9767:6:7"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "9709:34:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9709:65:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9709:65:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9783:23:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9794:3:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "9799:6:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9790:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9790:16:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "9783:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9513:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "9520:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "9528:3:7",
														"type": ""
													}
												],
												"src": "9422:390:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10002:251:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10013:102:7",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "10102:6:7"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10111:3:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10020:81:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "10020:95:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "10013:3:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "10125:102:7",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "10214:6:7"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10223:3:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10132:81:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "10132:95:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "10125:3:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "10237:10:7",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "10244:3:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "10237:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "9973:3:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "9979:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9987:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "9998:3:7",
														"type": ""
													}
												],
												"src": "9818:435:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10365:197:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "10387:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10395:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10383:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10383:14:7"
																	},
																	{
																		"hexValue": "54686520494420656e746572656420697320696e76616c69642e204974206d75",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10399:34:7",
																		"type": "",
																		"value": "The ID entered is invalid. It mu"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10376:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "10376:58:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10376:58:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "10455:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10463:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10451:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10451:15:7"
																	},
																	{
																		"hexValue": "737420626520696e207468697320696e74657276616c2030203c206964203c3d",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10468:34:7",
																		"type": "",
																		"value": "st be in this interval 0 < id <="
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10444:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "10444:59:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10444:59:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "10524:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10532:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10520:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10520:15:7"
																	},
																	{
																		"hexValue": "2063757272656e7420746f6b656e73",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10537:17:7",
																		"type": "",
																		"value": " current tokens"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10513:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "10513:42:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10513:42:7"
														}
													]
												},
												"name": "store_literal_in_memory_d01a6ddc51808b791794e2bc370247f685df6f3cfeea0cd79f01cec6a9ccb52f",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "10357:6:7",
														"type": ""
													}
												],
												"src": "10259:303:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10714:220:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10724:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10790:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10795:2:7",
																		"type": "",
																		"value": "79"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10731:58:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "10731:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "10724:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10896:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_d01a6ddc51808b791794e2bc370247f685df6f3cfeea0cd79f01cec6a9ccb52f",
																	"nodeType": "YulIdentifier",
																	"src": "10807:88:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "10807:93:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10807:93:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10909:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10920:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10925:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10916:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "10916:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "10909:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_d01a6ddc51808b791794e2bc370247f685df6f3cfeea0cd79f01cec6a9ccb52f_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "10702:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "10710:3:7",
														"type": ""
													}
												],
												"src": "10568:366:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11111:248:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11121:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11133:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11144:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11129:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "11129:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11121:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11168:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11179:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11164:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11164:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "11187:4:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11193:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "11183:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11183:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11157:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "11157:47:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11157:47:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11213:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "11347:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_d01a6ddc51808b791794e2bc370247f685df6f3cfeea0cd79f01cec6a9ccb52f_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11221:124:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "11221:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11213:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d01a6ddc51808b791794e2bc370247f685df6f3cfeea0cd79f01cec6a9ccb52f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11091:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11106:4:7",
														"type": ""
													}
												],
												"src": "10940:419:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11393:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11410:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11413:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11403:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "11403:88:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11403:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11507:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11510:4:7",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11500:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "11500:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11500:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11531:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11534:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "11524:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "11524:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11524:15:7"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "11365:180:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11579:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11596:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11599:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11589:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "11589:88:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11589:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11693:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11696:4:7",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11686:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "11686:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11686:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11717:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11720:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "11710:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "11710:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11710:15:7"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "11551:180:7"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_bytes20(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff000000000000000000000000)\n    }\n\n    function abi_encode_t_bytes20_to_t_bytes20_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes20(value))\n    }\n\n    function abi_encode_tuple_t_bytes20__to_t_bytes20__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes20_to_t_bytes20_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint16(value) -> cleaned {\n        cleaned := and(value, 0xffff)\n    }\n\n    function abi_encode_t_uint16_to_t_uint16_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint16(value))\n    }\n\n    function abi_encode_tuple_t_uint16__to_t_uint16__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint16_to_t_uint16_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_uint16(value) {\n        if iszero(eq(value, cleanup_t_uint16(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint16(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint16(value)\n    }\n\n    function abi_decode_tuple_t_uint16(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint16(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_bytes10(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffff00000000000000000000000000000000000000000000)\n    }\n\n    function abi_encode_t_bytes10_to_t_bytes10_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes10(value))\n    }\n\n    function abi_encode_tuple_t_bytes10__to_t_bytes10__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes10_to_t_bytes10_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint16(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint16(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function store_literal_in_memory_a0ed4e8cad639975e700098d07f166902169c365243b6972750486c0b152b957(memPtr) {\n\n        mstore(add(memPtr, 0), \"The input address cannot be zero\")\n\n    }\n\n    function abi_encode_t_stringliteral_a0ed4e8cad639975e700098d07f166902169c365243b6972750486c0b152b957_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_a0ed4e8cad639975e700098d07f166902169c365243b6972750486c0b152b957(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_a0ed4e8cad639975e700098d07f166902169c365243b6972750486c0b152b957__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_a0ed4e8cad639975e700098d07f166902169c365243b6972750486c0b152b957_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function store_literal_in_memory_04ac8f36c142f1891048ed77339b8705d10008afae0986d82fa07e197d36aa25(memPtr) {\n\n        mstore(add(memPtr, 0), \"The address of the owner and the\")\n\n        mstore(add(memPtr, 32), \" operator must be different\")\n\n    }\n\n    function abi_encode_t_stringliteral_04ac8f36c142f1891048ed77339b8705d10008afae0986d82fa07e197d36aa25_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 59)\n        store_literal_in_memory_04ac8f36c142f1891048ed77339b8705d10008afae0986d82fa07e197d36aa25(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_04ac8f36c142f1891048ed77339b8705d10008afae0986d82fa07e197d36aa25__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_04ac8f36c142f1891048ed77339b8705d10008afae0986d82fa07e197d36aa25_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value1,  pos)\n\n        end := pos\n    }\n\n    function store_literal_in_memory_d01a6ddc51808b791794e2bc370247f685df6f3cfeea0cd79f01cec6a9ccb52f(memPtr) {\n\n        mstore(add(memPtr, 0), \"The ID entered is invalid. It mu\")\n\n        mstore(add(memPtr, 32), \"st be in this interval 0 < id <=\")\n\n        mstore(add(memPtr, 64), \" current tokens\")\n\n    }\n\n    function abi_encode_t_stringliteral_d01a6ddc51808b791794e2bc370247f685df6f3cfeea0cd79f01cec6a9ccb52f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 79)\n        store_literal_in_memory_d01a6ddc51808b791794e2bc370247f685df6f3cfeea0cd79f01cec6a9ccb52f(pos)\n        end := add(pos, 96)\n    }\n\n    function abi_encode_tuple_t_stringliteral_d01a6ddc51808b791794e2bc370247f685df6f3cfeea0cd79f01cec6a9ccb52f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d01a6ddc51808b791794e2bc370247f685df6f3cfeea0cd79f01cec6a9ccb52f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n}\n",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b5060043610610091575f3560e01c806395d89b411161006457806395d89b4114610143578063a22cb46514610161578063dd7d84401461017d578063e560ca43146101ad578063e985e9c5146101c957610091565b806306fdde031461009557806370a08231146100b357806382a7cf1e146100e357806393b871f214610113575b5f80fd5b61009d6101f9565b6040516100aa9190610b37565b60405180910390f35b6100cd60048036038101906100c89190610bae565b61020d565b6040516100da9190610bf5565b60405180910390f35b6100fd60048036038101906100f89190610c38565b6102ee565b60405161010a9190610c72565b60405180910390f35b61012d60048036038101906101289190610c38565b6102ff565b60405161013a9190610c72565b60405180910390f35b61014b61034b565b6040516101589190610cc5565b60405180910390f35b61017b60048036038101906101769190610d13565b610360565b005b61019760048036038101906101929190610c38565b61054c565b6040516101a49190610ddb565b60405180910390f35b6101c760048036038101906101c29190610dfb565b6105b6565b005b6101e360048036038101906101de9190610e39565b6105cc565b6040516101f09190610e86565b60405180910390f35b5f805f9054906101000a900460601b905090565b5f8073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361027c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161027390610ee9565b60405180910390fd5b6104b35f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6104b181106102cd576102cc610f07565b5b601091828204019190066002029054906101000a900461ffff169050919050565b5f6102f88261065b565b9050919050565b5f6103098261065b565b506104b45f8361ffff1661ffff1681526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b5f8060149054906101000a900460b01b905090565b8173ffffffffffffffffffffffffffffffffffffffff1661037f610709565b73ffffffffffffffffffffffffffffffffffffffff16036103d5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103cc90610fa4565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361044557816040517f5b08ba1800000000000000000000000000000000000000000000000000000000815260040161043c9190610c72565b60405180910390fd5b806104b55f610452610709565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff166104fb610709565b73ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31836040516105409190610e86565b60405180910390a35050565b60606105578261065b565b505f610561610710565b90505f81511161057f5760405180602001604052805f8152506105ae565b8061058d8461ffff16610726565b60405160200161059e929190610ffc565b6040516020818303038152906040525b915050919050565b6105c882826105c3610709565b6107f0565b5050565b5f6104b55f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905092915050565b5f8161ffff165f108015610689575060015f0160029054906101000a900461ffff1661ffff168261ffff1611155b6106c8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106bf906110b5565b60405180910390fd5b60028261ffff166104b181106106e1576106e0610f07565b5b015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b5f33905090565b606060405180602001604052805f815250905090565b60605f6001610734846109ac565b0190505f8167ffffffffffffffff811115610752576107516110d3565b5b6040519080825280601f01601f1916602001820160405280156107845781602001600182028036833780820191505090505b5090505f82602001820190505b6001156107e5578080600190039150507f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a85816107da576107d9611100565b5b0494505f8503610791575b819350505050919050565b5f6107fa8361065b565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361086a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161086190610fa4565b60405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141580156108ad57506108ab81836105cc565b155b156108ef57816040517fa9fbf51f0000000000000000000000000000000000000000000000000000000081526004016108e69190610c72565b60405180910390fd5b836104b45f8561ffff1661ffff1681526020019081526020015f205f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508261ffff168473ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f0a9d294fd4bd42bb30e96cba2b478d149a783fba3c729b1e5c42bec89d95b85a60405160405180910390a450505050565b5f805f90507a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008310610a08577a184f03e93ff9f4daa797ed6e38ed64bf6a1f01000000000000000083816109fe576109fd611100565b5b0492506040810190505b6d04ee2d6d415b85acef81000000008310610a45576d04ee2d6d415b85acef81000000008381610a3b57610a3a611100565b5b0492506020810190505b662386f26fc100008310610a7457662386f26fc100008381610a6a57610a69611100565b5b0492506010810190505b6305f5e1008310610a9d576305f5e1008381610a9357610a92611100565b5b0492506008810190505b6127108310610ac2576127108381610ab857610ab7611100565b5b0492506004810190505b60648310610ae55760648381610adb57610ada611100565b5b0492506002810190505b600a8310610af4576001810190505b80915050919050565b5f7fffffffffffffffffffffffffffffffffffffffff00000000000000000000000082169050919050565b610b3181610afd565b82525050565b5f602082019050610b4a5f830184610b28565b92915050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610b7d82610b54565b9050919050565b610b8d81610b73565b8114610b97575f80fd5b50565b5f81359050610ba881610b84565b92915050565b5f60208284031215610bc357610bc2610b50565b5b5f610bd084828501610b9a565b91505092915050565b5f61ffff82169050919050565b610bef81610bd9565b82525050565b5f602082019050610c085f830184610be6565b92915050565b610c1781610bd9565b8114610c21575f80fd5b50565b5f81359050610c3281610c0e565b92915050565b5f60208284031215610c4d57610c4c610b50565b5b5f610c5a84828501610c24565b91505092915050565b610c6c81610b73565b82525050565b5f602082019050610c855f830184610c63565b92915050565b5f7fffffffffffffffffffff0000000000000000000000000000000000000000000082169050919050565b610cbf81610c8b565b82525050565b5f602082019050610cd85f830184610cb6565b92915050565b5f8115159050919050565b610cf281610cde565b8114610cfc575f80fd5b50565b5f81359050610d0d81610ce9565b92915050565b5f8060408385031215610d2957610d28610b50565b5b5f610d3685828601610b9a565b9250506020610d4785828601610cff565b9150509250929050565b5f81519050919050565b5f82825260208201905092915050565b5f5b83811015610d88578082015181840152602081019050610d6d565b5f8484015250505050565b5f601f19601f8301169050919050565b5f610dad82610d51565b610db78185610d5b565b9350610dc7818560208601610d6b565b610dd081610d93565b840191505092915050565b5f6020820190508181035f830152610df38184610da3565b905092915050565b5f8060408385031215610e1157610e10610b50565b5b5f610e1e85828601610b9a565b9250506020610e2f85828601610c24565b9150509250929050565b5f8060408385031215610e4f57610e4e610b50565b5b5f610e5c85828601610b9a565b9250506020610e6d85828601610b9a565b9150509250929050565b610e8081610cde565b82525050565b5f602082019050610e995f830184610e77565b92915050565b7f54686520696e70757420616464726573732063616e6e6f74206265207a65726f5f82015250565b5f610ed3602083610d5b565b9150610ede82610e9f565b602082019050919050565b5f6020820190508181035f830152610f0081610ec7565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b7f5468652061646472657373206f6620746865206f776e657220616e64207468655f8201527f206f70657261746f72206d75737420626520646966666572656e740000000000602082015250565b5f610f8e603b83610d5b565b9150610f9982610f34565b604082019050919050565b5f6020820190508181035f830152610fbb81610f82565b9050919050565b5f81905092915050565b5f610fd682610d51565b610fe08185610fc2565b9350610ff0818560208601610d6b565b80840191505092915050565b5f6110078285610fcc565b91506110138284610fcc565b91508190509392505050565b7f54686520494420656e746572656420697320696e76616c69642e204974206d755f8201527f737420626520696e207468697320696e74657276616c2030203c206964203c3d60208201527f2063757272656e7420746f6b656e730000000000000000000000000000000000604082015250565b5f61109f604f83610d5b565b91506110aa8261101f565b606082019050919050565b5f6020820190508181035f8301526110cc81611093565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffdfea264697066735822122074227527dc031273894aa7740043449d768f84101047a6454aacb3e2c9c0da8d64736f6c63430008140033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x91 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x95D89B41 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x143 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x161 JUMPI DUP1 PUSH4 0xDD7D8440 EQ PUSH2 0x17D JUMPI DUP1 PUSH4 0xE560CA43 EQ PUSH2 0x1AD JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x1C9 JUMPI PUSH2 0x91 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x95 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0xB3 JUMPI DUP1 PUSH4 0x82A7CF1E EQ PUSH2 0xE3 JUMPI DUP1 PUSH4 0x93B871F2 EQ PUSH2 0x113 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x9D PUSH2 0x1F9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xAA SWAP2 SWAP1 PUSH2 0xB37 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xCD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xC8 SWAP2 SWAP1 PUSH2 0xBAE JUMP JUMPDEST PUSH2 0x20D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xDA SWAP2 SWAP1 PUSH2 0xBF5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xFD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xF8 SWAP2 SWAP1 PUSH2 0xC38 JUMP JUMPDEST PUSH2 0x2EE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x10A SWAP2 SWAP1 PUSH2 0xC72 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x12D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x128 SWAP2 SWAP1 PUSH2 0xC38 JUMP JUMPDEST PUSH2 0x2FF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13A SWAP2 SWAP1 PUSH2 0xC72 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x14B PUSH2 0x34B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x158 SWAP2 SWAP1 PUSH2 0xCC5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x17B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x176 SWAP2 SWAP1 PUSH2 0xD13 JUMP JUMPDEST PUSH2 0x360 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x197 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x192 SWAP2 SWAP1 PUSH2 0xC38 JUMP JUMPDEST PUSH2 0x54C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A4 SWAP2 SWAP1 PUSH2 0xDDB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C2 SWAP2 SWAP1 PUSH2 0xDFB JUMP JUMPDEST PUSH2 0x5B6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1E3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1DE SWAP2 SWAP1 PUSH2 0xE39 JUMP JUMPDEST PUSH2 0x5CC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F0 SWAP2 SWAP1 PUSH2 0xE86 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x60 SHL SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x27C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x273 SWAP1 PUSH2 0xEE9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x4B3 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x4B1 DUP2 LT PUSH2 0x2CD JUMPI PUSH2 0x2CC PUSH2 0xF07 JUMP JUMPDEST JUMPDEST PUSH1 0x10 SWAP2 DUP3 DUP3 DIV ADD SWAP2 SWAP1 MOD PUSH1 0x2 MUL SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH2 0xFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2F8 DUP3 PUSH2 0x65B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x309 DUP3 PUSH2 0x65B JUMP JUMPDEST POP PUSH2 0x4B4 PUSH0 DUP4 PUSH2 0xFFFF AND PUSH2 0xFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xB0 SHL SWAP1 POP SWAP1 JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x37F PUSH2 0x709 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x3D5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3CC SWAP1 PUSH2 0xFA4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x445 JUMPI DUP2 PUSH1 0x40 MLOAD PUSH32 0x5B08BA1800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x43C SWAP2 SWAP1 PUSH2 0xC72 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH2 0x4B5 PUSH0 PUSH2 0x452 PUSH2 0x709 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x4FB PUSH2 0x709 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0x540 SWAP2 SWAP1 PUSH2 0xE86 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x557 DUP3 PUSH2 0x65B JUMP JUMPDEST POP PUSH0 PUSH2 0x561 PUSH2 0x710 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 MLOAD GT PUSH2 0x57F JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0x5AE JUMP JUMPDEST DUP1 PUSH2 0x58D DUP5 PUSH2 0xFFFF AND PUSH2 0x726 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x59E SWAP3 SWAP2 SWAP1 PUSH2 0xFFC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x5C8 DUP3 DUP3 PUSH2 0x5C3 PUSH2 0x709 JUMP JUMPDEST PUSH2 0x7F0 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH2 0x4B5 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 PUSH2 0xFFFF AND PUSH0 LT DUP1 ISZERO PUSH2 0x689 JUMPI POP PUSH1 0x1 PUSH0 ADD PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH2 0xFFFF AND PUSH2 0xFFFF AND DUP3 PUSH2 0xFFFF AND GT ISZERO JUMPDEST PUSH2 0x6C8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6BF SWAP1 PUSH2 0x10B5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 DUP3 PUSH2 0xFFFF AND PUSH2 0x4B1 DUP2 LT PUSH2 0x6E1 JUMPI PUSH2 0x6E0 PUSH2 0xF07 JUMP JUMPDEST JUMPDEST ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH1 0x1 PUSH2 0x734 DUP5 PUSH2 0x9AC JUMP JUMPDEST ADD SWAP1 POP PUSH0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x752 JUMPI PUSH2 0x751 PUSH2 0x10D3 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x784 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 DUP3 PUSH1 0x20 ADD DUP3 ADD SWAP1 POP JUMPDEST PUSH1 0x1 ISZERO PUSH2 0x7E5 JUMPI DUP1 DUP1 PUSH1 0x1 SWAP1 SUB SWAP2 POP POP PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DUP2 PUSH2 0x7DA JUMPI PUSH2 0x7D9 PUSH2 0x1100 JUMP JUMPDEST JUMPDEST DIV SWAP5 POP PUSH0 DUP6 SUB PUSH2 0x791 JUMPI JUMPDEST DUP2 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x7FA DUP4 PUSH2 0x65B JUMP JUMPDEST SWAP1 POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x86A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x861 SWAP1 PUSH2 0xFA4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x8AD JUMPI POP PUSH2 0x8AB DUP2 DUP4 PUSH2 0x5CC JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x8EF JUMPI DUP2 PUSH1 0x40 MLOAD PUSH32 0xA9FBF51F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8E6 SWAP2 SWAP1 PUSH2 0xC72 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP4 PUSH2 0x4B4 PUSH0 DUP6 PUSH2 0xFFFF AND PUSH2 0xFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP3 PUSH2 0xFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xA9D294FD4BD42BB30E96CBA2B478D149A783FBA3C729B1E5C42BEC89D95B85A PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 POP PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 LT PUSH2 0xA08 JUMPI PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 DUP2 PUSH2 0x9FE JUMPI PUSH2 0x9FD PUSH2 0x1100 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x40 DUP2 ADD SWAP1 POP JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0xA45 JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DUP2 PUSH2 0xA3B JUMPI PUSH2 0xA3A PUSH2 0x1100 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x20 DUP2 ADD SWAP1 POP JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0xA74 JUMPI PUSH7 0x2386F26FC10000 DUP4 DUP2 PUSH2 0xA6A JUMPI PUSH2 0xA69 PUSH2 0x1100 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x10 DUP2 ADD SWAP1 POP JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0xA9D JUMPI PUSH4 0x5F5E100 DUP4 DUP2 PUSH2 0xA93 JUMPI PUSH2 0xA92 PUSH2 0x1100 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x8 DUP2 ADD SWAP1 POP JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0xAC2 JUMPI PUSH2 0x2710 DUP4 DUP2 PUSH2 0xAB8 JUMPI PUSH2 0xAB7 PUSH2 0x1100 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x4 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0xAE5 JUMPI PUSH1 0x64 DUP4 DUP2 PUSH2 0xADB JUMPI PUSH2 0xADA PUSH2 0x1100 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x2 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0xAF4 JUMPI PUSH1 0x1 DUP2 ADD SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB31 DUP2 PUSH2 0xAFD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xB4A PUSH0 DUP4 ADD DUP5 PUSH2 0xB28 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xB7D DUP3 PUSH2 0xB54 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB8D DUP2 PUSH2 0xB73 JUMP JUMPDEST DUP2 EQ PUSH2 0xB97 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xBA8 DUP2 PUSH2 0xB84 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xBC3 JUMPI PUSH2 0xBC2 PUSH2 0xB50 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xBD0 DUP5 DUP3 DUP6 ADD PUSH2 0xB9A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xBEF DUP2 PUSH2 0xBD9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC08 PUSH0 DUP4 ADD DUP5 PUSH2 0xBE6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xC17 DUP2 PUSH2 0xBD9 JUMP JUMPDEST DUP2 EQ PUSH2 0xC21 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xC32 DUP2 PUSH2 0xC0E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC4D JUMPI PUSH2 0xC4C PUSH2 0xB50 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xC5A DUP5 DUP3 DUP6 ADD PUSH2 0xC24 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xC6C DUP2 PUSH2 0xB73 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC85 PUSH0 DUP4 ADD DUP5 PUSH2 0xC63 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH32 0xFFFFFFFFFFFFFFFFFFFF00000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xCBF DUP2 PUSH2 0xC8B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xCD8 PUSH0 DUP4 ADD DUP5 PUSH2 0xCB6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xCF2 DUP2 PUSH2 0xCDE JUMP JUMPDEST DUP2 EQ PUSH2 0xCFC JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xD0D DUP2 PUSH2 0xCE9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xD29 JUMPI PUSH2 0xD28 PUSH2 0xB50 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xD36 DUP6 DUP3 DUP7 ADD PUSH2 0xB9A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xD47 DUP6 DUP3 DUP7 ADD PUSH2 0xCFF JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xD88 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xD6D JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xDAD DUP3 PUSH2 0xD51 JUMP JUMPDEST PUSH2 0xDB7 DUP2 DUP6 PUSH2 0xD5B JUMP JUMPDEST SWAP4 POP PUSH2 0xDC7 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xD6B JUMP JUMPDEST PUSH2 0xDD0 DUP2 PUSH2 0xD93 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xDF3 DUP2 DUP5 PUSH2 0xDA3 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xE11 JUMPI PUSH2 0xE10 PUSH2 0xB50 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xE1E DUP6 DUP3 DUP7 ADD PUSH2 0xB9A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xE2F DUP6 DUP3 DUP7 ADD PUSH2 0xC24 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xE4F JUMPI PUSH2 0xE4E PUSH2 0xB50 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xE5C DUP6 DUP3 DUP7 ADD PUSH2 0xB9A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xE6D DUP6 DUP3 DUP7 ADD PUSH2 0xB9A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0xE80 DUP2 PUSH2 0xCDE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xE99 PUSH0 DUP4 ADD DUP5 PUSH2 0xE77 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x54686520696E70757420616464726573732063616E6E6F74206265207A65726F PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xED3 PUSH1 0x20 DUP4 PUSH2 0xD5B JUMP JUMPDEST SWAP2 POP PUSH2 0xEDE DUP3 PUSH2 0xE9F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xF00 DUP2 PUSH2 0xEC7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x5468652061646472657373206F6620746865206F776E657220616E6420746865 PUSH0 DUP3 ADD MSTORE PUSH32 0x206F70657261746F72206D75737420626520646966666572656E740000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xF8E PUSH1 0x3B DUP4 PUSH2 0xD5B JUMP JUMPDEST SWAP2 POP PUSH2 0xF99 DUP3 PUSH2 0xF34 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xFBB DUP2 PUSH2 0xF82 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xFD6 DUP3 PUSH2 0xD51 JUMP JUMPDEST PUSH2 0xFE0 DUP2 DUP6 PUSH2 0xFC2 JUMP JUMPDEST SWAP4 POP PUSH2 0xFF0 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xD6B JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1007 DUP3 DUP6 PUSH2 0xFCC JUMP JUMPDEST SWAP2 POP PUSH2 0x1013 DUP3 DUP5 PUSH2 0xFCC JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x54686520494420656E746572656420697320696E76616C69642E204974206D75 PUSH0 DUP3 ADD MSTORE PUSH32 0x737420626520696E207468697320696E74657276616C2030203C206964203C3D PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x2063757272656E7420746F6B656E730000000000000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x109F PUSH1 0x4F DUP4 PUSH2 0xD5B JUMP JUMPDEST SWAP2 POP PUSH2 0x10AA DUP3 PUSH2 0x101F JUMP JUMPDEST PUSH1 0x60 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x10CC DUP2 PUSH2 0x1093 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH21 0x227527DC031273894AA7740043449D768F84101047 0xA6 GASLIMIT 0x4A 0xAC 0xB3 0xE2 0xC9 0xC0 0xDA DUP14 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ",
							"sourceMap": "316:3437:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1316:77;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1494:189;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1693:111;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2177:160;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1403:81;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2345:424;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1814:240;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2064:105;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2779:147;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1316:77;1353:7;1380:5;;;;;;;;;;;1373:12;;1316:77;:::o;1494:189::-;1549:6;1593:1;1576:19;;:5;:19;;;1568:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;1649:16;:23;1666:5;1649:23;;;;;;;;;;;;;;;1673:1;1649:26;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;1642:33;;1494:189;;;:::o;1693:111::-;1747:7;1774:22;1788:7;1774:13;:22::i;:::-;1767:29;;1693:111;;;:::o;2177:160::-;2243:7;2263:22;2277:7;2263:13;:22::i;:::-;;2305:15;:24;2321:7;2305:24;;;;;;;;;;;;;;;;;;;;;;;;;2298:31;;2177:160;;;:::o;1403:81::-;1442:7;1469;;;;;;;;;;;1462:14;;1403:81;:::o;2345:424::-;2447:8;2431:24;;:12;:10;:12::i;:::-;:24;;;2423:96;;;;;;;;;;;;:::i;:::-;;;;;;;;;2554:1;2534:22;;:8;:22;;;2530:93;;2602:8;2580:31;;;;;;;;;;;:::i;:::-;;;;;;;;2530:93;2688:8;2643:18;:32;2662:12;:10;:12::i;:::-;2643:32;;;;;;;;;;;;;;;:42;2676:8;2643:42;;;;;;;;;;;;;;;;:53;;;;;;;;;;;;;;;;;;2742:8;2713:48;;2728:12;:10;:12::i;:::-;2713:48;;;2752:8;2713:48;;;;;;:::i;:::-;;;;;;;;2345:424;;:::o;1814:240::-;1869:13;1895:22;1909:7;1895:13;:22::i;:::-;;1928:18;1949:10;:8;:10::i;:::-;1928:31;;1998:1;1983:4;1977:18;:22;:69;;;;;;;;;;;;;;;;;2016:4;2022:18;:7;:16;;;:18::i;:::-;2002:39;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1977:69;1970:76;;;1814:240;;;:::o;2064:105::-;2127:34;2135:2;2139:7;2148:12;:10;:12::i;:::-;2127:7;:34::i;:::-;2064:105;;:::o;2779:147::-;2859:4;2883:18;:25;2902:5;2883:25;;;;;;;;;;;;;;;:35;2909:8;2883:35;;;;;;;;;;;;;;;;;;;;;;;;;2876:42;;2779:147;;;;:::o;3380:264::-;3442:7;3474;3470:11;;:1;:11;:47;;;;;3496:7;:21;;;;;;;;;;;;3485:32;;:7;:32;;;;3470:47;3462:139;;;;;;;;;;;;:::i;:::-;;;;;;;;;3620:7;3628;3620:16;;;;;;;;;:::i;:::-;;;;;;;;;;;;;3613:23;;3380:264;;;:::o;656:96:2:-;709:7;735:10;728:17;;656:96;:::o;3654:86:6:-;3697:13;3723:9;;;;;;;;;;;;;;3654:86;:::o;637:698:3:-;693:13;742:14;779:1;759:17;770:5;759:10;:17::i;:::-;:21;742:38;;794:20;828:6;817:18;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;794:41;;849:11;975:6;971:2;967:15;959:6;955:28;948:35;;1010:282;1017:4;1010:282;;;1041:5;;;;;;;;1180:10;1175:2;1168:5;1164:14;1159:32;1154:3;1146:46;1236:2;1227:11;;;;;;:::i;:::-;;;;;1269:1;1260:5;:10;1010:282;1256:21;1010:282;1312:6;1305:13;;;;;637:698;;;:::o;2940:422:6:-;3019:13;3035:22;3049:7;3035:13;:22::i;:::-;3019:38;;3085:2;3076:11;;:5;:11;;;3068:83;;;;;;;;;;;;:::i;:::-;;;;;;;;;3174:4;3165:13;;:5;:13;;;;:47;;;;;3183:29;3200:5;3207:4;3183:16;:29::i;:::-;3182:30;3165:47;3161:108;;;3253:4;3231:27;;;;;;;;;;;:::i;:::-;;;;;;;;3161:108;3308:2;3281:15;:24;3297:7;3281:24;;;;;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;3346:7;3326:28;;3342:2;3326:28;;3335:5;3326:28;;;;;;;;;;;;3008:354;2940:422;;;:::o;12214:916:4:-;12267:7;12286:14;12303:1;12286:18;;12351:8;12342:5;:17;12338:103;;12388:8;12379:17;;;;;;:::i;:::-;;;;;12424:2;12414:12;;;;12338:103;12467:8;12458:5;:17;12454:103;;12504:8;12495:17;;;;;;:::i;:::-;;;;;12540:2;12530:12;;;;12454:103;12583:8;12574:5;:17;12570:103;;12620:8;12611:17;;;;;;:::i;:::-;;;;;12656:2;12646:12;;;;12570:103;12699:7;12690:5;:16;12686:100;;12735:7;12726:16;;;;;;:::i;:::-;;;;;12770:1;12760:11;;;;12686:100;12812:7;12803:5;:16;12799:100;;12848:7;12839:16;;;;;;:::i;:::-;;;;;12883:1;12873:11;;;;12799:100;12925:7;12916:5;:16;12912:100;;12961:7;12952:16;;;;;;:::i;:::-;;;;;12996:1;12986:11;;;;12912:100;13038:7;13029:5;:16;13025:66;;13075:1;13065:11;;;;13025:66;13117:6;13110:13;;;12214:916;;;:::o;7:150:7:-;44:7;84:66;77:5;73:78;62:89;;7:150;;;:::o;163:118::-;250:24;268:5;250:24;:::i;:::-;245:3;238:37;163:118;;:::o;287:222::-;380:4;418:2;407:9;403:18;395:26;;431:71;499:1;488:9;484:17;475:6;431:71;:::i;:::-;287:222;;;;:::o;596:117::-;705:1;702;695:12;842:126;879:7;919:42;912:5;908:54;897:65;;842:126;;;:::o;974:96::-;1011:7;1040:24;1058:5;1040:24;:::i;:::-;1029:35;;974:96;;;:::o;1076:122::-;1149:24;1167:5;1149:24;:::i;:::-;1142:5;1139:35;1129:63;;1188:1;1185;1178:12;1129:63;1076:122;:::o;1204:139::-;1250:5;1288:6;1275:20;1266:29;;1304:33;1331:5;1304:33;:::i;:::-;1204:139;;;;:::o;1349:329::-;1408:6;1457:2;1445:9;1436:7;1432:23;1428:32;1425:119;;;1463:79;;:::i;:::-;1425:119;1583:1;1608:53;1653:7;1644:6;1633:9;1629:22;1608:53;:::i;:::-;1598:63;;1554:117;1349:329;;;;:::o;1684:89::-;1720:7;1760:6;1753:5;1749:18;1738:29;;1684:89;;;:::o;1779:115::-;1864:23;1881:5;1864:23;:::i;:::-;1859:3;1852:36;1779:115;;:::o;1900:218::-;1991:4;2029:2;2018:9;2014:18;2006:26;;2042:69;2108:1;2097:9;2093:17;2084:6;2042:69;:::i;:::-;1900:218;;;;:::o;2124:120::-;2196:23;2213:5;2196:23;:::i;:::-;2189:5;2186:34;2176:62;;2234:1;2231;2224:12;2176:62;2124:120;:::o;2250:137::-;2295:5;2333:6;2320:20;2311:29;;2349:32;2375:5;2349:32;:::i;:::-;2250:137;;;;:::o;2393:327::-;2451:6;2500:2;2488:9;2479:7;2475:23;2471:32;2468:119;;;2506:79;;:::i;:::-;2468:119;2626:1;2651:52;2695:7;2686:6;2675:9;2671:22;2651:52;:::i;:::-;2641:62;;2597:116;2393:327;;;;:::o;2726:118::-;2813:24;2831:5;2813:24;:::i;:::-;2808:3;2801:37;2726:118;;:::o;2850:222::-;2943:4;2981:2;2970:9;2966:18;2958:26;;2994:71;3062:1;3051:9;3047:17;3038:6;2994:71;:::i;:::-;2850:222;;;;:::o;3078:150::-;3115:7;3155:66;3148:5;3144:78;3133:89;;3078:150;;;:::o;3234:118::-;3321:24;3339:5;3321:24;:::i;:::-;3316:3;3309:37;3234:118;;:::o;3358:222::-;3451:4;3489:2;3478:9;3474:18;3466:26;;3502:71;3570:1;3559:9;3555:17;3546:6;3502:71;:::i;:::-;3358:222;;;;:::o;3586:90::-;3620:7;3663:5;3656:13;3649:21;3638:32;;3586:90;;;:::o;3682:116::-;3752:21;3767:5;3752:21;:::i;:::-;3745:5;3742:32;3732:60;;3788:1;3785;3778:12;3732:60;3682:116;:::o;3804:133::-;3847:5;3885:6;3872:20;3863:29;;3901:30;3925:5;3901:30;:::i;:::-;3804:133;;;;:::o;3943:468::-;4008:6;4016;4065:2;4053:9;4044:7;4040:23;4036:32;4033:119;;;4071:79;;:::i;:::-;4033:119;4191:1;4216:53;4261:7;4252:6;4241:9;4237:22;4216:53;:::i;:::-;4206:63;;4162:117;4318:2;4344:50;4386:7;4377:6;4366:9;4362:22;4344:50;:::i;:::-;4334:60;;4289:115;3943:468;;;;;:::o;4417:99::-;4469:6;4503:5;4497:12;4487:22;;4417:99;;;:::o;4522:169::-;4606:11;4640:6;4635:3;4628:19;4680:4;4675:3;4671:14;4656:29;;4522:169;;;;:::o;4697:246::-;4778:1;4788:113;4802:6;4799:1;4796:13;4788:113;;;4887:1;4882:3;4878:11;4872:18;4868:1;4863:3;4859:11;4852:39;4824:2;4821:1;4817:10;4812:15;;4788:113;;;4935:1;4926:6;4921:3;4917:16;4910:27;4759:184;4697:246;;;:::o;4949:102::-;4990:6;5041:2;5037:7;5032:2;5025:5;5021:14;5017:28;5007:38;;4949:102;;;:::o;5057:377::-;5145:3;5173:39;5206:5;5173:39;:::i;:::-;5228:71;5292:6;5287:3;5228:71;:::i;:::-;5221:78;;5308:65;5366:6;5361:3;5354:4;5347:5;5343:16;5308:65;:::i;:::-;5398:29;5420:6;5398:29;:::i;:::-;5393:3;5389:39;5382:46;;5149:285;5057:377;;;;:::o;5440:313::-;5553:4;5591:2;5580:9;5576:18;5568:26;;5640:9;5634:4;5630:20;5626:1;5615:9;5611:17;5604:47;5668:78;5741:4;5732:6;5668:78;:::i;:::-;5660:86;;5440:313;;;;:::o;5759:472::-;5826:6;5834;5883:2;5871:9;5862:7;5858:23;5854:32;5851:119;;;5889:79;;:::i;:::-;5851:119;6009:1;6034:53;6079:7;6070:6;6059:9;6055:22;6034:53;:::i;:::-;6024:63;;5980:117;6136:2;6162:52;6206:7;6197:6;6186:9;6182:22;6162:52;:::i;:::-;6152:62;;6107:117;5759:472;;;;;:::o;6237:474::-;6305:6;6313;6362:2;6350:9;6341:7;6337:23;6333:32;6330:119;;;6368:79;;:::i;:::-;6330:119;6488:1;6513:53;6558:7;6549:6;6538:9;6534:22;6513:53;:::i;:::-;6503:63;;6459:117;6615:2;6641:53;6686:7;6677:6;6666:9;6662:22;6641:53;:::i;:::-;6631:63;;6586:118;6237:474;;;;;:::o;6717:109::-;6798:21;6813:5;6798:21;:::i;:::-;6793:3;6786:34;6717:109;;:::o;6832:210::-;6919:4;6957:2;6946:9;6942:18;6934:26;;6970:65;7032:1;7021:9;7017:17;7008:6;6970:65;:::i;:::-;6832:210;;;;:::o;7048:182::-;7188:34;7184:1;7176:6;7172:14;7165:58;7048:182;:::o;7236:366::-;7378:3;7399:67;7463:2;7458:3;7399:67;:::i;:::-;7392:74;;7475:93;7564:3;7475:93;:::i;:::-;7593:2;7588:3;7584:12;7577:19;;7236:366;;;:::o;7608:419::-;7774:4;7812:2;7801:9;7797:18;7789:26;;7861:9;7855:4;7851:20;7847:1;7836:9;7832:17;7825:47;7889:131;8015:4;7889:131;:::i;:::-;7881:139;;7608:419;;;:::o;8033:180::-;8081:77;8078:1;8071:88;8178:4;8175:1;8168:15;8202:4;8199:1;8192:15;8219:246;8359:34;8355:1;8347:6;8343:14;8336:58;8428:29;8423:2;8415:6;8411:15;8404:54;8219:246;:::o;8471:366::-;8613:3;8634:67;8698:2;8693:3;8634:67;:::i;:::-;8627:74;;8710:93;8799:3;8710:93;:::i;:::-;8828:2;8823:3;8819:12;8812:19;;8471:366;;;:::o;8843:419::-;9009:4;9047:2;9036:9;9032:18;9024:26;;9096:9;9090:4;9086:20;9082:1;9071:9;9067:17;9060:47;9124:131;9250:4;9124:131;:::i;:::-;9116:139;;8843:419;;;:::o;9268:148::-;9370:11;9407:3;9392:18;;9268:148;;;;:::o;9422:390::-;9528:3;9556:39;9589:5;9556:39;:::i;:::-;9611:89;9693:6;9688:3;9611:89;:::i;:::-;9604:96;;9709:65;9767:6;9762:3;9755:4;9748:5;9744:16;9709:65;:::i;:::-;9799:6;9794:3;9790:16;9783:23;;9532:280;9422:390;;;;:::o;9818:435::-;9998:3;10020:95;10111:3;10102:6;10020:95;:::i;:::-;10013:102;;10132:95;10223:3;10214:6;10132:95;:::i;:::-;10125:102;;10244:3;10237:10;;9818:435;;;;;:::o;10259:303::-;10399:34;10395:1;10387:6;10383:14;10376:58;10468:34;10463:2;10455:6;10451:15;10444:59;10537:17;10532:2;10524:6;10520:15;10513:42;10259:303;:::o;10568:366::-;10710:3;10731:67;10795:2;10790:3;10731:67;:::i;:::-;10724:74;;10807:93;10896:3;10807:93;:::i;:::-;10925:2;10920:3;10916:12;10909:19;;10568:366;;;:::o;10940:419::-;11106:4;11144:2;11133:9;11129:18;11121:26;;11193:9;11187:4;11183:20;11179:1;11168:9;11164:17;11157:47;11221:131;11347:4;11221:131;:::i;:::-;11213:139;;10940:419;;;:::o;11365:180::-;11413:77;11410:1;11403:88;11510:4;11507:1;11500:15;11534:4;11531:1;11524:15;11551:180;11599:77;11596:1;11589:88;11696:4;11693:1;11686:15;11720:4;11717:1;11710:15"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "890200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"approve(address,uint16)": "infinite",
								"balanceOf(address)": "2990",
								"getApproved(uint16)": "7419",
								"isApprovedForAll(address,address)": "infinite",
								"name()": "2474",
								"ownerOf(uint16)": "5169",
								"setApprovalForAll(address,bool)": "infinite",
								"symbol()": "2524",
								"tokenURI(uint16)": "5541"
							},
							"internal": {
								"_aprove(address,uint16,address)": "infinite",
								"_baseURI()": "infinite",
								"_requireOwned(uint16)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 316,
									"end": 3753,
									"name": "PUSH",
									"source": 6,
									"value": "80"
								},
								{
									"begin": 316,
									"end": 3753,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 316,
									"end": 3753,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1202,
									"end": 1306,
									"name": "CALLVALUE",
									"source": 6
								},
								{
									"begin": 1202,
									"end": 1306,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1202,
									"end": 1306,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1202,
									"end": 1306,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 1202,
									"end": 1306,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1202,
									"end": 1306,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1202,
									"end": 1306,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1202,
									"end": 1306,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 1202,
									"end": 1306,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 1202,
									"end": 1306,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1202,
									"end": 1306,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1202,
									"end": 1306,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1202,
									"end": 1306,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 1202,
									"end": 1306,
									"name": "PUSHSIZE",
									"source": 6
								},
								{
									"begin": 1202,
									"end": 1306,
									"name": "CODESIZE",
									"source": 6
								},
								{
									"begin": 1202,
									"end": 1306,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 1202,
									"end": 1306,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1202,
									"end": 1306,
									"name": "PUSHSIZE",
									"source": 6
								},
								{
									"begin": 1202,
									"end": 1306,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1202,
									"end": 1306,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 1202,
									"end": 1306,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1202,
									"end": 1306,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1202,
									"end": 1306,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1202,
									"end": 1306,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1202,
									"end": 1306,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1202,
									"end": 1306,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1202,
									"end": 1306,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1202,
									"end": 1306,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1202,
									"end": 1306,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 1202,
									"end": 1306,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1202,
									"end": 1306,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1202,
									"end": 1306,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 1202,
									"end": 1306,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1202,
									"end": 1306,
									"name": "tag",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 1202,
									"end": 1306,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1265,
									"end": 1270,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1257,
									"end": 1262,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1257,
									"end": 1262,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1257,
									"end": 1270,
									"name": "PUSH",
									"source": 6,
									"value": "100"
								},
								{
									"begin": 1257,
									"end": 1270,
									"name": "EXP",
									"source": 6
								},
								{
									"begin": 1257,
									"end": 1270,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1257,
									"end": 1270,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 1257,
									"end": 1270,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1257,
									"end": 1270,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1257,
									"end": 1270,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 1257,
									"end": 1270,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 1257,
									"end": 1270,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1257,
									"end": 1270,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1257,
									"end": 1270,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1257,
									"end": 1270,
									"name": "PUSH",
									"source": 6,
									"value": "60"
								},
								{
									"begin": 1257,
									"end": 1270,
									"name": "SHR",
									"source": 6
								},
								{
									"begin": 1257,
									"end": 1270,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 1257,
									"end": 1270,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 1257,
									"end": 1270,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1257,
									"end": 1270,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 1257,
									"end": 1270,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1291,
									"end": 1298,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1281,
									"end": 1288,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1281,
									"end": 1288,
									"name": "PUSH",
									"source": 6,
									"value": "14"
								},
								{
									"begin": 1281,
									"end": 1298,
									"name": "PUSH",
									"source": 6,
									"value": "100"
								},
								{
									"begin": 1281,
									"end": 1298,
									"name": "EXP",
									"source": 6
								},
								{
									"begin": 1281,
									"end": 1298,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1281,
									"end": 1298,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 1281,
									"end": 1298,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1281,
									"end": 1298,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1281,
									"end": 1298,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 1281,
									"end": 1298,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 1281,
									"end": 1298,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1281,
									"end": 1298,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1281,
									"end": 1298,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1281,
									"end": 1298,
									"name": "PUSH",
									"source": 6,
									"value": "B0"
								},
								{
									"begin": 1281,
									"end": 1298,
									"name": "SHR",
									"source": 6
								},
								{
									"begin": 1281,
									"end": 1298,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 1281,
									"end": 1298,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 1281,
									"end": 1298,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1281,
									"end": 1298,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 1281,
									"end": 1298,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1202,
									"end": 1306,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1202,
									"end": 1306,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 316,
									"end": 3753,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "6"
								},
								{
									"begin": 316,
									"end": 3753,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 7,
									"value": "8"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 334,
									"end": 484,
									"name": "tag",
									"source": 7,
									"value": "10"
								},
								{
									"begin": 334,
									"end": 484,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 477,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF000000000000000000000000"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 400,
									"end": 478,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 389,
									"end": 478,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 389,
									"end": 478,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 334,
									"end": 484,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 334,
									"end": 484,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 334,
									"end": 484,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 334,
									"end": 484,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 490,
									"end": 612,
									"name": "tag",
									"source": 7,
									"value": "11"
								},
								{
									"begin": 490,
									"end": 612,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 563,
									"end": 587,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "22"
								},
								{
									"begin": 581,
									"end": 586,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 563,
									"end": 587,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "10"
								},
								{
									"begin": 563,
									"end": 587,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 563,
									"end": 587,
									"name": "tag",
									"source": 7,
									"value": "22"
								},
								{
									"begin": 563,
									"end": 587,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 556,
									"end": 561,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 553,
									"end": 588,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 543,
									"end": 606,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "23"
								},
								{
									"begin": 543,
									"end": 606,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 602,
									"end": 603,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 599,
									"end": 600,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 592,
									"end": 604,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 543,
									"end": 606,
									"name": "tag",
									"source": 7,
									"value": "23"
								},
								{
									"begin": 543,
									"end": 606,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 490,
									"end": 612,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 490,
									"end": 612,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 618,
									"end": 761,
									"name": "tag",
									"source": 7,
									"value": "12"
								},
								{
									"begin": 618,
									"end": 761,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 675,
									"end": 680,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 706,
									"end": 712,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 700,
									"end": 713,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 691,
									"end": 713,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 691,
									"end": 713,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 722,
									"end": 755,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "25"
								},
								{
									"begin": 749,
									"end": 754,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 722,
									"end": 755,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "11"
								},
								{
									"begin": 722,
									"end": 755,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 722,
									"end": 755,
									"name": "tag",
									"source": 7,
									"value": "25"
								},
								{
									"begin": 722,
									"end": 755,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 618,
									"end": 761,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 618,
									"end": 761,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 618,
									"end": 761,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 618,
									"end": 761,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 618,
									"end": 761,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 767,
									"end": 917,
									"name": "tag",
									"source": 7,
									"value": "13"
								},
								{
									"begin": 767,
									"end": 917,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 804,
									"end": 811,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 844,
									"end": 910,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFF00000000000000000000000000000000000000000000"
								},
								{
									"begin": 837,
									"end": 842,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 833,
									"end": 911,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 822,
									"end": 911,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 822,
									"end": 911,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 767,
									"end": 917,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 767,
									"end": 917,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 767,
									"end": 917,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 767,
									"end": 917,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 923,
									"end": 1045,
									"name": "tag",
									"source": 7,
									"value": "14"
								},
								{
									"begin": 923,
									"end": 1045,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 996,
									"end": 1020,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "28"
								},
								{
									"begin": 1014,
									"end": 1019,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 996,
									"end": 1020,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "13"
								},
								{
									"begin": 996,
									"end": 1020,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 996,
									"end": 1020,
									"name": "tag",
									"source": 7,
									"value": "28"
								},
								{
									"begin": 996,
									"end": 1020,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 989,
									"end": 994,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 986,
									"end": 1021,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 976,
									"end": 1039,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "29"
								},
								{
									"begin": 976,
									"end": 1039,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1035,
									"end": 1036,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1032,
									"end": 1033,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1025,
									"end": 1037,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 976,
									"end": 1039,
									"name": "tag",
									"source": 7,
									"value": "29"
								},
								{
									"begin": 976,
									"end": 1039,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 923,
									"end": 1045,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 923,
									"end": 1045,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1051,
									"end": 1194,
									"name": "tag",
									"source": 7,
									"value": "15"
								},
								{
									"begin": 1051,
									"end": 1194,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1108,
									"end": 1113,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1139,
									"end": 1145,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1133,
									"end": 1146,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 1124,
									"end": 1146,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1124,
									"end": 1146,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1155,
									"end": 1188,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "31"
								},
								{
									"begin": 1182,
									"end": 1187,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1155,
									"end": 1188,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "14"
								},
								{
									"begin": 1155,
									"end": 1188,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1155,
									"end": 1188,
									"name": "tag",
									"source": 7,
									"value": "31"
								},
								{
									"begin": 1155,
									"end": 1188,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1051,
									"end": 1194,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 1051,
									"end": 1194,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1051,
									"end": 1194,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1051,
									"end": 1194,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1051,
									"end": 1194,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1200,
									"end": 1707,
									"name": "tag",
									"source": 7,
									"value": "3"
								},
								{
									"begin": 1200,
									"end": 1707,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1279,
									"end": 1285,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1287,
									"end": 1293,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1336,
									"end": 1338,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1324,
									"end": 1333,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 1315,
									"end": 1322,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 1311,
									"end": 1334,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 1307,
									"end": 1339,
									"name": "SLT",
									"source": 7
								},
								{
									"begin": 1304,
									"end": 1423,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 1304,
									"end": 1423,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "33"
								},
								{
									"begin": 1304,
									"end": 1423,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1342,
									"end": 1421,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "34"
								},
								{
									"begin": 1342,
									"end": 1421,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "8"
								},
								{
									"begin": 1342,
									"end": 1421,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1342,
									"end": 1421,
									"name": "tag",
									"source": 7,
									"value": "34"
								},
								{
									"begin": 1342,
									"end": 1421,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1304,
									"end": 1423,
									"name": "tag",
									"source": 7,
									"value": "33"
								},
								{
									"begin": 1304,
									"end": 1423,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1462,
									"end": 1463,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1487,
									"end": 1551,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "35"
								},
								{
									"begin": 1543,
									"end": 1550,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 1534,
									"end": 1540,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1523,
									"end": 1532,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 1519,
									"end": 1541,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1487,
									"end": 1551,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "12"
								},
								{
									"begin": 1487,
									"end": 1551,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1487,
									"end": 1551,
									"name": "tag",
									"source": 7,
									"value": "35"
								},
								{
									"begin": 1487,
									"end": 1551,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1477,
									"end": 1551,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 1477,
									"end": 1551,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1433,
									"end": 1561,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1600,
									"end": 1602,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1626,
									"end": 1690,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "36"
								},
								{
									"begin": 1682,
									"end": 1689,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 1673,
									"end": 1679,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1662,
									"end": 1671,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 1658,
									"end": 1680,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1626,
									"end": 1690,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "15"
								},
								{
									"begin": 1626,
									"end": 1690,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1626,
									"end": 1690,
									"name": "tag",
									"source": 7,
									"value": "36"
								},
								{
									"begin": 1626,
									"end": 1690,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1616,
									"end": 1690,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1616,
									"end": 1690,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1571,
									"end": 1700,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1200,
									"end": 1707,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 1200,
									"end": 1707,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1200,
									"end": 1707,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 1200,
									"end": 1707,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1200,
									"end": 1707,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1200,
									"end": 1707,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 316,
									"end": 3753,
									"name": "tag",
									"source": 6,
									"value": "6"
								},
								{
									"begin": 316,
									"end": 3753,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 316,
									"end": 3753,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 316,
									"end": 3753,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 316,
									"end": 3753,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 316,
									"end": 3753,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 316,
									"end": 3753,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 316,
									"end": 3753,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 316,
									"end": 3753,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122074227527dc031273894aa7740043449d768f84101047a6454aacb3e2c9c0da8d64736f6c63430008140033",
									".code": [
										{
											"begin": 316,
											"end": 3753,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 316,
											"end": 3753,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 316,
											"end": 3753,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 316,
											"end": 3753,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 316,
											"end": 3753,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 316,
											"end": 3753,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 316,
											"end": 3753,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 316,
											"end": 3753,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 316,
											"end": 3753,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 316,
											"end": 3753,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 316,
											"end": 3753,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 316,
											"end": 3753,
											"name": "tag",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 316,
											"end": 3753,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 316,
											"end": 3753,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 316,
											"end": 3753,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 316,
											"end": 3753,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 316,
											"end": 3753,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 316,
											"end": 3753,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 316,
											"end": 3753,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 316,
											"end": 3753,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 316,
											"end": 3753,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 316,
											"end": 3753,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 316,
											"end": 3753,
											"name": "SHR",
											"source": 6
										},
										{
											"begin": 316,
											"end": 3753,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 316,
											"end": 3753,
											"name": "PUSH",
											"source": 6,
											"value": "95D89B41"
										},
										{
											"begin": 316,
											"end": 3753,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 316,
											"end": 3753,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 316,
											"end": 3753,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 316,
											"end": 3753,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 316,
											"end": 3753,
											"name": "PUSH",
											"source": 6,
											"value": "95D89B41"
										},
										{
											"begin": 316,
											"end": 3753,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 316,
											"end": 3753,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 316,
											"end": 3753,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 316,
											"end": 3753,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 316,
											"end": 3753,
											"name": "PUSH",
											"source": 6,
											"value": "A22CB465"
										},
										{
											"begin": 316,
											"end": 3753,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 316,
											"end": 3753,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 316,
											"end": 3753,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 316,
											"end": 3753,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 316,
											"end": 3753,
											"name": "PUSH",
											"source": 6,
											"value": "DD7D8440"
										},
										{
											"begin": 316,
											"end": 3753,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 316,
											"end": 3753,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 316,
											"end": 3753,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 316,
											"end": 3753,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 316,
											"end": 3753,
											"name": "PUSH",
											"source": 6,
											"value": "E560CA43"
										},
										{
											"begin": 316,
											"end": 3753,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 316,
											"end": 3753,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 316,
											"end": 3753,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 316,
											"end": 3753,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 316,
											"end": 3753,
											"name": "PUSH",
											"source": 6,
											"value": "E985E9C5"
										},
										{
											"begin": 316,
											"end": 3753,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 316,
											"end": 3753,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 316,
											"end": 3753,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 316,
											"end": 3753,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 316,
											"end": 3753,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 316,
											"end": 3753,
											"name": "tag",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 316,
											"end": 3753,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 316,
											"end": 3753,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 316,
											"end": 3753,
											"name": "PUSH",
											"source": 6,
											"value": "6FDDE03"
										},
										{
											"begin": 316,
											"end": 3753,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 316,
											"end": 3753,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 316,
											"end": 3753,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 316,
											"end": 3753,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 316,
											"end": 3753,
											"name": "PUSH",
											"source": 6,
											"value": "70A08231"
										},
										{
											"begin": 316,
											"end": 3753,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 316,
											"end": 3753,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 316,
											"end": 3753,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 316,
											"end": 3753,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 316,
											"end": 3753,
											"name": "PUSH",
											"source": 6,
											"value": "82A7CF1E"
										},
										{
											"begin": 316,
											"end": 3753,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 316,
											"end": 3753,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 316,
											"end": 3753,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 316,
											"end": 3753,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 316,
											"end": 3753,
											"name": "PUSH",
											"source": 6,
											"value": "93B871F2"
										},
										{
											"begin": 316,
											"end": 3753,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 316,
											"end": 3753,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 316,
											"end": 3753,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 316,
											"end": 3753,
											"name": "tag",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 316,
											"end": 3753,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 316,
											"end": 3753,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 316,
											"end": 3753,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 316,
											"end": 3753,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1316,
											"end": 1393,
											"name": "tag",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 1316,
											"end": 1393,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1316,
											"end": 1393,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 1316,
											"end": 1393,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 1316,
											"end": 1393,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1316,
											"end": 1393,
											"name": "tag",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 1316,
											"end": 1393,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1316,
											"end": 1393,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1316,
											"end": 1393,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1316,
											"end": 1393,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "15"
										},
										{
											"begin": 1316,
											"end": 1393,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1316,
											"end": 1393,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1316,
											"end": 1393,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 1316,
											"end": 1393,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1316,
											"end": 1393,
											"name": "tag",
											"source": 6,
											"value": "15"
										},
										{
											"begin": 1316,
											"end": 1393,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1316,
											"end": 1393,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1316,
											"end": 1393,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1316,
											"end": 1393,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1316,
											"end": 1393,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1316,
											"end": 1393,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1316,
											"end": 1393,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1316,
											"end": 1393,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 1494,
											"end": 1683,
											"name": "tag",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1494,
											"end": 1683,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1494,
											"end": 1683,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 1494,
											"end": 1683,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1494,
											"end": 1683,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1494,
											"end": 1683,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 1494,
											"end": 1683,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1494,
											"end": 1683,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1494,
											"end": 1683,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1494,
											"end": 1683,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1494,
											"end": 1683,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 1494,
											"end": 1683,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1494,
											"end": 1683,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1494,
											"end": 1683,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 1494,
											"end": 1683,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1494,
											"end": 1683,
											"name": "tag",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 1494,
											"end": 1683,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1494,
											"end": 1683,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1494,
											"end": 1683,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1494,
											"end": 1683,
											"name": "tag",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 1494,
											"end": 1683,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1494,
											"end": 1683,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1494,
											"end": 1683,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1494,
											"end": 1683,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 1494,
											"end": 1683,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1494,
											"end": 1683,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1494,
											"end": 1683,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 1494,
											"end": 1683,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1494,
											"end": 1683,
											"name": "tag",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 1494,
											"end": 1683,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1494,
											"end": 1683,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1494,
											"end": 1683,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1494,
											"end": 1683,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1494,
											"end": 1683,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1494,
											"end": 1683,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1494,
											"end": 1683,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1494,
											"end": 1683,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 1693,
											"end": 1804,
											"name": "tag",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 1693,
											"end": 1804,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1693,
											"end": 1804,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 1693,
											"end": 1804,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1693,
											"end": 1804,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1693,
											"end": 1804,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 1693,
											"end": 1804,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1693,
											"end": 1804,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1693,
											"end": 1804,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1693,
											"end": 1804,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1693,
											"end": 1804,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 1693,
											"end": 1804,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1693,
											"end": 1804,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1693,
											"end": 1804,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 1693,
											"end": 1804,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1693,
											"end": 1804,
											"name": "tag",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 1693,
											"end": 1804,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1693,
											"end": 1804,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 1693,
											"end": 1804,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1693,
											"end": 1804,
											"name": "tag",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 1693,
											"end": 1804,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1693,
											"end": 1804,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1693,
											"end": 1804,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1693,
											"end": 1804,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "27"
										},
										{
											"begin": 1693,
											"end": 1804,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1693,
											"end": 1804,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1693,
											"end": 1804,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "28"
										},
										{
											"begin": 1693,
											"end": 1804,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1693,
											"end": 1804,
											"name": "tag",
											"source": 6,
											"value": "27"
										},
										{
											"begin": 1693,
											"end": 1804,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1693,
											"end": 1804,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1693,
											"end": 1804,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1693,
											"end": 1804,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1693,
											"end": 1804,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1693,
											"end": 1804,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1693,
											"end": 1804,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1693,
											"end": 1804,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 2177,
											"end": 2337,
											"name": "tag",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 2177,
											"end": 2337,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2177,
											"end": 2337,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "29"
										},
										{
											"begin": 2177,
											"end": 2337,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2177,
											"end": 2337,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2177,
											"end": 2337,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 2177,
											"end": 2337,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2177,
											"end": 2337,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2177,
											"end": 2337,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2177,
											"end": 2337,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2177,
											"end": 2337,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "30"
										},
										{
											"begin": 2177,
											"end": 2337,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2177,
											"end": 2337,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2177,
											"end": 2337,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 2177,
											"end": 2337,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2177,
											"end": 2337,
											"name": "tag",
											"source": 6,
											"value": "30"
										},
										{
											"begin": 2177,
											"end": 2337,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2177,
											"end": 2337,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "31"
										},
										{
											"begin": 2177,
											"end": 2337,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2177,
											"end": 2337,
											"name": "tag",
											"source": 6,
											"value": "29"
										},
										{
											"begin": 2177,
											"end": 2337,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2177,
											"end": 2337,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2177,
											"end": 2337,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2177,
											"end": 2337,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "32"
										},
										{
											"begin": 2177,
											"end": 2337,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2177,
											"end": 2337,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2177,
											"end": 2337,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "28"
										},
										{
											"begin": 2177,
											"end": 2337,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2177,
											"end": 2337,
											"name": "tag",
											"source": 6,
											"value": "32"
										},
										{
											"begin": 2177,
											"end": 2337,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2177,
											"end": 2337,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2177,
											"end": 2337,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2177,
											"end": 2337,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2177,
											"end": 2337,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2177,
											"end": 2337,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2177,
											"end": 2337,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2177,
											"end": 2337,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 1403,
											"end": 1484,
											"name": "tag",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 1403,
											"end": 1484,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1403,
											"end": 1484,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "33"
										},
										{
											"begin": 1403,
											"end": 1484,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "34"
										},
										{
											"begin": 1403,
											"end": 1484,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1403,
											"end": 1484,
											"name": "tag",
											"source": 6,
											"value": "33"
										},
										{
											"begin": 1403,
											"end": 1484,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1403,
											"end": 1484,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1403,
											"end": 1484,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1403,
											"end": 1484,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "35"
										},
										{
											"begin": 1403,
											"end": 1484,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1403,
											"end": 1484,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1403,
											"end": 1484,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "36"
										},
										{
											"begin": 1403,
											"end": 1484,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1403,
											"end": 1484,
											"name": "tag",
											"source": 6,
											"value": "35"
										},
										{
											"begin": 1403,
											"end": 1484,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1403,
											"end": 1484,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1403,
											"end": 1484,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1403,
											"end": 1484,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1403,
											"end": 1484,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1403,
											"end": 1484,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1403,
											"end": 1484,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1403,
											"end": 1484,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 2345,
											"end": 2769,
											"name": "tag",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 2345,
											"end": 2769,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2345,
											"end": 2769,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "37"
										},
										{
											"begin": 2345,
											"end": 2769,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2345,
											"end": 2769,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2345,
											"end": 2769,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 2345,
											"end": 2769,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2345,
											"end": 2769,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2345,
											"end": 2769,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2345,
											"end": 2769,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2345,
											"end": 2769,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "38"
										},
										{
											"begin": 2345,
											"end": 2769,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2345,
											"end": 2769,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2345,
											"end": 2769,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "39"
										},
										{
											"begin": 2345,
											"end": 2769,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2345,
											"end": 2769,
											"name": "tag",
											"source": 6,
											"value": "38"
										},
										{
											"begin": 2345,
											"end": 2769,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2345,
											"end": 2769,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2345,
											"end": 2769,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2345,
											"end": 2769,
											"name": "tag",
											"source": 6,
											"value": "37"
										},
										{
											"begin": 2345,
											"end": 2769,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2345,
											"end": 2769,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 1814,
											"end": 2054,
											"name": "tag",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 1814,
											"end": 2054,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1814,
											"end": 2054,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "41"
										},
										{
											"begin": 1814,
											"end": 2054,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1814,
											"end": 2054,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1814,
											"end": 2054,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 1814,
											"end": 2054,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1814,
											"end": 2054,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1814,
											"end": 2054,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1814,
											"end": 2054,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1814,
											"end": 2054,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "42"
										},
										{
											"begin": 1814,
											"end": 2054,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1814,
											"end": 2054,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1814,
											"end": 2054,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 1814,
											"end": 2054,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1814,
											"end": 2054,
											"name": "tag",
											"source": 6,
											"value": "42"
										},
										{
											"begin": 1814,
											"end": 2054,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1814,
											"end": 2054,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "43"
										},
										{
											"begin": 1814,
											"end": 2054,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1814,
											"end": 2054,
											"name": "tag",
											"source": 6,
											"value": "41"
										},
										{
											"begin": 1814,
											"end": 2054,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1814,
											"end": 2054,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1814,
											"end": 2054,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1814,
											"end": 2054,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 1814,
											"end": 2054,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1814,
											"end": 2054,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1814,
											"end": 2054,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "45"
										},
										{
											"begin": 1814,
											"end": 2054,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1814,
											"end": 2054,
											"name": "tag",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 1814,
											"end": 2054,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1814,
											"end": 2054,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1814,
											"end": 2054,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1814,
											"end": 2054,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1814,
											"end": 2054,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1814,
											"end": 2054,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1814,
											"end": 2054,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1814,
											"end": 2054,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 2064,
											"end": 2169,
											"name": "tag",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 2064,
											"end": 2169,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2064,
											"end": 2169,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "46"
										},
										{
											"begin": 2064,
											"end": 2169,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2064,
											"end": 2169,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2064,
											"end": 2169,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 2064,
											"end": 2169,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2064,
											"end": 2169,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2064,
											"end": 2169,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2064,
											"end": 2169,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2064,
											"end": 2169,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "47"
										},
										{
											"begin": 2064,
											"end": 2169,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2064,
											"end": 2169,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2064,
											"end": 2169,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "48"
										},
										{
											"begin": 2064,
											"end": 2169,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2064,
											"end": 2169,
											"name": "tag",
											"source": 6,
											"value": "47"
										},
										{
											"begin": 2064,
											"end": 2169,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2064,
											"end": 2169,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "49"
										},
										{
											"begin": 2064,
											"end": 2169,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2064,
											"end": 2169,
											"name": "tag",
											"source": 6,
											"value": "46"
										},
										{
											"begin": 2064,
											"end": 2169,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2064,
											"end": 2169,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 2779,
											"end": 2926,
											"name": "tag",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 2779,
											"end": 2926,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2779,
											"end": 2926,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "50"
										},
										{
											"begin": 2779,
											"end": 2926,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2779,
											"end": 2926,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2779,
											"end": 2926,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 2779,
											"end": 2926,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2779,
											"end": 2926,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2779,
											"end": 2926,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2779,
											"end": 2926,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2779,
											"end": 2926,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "51"
										},
										{
											"begin": 2779,
											"end": 2926,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2779,
											"end": 2926,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2779,
											"end": 2926,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "52"
										},
										{
											"begin": 2779,
											"end": 2926,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2779,
											"end": 2926,
											"name": "tag",
											"source": 6,
											"value": "51"
										},
										{
											"begin": 2779,
											"end": 2926,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2779,
											"end": 2926,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "53"
										},
										{
											"begin": 2779,
											"end": 2926,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2779,
											"end": 2926,
											"name": "tag",
											"source": 6,
											"value": "50"
										},
										{
											"begin": 2779,
											"end": 2926,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2779,
											"end": 2926,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2779,
											"end": 2926,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2779,
											"end": 2926,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "54"
										},
										{
											"begin": 2779,
											"end": 2926,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2779,
											"end": 2926,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2779,
											"end": 2926,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "55"
										},
										{
											"begin": 2779,
											"end": 2926,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2779,
											"end": 2926,
											"name": "tag",
											"source": 6,
											"value": "54"
										},
										{
											"begin": 2779,
											"end": 2926,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2779,
											"end": 2926,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2779,
											"end": 2926,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2779,
											"end": 2926,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2779,
											"end": 2926,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2779,
											"end": 2926,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2779,
											"end": 2926,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2779,
											"end": 2926,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 1316,
											"end": 1393,
											"name": "tag",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 1316,
											"end": 1393,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1353,
											"end": 1360,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1380,
											"end": 1385,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1380,
											"end": 1385,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1380,
											"end": 1385,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1380,
											"end": 1385,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1380,
											"end": 1385,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1380,
											"end": 1385,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 1380,
											"end": 1385,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 1380,
											"end": 1385,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1380,
											"end": 1385,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 1380,
											"end": 1385,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 1380,
											"end": 1385,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 1373,
											"end": 1385,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1373,
											"end": 1385,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1316,
											"end": 1393,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1316,
											"end": 1393,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1494,
											"end": 1683,
											"name": "tag",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1494,
											"end": 1683,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1549,
											"end": 1555,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1593,
											"end": 1594,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1576,
											"end": 1595,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1576,
											"end": 1595,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1576,
											"end": 1581,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1576,
											"end": 1595,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1576,
											"end": 1595,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1576,
											"end": 1595,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1568,
											"end": 1631,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "58"
										},
										{
											"begin": 1568,
											"end": 1631,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1568,
											"end": 1631,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1568,
											"end": 1631,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1568,
											"end": 1631,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1568,
											"end": 1631,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1568,
											"end": 1631,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1568,
											"end": 1631,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1568,
											"end": 1631,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1568,
											"end": 1631,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "59"
										},
										{
											"begin": 1568,
											"end": 1631,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1568,
											"end": 1631,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 1568,
											"end": 1631,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1568,
											"end": 1631,
											"name": "tag",
											"source": 6,
											"value": "59"
										},
										{
											"begin": 1568,
											"end": 1631,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1568,
											"end": 1631,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1568,
											"end": 1631,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1568,
											"end": 1631,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1568,
											"end": 1631,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1568,
											"end": 1631,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1568,
											"end": 1631,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1568,
											"end": 1631,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1568,
											"end": 1631,
											"name": "tag",
											"source": 6,
											"value": "58"
										},
										{
											"begin": 1568,
											"end": 1631,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1649,
											"end": 1665,
											"name": "PUSH",
											"source": 6,
											"value": "4B3"
										},
										{
											"begin": 1649,
											"end": 1672,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1666,
											"end": 1671,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1649,
											"end": 1672,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1649,
											"end": 1672,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1649,
											"end": 1672,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1649,
											"end": 1672,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1649,
											"end": 1672,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1649,
											"end": 1672,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1649,
											"end": 1672,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1649,
											"end": 1672,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1649,
											"end": 1672,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1649,
											"end": 1672,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1649,
											"end": 1672,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1649,
											"end": 1672,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1649,
											"end": 1672,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1649,
											"end": 1672,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1649,
											"end": 1672,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 1673,
											"end": 1674,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1649,
											"end": 1675,
											"name": "PUSH",
											"source": 6,
											"value": "4B1"
										},
										{
											"begin": 1649,
											"end": 1675,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1649,
											"end": 1675,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 1649,
											"end": 1675,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "61"
										},
										{
											"begin": 1649,
											"end": 1675,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1649,
											"end": 1675,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "62"
										},
										{
											"begin": 1649,
											"end": 1675,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "63"
										},
										{
											"begin": 1649,
											"end": 1675,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1649,
											"end": 1675,
											"name": "tag",
											"source": 6,
											"value": "62"
										},
										{
											"begin": 1649,
											"end": 1675,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1649,
											"end": 1675,
											"name": "tag",
											"source": 6,
											"value": "61"
										},
										{
											"begin": 1649,
											"end": 1675,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1649,
											"end": 1675,
											"name": "PUSH",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 1649,
											"end": 1675,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1649,
											"end": 1675,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1649,
											"end": 1675,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1649,
											"end": 1675,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 1649,
											"end": 1675,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1649,
											"end": 1675,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1649,
											"end": 1675,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1649,
											"end": 1675,
											"name": "MOD",
											"source": 6
										},
										{
											"begin": 1649,
											"end": 1675,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 1649,
											"end": 1675,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 1649,
											"end": 1675,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1649,
											"end": 1675,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1649,
											"end": 1675,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1649,
											"end": 1675,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 1649,
											"end": 1675,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 1649,
											"end": 1675,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1649,
											"end": 1675,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 1649,
											"end": 1675,
											"name": "PUSH",
											"source": 6,
											"value": "FFFF"
										},
										{
											"begin": 1649,
											"end": 1675,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1642,
											"end": 1675,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1642,
											"end": 1675,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1494,
											"end": 1683,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1494,
											"end": 1683,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1494,
											"end": 1683,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1494,
											"end": 1683,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1693,
											"end": 1804,
											"name": "tag",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 1693,
											"end": 1804,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1747,
											"end": 1754,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1774,
											"end": 1796,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "66"
										},
										{
											"begin": 1788,
											"end": 1795,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1774,
											"end": 1787,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "67"
										},
										{
											"begin": 1774,
											"end": 1796,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1774,
											"end": 1796,
											"name": "tag",
											"source": 6,
											"value": "66"
										},
										{
											"begin": 1774,
											"end": 1796,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1767,
											"end": 1796,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1767,
											"end": 1796,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1693,
											"end": 1804,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1693,
											"end": 1804,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1693,
											"end": 1804,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1693,
											"end": 1804,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2177,
											"end": 2337,
											"name": "tag",
											"source": 6,
											"value": "31"
										},
										{
											"begin": 2177,
											"end": 2337,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2243,
											"end": 2250,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2263,
											"end": 2285,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "69"
										},
										{
											"begin": 2277,
											"end": 2284,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2263,
											"end": 2276,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "67"
										},
										{
											"begin": 2263,
											"end": 2285,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2263,
											"end": 2285,
											"name": "tag",
											"source": 6,
											"value": "69"
										},
										{
											"begin": 2263,
											"end": 2285,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2263,
											"end": 2285,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2305,
											"end": 2320,
											"name": "PUSH",
											"source": 6,
											"value": "4B4"
										},
										{
											"begin": 2305,
											"end": 2329,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2321,
											"end": 2328,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2305,
											"end": 2329,
											"name": "PUSH",
											"source": 6,
											"value": "FFFF"
										},
										{
											"begin": 2305,
											"end": 2329,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2305,
											"end": 2329,
											"name": "PUSH",
											"source": 6,
											"value": "FFFF"
										},
										{
											"begin": 2305,
											"end": 2329,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2305,
											"end": 2329,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2305,
											"end": 2329,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2305,
											"end": 2329,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2305,
											"end": 2329,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2305,
											"end": 2329,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2305,
											"end": 2329,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2305,
											"end": 2329,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2305,
											"end": 2329,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2305,
											"end": 2329,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2305,
											"end": 2329,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2305,
											"end": 2329,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 2305,
											"end": 2329,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2305,
											"end": 2329,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2305,
											"end": 2329,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2305,
											"end": 2329,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2305,
											"end": 2329,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 2305,
											"end": 2329,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 2305,
											"end": 2329,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2305,
											"end": 2329,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 2305,
											"end": 2329,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2305,
											"end": 2329,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2298,
											"end": 2329,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2298,
											"end": 2329,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2177,
											"end": 2337,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2177,
											"end": 2337,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2177,
											"end": 2337,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2177,
											"end": 2337,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1403,
											"end": 1484,
											"name": "tag",
											"source": 6,
											"value": "34"
										},
										{
											"begin": 1403,
											"end": 1484,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1442,
											"end": 1449,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1469,
											"end": 1476,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1469,
											"end": 1476,
											"name": "PUSH",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 1469,
											"end": 1476,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1469,
											"end": 1476,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1469,
											"end": 1476,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1469,
											"end": 1476,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 1469,
											"end": 1476,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 1469,
											"end": 1476,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1469,
											"end": 1476,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 1469,
											"end": 1476,
											"name": "PUSH",
											"source": 6,
											"value": "B0"
										},
										{
											"begin": 1469,
											"end": 1476,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 1462,
											"end": 1476,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1462,
											"end": 1476,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1403,
											"end": 1484,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1403,
											"end": 1484,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2345,
											"end": 2769,
											"name": "tag",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2345,
											"end": 2769,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2447,
											"end": 2455,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2431,
											"end": 2455,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2431,
											"end": 2455,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2431,
											"end": 2443,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "72"
										},
										{
											"begin": 2431,
											"end": 2441,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "73"
										},
										{
											"begin": 2431,
											"end": 2443,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2431,
											"end": 2443,
											"name": "tag",
											"source": 6,
											"value": "72"
										},
										{
											"begin": 2431,
											"end": 2443,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2431,
											"end": 2455,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2431,
											"end": 2455,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2431,
											"end": 2455,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2423,
											"end": 2519,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "74"
										},
										{
											"begin": 2423,
											"end": 2519,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2423,
											"end": 2519,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2423,
											"end": 2519,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2423,
											"end": 2519,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2423,
											"end": 2519,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2423,
											"end": 2519,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2423,
											"end": 2519,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2423,
											"end": 2519,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2423,
											"end": 2519,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "75"
										},
										{
											"begin": 2423,
											"end": 2519,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2423,
											"end": 2519,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "76"
										},
										{
											"begin": 2423,
											"end": 2519,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2423,
											"end": 2519,
											"name": "tag",
											"source": 6,
											"value": "75"
										},
										{
											"begin": 2423,
											"end": 2519,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2423,
											"end": 2519,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2423,
											"end": 2519,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2423,
											"end": 2519,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2423,
											"end": 2519,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2423,
											"end": 2519,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2423,
											"end": 2519,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2423,
											"end": 2519,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2423,
											"end": 2519,
											"name": "tag",
											"source": 6,
											"value": "74"
										},
										{
											"begin": 2423,
											"end": 2519,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2554,
											"end": 2555,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2534,
											"end": 2556,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2534,
											"end": 2556,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2534,
											"end": 2542,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2534,
											"end": 2556,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2534,
											"end": 2556,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2534,
											"end": 2556,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2530,
											"end": 2623,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "77"
										},
										{
											"begin": 2530,
											"end": 2623,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2602,
											"end": 2610,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2580,
											"end": 2611,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2580,
											"end": 2611,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2580,
											"end": 2611,
											"name": "PUSH",
											"source": 6,
											"value": "5B08BA1800000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2580,
											"end": 2611,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2580,
											"end": 2611,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2580,
											"end": 2611,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2580,
											"end": 2611,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2580,
											"end": 2611,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "78"
										},
										{
											"begin": 2580,
											"end": 2611,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2580,
											"end": 2611,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2580,
											"end": 2611,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "28"
										},
										{
											"begin": 2580,
											"end": 2611,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2580,
											"end": 2611,
											"name": "tag",
											"source": 6,
											"value": "78"
										},
										{
											"begin": 2580,
											"end": 2611,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2580,
											"end": 2611,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2580,
											"end": 2611,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2580,
											"end": 2611,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2580,
											"end": 2611,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2580,
											"end": 2611,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2580,
											"end": 2611,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2580,
											"end": 2611,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2530,
											"end": 2623,
											"name": "tag",
											"source": 6,
											"value": "77"
										},
										{
											"begin": 2530,
											"end": 2623,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2688,
											"end": 2696,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2643,
											"end": 2661,
											"name": "PUSH",
											"source": 6,
											"value": "4B5"
										},
										{
											"begin": 2643,
											"end": 2675,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2662,
											"end": 2674,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "79"
										},
										{
											"begin": 2662,
											"end": 2672,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "73"
										},
										{
											"begin": 2662,
											"end": 2674,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2662,
											"end": 2674,
											"name": "tag",
											"source": 6,
											"value": "79"
										},
										{
											"begin": 2662,
											"end": 2674,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2643,
											"end": 2675,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2643,
											"end": 2675,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2643,
											"end": 2675,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2643,
											"end": 2675,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2643,
											"end": 2675,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2643,
											"end": 2675,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2643,
											"end": 2675,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2643,
											"end": 2675,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2643,
											"end": 2675,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2643,
											"end": 2675,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2643,
											"end": 2675,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2643,
											"end": 2675,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2643,
											"end": 2675,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2643,
											"end": 2675,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2643,
											"end": 2675,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 2643,
											"end": 2685,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2676,
											"end": 2684,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2643,
											"end": 2685,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2643,
											"end": 2685,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2643,
											"end": 2685,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2643,
											"end": 2685,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2643,
											"end": 2685,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2643,
											"end": 2685,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2643,
											"end": 2685,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2643,
											"end": 2685,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2643,
											"end": 2685,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2643,
											"end": 2685,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2643,
											"end": 2685,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2643,
											"end": 2685,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2643,
											"end": 2685,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2643,
											"end": 2685,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2643,
											"end": 2685,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 2643,
											"end": 2685,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2643,
											"end": 2696,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 2643,
											"end": 2696,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 2643,
											"end": 2696,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2643,
											"end": 2696,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2643,
											"end": 2696,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2643,
											"end": 2696,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 2643,
											"end": 2696,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 2643,
											"end": 2696,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 2643,
											"end": 2696,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2643,
											"end": 2696,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2643,
											"end": 2696,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2643,
											"end": 2696,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2643,
											"end": 2696,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2643,
											"end": 2696,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 2643,
											"end": 2696,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 2643,
											"end": 2696,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2643,
											"end": 2696,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 2643,
											"end": 2696,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2742,
											"end": 2750,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2713,
											"end": 2761,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2713,
											"end": 2761,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2728,
											"end": 2740,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 2728,
											"end": 2738,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "73"
										},
										{
											"begin": 2728,
											"end": 2740,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2728,
											"end": 2740,
											"name": "tag",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 2728,
											"end": 2740,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2713,
											"end": 2761,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2713,
											"end": 2761,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2713,
											"end": 2761,
											"name": "PUSH",
											"source": 6,
											"value": "17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
										},
										{
											"begin": 2752,
											"end": 2760,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2713,
											"end": 2761,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2713,
											"end": 2761,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2713,
											"end": 2761,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "81"
										},
										{
											"begin": 2713,
											"end": 2761,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2713,
											"end": 2761,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2713,
											"end": 2761,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "55"
										},
										{
											"begin": 2713,
											"end": 2761,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2713,
											"end": 2761,
											"name": "tag",
											"source": 6,
											"value": "81"
										},
										{
											"begin": 2713,
											"end": 2761,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2713,
											"end": 2761,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2713,
											"end": 2761,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2713,
											"end": 2761,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2713,
											"end": 2761,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2713,
											"end": 2761,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2713,
											"end": 2761,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2713,
											"end": 2761,
											"name": "LOG3",
											"source": 6
										},
										{
											"begin": 2345,
											"end": 2769,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2345,
											"end": 2769,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2345,
											"end": 2769,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1814,
											"end": 2054,
											"name": "tag",
											"source": 6,
											"value": "43"
										},
										{
											"begin": 1814,
											"end": 2054,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1869,
											"end": 1882,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 1895,
											"end": 1917,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "83"
										},
										{
											"begin": 1909,
											"end": 1916,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1895,
											"end": 1908,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "67"
										},
										{
											"begin": 1895,
											"end": 1917,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1895,
											"end": 1917,
											"name": "tag",
											"source": 6,
											"value": "83"
										},
										{
											"begin": 1895,
											"end": 1917,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1895,
											"end": 1917,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1928,
											"end": 1946,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1949,
											"end": 1959,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 1949,
											"end": 1957,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "85"
										},
										{
											"begin": 1949,
											"end": 1959,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1949,
											"end": 1959,
											"name": "tag",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 1949,
											"end": 1959,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1928,
											"end": 1959,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1928,
											"end": 1959,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1998,
											"end": 1999,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1983,
											"end": 1987,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1977,
											"end": 1995,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1977,
											"end": 1999,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 1977,
											"end": 2046,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "86"
										},
										{
											"begin": 1977,
											"end": 2046,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1977,
											"end": 2046,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1977,
											"end": 2046,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1977,
											"end": 2046,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1977,
											"end": 2046,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1977,
											"end": 2046,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1977,
											"end": 2046,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1977,
											"end": 2046,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1977,
											"end": 2046,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1977,
											"end": 2046,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1977,
											"end": 2046,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1977,
											"end": 2046,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1977,
											"end": 2046,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1977,
											"end": 2046,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "87"
										},
										{
											"begin": 1977,
											"end": 2046,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1977,
											"end": 2046,
											"name": "tag",
											"source": 6,
											"value": "86"
										},
										{
											"begin": 1977,
											"end": 2046,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2016,
											"end": 2020,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2022,
											"end": 2040,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "88"
										},
										{
											"begin": 2022,
											"end": 2029,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2022,
											"end": 2038,
											"name": "PUSH",
											"source": 6,
											"value": "FFFF"
										},
										{
											"begin": 2022,
											"end": 2038,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2022,
											"end": 2038,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "89"
										},
										{
											"begin": 2022,
											"end": 2040,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2022,
											"end": 2040,
											"name": "tag",
											"source": 6,
											"value": "88"
										},
										{
											"begin": 2022,
											"end": 2040,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2002,
											"end": 2041,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2002,
											"end": 2041,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2002,
											"end": 2041,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2002,
											"end": 2041,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2002,
											"end": 2041,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "90"
										},
										{
											"begin": 2002,
											"end": 2041,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2002,
											"end": 2041,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2002,
											"end": 2041,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2002,
											"end": 2041,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "91"
										},
										{
											"begin": 2002,
											"end": 2041,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2002,
											"end": 2041,
											"name": "tag",
											"source": 6,
											"value": "90"
										},
										{
											"begin": 2002,
											"end": 2041,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2002,
											"end": 2041,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2002,
											"end": 2041,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2002,
											"end": 2041,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2002,
											"end": 2041,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2002,
											"end": 2041,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2002,
											"end": 2041,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2002,
											"end": 2041,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2002,
											"end": 2041,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2002,
											"end": 2041,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2002,
											"end": 2041,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2002,
											"end": 2041,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2002,
											"end": 2041,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1977,
											"end": 2046,
											"name": "tag",
											"source": 6,
											"value": "87"
										},
										{
											"begin": 1977,
											"end": 2046,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1970,
											"end": 2046,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1970,
											"end": 2046,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1970,
											"end": 2046,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1814,
											"end": 2054,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1814,
											"end": 2054,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1814,
											"end": 2054,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1814,
											"end": 2054,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2064,
											"end": 2169,
											"name": "tag",
											"source": 6,
											"value": "49"
										},
										{
											"begin": 2064,
											"end": 2169,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2127,
											"end": 2161,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "93"
										},
										{
											"begin": 2135,
											"end": 2137,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2139,
											"end": 2146,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2148,
											"end": 2160,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "94"
										},
										{
											"begin": 2148,
											"end": 2158,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "73"
										},
										{
											"begin": 2148,
											"end": 2160,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2148,
											"end": 2160,
											"name": "tag",
											"source": 6,
											"value": "94"
										},
										{
											"begin": 2148,
											"end": 2160,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2127,
											"end": 2134,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "95"
										},
										{
											"begin": 2127,
											"end": 2161,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2127,
											"end": 2161,
											"name": "tag",
											"source": 6,
											"value": "93"
										},
										{
											"begin": 2127,
											"end": 2161,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2064,
											"end": 2169,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2064,
											"end": 2169,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2064,
											"end": 2169,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2779,
											"end": 2926,
											"name": "tag",
											"source": 6,
											"value": "53"
										},
										{
											"begin": 2779,
											"end": 2926,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2859,
											"end": 2863,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2883,
											"end": 2901,
											"name": "PUSH",
											"source": 6,
											"value": "4B5"
										},
										{
											"begin": 2883,
											"end": 2908,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2902,
											"end": 2907,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2883,
											"end": 2908,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2883,
											"end": 2908,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2883,
											"end": 2908,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2883,
											"end": 2908,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2883,
											"end": 2908,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2883,
											"end": 2908,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2883,
											"end": 2908,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2883,
											"end": 2908,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2883,
											"end": 2908,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2883,
											"end": 2908,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2883,
											"end": 2908,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2883,
											"end": 2908,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2883,
											"end": 2908,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2883,
											"end": 2908,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2883,
											"end": 2908,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 2883,
											"end": 2918,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2909,
											"end": 2917,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2883,
											"end": 2918,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2883,
											"end": 2918,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2883,
											"end": 2918,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2883,
											"end": 2918,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2883,
											"end": 2918,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2883,
											"end": 2918,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2883,
											"end": 2918,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2883,
											"end": 2918,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2883,
											"end": 2918,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2883,
											"end": 2918,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2883,
											"end": 2918,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2883,
											"end": 2918,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2883,
											"end": 2918,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2883,
											"end": 2918,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2883,
											"end": 2918,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 2883,
											"end": 2918,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2883,
											"end": 2918,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2883,
											"end": 2918,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2883,
											"end": 2918,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2883,
											"end": 2918,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 2883,
											"end": 2918,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 2883,
											"end": 2918,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2883,
											"end": 2918,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 2883,
											"end": 2918,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 2883,
											"end": 2918,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2876,
											"end": 2918,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2876,
											"end": 2918,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2779,
											"end": 2926,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2779,
											"end": 2926,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2779,
											"end": 2926,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2779,
											"end": 2926,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2779,
											"end": 2926,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3380,
											"end": 3644,
											"name": "tag",
											"source": 6,
											"value": "67"
										},
										{
											"begin": 3380,
											"end": 3644,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3442,
											"end": 3449,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3474,
											"end": 3481,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3470,
											"end": 3481,
											"name": "PUSH",
											"source": 6,
											"value": "FFFF"
										},
										{
											"begin": 3470,
											"end": 3481,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3470,
											"end": 3471,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3470,
											"end": 3481,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 3470,
											"end": 3517,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3470,
											"end": 3517,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3470,
											"end": 3517,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "98"
										},
										{
											"begin": 3470,
											"end": 3517,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3470,
											"end": 3517,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3496,
											"end": 3503,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 3496,
											"end": 3517,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3496,
											"end": 3517,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3496,
											"end": 3517,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 3496,
											"end": 3517,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3496,
											"end": 3517,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3496,
											"end": 3517,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3496,
											"end": 3517,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 3496,
											"end": 3517,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 3496,
											"end": 3517,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3496,
											"end": 3517,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 3496,
											"end": 3517,
											"name": "PUSH",
											"source": 6,
											"value": "FFFF"
										},
										{
											"begin": 3496,
											"end": 3517,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3485,
											"end": 3517,
											"name": "PUSH",
											"source": 6,
											"value": "FFFF"
										},
										{
											"begin": 3485,
											"end": 3517,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3485,
											"end": 3492,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3485,
											"end": 3517,
											"name": "PUSH",
											"source": 6,
											"value": "FFFF"
										},
										{
											"begin": 3485,
											"end": 3517,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3485,
											"end": 3517,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 3485,
											"end": 3517,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3470,
											"end": 3517,
											"name": "tag",
											"source": 6,
											"value": "98"
										},
										{
											"begin": 3470,
											"end": 3517,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3462,
											"end": 3601,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "99"
										},
										{
											"begin": 3462,
											"end": 3601,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3462,
											"end": 3601,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3462,
											"end": 3601,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3462,
											"end": 3601,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3462,
											"end": 3601,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3462,
											"end": 3601,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3462,
											"end": 3601,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3462,
											"end": 3601,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3462,
											"end": 3601,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 3462,
											"end": 3601,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3462,
											"end": 3601,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "101"
										},
										{
											"begin": 3462,
											"end": 3601,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3462,
											"end": 3601,
											"name": "tag",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 3462,
											"end": 3601,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3462,
											"end": 3601,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3462,
											"end": 3601,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3462,
											"end": 3601,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3462,
											"end": 3601,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3462,
											"end": 3601,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3462,
											"end": 3601,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3462,
											"end": 3601,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3462,
											"end": 3601,
											"name": "tag",
											"source": 6,
											"value": "99"
										},
										{
											"begin": 3462,
											"end": 3601,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3620,
											"end": 3627,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 3628,
											"end": 3635,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3620,
											"end": 3636,
											"name": "PUSH",
											"source": 6,
											"value": "FFFF"
										},
										{
											"begin": 3620,
											"end": 3636,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3620,
											"end": 3636,
											"name": "PUSH",
											"source": 6,
											"value": "4B1"
										},
										{
											"begin": 3620,
											"end": 3636,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3620,
											"end": 3636,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 3620,
											"end": 3636,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "102"
										},
										{
											"begin": 3620,
											"end": 3636,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3620,
											"end": 3636,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "103"
										},
										{
											"begin": 3620,
											"end": 3636,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "63"
										},
										{
											"begin": 3620,
											"end": 3636,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3620,
											"end": 3636,
											"name": "tag",
											"source": 6,
											"value": "103"
										},
										{
											"begin": 3620,
											"end": 3636,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3620,
											"end": 3636,
											"name": "tag",
											"source": 6,
											"value": "102"
										},
										{
											"begin": 3620,
											"end": 3636,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3620,
											"end": 3636,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3620,
											"end": 3636,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3620,
											"end": 3636,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3620,
											"end": 3636,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3620,
											"end": 3636,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3620,
											"end": 3636,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 3620,
											"end": 3636,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 3620,
											"end": 3636,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3620,
											"end": 3636,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 3620,
											"end": 3636,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3620,
											"end": 3636,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3613,
											"end": 3636,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3613,
											"end": 3636,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3380,
											"end": 3644,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3380,
											"end": 3644,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3380,
											"end": 3644,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3380,
											"end": 3644,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3654,
											"end": 3740,
											"name": "tag",
											"source": 6,
											"value": "85"
										},
										{
											"begin": 3654,
											"end": 3740,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3697,
											"end": 3710,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 3723,
											"end": 3732,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3723,
											"end": 3732,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3723,
											"end": 3732,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3723,
											"end": 3732,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3723,
											"end": 3732,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3723,
											"end": 3732,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3723,
											"end": 3732,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3723,
											"end": 3732,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3723,
											"end": 3732,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3723,
											"end": 3732,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3723,
											"end": 3732,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3723,
											"end": 3732,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3723,
											"end": 3732,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3723,
											"end": 3732,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3654,
											"end": 3740,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3654,
											"end": 3740,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 637,
											"end": 1335,
											"name": "tag",
											"source": 3,
											"value": "89"
										},
										{
											"begin": 637,
											"end": 1335,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 693,
											"end": 706,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 742,
											"end": 756,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 779,
											"end": 780,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 759,
											"end": 776,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "108"
										},
										{
											"begin": 770,
											"end": 775,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 759,
											"end": 769,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "109"
										},
										{
											"begin": 759,
											"end": 776,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 759,
											"end": 776,
											"name": "tag",
											"source": 3,
											"value": "108"
										},
										{
											"begin": 759,
											"end": 776,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 759,
											"end": 780,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 742,
											"end": 780,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 742,
											"end": 780,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 794,
											"end": 814,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 828,
											"end": 834,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 817,
											"end": 835,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "110"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "111"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "112"
										},
										{
											"begin": 817,
											"end": 835,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 817,
											"end": 835,
											"name": "tag",
											"source": 3,
											"value": "111"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 817,
											"end": 835,
											"name": "tag",
											"source": 3,
											"value": "110"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 817,
											"end": 835,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 817,
											"end": 835,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 817,
											"end": 835,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "113"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 817,
											"end": 835,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 817,
											"end": 835,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 817,
											"end": 835,
											"name": "CALLDATACOPY",
											"source": 3
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 817,
											"end": 835,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 817,
											"end": 835,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 817,
											"end": 835,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 817,
											"end": 835,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 817,
											"end": 835,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 817,
											"end": 835,
											"name": "tag",
											"source": 3,
											"value": "113"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 817,
											"end": 835,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 794,
											"end": 835,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 794,
											"end": 835,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 849,
											"end": 860,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 975,
											"end": 981,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 971,
											"end": 973,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 967,
											"end": 982,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 959,
											"end": 965,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 955,
											"end": 983,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 948,
											"end": 983,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 948,
											"end": 983,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1010,
											"end": 1292,
											"name": "tag",
											"source": 3,
											"value": "114"
										},
										{
											"begin": 1010,
											"end": 1292,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1017,
											"end": 1021,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1010,
											"end": 1292,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1010,
											"end": 1292,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "115"
										},
										{
											"begin": 1010,
											"end": 1292,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1041,
											"end": 1046,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1041,
											"end": 1046,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1041,
											"end": 1046,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1041,
											"end": 1046,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1041,
											"end": 1046,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1041,
											"end": 1046,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1041,
											"end": 1046,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1041,
											"end": 1046,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1180,
											"end": 1190,
											"name": "PUSH",
											"source": 3,
											"value": "3031323334353637383961626364656600000000000000000000000000000000"
										},
										{
											"begin": 1175,
											"end": 1177,
											"name": "PUSH",
											"source": 3,
											"value": "A"
										},
										{
											"begin": 1168,
											"end": 1173,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 1164,
											"end": 1178,
											"name": "MOD",
											"source": 3
										},
										{
											"begin": 1159,
											"end": 1191,
											"name": "BYTE",
											"source": 3
										},
										{
											"begin": 1154,
											"end": 1157,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1146,
											"end": 1192,
											"name": "MSTORE8",
											"source": 3
										},
										{
											"begin": 1236,
											"end": 1238,
											"name": "PUSH",
											"source": 3,
											"value": "A"
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "116"
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "117"
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "118"
										},
										{
											"begin": 1227,
											"end": 1238,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "tag",
											"source": 3,
											"value": "117"
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "tag",
											"source": 3,
											"value": "116"
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1269,
											"end": 1270,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1260,
											"end": 1265,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1260,
											"end": 1270,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1010,
											"end": 1292,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "114"
										},
										{
											"begin": 1256,
											"end": 1277,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1010,
											"end": 1292,
											"name": "tag",
											"source": 3,
											"value": "115"
										},
										{
											"begin": 1010,
											"end": 1292,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1312,
											"end": 1318,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1305,
											"end": 1318,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 1305,
											"end": 1318,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1305,
											"end": 1318,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1305,
											"end": 1318,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1305,
											"end": 1318,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 637,
											"end": 1335,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 637,
											"end": 1335,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 637,
											"end": 1335,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 637,
											"end": 1335,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2940,
											"end": 3362,
											"name": "tag",
											"source": 6,
											"value": "95"
										},
										{
											"begin": 2940,
											"end": 3362,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3019,
											"end": 3032,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3035,
											"end": 3057,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "121"
										},
										{
											"begin": 3049,
											"end": 3056,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3035,
											"end": 3048,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "67"
										},
										{
											"begin": 3035,
											"end": 3057,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3035,
											"end": 3057,
											"name": "tag",
											"source": 6,
											"value": "121"
										},
										{
											"begin": 3035,
											"end": 3057,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3019,
											"end": 3057,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3019,
											"end": 3057,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3085,
											"end": 3087,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3076,
											"end": 3087,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3076,
											"end": 3087,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3076,
											"end": 3081,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3076,
											"end": 3087,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3076,
											"end": 3087,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3076,
											"end": 3087,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3068,
											"end": 3151,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "122"
										},
										{
											"begin": 3068,
											"end": 3151,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3068,
											"end": 3151,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3068,
											"end": 3151,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3068,
											"end": 3151,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3068,
											"end": 3151,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3068,
											"end": 3151,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3068,
											"end": 3151,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3068,
											"end": 3151,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3068,
											"end": 3151,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "123"
										},
										{
											"begin": 3068,
											"end": 3151,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3068,
											"end": 3151,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "76"
										},
										{
											"begin": 3068,
											"end": 3151,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3068,
											"end": 3151,
											"name": "tag",
											"source": 6,
											"value": "123"
										},
										{
											"begin": 3068,
											"end": 3151,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3068,
											"end": 3151,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3068,
											"end": 3151,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3068,
											"end": 3151,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3068,
											"end": 3151,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3068,
											"end": 3151,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3068,
											"end": 3151,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3068,
											"end": 3151,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3068,
											"end": 3151,
											"name": "tag",
											"source": 6,
											"value": "122"
										},
										{
											"begin": 3068,
											"end": 3151,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3174,
											"end": 3178,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3165,
											"end": 3178,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3165,
											"end": 3178,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3165,
											"end": 3170,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3165,
											"end": 3178,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3165,
											"end": 3178,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3165,
											"end": 3178,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 3165,
											"end": 3178,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3165,
											"end": 3212,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3165,
											"end": 3212,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3165,
											"end": 3212,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "124"
										},
										{
											"begin": 3165,
											"end": 3212,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3165,
											"end": 3212,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3183,
											"end": 3212,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "125"
										},
										{
											"begin": 3200,
											"end": 3205,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3207,
											"end": 3211,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3183,
											"end": 3199,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "53"
										},
										{
											"begin": 3183,
											"end": 3212,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3183,
											"end": 3212,
											"name": "tag",
											"source": 6,
											"value": "125"
										},
										{
											"begin": 3183,
											"end": 3212,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3182,
											"end": 3212,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3165,
											"end": 3212,
											"name": "tag",
											"source": 6,
											"value": "124"
										},
										{
											"begin": 3165,
											"end": 3212,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3161,
											"end": 3269,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3161,
											"end": 3269,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "126"
										},
										{
											"begin": 3161,
											"end": 3269,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3253,
											"end": 3257,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3231,
											"end": 3258,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3231,
											"end": 3258,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3231,
											"end": 3258,
											"name": "PUSH",
											"source": 6,
											"value": "A9FBF51F00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3231,
											"end": 3258,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3231,
											"end": 3258,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3231,
											"end": 3258,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3231,
											"end": 3258,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3231,
											"end": 3258,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "127"
										},
										{
											"begin": 3231,
											"end": 3258,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3231,
											"end": 3258,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3231,
											"end": 3258,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "28"
										},
										{
											"begin": 3231,
											"end": 3258,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3231,
											"end": 3258,
											"name": "tag",
											"source": 6,
											"value": "127"
										},
										{
											"begin": 3231,
											"end": 3258,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3231,
											"end": 3258,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3231,
											"end": 3258,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3231,
											"end": 3258,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3231,
											"end": 3258,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3231,
											"end": 3258,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3231,
											"end": 3258,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3231,
											"end": 3258,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3161,
											"end": 3269,
											"name": "tag",
											"source": 6,
											"value": "126"
										},
										{
											"begin": 3161,
											"end": 3269,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3308,
											"end": 3310,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3281,
											"end": 3296,
											"name": "PUSH",
											"source": 6,
											"value": "4B4"
										},
										{
											"begin": 3281,
											"end": 3305,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3297,
											"end": 3304,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 3281,
											"end": 3305,
											"name": "PUSH",
											"source": 6,
											"value": "FFFF"
										},
										{
											"begin": 3281,
											"end": 3305,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3281,
											"end": 3305,
											"name": "PUSH",
											"source": 6,
											"value": "FFFF"
										},
										{
											"begin": 3281,
											"end": 3305,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3281,
											"end": 3305,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3281,
											"end": 3305,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3281,
											"end": 3305,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3281,
											"end": 3305,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3281,
											"end": 3305,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3281,
											"end": 3305,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3281,
											"end": 3305,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3281,
											"end": 3305,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3281,
											"end": 3305,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3281,
											"end": 3305,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3281,
											"end": 3305,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 3281,
											"end": 3305,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3281,
											"end": 3310,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 3281,
											"end": 3310,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 3281,
											"end": 3310,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3281,
											"end": 3310,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3281,
											"end": 3310,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3281,
											"end": 3310,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3281,
											"end": 3310,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 3281,
											"end": 3310,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 3281,
											"end": 3310,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3281,
											"end": 3310,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3281,
											"end": 3310,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3281,
											"end": 3310,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3281,
											"end": 3310,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3281,
											"end": 3310,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 3281,
											"end": 3310,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 3281,
											"end": 3310,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3281,
											"end": 3310,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 3281,
											"end": 3310,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3346,
											"end": 3353,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3326,
											"end": 3354,
											"name": "PUSH",
											"source": 6,
											"value": "FFFF"
										},
										{
											"begin": 3326,
											"end": 3354,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3342,
											"end": 3344,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3326,
											"end": 3354,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3326,
											"end": 3354,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3335,
											"end": 3340,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3326,
											"end": 3354,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3326,
											"end": 3354,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3326,
											"end": 3354,
											"name": "PUSH",
											"source": 6,
											"value": "A9D294FD4BD42BB30E96CBA2B478D149A783FBA3C729B1E5C42BEC89D95B85A"
										},
										{
											"begin": 3326,
											"end": 3354,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3326,
											"end": 3354,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3326,
											"end": 3354,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3326,
											"end": 3354,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3326,
											"end": 3354,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3326,
											"end": 3354,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3326,
											"end": 3354,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3326,
											"end": 3354,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3326,
											"end": 3354,
											"name": "LOG4",
											"source": 6
										},
										{
											"begin": 3008,
											"end": 3362,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2940,
											"end": 3362,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2940,
											"end": 3362,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2940,
											"end": 3362,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2940,
											"end": 3362,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 12214,
											"end": 13130,
											"name": "tag",
											"source": 4,
											"value": "109"
										},
										{
											"begin": 12214,
											"end": 13130,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12267,
											"end": 12274,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 12286,
											"end": 12300,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 12303,
											"end": 12304,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 12286,
											"end": 12304,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 12286,
											"end": 12304,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12351,
											"end": 12359,
											"name": "PUSH",
											"source": 4,
											"value": "184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000"
										},
										{
											"begin": 12342,
											"end": 12347,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 12342,
											"end": 12359,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 12338,
											"end": 12441,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "129"
										},
										{
											"begin": 12338,
											"end": 12441,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 12388,
											"end": 12396,
											"name": "PUSH",
											"source": 4,
											"value": "184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000"
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "130"
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "131"
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "118"
										},
										{
											"begin": 12379,
											"end": 12396,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "tag",
											"source": 4,
											"value": "131"
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "tag",
											"source": 4,
											"value": "130"
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12424,
											"end": 12426,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 12414,
											"end": 12426,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 12414,
											"end": 12426,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 12414,
											"end": 12426,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 12414,
											"end": 12426,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12338,
											"end": 12441,
											"name": "tag",
											"source": 4,
											"value": "129"
										},
										{
											"begin": 12338,
											"end": 12441,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12467,
											"end": 12475,
											"name": "PUSH",
											"source": 4,
											"value": "4EE2D6D415B85ACEF8100000000"
										},
										{
											"begin": 12458,
											"end": 12463,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 12458,
											"end": 12475,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 12454,
											"end": 12557,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "132"
										},
										{
											"begin": 12454,
											"end": 12557,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 12504,
											"end": 12512,
											"name": "PUSH",
											"source": 4,
											"value": "4EE2D6D415B85ACEF8100000000"
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "133"
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "134"
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "118"
										},
										{
											"begin": 12495,
											"end": 12512,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "tag",
											"source": 4,
											"value": "134"
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "tag",
											"source": 4,
											"value": "133"
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12540,
											"end": 12542,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 12530,
											"end": 12542,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 12530,
											"end": 12542,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 12530,
											"end": 12542,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 12530,
											"end": 12542,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12454,
											"end": 12557,
											"name": "tag",
											"source": 4,
											"value": "132"
										},
										{
											"begin": 12454,
											"end": 12557,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12583,
											"end": 12591,
											"name": "PUSH",
											"source": 4,
											"value": "2386F26FC10000"
										},
										{
											"begin": 12574,
											"end": 12579,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 12574,
											"end": 12591,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 12570,
											"end": 12673,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "135"
										},
										{
											"begin": 12570,
											"end": 12673,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 12620,
											"end": 12628,
											"name": "PUSH",
											"source": 4,
											"value": "2386F26FC10000"
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "136"
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "137"
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "118"
										},
										{
											"begin": 12611,
											"end": 12628,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "tag",
											"source": 4,
											"value": "137"
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "tag",
											"source": 4,
											"value": "136"
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12656,
											"end": 12658,
											"name": "PUSH",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 12646,
											"end": 12658,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 12646,
											"end": 12658,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 12646,
											"end": 12658,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 12646,
											"end": 12658,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12570,
											"end": 12673,
											"name": "tag",
											"source": 4,
											"value": "135"
										},
										{
											"begin": 12570,
											"end": 12673,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12699,
											"end": 12706,
											"name": "PUSH",
											"source": 4,
											"value": "5F5E100"
										},
										{
											"begin": 12690,
											"end": 12695,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 12690,
											"end": 12706,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 12686,
											"end": 12786,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "138"
										},
										{
											"begin": 12686,
											"end": 12786,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 12735,
											"end": 12742,
											"name": "PUSH",
											"source": 4,
											"value": "5F5E100"
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "139"
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "140"
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "118"
										},
										{
											"begin": 12726,
											"end": 12742,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "tag",
											"source": 4,
											"value": "140"
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "tag",
											"source": 4,
											"value": "139"
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12770,
											"end": 12771,
											"name": "PUSH",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 12760,
											"end": 12771,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 12760,
											"end": 12771,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 12760,
											"end": 12771,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 12760,
											"end": 12771,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12686,
											"end": 12786,
											"name": "tag",
											"source": 4,
											"value": "138"
										},
										{
											"begin": 12686,
											"end": 12786,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12812,
											"end": 12819,
											"name": "PUSH",
											"source": 4,
											"value": "2710"
										},
										{
											"begin": 12803,
											"end": 12808,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 12803,
											"end": 12819,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 12799,
											"end": 12899,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "141"
										},
										{
											"begin": 12799,
											"end": 12899,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 12848,
											"end": 12855,
											"name": "PUSH",
											"source": 4,
											"value": "2710"
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "142"
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "143"
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "118"
										},
										{
											"begin": 12839,
											"end": 12855,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "tag",
											"source": 4,
											"value": "143"
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "tag",
											"source": 4,
											"value": "142"
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12883,
											"end": 12884,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 12873,
											"end": 12884,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 12873,
											"end": 12884,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 12873,
											"end": 12884,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 12873,
											"end": 12884,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12799,
											"end": 12899,
											"name": "tag",
											"source": 4,
											"value": "141"
										},
										{
											"begin": 12799,
											"end": 12899,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12925,
											"end": 12932,
											"name": "PUSH",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 12916,
											"end": 12921,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 12916,
											"end": 12932,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 12912,
											"end": 13012,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "144"
										},
										{
											"begin": 12912,
											"end": 13012,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 12961,
											"end": 12968,
											"name": "PUSH",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "145"
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "146"
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "118"
										},
										{
											"begin": 12952,
											"end": 12968,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "tag",
											"source": 4,
											"value": "146"
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "tag",
											"source": 4,
											"value": "145"
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12996,
											"end": 12997,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 12986,
											"end": 12997,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 12986,
											"end": 12997,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 12986,
											"end": 12997,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 12986,
											"end": 12997,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12912,
											"end": 13012,
											"name": "tag",
											"source": 4,
											"value": "144"
										},
										{
											"begin": 12912,
											"end": 13012,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 13038,
											"end": 13045,
											"name": "PUSH",
											"source": 4,
											"value": "A"
										},
										{
											"begin": 13029,
											"end": 13034,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 13029,
											"end": 13045,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 13025,
											"end": 13091,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "147"
										},
										{
											"begin": 13025,
											"end": 13091,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 13075,
											"end": 13076,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 13065,
											"end": 13076,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 13065,
											"end": 13076,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 13065,
											"end": 13076,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 13065,
											"end": 13076,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 13025,
											"end": 13091,
											"name": "tag",
											"source": 4,
											"value": "147"
										},
										{
											"begin": 13025,
											"end": 13091,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 13117,
											"end": 13123,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 13110,
											"end": 13123,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 13110,
											"end": 13123,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 13110,
											"end": 13123,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12214,
											"end": 13130,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 12214,
											"end": 13130,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 12214,
											"end": 13130,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12214,
											"end": 13130,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7,
											"end": 157,
											"name": "tag",
											"source": 7,
											"value": "148"
										},
										{
											"begin": 7,
											"end": 157,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 84,
											"end": 150,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF000000000000000000000000"
										},
										{
											"begin": 77,
											"end": 82,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 73,
											"end": 151,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 62,
											"end": 151,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 62,
											"end": 151,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7,
											"end": 157,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7,
											"end": 157,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7,
											"end": 157,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7,
											"end": 157,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 163,
											"end": 281,
											"name": "tag",
											"source": 7,
											"value": "149"
										},
										{
											"begin": 163,
											"end": 281,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 250,
											"end": 274,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "184"
										},
										{
											"begin": 268,
											"end": 273,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 250,
											"end": 274,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "148"
										},
										{
											"begin": 250,
											"end": 274,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 250,
											"end": 274,
											"name": "tag",
											"source": 7,
											"value": "184"
										},
										{
											"begin": 250,
											"end": 274,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 245,
											"end": 248,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 238,
											"end": 275,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 163,
											"end": 281,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 163,
											"end": 281,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 163,
											"end": 281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 287,
											"end": 509,
											"name": "tag",
											"source": 7,
											"value": "16"
										},
										{
											"begin": 287,
											"end": 509,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 380,
											"end": 384,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 418,
											"end": 420,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 407,
											"end": 416,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 403,
											"end": 421,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 395,
											"end": 421,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 395,
											"end": 421,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 431,
											"end": 502,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "186"
										},
										{
											"begin": 499,
											"end": 500,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 488,
											"end": 497,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 484,
											"end": 501,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 475,
											"end": 481,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 431,
											"end": 502,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "149"
										},
										{
											"begin": 431,
											"end": 502,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 431,
											"end": 502,
											"name": "tag",
											"source": 7,
											"value": "186"
										},
										{
											"begin": 431,
											"end": 502,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 287,
											"end": 509,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 287,
											"end": 509,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 287,
											"end": 509,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 287,
											"end": 509,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 287,
											"end": 509,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 596,
											"end": 713,
											"name": "tag",
											"source": 7,
											"value": "151"
										},
										{
											"begin": 596,
											"end": 713,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 705,
											"end": 706,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 702,
											"end": 703,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 695,
											"end": 707,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 842,
											"end": 968,
											"name": "tag",
											"source": 7,
											"value": "153"
										},
										{
											"begin": 842,
											"end": 968,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 879,
											"end": 886,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 919,
											"end": 961,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 912,
											"end": 917,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 908,
											"end": 962,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 897,
											"end": 962,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 897,
											"end": 962,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 842,
											"end": 968,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 842,
											"end": 968,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 842,
											"end": 968,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 842,
											"end": 968,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 974,
											"end": 1070,
											"name": "tag",
											"source": 7,
											"value": "154"
										},
										{
											"begin": 974,
											"end": 1070,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1011,
											"end": 1018,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1040,
											"end": 1064,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "192"
										},
										{
											"begin": 1058,
											"end": 1063,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1040,
											"end": 1064,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "153"
										},
										{
											"begin": 1040,
											"end": 1064,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1040,
											"end": 1064,
											"name": "tag",
											"source": 7,
											"value": "192"
										},
										{
											"begin": 1040,
											"end": 1064,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1029,
											"end": 1064,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1029,
											"end": 1064,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 974,
											"end": 1070,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 974,
											"end": 1070,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 974,
											"end": 1070,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 974,
											"end": 1070,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1076,
											"end": 1198,
											"name": "tag",
											"source": 7,
											"value": "155"
										},
										{
											"begin": 1076,
											"end": 1198,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1149,
											"end": 1173,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "194"
										},
										{
											"begin": 1167,
											"end": 1172,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1149,
											"end": 1173,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "154"
										},
										{
											"begin": 1149,
											"end": 1173,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1149,
											"end": 1173,
											"name": "tag",
											"source": 7,
											"value": "194"
										},
										{
											"begin": 1149,
											"end": 1173,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1142,
											"end": 1147,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1139,
											"end": 1174,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 1129,
											"end": 1192,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "195"
										},
										{
											"begin": 1129,
											"end": 1192,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1188,
											"end": 1189,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1185,
											"end": 1186,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1178,
											"end": 1190,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1129,
											"end": 1192,
											"name": "tag",
											"source": 7,
											"value": "195"
										},
										{
											"begin": 1129,
											"end": 1192,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1076,
											"end": 1198,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1076,
											"end": 1198,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1204,
											"end": 1343,
											"name": "tag",
											"source": 7,
											"value": "156"
										},
										{
											"begin": 1204,
											"end": 1343,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1250,
											"end": 1255,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1288,
											"end": 1294,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1275,
											"end": 1295,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 1266,
											"end": 1295,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1266,
											"end": 1295,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1304,
											"end": 1337,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "197"
										},
										{
											"begin": 1331,
											"end": 1336,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1304,
											"end": 1337,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "155"
										},
										{
											"begin": 1304,
											"end": 1337,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1304,
											"end": 1337,
											"name": "tag",
											"source": 7,
											"value": "197"
										},
										{
											"begin": 1304,
											"end": 1337,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1204,
											"end": 1343,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1204,
											"end": 1343,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1204,
											"end": 1343,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1204,
											"end": 1343,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1204,
											"end": 1343,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1349,
											"end": 1678,
											"name": "tag",
											"source": 7,
											"value": "19"
										},
										{
											"begin": 1349,
											"end": 1678,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1408,
											"end": 1414,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1457,
											"end": 1459,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1445,
											"end": 1454,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1436,
											"end": 1443,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1432,
											"end": 1455,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1428,
											"end": 1460,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 1425,
											"end": 1544,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1425,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "199"
										},
										{
											"begin": 1425,
											"end": 1544,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1463,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "200"
										},
										{
											"begin": 1463,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "151"
										},
										{
											"begin": 1463,
											"end": 1542,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1463,
											"end": 1542,
											"name": "tag",
											"source": 7,
											"value": "200"
										},
										{
											"begin": 1463,
											"end": 1542,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1425,
											"end": 1544,
											"name": "tag",
											"source": 7,
											"value": "199"
										},
										{
											"begin": 1425,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1583,
											"end": 1584,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1608,
											"end": 1661,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "201"
										},
										{
											"begin": 1653,
											"end": 1660,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1644,
											"end": 1650,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1633,
											"end": 1642,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1629,
											"end": 1651,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1608,
											"end": 1661,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "156"
										},
										{
											"begin": 1608,
											"end": 1661,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1608,
											"end": 1661,
											"name": "tag",
											"source": 7,
											"value": "201"
										},
										{
											"begin": 1608,
											"end": 1661,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1598,
											"end": 1661,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1598,
											"end": 1661,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1554,
											"end": 1671,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1349,
											"end": 1678,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1349,
											"end": 1678,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1349,
											"end": 1678,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1349,
											"end": 1678,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1349,
											"end": 1678,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1684,
											"end": 1773,
											"name": "tag",
											"source": 7,
											"value": "157"
										},
										{
											"begin": 1684,
											"end": 1773,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1720,
											"end": 1727,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1760,
											"end": 1766,
											"name": "PUSH",
											"source": 7,
											"value": "FFFF"
										},
										{
											"begin": 1753,
											"end": 1758,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1749,
											"end": 1767,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1738,
											"end": 1767,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1738,
											"end": 1767,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1684,
											"end": 1773,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1684,
											"end": 1773,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1684,
											"end": 1773,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1684,
											"end": 1773,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1779,
											"end": 1894,
											"name": "tag",
											"source": 7,
											"value": "158"
										},
										{
											"begin": 1779,
											"end": 1894,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1864,
											"end": 1887,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "204"
										},
										{
											"begin": 1881,
											"end": 1886,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1864,
											"end": 1887,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "157"
										},
										{
											"begin": 1864,
											"end": 1887,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1864,
											"end": 1887,
											"name": "tag",
											"source": 7,
											"value": "204"
										},
										{
											"begin": 1864,
											"end": 1887,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1859,
											"end": 1862,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1852,
											"end": 1888,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1779,
											"end": 1894,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1779,
											"end": 1894,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1779,
											"end": 1894,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1900,
											"end": 2118,
											"name": "tag",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 1900,
											"end": 2118,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1991,
											"end": 1995,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2029,
											"end": 2031,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2018,
											"end": 2027,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2014,
											"end": 2032,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2006,
											"end": 2032,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2006,
											"end": 2032,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2042,
											"end": 2111,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "206"
										},
										{
											"begin": 2108,
											"end": 2109,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2097,
											"end": 2106,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2093,
											"end": 2110,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2084,
											"end": 2090,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2042,
											"end": 2111,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "158"
										},
										{
											"begin": 2042,
											"end": 2111,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2042,
											"end": 2111,
											"name": "tag",
											"source": 7,
											"value": "206"
										},
										{
											"begin": 2042,
											"end": 2111,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1900,
											"end": 2118,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1900,
											"end": 2118,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1900,
											"end": 2118,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1900,
											"end": 2118,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1900,
											"end": 2118,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2124,
											"end": 2244,
											"name": "tag",
											"source": 7,
											"value": "159"
										},
										{
											"begin": 2124,
											"end": 2244,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2196,
											"end": 2219,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "208"
										},
										{
											"begin": 2213,
											"end": 2218,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2196,
											"end": 2219,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "157"
										},
										{
											"begin": 2196,
											"end": 2219,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2196,
											"end": 2219,
											"name": "tag",
											"source": 7,
											"value": "208"
										},
										{
											"begin": 2196,
											"end": 2219,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2189,
											"end": 2194,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2186,
											"end": 2220,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 2176,
											"end": 2238,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "209"
										},
										{
											"begin": 2176,
											"end": 2238,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2234,
											"end": 2235,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2231,
											"end": 2232,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2224,
											"end": 2236,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2176,
											"end": 2238,
											"name": "tag",
											"source": 7,
											"value": "209"
										},
										{
											"begin": 2176,
											"end": 2238,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2124,
											"end": 2244,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2124,
											"end": 2244,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2250,
											"end": 2387,
											"name": "tag",
											"source": 7,
											"value": "160"
										},
										{
											"begin": 2250,
											"end": 2387,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2295,
											"end": 2300,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2333,
											"end": 2339,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2320,
											"end": 2340,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 2311,
											"end": 2340,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2311,
											"end": 2340,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2349,
											"end": 2381,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "211"
										},
										{
											"begin": 2375,
											"end": 2380,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2349,
											"end": 2381,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "159"
										},
										{
											"begin": 2349,
											"end": 2381,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2349,
											"end": 2381,
											"name": "tag",
											"source": 7,
											"value": "211"
										},
										{
											"begin": 2349,
											"end": 2381,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2250,
											"end": 2387,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2250,
											"end": 2387,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2250,
											"end": 2387,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2250,
											"end": 2387,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2250,
											"end": 2387,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2393,
											"end": 2720,
											"name": "tag",
											"source": 7,
											"value": "25"
										},
										{
											"begin": 2393,
											"end": 2720,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2451,
											"end": 2457,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2500,
											"end": 2502,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2488,
											"end": 2497,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2479,
											"end": 2486,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2475,
											"end": 2498,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2471,
											"end": 2503,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 2468,
											"end": 2587,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2468,
											"end": 2587,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "213"
										},
										{
											"begin": 2468,
											"end": 2587,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2506,
											"end": 2585,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "214"
										},
										{
											"begin": 2506,
											"end": 2585,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "151"
										},
										{
											"begin": 2506,
											"end": 2585,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2506,
											"end": 2585,
											"name": "tag",
											"source": 7,
											"value": "214"
										},
										{
											"begin": 2506,
											"end": 2585,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2468,
											"end": 2587,
											"name": "tag",
											"source": 7,
											"value": "213"
										},
										{
											"begin": 2468,
											"end": 2587,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2626,
											"end": 2627,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2651,
											"end": 2703,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "215"
										},
										{
											"begin": 2695,
											"end": 2702,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2686,
											"end": 2692,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2675,
											"end": 2684,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2671,
											"end": 2693,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2651,
											"end": 2703,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "160"
										},
										{
											"begin": 2651,
											"end": 2703,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2651,
											"end": 2703,
											"name": "tag",
											"source": 7,
											"value": "215"
										},
										{
											"begin": 2651,
											"end": 2703,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2641,
											"end": 2703,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2641,
											"end": 2703,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2597,
											"end": 2713,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2393,
											"end": 2720,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2393,
											"end": 2720,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2393,
											"end": 2720,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2393,
											"end": 2720,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2393,
											"end": 2720,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2726,
											"end": 2844,
											"name": "tag",
											"source": 7,
											"value": "161"
										},
										{
											"begin": 2726,
											"end": 2844,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2813,
											"end": 2837,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "217"
										},
										{
											"begin": 2831,
											"end": 2836,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2813,
											"end": 2837,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "154"
										},
										{
											"begin": 2813,
											"end": 2837,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2813,
											"end": 2837,
											"name": "tag",
											"source": 7,
											"value": "217"
										},
										{
											"begin": 2813,
											"end": 2837,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2808,
											"end": 2811,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2801,
											"end": 2838,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2726,
											"end": 2844,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2726,
											"end": 2844,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2726,
											"end": 2844,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2850,
											"end": 3072,
											"name": "tag",
											"source": 7,
											"value": "28"
										},
										{
											"begin": 2850,
											"end": 3072,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2943,
											"end": 2947,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2981,
											"end": 2983,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2970,
											"end": 2979,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2966,
											"end": 2984,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2958,
											"end": 2984,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2958,
											"end": 2984,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2994,
											"end": 3065,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "219"
										},
										{
											"begin": 3062,
											"end": 3063,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3051,
											"end": 3060,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3047,
											"end": 3064,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3038,
											"end": 3044,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2994,
											"end": 3065,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "161"
										},
										{
											"begin": 2994,
											"end": 3065,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2994,
											"end": 3065,
											"name": "tag",
											"source": 7,
											"value": "219"
										},
										{
											"begin": 2994,
											"end": 3065,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2850,
											"end": 3072,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2850,
											"end": 3072,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2850,
											"end": 3072,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2850,
											"end": 3072,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2850,
											"end": 3072,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3078,
											"end": 3228,
											"name": "tag",
											"source": 7,
											"value": "162"
										},
										{
											"begin": 3078,
											"end": 3228,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3115,
											"end": 3122,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3155,
											"end": 3221,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFF00000000000000000000000000000000000000000000"
										},
										{
											"begin": 3148,
											"end": 3153,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3144,
											"end": 3222,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3133,
											"end": 3222,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3133,
											"end": 3222,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3078,
											"end": 3228,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3078,
											"end": 3228,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3078,
											"end": 3228,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3078,
											"end": 3228,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3234,
											"end": 3352,
											"name": "tag",
											"source": 7,
											"value": "163"
										},
										{
											"begin": 3234,
											"end": 3352,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3321,
											"end": 3345,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "222"
										},
										{
											"begin": 3339,
											"end": 3344,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3321,
											"end": 3345,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "162"
										},
										{
											"begin": 3321,
											"end": 3345,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3321,
											"end": 3345,
											"name": "tag",
											"source": 7,
											"value": "222"
										},
										{
											"begin": 3321,
											"end": 3345,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3316,
											"end": 3319,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3309,
											"end": 3346,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3234,
											"end": 3352,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3234,
											"end": 3352,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3234,
											"end": 3352,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3358,
											"end": 3580,
											"name": "tag",
											"source": 7,
											"value": "36"
										},
										{
											"begin": 3358,
											"end": 3580,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3451,
											"end": 3455,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3489,
											"end": 3491,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3478,
											"end": 3487,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3474,
											"end": 3492,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3466,
											"end": 3492,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3466,
											"end": 3492,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3502,
											"end": 3573,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "224"
										},
										{
											"begin": 3570,
											"end": 3571,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3559,
											"end": 3568,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3555,
											"end": 3572,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3546,
											"end": 3552,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3502,
											"end": 3573,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "163"
										},
										{
											"begin": 3502,
											"end": 3573,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3502,
											"end": 3573,
											"name": "tag",
											"source": 7,
											"value": "224"
										},
										{
											"begin": 3502,
											"end": 3573,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3358,
											"end": 3580,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3358,
											"end": 3580,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3358,
											"end": 3580,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3358,
											"end": 3580,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3358,
											"end": 3580,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3586,
											"end": 3676,
											"name": "tag",
											"source": 7,
											"value": "164"
										},
										{
											"begin": 3586,
											"end": 3676,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3620,
											"end": 3627,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3663,
											"end": 3668,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3656,
											"end": 3669,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3649,
											"end": 3670,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3638,
											"end": 3670,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3638,
											"end": 3670,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3586,
											"end": 3676,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3586,
											"end": 3676,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3586,
											"end": 3676,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3586,
											"end": 3676,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3682,
											"end": 3798,
											"name": "tag",
											"source": 7,
											"value": "165"
										},
										{
											"begin": 3682,
											"end": 3798,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3752,
											"end": 3773,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "227"
										},
										{
											"begin": 3767,
											"end": 3772,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3752,
											"end": 3773,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "164"
										},
										{
											"begin": 3752,
											"end": 3773,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3752,
											"end": 3773,
											"name": "tag",
											"source": 7,
											"value": "227"
										},
										{
											"begin": 3752,
											"end": 3773,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3745,
											"end": 3750,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3742,
											"end": 3774,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 3732,
											"end": 3792,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "228"
										},
										{
											"begin": 3732,
											"end": 3792,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3788,
											"end": 3789,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3785,
											"end": 3786,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3778,
											"end": 3790,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3732,
											"end": 3792,
											"name": "tag",
											"source": 7,
											"value": "228"
										},
										{
											"begin": 3732,
											"end": 3792,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3682,
											"end": 3798,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3682,
											"end": 3798,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3804,
											"end": 3937,
											"name": "tag",
											"source": 7,
											"value": "166"
										},
										{
											"begin": 3804,
											"end": 3937,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3847,
											"end": 3852,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3885,
											"end": 3891,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3872,
											"end": 3892,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 3863,
											"end": 3892,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3863,
											"end": 3892,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3901,
											"end": 3931,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "230"
										},
										{
											"begin": 3925,
											"end": 3930,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3901,
											"end": 3931,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "165"
										},
										{
											"begin": 3901,
											"end": 3931,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3901,
											"end": 3931,
											"name": "tag",
											"source": 7,
											"value": "230"
										},
										{
											"begin": 3901,
											"end": 3931,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3804,
											"end": 3937,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3804,
											"end": 3937,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3804,
											"end": 3937,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3804,
											"end": 3937,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3804,
											"end": 3937,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3943,
											"end": 4411,
											"name": "tag",
											"source": 7,
											"value": "39"
										},
										{
											"begin": 3943,
											"end": 4411,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4008,
											"end": 4014,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4016,
											"end": 4022,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4065,
											"end": 4067,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4053,
											"end": 4062,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4044,
											"end": 4051,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 4040,
											"end": 4063,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4036,
											"end": 4068,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 4033,
											"end": 4152,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4033,
											"end": 4152,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "232"
										},
										{
											"begin": 4033,
											"end": 4152,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4071,
											"end": 4150,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "233"
										},
										{
											"begin": 4071,
											"end": 4150,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "151"
										},
										{
											"begin": 4071,
											"end": 4150,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4071,
											"end": 4150,
											"name": "tag",
											"source": 7,
											"value": "233"
										},
										{
											"begin": 4071,
											"end": 4150,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4033,
											"end": 4152,
											"name": "tag",
											"source": 7,
											"value": "232"
										},
										{
											"begin": 4033,
											"end": 4152,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4191,
											"end": 4192,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4216,
											"end": 4269,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "234"
										},
										{
											"begin": 4261,
											"end": 4268,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 4252,
											"end": 4258,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4241,
											"end": 4250,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 4237,
											"end": 4259,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4216,
											"end": 4269,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "156"
										},
										{
											"begin": 4216,
											"end": 4269,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4216,
											"end": 4269,
											"name": "tag",
											"source": 7,
											"value": "234"
										},
										{
											"begin": 4216,
											"end": 4269,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4206,
											"end": 4269,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4206,
											"end": 4269,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4162,
											"end": 4279,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4318,
											"end": 4320,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4344,
											"end": 4394,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "235"
										},
										{
											"begin": 4386,
											"end": 4393,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 4377,
											"end": 4383,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4366,
											"end": 4375,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 4362,
											"end": 4384,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4344,
											"end": 4394,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "166"
										},
										{
											"begin": 4344,
											"end": 4394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4344,
											"end": 4394,
											"name": "tag",
											"source": 7,
											"value": "235"
										},
										{
											"begin": 4344,
											"end": 4394,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4334,
											"end": 4394,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4334,
											"end": 4394,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4289,
											"end": 4404,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3943,
											"end": 4411,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3943,
											"end": 4411,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3943,
											"end": 4411,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3943,
											"end": 4411,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3943,
											"end": 4411,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3943,
											"end": 4411,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4417,
											"end": 4516,
											"name": "tag",
											"source": 7,
											"value": "167"
										},
										{
											"begin": 4417,
											"end": 4516,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4469,
											"end": 4475,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4503,
											"end": 4508,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4497,
											"end": 4509,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4487,
											"end": 4509,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4487,
											"end": 4509,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4417,
											"end": 4516,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4417,
											"end": 4516,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4417,
											"end": 4516,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4417,
											"end": 4516,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4522,
											"end": 4691,
											"name": "tag",
											"source": 7,
											"value": "168"
										},
										{
											"begin": 4522,
											"end": 4691,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4606,
											"end": 4617,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4640,
											"end": 4646,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4635,
											"end": 4638,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4628,
											"end": 4647,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4680,
											"end": 4684,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4675,
											"end": 4678,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4671,
											"end": 4685,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4656,
											"end": 4685,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4656,
											"end": 4685,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4522,
											"end": 4691,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4522,
											"end": 4691,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4522,
											"end": 4691,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4522,
											"end": 4691,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4522,
											"end": 4691,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4697,
											"end": 4943,
											"name": "tag",
											"source": 7,
											"value": "169"
										},
										{
											"begin": 4697,
											"end": 4943,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4778,
											"end": 4779,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4788,
											"end": 4901,
											"name": "tag",
											"source": 7,
											"value": "239"
										},
										{
											"begin": 4788,
											"end": 4901,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4802,
											"end": 4808,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4799,
											"end": 4800,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4796,
											"end": 4809,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 4788,
											"end": 4901,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4788,
											"end": 4901,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "241"
										},
										{
											"begin": 4788,
											"end": 4901,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4887,
											"end": 4888,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4882,
											"end": 4885,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4878,
											"end": 4889,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4872,
											"end": 4890,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4868,
											"end": 4869,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4863,
											"end": 4866,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4859,
											"end": 4870,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4852,
											"end": 4891,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4824,
											"end": 4826,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4821,
											"end": 4822,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4817,
											"end": 4827,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4812,
											"end": 4827,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4812,
											"end": 4827,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4788,
											"end": 4901,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "239"
										},
										{
											"begin": 4788,
											"end": 4901,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4788,
											"end": 4901,
											"name": "tag",
											"source": 7,
											"value": "241"
										},
										{
											"begin": 4788,
											"end": 4901,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4935,
											"end": 4936,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4926,
											"end": 4932,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4921,
											"end": 4924,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4917,
											"end": 4933,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4910,
											"end": 4937,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4759,
											"end": 4943,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4697,
											"end": 4943,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4697,
											"end": 4943,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4697,
											"end": 4943,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4697,
											"end": 4943,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4949,
											"end": 5051,
											"name": "tag",
											"source": 7,
											"value": "170"
										},
										{
											"begin": 4949,
											"end": 5051,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4990,
											"end": 4996,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5041,
											"end": 5043,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 5037,
											"end": 5044,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 5032,
											"end": 5034,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 5025,
											"end": 5030,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5021,
											"end": 5035,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5017,
											"end": 5045,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5007,
											"end": 5045,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5007,
											"end": 5045,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4949,
											"end": 5051,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4949,
											"end": 5051,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4949,
											"end": 5051,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4949,
											"end": 5051,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5057,
											"end": 5434,
											"name": "tag",
											"source": 7,
											"value": "171"
										},
										{
											"begin": 5057,
											"end": 5434,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5145,
											"end": 5148,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5173,
											"end": 5212,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "244"
										},
										{
											"begin": 5206,
											"end": 5211,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5173,
											"end": 5212,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "167"
										},
										{
											"begin": 5173,
											"end": 5212,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5173,
											"end": 5212,
											"name": "tag",
											"source": 7,
											"value": "244"
										},
										{
											"begin": 5173,
											"end": 5212,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5228,
											"end": 5299,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "245"
										},
										{
											"begin": 5292,
											"end": 5298,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5287,
											"end": 5290,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 5228,
											"end": 5299,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "168"
										},
										{
											"begin": 5228,
											"end": 5299,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5228,
											"end": 5299,
											"name": "tag",
											"source": 7,
											"value": "245"
										},
										{
											"begin": 5228,
											"end": 5299,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5221,
											"end": 5299,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 5221,
											"end": 5299,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5308,
											"end": 5373,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "246"
										},
										{
											"begin": 5366,
											"end": 5372,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5361,
											"end": 5364,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 5354,
											"end": 5358,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5347,
											"end": 5352,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 5343,
											"end": 5359,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5308,
											"end": 5373,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "169"
										},
										{
											"begin": 5308,
											"end": 5373,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5308,
											"end": 5373,
											"name": "tag",
											"source": 7,
											"value": "246"
										},
										{
											"begin": 5308,
											"end": 5373,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5398,
											"end": 5427,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "247"
										},
										{
											"begin": 5420,
											"end": 5426,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5398,
											"end": 5427,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "170"
										},
										{
											"begin": 5398,
											"end": 5427,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5398,
											"end": 5427,
											"name": "tag",
											"source": 7,
											"value": "247"
										},
										{
											"begin": 5398,
											"end": 5427,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5393,
											"end": 5396,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5389,
											"end": 5428,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5382,
											"end": 5428,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5382,
											"end": 5428,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5149,
											"end": 5434,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5057,
											"end": 5434,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5057,
											"end": 5434,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5057,
											"end": 5434,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5057,
											"end": 5434,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5057,
											"end": 5434,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5440,
											"end": 5753,
											"name": "tag",
											"source": 7,
											"value": "45"
										},
										{
											"begin": 5440,
											"end": 5753,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5553,
											"end": 5557,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5591,
											"end": 5593,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5580,
											"end": 5589,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5576,
											"end": 5594,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5568,
											"end": 5594,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5568,
											"end": 5594,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5640,
											"end": 5649,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5634,
											"end": 5638,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5630,
											"end": 5650,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5626,
											"end": 5627,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5615,
											"end": 5624,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5611,
											"end": 5628,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5604,
											"end": 5651,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5668,
											"end": 5746,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "249"
										},
										{
											"begin": 5741,
											"end": 5745,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5732,
											"end": 5738,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5668,
											"end": 5746,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "171"
										},
										{
											"begin": 5668,
											"end": 5746,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5668,
											"end": 5746,
											"name": "tag",
											"source": 7,
											"value": "249"
										},
										{
											"begin": 5668,
											"end": 5746,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5660,
											"end": 5746,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5660,
											"end": 5746,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5440,
											"end": 5753,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5440,
											"end": 5753,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5440,
											"end": 5753,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5440,
											"end": 5753,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5440,
											"end": 5753,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5759,
											"end": 6231,
											"name": "tag",
											"source": 7,
											"value": "48"
										},
										{
											"begin": 5759,
											"end": 6231,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5826,
											"end": 5832,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5834,
											"end": 5840,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5883,
											"end": 5885,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5871,
											"end": 5880,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5862,
											"end": 5869,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 5858,
											"end": 5881,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5854,
											"end": 5886,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 5851,
											"end": 5970,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5851,
											"end": 5970,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "251"
										},
										{
											"begin": 5851,
											"end": 5970,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5889,
											"end": 5968,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "252"
										},
										{
											"begin": 5889,
											"end": 5968,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "151"
										},
										{
											"begin": 5889,
											"end": 5968,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5889,
											"end": 5968,
											"name": "tag",
											"source": 7,
											"value": "252"
										},
										{
											"begin": 5889,
											"end": 5968,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5851,
											"end": 5970,
											"name": "tag",
											"source": 7,
											"value": "251"
										},
										{
											"begin": 5851,
											"end": 5970,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6009,
											"end": 6010,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6034,
											"end": 6087,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "253"
										},
										{
											"begin": 6079,
											"end": 6086,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 6070,
											"end": 6076,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6059,
											"end": 6068,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 6055,
											"end": 6077,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6034,
											"end": 6087,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "156"
										},
										{
											"begin": 6034,
											"end": 6087,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6034,
											"end": 6087,
											"name": "tag",
											"source": 7,
											"value": "253"
										},
										{
											"begin": 6034,
											"end": 6087,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6024,
											"end": 6087,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6024,
											"end": 6087,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5980,
											"end": 6097,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6136,
											"end": 6138,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6162,
											"end": 6214,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "254"
										},
										{
											"begin": 6206,
											"end": 6213,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 6197,
											"end": 6203,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6186,
											"end": 6195,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 6182,
											"end": 6204,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6162,
											"end": 6214,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "160"
										},
										{
											"begin": 6162,
											"end": 6214,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6162,
											"end": 6214,
											"name": "tag",
											"source": 7,
											"value": "254"
										},
										{
											"begin": 6162,
											"end": 6214,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6152,
											"end": 6214,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6152,
											"end": 6214,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6107,
											"end": 6224,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5759,
											"end": 6231,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5759,
											"end": 6231,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5759,
											"end": 6231,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5759,
											"end": 6231,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5759,
											"end": 6231,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5759,
											"end": 6231,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6237,
											"end": 6711,
											"name": "tag",
											"source": 7,
											"value": "52"
										},
										{
											"begin": 6237,
											"end": 6711,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6305,
											"end": 6311,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6313,
											"end": 6319,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6362,
											"end": 6364,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6350,
											"end": 6359,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6341,
											"end": 6348,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 6337,
											"end": 6360,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 6333,
											"end": 6365,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 6330,
											"end": 6449,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6330,
											"end": 6449,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "256"
										},
										{
											"begin": 6330,
											"end": 6449,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6368,
											"end": 6447,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "257"
										},
										{
											"begin": 6368,
											"end": 6447,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "151"
										},
										{
											"begin": 6368,
											"end": 6447,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6368,
											"end": 6447,
											"name": "tag",
											"source": 7,
											"value": "257"
										},
										{
											"begin": 6368,
											"end": 6447,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6330,
											"end": 6449,
											"name": "tag",
											"source": 7,
											"value": "256"
										},
										{
											"begin": 6330,
											"end": 6449,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6488,
											"end": 6489,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6513,
											"end": 6566,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "258"
										},
										{
											"begin": 6558,
											"end": 6565,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 6549,
											"end": 6555,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6538,
											"end": 6547,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 6534,
											"end": 6556,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6513,
											"end": 6566,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "156"
										},
										{
											"begin": 6513,
											"end": 6566,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6513,
											"end": 6566,
											"name": "tag",
											"source": 7,
											"value": "258"
										},
										{
											"begin": 6513,
											"end": 6566,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6503,
											"end": 6566,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6503,
											"end": 6566,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6459,
											"end": 6576,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6615,
											"end": 6617,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6641,
											"end": 6694,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "259"
										},
										{
											"begin": 6686,
											"end": 6693,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 6677,
											"end": 6683,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6666,
											"end": 6675,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 6662,
											"end": 6684,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6641,
											"end": 6694,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "156"
										},
										{
											"begin": 6641,
											"end": 6694,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6641,
											"end": 6694,
											"name": "tag",
											"source": 7,
											"value": "259"
										},
										{
											"begin": 6641,
											"end": 6694,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6631,
											"end": 6694,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6631,
											"end": 6694,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6586,
											"end": 6704,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6237,
											"end": 6711,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6237,
											"end": 6711,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6237,
											"end": 6711,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6237,
											"end": 6711,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6237,
											"end": 6711,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6237,
											"end": 6711,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6717,
											"end": 6826,
											"name": "tag",
											"source": 7,
											"value": "172"
										},
										{
											"begin": 6717,
											"end": 6826,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6798,
											"end": 6819,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "261"
										},
										{
											"begin": 6813,
											"end": 6818,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6798,
											"end": 6819,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "164"
										},
										{
											"begin": 6798,
											"end": 6819,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6798,
											"end": 6819,
											"name": "tag",
											"source": 7,
											"value": "261"
										},
										{
											"begin": 6798,
											"end": 6819,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6793,
											"end": 6796,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6786,
											"end": 6820,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6717,
											"end": 6826,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6717,
											"end": 6826,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6717,
											"end": 6826,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6832,
											"end": 7042,
											"name": "tag",
											"source": 7,
											"value": "55"
										},
										{
											"begin": 6832,
											"end": 7042,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6919,
											"end": 6923,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6957,
											"end": 6959,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6946,
											"end": 6955,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6942,
											"end": 6960,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6934,
											"end": 6960,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6934,
											"end": 6960,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6970,
											"end": 7035,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "263"
										},
										{
											"begin": 7032,
											"end": 7033,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7021,
											"end": 7030,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7017,
											"end": 7034,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7008,
											"end": 7014,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 6970,
											"end": 7035,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "172"
										},
										{
											"begin": 6970,
											"end": 7035,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6970,
											"end": 7035,
											"name": "tag",
											"source": 7,
											"value": "263"
										},
										{
											"begin": 6970,
											"end": 7035,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6832,
											"end": 7042,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6832,
											"end": 7042,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6832,
											"end": 7042,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6832,
											"end": 7042,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6832,
											"end": 7042,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7048,
											"end": 7230,
											"name": "tag",
											"source": 7,
											"value": "173"
										},
										{
											"begin": 7048,
											"end": 7230,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7188,
											"end": 7222,
											"name": "PUSH",
											"source": 7,
											"value": "54686520696E70757420616464726573732063616E6E6F74206265207A65726F"
										},
										{
											"begin": 7184,
											"end": 7185,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7176,
											"end": 7182,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7172,
											"end": 7186,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7165,
											"end": 7223,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7048,
											"end": 7230,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7048,
											"end": 7230,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7236,
											"end": 7602,
											"name": "tag",
											"source": 7,
											"value": "174"
										},
										{
											"begin": 7236,
											"end": 7602,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7378,
											"end": 7381,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7399,
											"end": 7466,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "266"
										},
										{
											"begin": 7463,
											"end": 7465,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7458,
											"end": 7461,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7399,
											"end": 7466,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "168"
										},
										{
											"begin": 7399,
											"end": 7466,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7399,
											"end": 7466,
											"name": "tag",
											"source": 7,
											"value": "266"
										},
										{
											"begin": 7399,
											"end": 7466,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7392,
											"end": 7466,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7392,
											"end": 7466,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7475,
											"end": 7568,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "267"
										},
										{
											"begin": 7564,
											"end": 7567,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7475,
											"end": 7568,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "173"
										},
										{
											"begin": 7475,
											"end": 7568,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7475,
											"end": 7568,
											"name": "tag",
											"source": 7,
											"value": "267"
										},
										{
											"begin": 7475,
											"end": 7568,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7593,
											"end": 7595,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7588,
											"end": 7591,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7584,
											"end": 7596,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7577,
											"end": 7596,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7577,
											"end": 7596,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7236,
											"end": 7602,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7236,
											"end": 7602,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7236,
											"end": 7602,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7236,
											"end": 7602,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7608,
											"end": 8027,
											"name": "tag",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 7608,
											"end": 8027,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7774,
											"end": 7778,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7812,
											"end": 7814,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7801,
											"end": 7810,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7797,
											"end": 7815,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7789,
											"end": 7815,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7789,
											"end": 7815,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7861,
											"end": 7870,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7855,
											"end": 7859,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7851,
											"end": 7871,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 7847,
											"end": 7848,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7836,
											"end": 7845,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7832,
											"end": 7849,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7825,
											"end": 7872,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7889,
											"end": 8020,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "269"
										},
										{
											"begin": 8015,
											"end": 8019,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7889,
											"end": 8020,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "174"
										},
										{
											"begin": 7889,
											"end": 8020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7889,
											"end": 8020,
											"name": "tag",
											"source": 7,
											"value": "269"
										},
										{
											"begin": 7889,
											"end": 8020,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7881,
											"end": 8020,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7881,
											"end": 8020,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7608,
											"end": 8027,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7608,
											"end": 8027,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7608,
											"end": 8027,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7608,
											"end": 8027,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8033,
											"end": 8213,
											"name": "tag",
											"source": 7,
											"value": "63"
										},
										{
											"begin": 8033,
											"end": 8213,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8081,
											"end": 8158,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8078,
											"end": 8079,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8071,
											"end": 8159,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8178,
											"end": 8182,
											"name": "PUSH",
											"source": 7,
											"value": "32"
										},
										{
											"begin": 8175,
											"end": 8176,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 8168,
											"end": 8183,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8202,
											"end": 8206,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 8199,
											"end": 8200,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8192,
											"end": 8207,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 8219,
											"end": 8465,
											"name": "tag",
											"source": 7,
											"value": "175"
										},
										{
											"begin": 8219,
											"end": 8465,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8359,
											"end": 8393,
											"name": "PUSH",
											"source": 7,
											"value": "5468652061646472657373206F6620746865206F776E657220616E6420746865"
										},
										{
											"begin": 8355,
											"end": 8356,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8347,
											"end": 8353,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8343,
											"end": 8357,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8336,
											"end": 8394,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8428,
											"end": 8457,
											"name": "PUSH",
											"source": 7,
											"value": "206F70657261746F72206D75737420626520646966666572656E740000000000"
										},
										{
											"begin": 8423,
											"end": 8425,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8415,
											"end": 8421,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8411,
											"end": 8426,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8404,
											"end": 8458,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8219,
											"end": 8465,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8219,
											"end": 8465,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8471,
											"end": 8837,
											"name": "tag",
											"source": 7,
											"value": "176"
										},
										{
											"begin": 8471,
											"end": 8837,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8613,
											"end": 8616,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8634,
											"end": 8701,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "273"
										},
										{
											"begin": 8698,
											"end": 8700,
											"name": "PUSH",
											"source": 7,
											"value": "3B"
										},
										{
											"begin": 8693,
											"end": 8696,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8634,
											"end": 8701,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "168"
										},
										{
											"begin": 8634,
											"end": 8701,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8634,
											"end": 8701,
											"name": "tag",
											"source": 7,
											"value": "273"
										},
										{
											"begin": 8634,
											"end": 8701,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8627,
											"end": 8701,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8627,
											"end": 8701,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8710,
											"end": 8803,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "274"
										},
										{
											"begin": 8799,
											"end": 8802,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8710,
											"end": 8803,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "175"
										},
										{
											"begin": 8710,
											"end": 8803,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8710,
											"end": 8803,
											"name": "tag",
											"source": 7,
											"value": "274"
										},
										{
											"begin": 8710,
											"end": 8803,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8828,
											"end": 8830,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 8823,
											"end": 8826,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8819,
											"end": 8831,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8812,
											"end": 8831,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8812,
											"end": 8831,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8471,
											"end": 8837,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8471,
											"end": 8837,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8471,
											"end": 8837,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8471,
											"end": 8837,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8843,
											"end": 9262,
											"name": "tag",
											"source": 7,
											"value": "76"
										},
										{
											"begin": 8843,
											"end": 9262,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9009,
											"end": 9013,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9047,
											"end": 9049,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 9036,
											"end": 9045,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9032,
											"end": 9050,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9024,
											"end": 9050,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9024,
											"end": 9050,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9096,
											"end": 9105,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9090,
											"end": 9094,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9086,
											"end": 9106,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 9082,
											"end": 9083,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9071,
											"end": 9080,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9067,
											"end": 9084,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9060,
											"end": 9107,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9124,
											"end": 9255,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "276"
										},
										{
											"begin": 9250,
											"end": 9254,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9124,
											"end": 9255,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "176"
										},
										{
											"begin": 9124,
											"end": 9255,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9124,
											"end": 9255,
											"name": "tag",
											"source": 7,
											"value": "276"
										},
										{
											"begin": 9124,
											"end": 9255,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9116,
											"end": 9255,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9116,
											"end": 9255,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8843,
											"end": 9262,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8843,
											"end": 9262,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8843,
											"end": 9262,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8843,
											"end": 9262,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9268,
											"end": 9416,
											"name": "tag",
											"source": 7,
											"value": "177"
										},
										{
											"begin": 9268,
											"end": 9416,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9370,
											"end": 9381,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9407,
											"end": 9410,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9392,
											"end": 9410,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9392,
											"end": 9410,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9268,
											"end": 9416,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 9268,
											"end": 9416,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9268,
											"end": 9416,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9268,
											"end": 9416,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9268,
											"end": 9416,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9422,
											"end": 9812,
											"name": "tag",
											"source": 7,
											"value": "178"
										},
										{
											"begin": 9422,
											"end": 9812,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9528,
											"end": 9531,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9556,
											"end": 9595,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "279"
										},
										{
											"begin": 9589,
											"end": 9594,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9556,
											"end": 9595,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "167"
										},
										{
											"begin": 9556,
											"end": 9595,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9556,
											"end": 9595,
											"name": "tag",
											"source": 7,
											"value": "279"
										},
										{
											"begin": 9556,
											"end": 9595,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9611,
											"end": 9700,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "280"
										},
										{
											"begin": 9693,
											"end": 9699,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9688,
											"end": 9691,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 9611,
											"end": 9700,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "177"
										},
										{
											"begin": 9611,
											"end": 9700,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9611,
											"end": 9700,
											"name": "tag",
											"source": 7,
											"value": "280"
										},
										{
											"begin": 9611,
											"end": 9700,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9604,
											"end": 9700,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 9604,
											"end": 9700,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9709,
											"end": 9774,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "281"
										},
										{
											"begin": 9767,
											"end": 9773,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9762,
											"end": 9765,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 9755,
											"end": 9759,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 9748,
											"end": 9753,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 9744,
											"end": 9760,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9709,
											"end": 9774,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "169"
										},
										{
											"begin": 9709,
											"end": 9774,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9709,
											"end": 9774,
											"name": "tag",
											"source": 7,
											"value": "281"
										},
										{
											"begin": 9709,
											"end": 9774,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9799,
											"end": 9805,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 9794,
											"end": 9797,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 9790,
											"end": 9806,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9783,
											"end": 9806,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9783,
											"end": 9806,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9532,
											"end": 9812,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9422,
											"end": 9812,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 9422,
											"end": 9812,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9422,
											"end": 9812,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9422,
											"end": 9812,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9422,
											"end": 9812,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9818,
											"end": 10253,
											"name": "tag",
											"source": 7,
											"value": "91"
										},
										{
											"begin": 9818,
											"end": 10253,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9998,
											"end": 10001,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10020,
											"end": 10115,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "283"
										},
										{
											"begin": 10111,
											"end": 10114,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10102,
											"end": 10108,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 10020,
											"end": 10115,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "178"
										},
										{
											"begin": 10020,
											"end": 10115,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10020,
											"end": 10115,
											"name": "tag",
											"source": 7,
											"value": "283"
										},
										{
											"begin": 10020,
											"end": 10115,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10013,
											"end": 10115,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10013,
											"end": 10115,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10132,
											"end": 10227,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "284"
										},
										{
											"begin": 10223,
											"end": 10226,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10214,
											"end": 10220,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 10132,
											"end": 10227,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "178"
										},
										{
											"begin": 10132,
											"end": 10227,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10132,
											"end": 10227,
											"name": "tag",
											"source": 7,
											"value": "284"
										},
										{
											"begin": 10132,
											"end": 10227,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10125,
											"end": 10227,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10125,
											"end": 10227,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10244,
											"end": 10247,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10237,
											"end": 10247,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10237,
											"end": 10247,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9818,
											"end": 10253,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 9818,
											"end": 10253,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 9818,
											"end": 10253,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9818,
											"end": 10253,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9818,
											"end": 10253,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9818,
											"end": 10253,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10259,
											"end": 10562,
											"name": "tag",
											"source": 7,
											"value": "179"
										},
										{
											"begin": 10259,
											"end": 10562,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10399,
											"end": 10433,
											"name": "PUSH",
											"source": 7,
											"value": "54686520494420656E746572656420697320696E76616C69642E204974206D75"
										},
										{
											"begin": 10395,
											"end": 10396,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10387,
											"end": 10393,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10383,
											"end": 10397,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10376,
											"end": 10434,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10468,
											"end": 10502,
											"name": "PUSH",
											"source": 7,
											"value": "737420626520696E207468697320696E74657276616C2030203C206964203C3D"
										},
										{
											"begin": 10463,
											"end": 10465,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 10455,
											"end": 10461,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10451,
											"end": 10466,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10444,
											"end": 10503,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10537,
											"end": 10554,
											"name": "PUSH",
											"source": 7,
											"value": "2063757272656E7420746F6B656E730000000000000000000000000000000000"
										},
										{
											"begin": 10532,
											"end": 10534,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 10524,
											"end": 10530,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10520,
											"end": 10535,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10513,
											"end": 10555,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10259,
											"end": 10562,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10259,
											"end": 10562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10568,
											"end": 10934,
											"name": "tag",
											"source": 7,
											"value": "180"
										},
										{
											"begin": 10568,
											"end": 10934,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10710,
											"end": 10713,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10731,
											"end": 10798,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "287"
										},
										{
											"begin": 10795,
											"end": 10797,
											"name": "PUSH",
											"source": 7,
											"value": "4F"
										},
										{
											"begin": 10790,
											"end": 10793,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 10731,
											"end": 10798,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "168"
										},
										{
											"begin": 10731,
											"end": 10798,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10731,
											"end": 10798,
											"name": "tag",
											"source": 7,
											"value": "287"
										},
										{
											"begin": 10731,
											"end": 10798,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10724,
											"end": 10798,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10724,
											"end": 10798,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10807,
											"end": 10900,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "288"
										},
										{
											"begin": 10896,
											"end": 10899,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10807,
											"end": 10900,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "179"
										},
										{
											"begin": 10807,
											"end": 10900,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10807,
											"end": 10900,
											"name": "tag",
											"source": 7,
											"value": "288"
										},
										{
											"begin": 10807,
											"end": 10900,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10925,
											"end": 10927,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 10920,
											"end": 10923,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10916,
											"end": 10928,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10909,
											"end": 10928,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10909,
											"end": 10928,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10568,
											"end": 10934,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10568,
											"end": 10934,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10568,
											"end": 10934,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10568,
											"end": 10934,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10940,
											"end": 11359,
											"name": "tag",
											"source": 7,
											"value": "101"
										},
										{
											"begin": 10940,
											"end": 11359,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11106,
											"end": 11110,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11144,
											"end": 11146,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 11133,
											"end": 11142,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11129,
											"end": 11147,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11121,
											"end": 11147,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11121,
											"end": 11147,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11193,
											"end": 11202,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 11187,
											"end": 11191,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 11183,
											"end": 11203,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 11179,
											"end": 11180,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11168,
											"end": 11177,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 11164,
											"end": 11181,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11157,
											"end": 11204,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 11221,
											"end": 11352,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "290"
										},
										{
											"begin": 11347,
											"end": 11351,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 11221,
											"end": 11352,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "180"
										},
										{
											"begin": 11221,
											"end": 11352,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11221,
											"end": 11352,
											"name": "tag",
											"source": 7,
											"value": "290"
										},
										{
											"begin": 11221,
											"end": 11352,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11213,
											"end": 11352,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11213,
											"end": 11352,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10940,
											"end": 11359,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10940,
											"end": 11359,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10940,
											"end": 11359,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10940,
											"end": 11359,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11365,
											"end": 11545,
											"name": "tag",
											"source": 7,
											"value": "112"
										},
										{
											"begin": 11365,
											"end": 11545,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11413,
											"end": 11490,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11410,
											"end": 11411,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11403,
											"end": 11491,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 11510,
											"end": 11514,
											"name": "PUSH",
											"source": 7,
											"value": "41"
										},
										{
											"begin": 11507,
											"end": 11508,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 11500,
											"end": 11515,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 11534,
											"end": 11538,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 11531,
											"end": 11532,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11524,
											"end": 11539,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 11551,
											"end": 11731,
											"name": "tag",
											"source": 7,
											"value": "118"
										},
										{
											"begin": 11551,
											"end": 11731,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11599,
											"end": 11676,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11596,
											"end": 11597,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11589,
											"end": 11677,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 11696,
											"end": 11700,
											"name": "PUSH",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 11693,
											"end": 11694,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 11686,
											"end": 11701,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 11720,
											"end": 11724,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 11717,
											"end": 11718,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11710,
											"end": 11725,
											"name": "REVERT",
											"source": 7
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contracts/ERC721TokenContractName.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"approve(address,uint16)": "e560ca43",
							"balanceOf(address)": "70a08231",
							"getApproved(uint16)": "93b871f2",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint16)": "82a7cf1e",
							"setApprovalForAll(address,bool)": "a22cb465",
							"symbol()": "95d89b41",
							"tokenURI(uint16)": "dd7d8440"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes20\",\"name\":\"name_\",\"type\":\"bytes20\"},{\"internalType\":\"bytes10\",\"name\":\"symbol_\",\"type\":\"bytes10\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint16\",\"name\":\"tokenId\",\"type\":\"uint16\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"tokenId\",\"type\":\"uint16\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"tokenId\",\"type\":\"uint16\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"bytes20\",\"name\":\"\",\"type\":\"bytes20\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"tokenId\",\"type\":\"uint16\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"bytes10\",\"name\":\"\",\"type\":\"bytes10\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"tokenId\",\"type\":\"uint16\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ERC721TokenContractName.sol\":\"ERC721TokenContractName\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]},\"contracts/ERC721TokenContractName.sol\":{\"keccak256\":\"0x1c781add31e7ca34609284641efee34438744857dfe6faf5659cd57f0a2fd7a2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://696107c46ffe0d5dd9734b0b55b5033ec62beec74c955f5644b9b10dbca2b41b\",\"dweb:/ipfs/QmcGQwGpCaDWuacq9ir8u6SJNAY6n6AurzADQcaSVUsepF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1876,
								"contract": "contracts/ERC721TokenContractName.sol:ERC721TokenContractName",
								"label": "_name",
								"offset": 0,
								"slot": "0",
								"type": "t_bytes20"
							},
							{
								"astId": 1878,
								"contract": "contracts/ERC721TokenContractName.sol:ERC721TokenContractName",
								"label": "_symbol",
								"offset": 20,
								"slot": "0",
								"type": "t_bytes10"
							},
							{
								"astId": 1886,
								"contract": "contracts/ERC721TokenContractName.sol:ERC721TokenContractName",
								"label": "tokInfo",
								"offset": 0,
								"slot": "1",
								"type": "t_struct(TokInfo)1883_storage"
							},
							{
								"astId": 1890,
								"contract": "contracts/ERC721TokenContractName.sol:ERC721TokenContractName",
								"label": "_owners",
								"offset": 0,
								"slot": "2",
								"type": "t_array(t_address)1201_storage"
							},
							{
								"astId": 1896,
								"contract": "contracts/ERC721TokenContractName.sol:ERC721TokenContractName",
								"label": "_balanceAndTokId",
								"offset": 0,
								"slot": "1203",
								"type": "t_mapping(t_address,t_array(t_uint16)1201_storage)"
							},
							{
								"astId": 1900,
								"contract": "contracts/ERC721TokenContractName.sol:ERC721TokenContractName",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "1204",
								"type": "t_mapping(t_uint16,t_address)"
							},
							{
								"astId": 1906,
								"contract": "contracts/ERC721TokenContractName.sol:ERC721TokenContractName",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "1205",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_address)1201_storage": {
								"base": "t_address",
								"encoding": "inplace",
								"label": "address[1201]",
								"numberOfBytes": "38432"
							},
							"t_array(t_uint16)1201_storage": {
								"base": "t_uint16",
								"encoding": "inplace",
								"label": "uint16[1201]",
								"numberOfBytes": "2432"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes10": {
								"encoding": "inplace",
								"label": "bytes10",
								"numberOfBytes": "10"
							},
							"t_bytes20": {
								"encoding": "inplace",
								"label": "bytes20",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_array(t_uint16)1201_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint16[1201])",
								"numberOfBytes": "32",
								"value": "t_array(t_uint16)1201_storage"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_uint16,t_address)": {
								"encoding": "mapping",
								"key": "t_uint16",
								"label": "mapping(uint16 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_struct(TokInfo)1883_storage": {
								"encoding": "inplace",
								"label": "struct ERC721TokenContractName.TokInfo",
								"members": [
									{
										"astId": 1880,
										"contract": "contracts/ERC721TokenContractName.sol:ERC721TokenContractName",
										"label": "maxMinted",
										"offset": 0,
										"slot": "0",
										"type": "t_uint16"
									},
									{
										"astId": 1882,
										"contract": "contracts/ERC721TokenContractName.sol:ERC721TokenContractName",
										"label": "currentTokens",
										"offset": 2,
										"slot": "0",
										"type": "t_uint16"
									}
								],
								"numberOfBytes": "32"
							},
							"t_uint16": {
								"encoding": "inplace",
								"label": "uint16",
								"numberOfBytes": "2"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							136
						],
						"IERC20Errors": [
							41
						],
						"IERC721Errors": [
							89
						]
					},
					"id": 137,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "138:139:0",
								"text": " @dev Standard ERC20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens."
							},
							"fullyImplemented": true,
							"id": 41,
							"linearizedBaseContracts": [
								41
							],
							"name": "IERC20Errors",
							"nameLocation": "288:12:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "307:309:0",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 11,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "627:24:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "660:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "652:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "676:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "668:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 6,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "693:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "685:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "685:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "651:49:0"
									},
									"src": "621:80:0"
								},
								{
									"documentation": {
										"id": 12,
										"nodeType": "StructuredDocumentation",
										"src": "707:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 16,
									"name": "ERC20InvalidSender",
									"nameLocation": "870:18:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "897:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "889:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "889:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "888:16:0"
									},
									"src": "864:41:0"
								},
								{
									"documentation": {
										"id": 17,
										"nodeType": "StructuredDocumentation",
										"src": "911:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 21,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1081:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 20,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 19,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1110:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 21,
												"src": "1102:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 18,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1102:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1101:18:0"
									},
									"src": "1075:45:0"
								},
								{
									"documentation": {
										"id": 22,
										"nodeType": "StructuredDocumentation",
										"src": "1126:345:0",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 30,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1482:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1517:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1509:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 23,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1509:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 26,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1534:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1526:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 25,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1526:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 28,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1553:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1545:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 27,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1545:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1508:52:0"
									},
									"src": "1476:85:0"
								},
								{
									"documentation": {
										"id": 31,
										"nodeType": "StructuredDocumentation",
										"src": "1567:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 35,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1752:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 33,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1781:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 35,
												"src": "1773:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 32,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1773:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1772:18:0"
									},
									"src": "1746:45:0"
								},
								{
									"documentation": {
										"id": 36,
										"nodeType": "StructuredDocumentation",
										"src": "1797:195:0",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 40,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2003:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 39,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 38,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2031:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "2023:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 37,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2023:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2022:17:0"
									},
									"src": "1997:43:0"
								}
							],
							"scope": 137,
							"src": "278:1764:0",
							"usedErrors": [
								11,
								16,
								21,
								30,
								35,
								40
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 42,
								"nodeType": "StructuredDocumentation",
								"src": "2044:141:0",
								"text": " @dev Standard ERC721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens."
							},
							"fullyImplemented": true,
							"id": 89,
							"linearizedBaseContracts": [
								89
							],
							"name": "IERC721Errors",
							"nameLocation": "2196:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 43,
										"nodeType": "StructuredDocumentation",
										"src": "2216:219:0",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 47,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2446:18:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 46,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 45,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2473:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 47,
												"src": "2465:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 44,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2465:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2464:15:0"
									},
									"src": "2440:40:0"
								},
								{
									"documentation": {
										"id": 48,
										"nodeType": "StructuredDocumentation",
										"src": "2486:132:0",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 52,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2629:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 51,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 50,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2660:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 52,
												"src": "2652:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 49,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2652:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2651:17:0"
									},
									"src": "2623:46:0"
								},
								{
									"documentation": {
										"id": 53,
										"nodeType": "StructuredDocumentation",
										"src": "2675:289:0",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 61,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2975:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 55,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3004:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "2996:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 54,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2996:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3020:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "3012:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 56,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3012:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3037:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "3029:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 58,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3029:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2995:48:0"
									},
									"src": "2969:75:0"
								},
								{
									"documentation": {
										"id": 62,
										"nodeType": "StructuredDocumentation",
										"src": "3050:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 66,
									"name": "ERC721InvalidSender",
									"nameLocation": "3213:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 65,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 64,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3241:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 66,
												"src": "3233:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 63,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3233:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3232:16:0"
									},
									"src": "3207:42:0"
								},
								{
									"documentation": {
										"id": 67,
										"nodeType": "StructuredDocumentation",
										"src": "3255:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 71,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3425:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3455:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 71,
												"src": "3447:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3447:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3446:18:0"
									},
									"src": "3419:46:0"
								},
								{
									"documentation": {
										"id": 72,
										"nodeType": "StructuredDocumentation",
										"src": "3471:247:0",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 78,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3729:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 77,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3764:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 78,
												"src": "3756:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 73,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3756:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 76,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3782:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 78,
												"src": "3774:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 75,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3774:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3755:35:0"
									},
									"src": "3723:68:0"
								},
								{
									"documentation": {
										"id": 79,
										"nodeType": "StructuredDocumentation",
										"src": "3797:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 83,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3982:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 82,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 81,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4012:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 83,
												"src": "4004:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 80,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4004:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4003:18:0"
									},
									"src": "3976:46:0"
								},
								{
									"documentation": {
										"id": 84,
										"nodeType": "StructuredDocumentation",
										"src": "4028:197:0",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 88,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4236:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 86,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4266:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 88,
												"src": "4258:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 85,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4258:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4257:18:0"
									},
									"src": "4230:46:0"
								}
							],
							"scope": 137,
							"src": "2186:2092:0",
							"usedErrors": [
								47,
								52,
								61,
								66,
								71,
								78,
								83,
								88
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 90,
								"nodeType": "StructuredDocumentation",
								"src": "4280:143:0",
								"text": " @dev Standard ERC1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens."
							},
							"fullyImplemented": true,
							"id": 136,
							"linearizedBaseContracts": [
								136
							],
							"name": "IERC1155Errors",
							"nameLocation": "4434:14:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 91,
										"nodeType": "StructuredDocumentation",
										"src": "4455:361:0",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 101,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4827:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 93,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4862:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4854:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 92,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4854:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 95,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4878:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4870:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 94,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4870:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4895:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4887:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 96,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4887:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 99,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4911:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4903:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 98,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4903:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4853:66:0"
									},
									"src": "4821:99:0"
								},
								{
									"documentation": {
										"id": 102,
										"nodeType": "StructuredDocumentation",
										"src": "4926:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 106,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5089:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 104,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5118:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 106,
												"src": "5110:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 103,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5110:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5109:16:0"
									},
									"src": "5083:43:0"
								},
								{
									"documentation": {
										"id": 107,
										"nodeType": "StructuredDocumentation",
										"src": "5132:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 111,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5302:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 110,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 109,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5333:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "5325:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 108,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5325:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5324:18:0"
									},
									"src": "5296:47:0"
								},
								{
									"documentation": {
										"id": 112,
										"nodeType": "StructuredDocumentation",
										"src": "5349:256:0",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 118,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5616:28:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 117,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 114,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5653:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 118,
												"src": "5645:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 113,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5645:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 116,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5671:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 118,
												"src": "5663:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 115,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5663:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5644:33:0"
									},
									"src": "5610:68:0"
								},
								{
									"documentation": {
										"id": 119,
										"nodeType": "StructuredDocumentation",
										"src": "5684:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 123,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5869:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 122,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 121,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5900:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 123,
												"src": "5892:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 120,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5892:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5891:18:0"
									},
									"src": "5863:47:0"
								},
								{
									"documentation": {
										"id": 124,
										"nodeType": "StructuredDocumentation",
										"src": "5916:197:0",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 128,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6124:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 127,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 126,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6155:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "6147:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 125,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6147:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6146:18:0"
									},
									"src": "6118:47:0"
								},
								{
									"documentation": {
										"id": 129,
										"nodeType": "StructuredDocumentation",
										"src": "6171:280:0",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 135,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6462:25:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 134,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 131,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6496:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "6488:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 130,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6488:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 133,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6515:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "6507:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 132,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6507:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6487:41:0"
									},
									"src": "6456:73:0"
								}
							],
							"scope": 137,
							"src": "4424:2107:0",
							"usedErrors": [
								101,
								106,
								111,
								118,
								123,
								128,
								135
							],
							"usedEvents": []
						}
					],
					"src": "112:6420:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							389
						]
					},
					"id": 390,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 138,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Address",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 139,
								"nodeType": "StructuredDocumentation",
								"src": "127:67:1",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 389,
							"linearizedBaseContracts": [
								389
							],
							"name": "Address",
							"nameLocation": "203:7:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 140,
										"nodeType": "StructuredDocumentation",
										"src": "217:94:1",
										"text": " @dev The ETH balance of the account is not enough to perform the operation."
									},
									"errorSelector": "cd786059",
									"id": 144,
									"name": "AddressInsufficientBalance",
									"nameLocation": "322:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 143,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 142,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "357:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 144,
												"src": "349:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 141,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "349:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "348:17:1"
									},
									"src": "316:50:1"
								},
								{
									"documentation": {
										"id": 145,
										"nodeType": "StructuredDocumentation",
										"src": "372:75:1",
										"text": " @dev There's no code at `target` (it is not a contract)."
									},
									"errorSelector": "9996b315",
									"id": 149,
									"name": "AddressEmptyCode",
									"nameLocation": "458:16:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 148,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 147,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "483:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 149,
												"src": "475:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 146,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "475:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "474:16:1"
									},
									"src": "452:39:1"
								},
								{
									"documentation": {
										"id": 150,
										"nodeType": "StructuredDocumentation",
										"src": "497:89:1",
										"text": " @dev A call to an address target failed. The target may have reverted."
									},
									"errorSelector": "1425ea42",
									"id": 152,
									"name": "FailedInnerCall",
									"nameLocation": "597:15:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 151,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "612:2:1"
									},
									"src": "591:24:1"
								},
								{
									"body": {
										"id": 192,
										"nodeType": "Block",
										"src": "1602:260:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 166,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 162,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1624:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Address_$389",
																		"typeString": "library Address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Address_$389",
																		"typeString": "library Address"
																	}
																],
																"id": 161,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1616:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 160,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1616:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 163,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1616:13:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 164,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1630:7:1",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "1616:21:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 165,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 157,
														"src": "1640:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1616:30:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 175,
												"nodeType": "IfStatement",
												"src": "1612:109:1",
												"trueBody": {
													"id": 174,
													"nodeType": "Block",
													"src": "1648:73:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 170,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "1704:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_Address_$389",
																					"typeString": "library Address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_Address_$389",
																					"typeString": "library Address"
																				}
																			],
																			"id": 169,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1696:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 168,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1696:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 171,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1696:13:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 167,
																	"name": "AddressInsufficientBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 144,
																	"src": "1669:26:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 172,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1669:41:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 173,
															"nodeType": "RevertStatement",
															"src": "1662:48:1"
														}
													]
												}
											},
											{
												"assignments": [
													177,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 177,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "1737:7:1",
														"nodeType": "VariableDeclaration",
														"scope": 192,
														"src": "1732:12:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 176,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1732:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 184,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 182,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1780:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 178,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 155,
																"src": "1750:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 179,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1760:4:1",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "1750:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 181,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 180,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 157,
																"src": "1772:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "1750:29:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 183,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1750:33:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1731:52:1"
											},
											{
												"condition": {
													"id": 186,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "1797:8:1",
													"subExpression": {
														"id": 185,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 177,
														"src": "1798:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 191,
												"nodeType": "IfStatement",
												"src": "1793:63:1",
												"trueBody": {
													"id": 190,
													"nodeType": "Block",
													"src": "1807:49:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 187,
																	"name": "FailedInnerCall",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 152,
																	"src": "1828:15:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 188,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1828:17:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 189,
															"nodeType": "RevertStatement",
															"src": "1821:24:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 153,
										"nodeType": "StructuredDocumentation",
										"src": "621:905:1",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 193,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "1540:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 155,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1566:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 193,
												"src": "1550:25:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 154,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1550:15:1",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 157,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1585:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 193,
												"src": "1577:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1577:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1549:43:1"
									},
									"returnParameters": {
										"id": 159,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1602:0:1"
									},
									"scope": 389,
									"src": "1531:331:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 209,
										"nodeType": "Block",
										"src": "2794:62:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 204,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 196,
															"src": "2833:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 205,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 198,
															"src": "2841:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 206,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2847:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"id": 203,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 256,
														"src": "2811:21:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256) returns (bytes memory)"
														}
													},
													"id": 207,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2811:38:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 202,
												"id": 208,
												"nodeType": "Return",
												"src": "2804:45:1"
											}
										]
									},
									"documentation": {
										"id": 194,
										"nodeType": "StructuredDocumentation",
										"src": "1868:832:1",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason or custom error, it is bubbled\n up by this function (like regular Solidity function calls). However, if\n the call reverted with no returned reason, this function reverts with a\n {FailedInnerCall} error.\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert."
									},
									"id": 210,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "2714:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 196,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "2735:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 210,
												"src": "2727:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 195,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2727:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2756:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 210,
												"src": "2743:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 197,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2743:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2726:35:1"
									},
									"returnParameters": {
										"id": 202,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 201,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 210,
												"src": "2780:12:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 200,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2780:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2779:14:1"
									},
									"scope": 389,
									"src": "2705:151:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 255,
										"nodeType": "Block",
										"src": "3293:279:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 228,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 224,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3315:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Address_$389",
																		"typeString": "library Address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Address_$389",
																		"typeString": "library Address"
																	}
																],
																"id": 223,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3307:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 222,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3307:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 225,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3307:13:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 226,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3321:7:1",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "3307:21:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 227,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 217,
														"src": "3331:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3307:29:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 237,
												"nodeType": "IfStatement",
												"src": "3303:108:1",
												"trueBody": {
													"id": 236,
													"nodeType": "Block",
													"src": "3338:73:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 232,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "3394:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_Address_$389",
																					"typeString": "library Address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_Address_$389",
																					"typeString": "library Address"
																				}
																			],
																			"id": 231,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3386:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 230,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "3386:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 233,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3386:13:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 229,
																	"name": "AddressInsufficientBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 144,
																	"src": "3359:26:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 234,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3359:41:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 235,
															"nodeType": "RevertStatement",
															"src": "3352:48:1"
														}
													]
												}
											},
											{
												"assignments": [
													239,
													241
												],
												"declarations": [
													{
														"constant": false,
														"id": 239,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "3426:7:1",
														"nodeType": "VariableDeclaration",
														"scope": 255,
														"src": "3421:12:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 238,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3421:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 241,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3448:10:1",
														"nodeType": "VariableDeclaration",
														"scope": 255,
														"src": "3435:23:1",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 240,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3435:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 248,
												"initialValue": {
													"arguments": [
														{
															"id": 246,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 215,
															"src": "3488:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 242,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 213,
																"src": "3462:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 243,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3469:4:1",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "3462:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 245,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 244,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 217,
																"src": "3481:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "3462:25:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 247,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3462:31:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3420:73:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 250,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 213,
															"src": "3537:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 251,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 239,
															"src": "3545:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 252,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 241,
															"src": "3554:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 249,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 348,
														"src": "3510:26:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 253,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3510:55:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 221,
												"id": 254,
												"nodeType": "Return",
												"src": "3503:62:1"
											}
										]
									},
									"documentation": {
										"id": 211,
										"nodeType": "StructuredDocumentation",
										"src": "2862:313:1",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`."
									},
									"id": 256,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "3189:21:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 213,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3219:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "3211:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 212,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3211:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 215,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3240:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "3227:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 214,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3227:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3254:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "3246:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 216,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3246:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3210:50:1"
									},
									"returnParameters": {
										"id": 221,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 220,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "3279:12:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 219,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3279:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3278:14:1"
									},
									"scope": 389,
									"src": "3180:392:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 281,
										"nodeType": "Block",
										"src": "3811:154:1",
										"statements": [
											{
												"assignments": [
													267,
													269
												],
												"declarations": [
													{
														"constant": false,
														"id": 267,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "3827:7:1",
														"nodeType": "VariableDeclaration",
														"scope": 281,
														"src": "3822:12:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 266,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3822:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 269,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3849:10:1",
														"nodeType": "VariableDeclaration",
														"scope": 281,
														"src": "3836:23:1",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 268,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3836:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 274,
												"initialValue": {
													"arguments": [
														{
															"id": 272,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 261,
															"src": "3881:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 270,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 259,
															"src": "3863:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 271,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3870:10:1",
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "3863:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 273,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3863:23:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3821:65:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 276,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 259,
															"src": "3930:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 277,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 267,
															"src": "3938:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 278,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 269,
															"src": "3947:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 275,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 348,
														"src": "3903:26:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 279,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3903:55:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 265,
												"id": 280,
												"nodeType": "Return",
												"src": "3896:62:1"
											}
										]
									},
									"documentation": {
										"id": 257,
										"nodeType": "StructuredDocumentation",
										"src": "3578:128:1",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call."
									},
									"id": 282,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "3720:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 262,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 259,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3747:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 282,
												"src": "3739:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 258,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3739:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 261,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3768:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 282,
												"src": "3755:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 260,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3755:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3738:35:1"
									},
									"returnParameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 282,
												"src": "3797:12:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 263,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3797:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3796:14:1"
									},
									"scope": 389,
									"src": "3711:254:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 307,
										"nodeType": "Block",
										"src": "4203:156:1",
										"statements": [
											{
												"assignments": [
													293,
													295
												],
												"declarations": [
													{
														"constant": false,
														"id": 293,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "4219:7:1",
														"nodeType": "VariableDeclaration",
														"scope": 307,
														"src": "4214:12:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 292,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4214:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 295,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "4241:10:1",
														"nodeType": "VariableDeclaration",
														"scope": 307,
														"src": "4228:23:1",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 294,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4228:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 300,
												"initialValue": {
													"arguments": [
														{
															"id": 298,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 287,
															"src": "4275:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 296,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 285,
															"src": "4255:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 297,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4262:12:1",
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "4255:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 299,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4255:25:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4213:67:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 302,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 285,
															"src": "4324:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 303,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 293,
															"src": "4332:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 304,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 295,
															"src": "4341:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 301,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 348,
														"src": "4297:26:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 305,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4297:55:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 291,
												"id": 306,
												"nodeType": "Return",
												"src": "4290:62:1"
											}
										]
									},
									"documentation": {
										"id": 283,
										"nodeType": "StructuredDocumentation",
										"src": "3971:130:1",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call."
									},
									"id": 308,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "4115:20:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 288,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 285,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4144:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 308,
												"src": "4136:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 284,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4136:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 287,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4165:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 308,
												"src": "4152:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 286,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4152:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4135:35:1"
									},
									"returnParameters": {
										"id": 291,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 290,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 308,
												"src": "4189:12:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 289,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4189:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4188:14:1"
									},
									"scope": 389,
									"src": "4106:253:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 347,
										"nodeType": "Block",
										"src": "4783:424:1",
										"statements": [
											{
												"condition": {
													"id": 321,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4797:8:1",
													"subExpression": {
														"id": 320,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 313,
														"src": "4798:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 345,
													"nodeType": "Block",
													"src": "4857:344:1",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 336,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 330,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 327,
																			"name": "returndata",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 315,
																			"src": "5045:10:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 328,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5056:6:1",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "5045:17:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 329,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5066:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5045:22:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 335,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"expression": {
																				"id": 331,
																				"name": "target",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 311,
																				"src": "5071:6:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"id": 332,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "5078:4:1",
																			"memberName": "code",
																			"nodeType": "MemberAccess",
																			"src": "5071:11:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 333,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5083:6:1",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "5071:18:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 334,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5093:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5071:23:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "5045:49:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 342,
															"nodeType": "IfStatement",
															"src": "5041:119:1",
															"trueBody": {
																"id": 341,
																"nodeType": "Block",
																"src": "5096:64:1",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 338,
																					"name": "target",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 311,
																					"src": "5138:6:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 337,
																				"name": "AddressEmptyCode",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 149,
																				"src": "5121:16:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																					"typeString": "function (address) pure"
																				}
																			},
																			"id": 339,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5121:24:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 340,
																		"nodeType": "RevertStatement",
																		"src": "5114:31:1"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 343,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 315,
																"src": "5180:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 319,
															"id": 344,
															"nodeType": "Return",
															"src": "5173:17:1"
														}
													]
												},
												"id": 346,
												"nodeType": "IfStatement",
												"src": "4793:408:1",
												"trueBody": {
													"id": 326,
													"nodeType": "Block",
													"src": "4807:44:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 323,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 315,
																		"src": "4829:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 322,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 388,
																	"src": "4821:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory) pure"
																	}
																},
																"id": 324,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4821:19:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 325,
															"nodeType": "ExpressionStatement",
															"src": "4821:19:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 309,
										"nodeType": "StructuredDocumentation",
										"src": "4365:255:1",
										"text": " @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\n unsuccessful call."
									},
									"id": 348,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResultFromTarget",
									"nameLocation": "4634:26:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 316,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 311,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4678:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 348,
												"src": "4670:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 310,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4670:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 313,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "4699:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 348,
												"src": "4694:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 312,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4694:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 315,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "4729:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 348,
												"src": "4716:23:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 314,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4716:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4660:85:1"
									},
									"returnParameters": {
										"id": 319,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 318,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 348,
												"src": "4769:12:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 317,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4769:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4768:14:1"
									},
									"scope": 389,
									"src": "4625:582:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 369,
										"nodeType": "Block",
										"src": "5509:122:1",
										"statements": [
											{
												"condition": {
													"id": 359,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "5523:8:1",
													"subExpression": {
														"id": 358,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 351,
														"src": "5524:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 367,
													"nodeType": "Block",
													"src": "5583:42:1",
													"statements": [
														{
															"expression": {
																"id": 365,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 353,
																"src": "5604:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 357,
															"id": 366,
															"nodeType": "Return",
															"src": "5597:17:1"
														}
													]
												},
												"id": 368,
												"nodeType": "IfStatement",
												"src": "5519:106:1",
												"trueBody": {
													"id": 364,
													"nodeType": "Block",
													"src": "5533:44:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 361,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 353,
																		"src": "5555:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 360,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 388,
																	"src": "5547:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory) pure"
																	}
																},
																"id": 362,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5547:19:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 363,
															"nodeType": "ExpressionStatement",
															"src": "5547:19:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 349,
										"nodeType": "StructuredDocumentation",
										"src": "5213:189:1",
										"text": " @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n revert reason or with a default {FailedInnerCall} error."
									},
									"id": 370,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "5416:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 354,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 351,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "5438:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 370,
												"src": "5433:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 350,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5433:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 353,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "5460:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 370,
												"src": "5447:23:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 352,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5447:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5432:39:1"
									},
									"returnParameters": {
										"id": 357,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 356,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 370,
												"src": "5495:12:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 355,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5495:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5494:14:1"
									},
									"scope": 389,
									"src": "5407:224:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 387,
										"nodeType": "Block",
										"src": "5798:461:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 379,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 376,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 373,
															"src": "5874:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 377,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5885:6:1",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5874:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 378,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5894:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5874:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 385,
													"nodeType": "Block",
													"src": "6204:49:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 382,
																	"name": "FailedInnerCall",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 152,
																	"src": "6225:15:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 383,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6225:17:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 384,
															"nodeType": "RevertStatement",
															"src": "6218:24:1"
														}
													]
												},
												"id": 386,
												"nodeType": "IfStatement",
												"src": "5870:383:1",
												"trueBody": {
													"id": 381,
													"nodeType": "Block",
													"src": "5897:301:1",
													"statements": [
														{
															"AST": {
																"nodeType": "YulBlock",
																"src": "6055:133:1",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "6073:40:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "returndata",
																					"nodeType": "YulIdentifier",
																					"src": "6102:10:1"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "6096:5:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6096:17:1"
																		},
																		"variables": [
																			{
																				"name": "returndata_size",
																				"nodeType": "YulTypedName",
																				"src": "6077:15:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "6141:2:1",
																							"type": "",
																							"value": "32"
																						},
																						{
																							"name": "returndata",
																							"nodeType": "YulIdentifier",
																							"src": "6145:10:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "6137:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6137:19:1"
																				},
																				{
																					"name": "returndata_size",
																					"nodeType": "YulIdentifier",
																					"src": "6158:15:1"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6130:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6130:44:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6130:44:1"
																	}
																]
															},
															"documentation": "@solidity memory-safe-assembly",
															"evmVersion": "shanghai",
															"externalReferences": [
																{
																	"declaration": 373,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "6102:10:1",
																	"valueSize": 1
																},
																{
																	"declaration": 373,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "6145:10:1",
																	"valueSize": 1
																}
															],
															"id": 380,
															"nodeType": "InlineAssembly",
															"src": "6046:142:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 371,
										"nodeType": "StructuredDocumentation",
										"src": "5637:101:1",
										"text": " @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}."
									},
									"id": 388,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revert",
									"nameLocation": "5752:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 374,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 373,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "5773:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 388,
												"src": "5760:23:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 372,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5760:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5759:25:1"
									},
									"returnParameters": {
										"id": 375,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5798:0:1"
									},
									"scope": 389,
									"src": "5743:516:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 390,
							"src": "195:6066:1",
							"usedErrors": [
								144,
								149,
								152
							],
							"usedEvents": []
						}
					],
					"src": "101:6161:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							419
						]
					},
					"id": 420,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 391,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:2"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 392,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:2",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 419,
							"linearizedBaseContracts": [
								419
							],
							"name": "Context",
							"nameLocation": "642:7:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 400,
										"nodeType": "Block",
										"src": "718:34:2",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 397,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 398,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:2",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 396,
												"id": 399,
												"nodeType": "Return",
												"src": "728:17:2"
											}
										]
									},
									"id": 401,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 393,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:2"
									},
									"returnParameters": {
										"id": 396,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 395,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 401,
												"src": "709:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 394,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:2"
									},
									"scope": 419,
									"src": "656:96:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 409,
										"nodeType": "Block",
										"src": "825:32:2",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 406,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 407,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:2",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 405,
												"id": 408,
												"nodeType": "Return",
												"src": "835:15:2"
											}
										]
									},
									"id": 410,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 402,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:2"
									},
									"returnParameters": {
										"id": 405,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 404,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 410,
												"src": "809:14:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 403,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:2"
									},
									"scope": 419,
									"src": "758:99:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 417,
										"nodeType": "Block",
										"src": "935:25:2",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 415,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:2",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 414,
												"id": 416,
												"nodeType": "Return",
												"src": "945:8:2"
											}
										]
									},
									"id": 418,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 411,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:2"
									},
									"returnParameters": {
										"id": 414,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 413,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 418,
												"src": "926:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 412,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:2"
									},
									"scope": 419,
									"src": "863:97:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 420,
							"src": "624:338:2",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
					"exportedSymbols": {
						"Math": [
							1728
						],
						"SignedMath": [
							1833
						],
						"Strings": [
							674
						]
					},
					"id": 675,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 421,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
							"file": "./math/Math.sol",
							"id": 423,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 675,
							"sourceUnit": 1729,
							"src": "127:37:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 422,
										"name": "Math",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1728,
										"src": "135:4:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SignedMath.sol",
							"file": "./math/SignedMath.sol",
							"id": 425,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 675,
							"sourceUnit": 1834,
							"src": "165:49:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 424,
										"name": "SignedMath",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1833,
										"src": "173:10:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Strings",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 426,
								"nodeType": "StructuredDocumentation",
								"src": "216:34:3",
								"text": " @dev String operations."
							},
							"fullyImplemented": true,
							"id": 674,
							"linearizedBaseContracts": [
								674
							],
							"name": "Strings",
							"nameLocation": "259:7:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 429,
									"mutability": "constant",
									"name": "HEX_DIGITS",
									"nameLocation": "298:10:3",
									"nodeType": "VariableDeclaration",
									"scope": 674,
									"src": "273:56:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes16",
										"typeString": "bytes16"
									},
									"typeName": {
										"id": 427,
										"name": "bytes16",
										"nodeType": "ElementaryTypeName",
										"src": "273:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes16",
											"typeString": "bytes16"
										}
									},
									"value": {
										"hexValue": "30313233343536373839616263646566",
										"id": 428,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "311:18:3",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f",
											"typeString": "literal_string \"0123456789abcdef\""
										},
										"value": "0123456789abcdef"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 432,
									"mutability": "constant",
									"name": "ADDRESS_LENGTH",
									"nameLocation": "358:14:3",
									"nodeType": "VariableDeclaration",
									"scope": 674,
									"src": "335:42:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 430,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "335:5:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "3230",
										"id": 431,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "375:2:3",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_20_by_1",
											"typeString": "int_const 20"
										},
										"value": "20"
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 433,
										"nodeType": "StructuredDocumentation",
										"src": "384:81:3",
										"text": " @dev The `value` string doesn't fit in the specified `length`."
									},
									"errorSelector": "e22e27eb",
									"id": 439,
									"name": "StringsInsufficientHexLength",
									"nameLocation": "476:28:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 438,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 435,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "513:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 439,
												"src": "505:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 434,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "505:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 437,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "528:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 439,
												"src": "520:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 436,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "520:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "504:31:3"
									},
									"src": "470:66:3"
								},
								{
									"body": {
										"id": 486,
										"nodeType": "Block",
										"src": "708:627:3",
										"statements": [
											{
												"id": 485,
												"nodeType": "UncheckedBlock",
												"src": "718:611:3",
												"statements": [
													{
														"assignments": [
															448
														],
														"declarations": [
															{
																"constant": false,
																"id": 448,
																"mutability": "mutable",
																"name": "length",
																"nameLocation": "750:6:3",
																"nodeType": "VariableDeclaration",
																"scope": 485,
																"src": "742:14:3",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 447,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "742:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 455,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 454,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 451,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 442,
																		"src": "770:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 449,
																		"name": "Math",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1728,
																		"src": "759:4:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Math_$1728_$",
																			"typeString": "type(library Math)"
																		}
																	},
																	"id": 450,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "764:5:3",
																	"memberName": "log10",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1548,
																	"src": "759:10:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256) pure returns (uint256)"
																	}
																},
																"id": 452,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "759:17:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "31",
																"id": 453,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "779:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "759:21:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "742:38:3"
													},
													{
														"assignments": [
															457
														],
														"declarations": [
															{
																"constant": false,
																"id": 457,
																"mutability": "mutable",
																"name": "buffer",
																"nameLocation": "808:6:3",
																"nodeType": "VariableDeclaration",
																"scope": 485,
																"src": "794:20:3",
																"stateVariable": false,
																"storageLocation": "memory",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string"
																},
																"typeName": {
																	"id": 456,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "794:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 462,
														"initialValue": {
															"arguments": [
																{
																	"id": 460,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 448,
																	"src": "828:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 459,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "NewExpression",
																"src": "817:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																},
																"typeName": {
																	"id": 458,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "821:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																}
															},
															"id": 461,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "817:18:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "794:41:3"
													},
													{
														"assignments": [
															464
														],
														"declarations": [
															{
																"constant": false,
																"id": 464,
																"mutability": "mutable",
																"name": "ptr",
																"nameLocation": "857:3:3",
																"nodeType": "VariableDeclaration",
																"scope": 485,
																"src": "849:11:3",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 463,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "849:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 465,
														"nodeType": "VariableDeclarationStatement",
														"src": "849:11:3"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "930:67:3",
															"statements": [
																{
																	"nodeType": "YulAssignment",
																	"src": "948:35:3",
																	"value": {
																		"arguments": [
																			{
																				"name": "buffer",
																				"nodeType": "YulIdentifier",
																				"src": "959:6:3"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "971:2:3",
																						"type": "",
																						"value": "32"
																					},
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "975:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "967:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "967:15:3"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "955:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "955:28:3"
																	},
																	"variableNames": [
																		{
																			"name": "ptr",
																			"nodeType": "YulIdentifier",
																			"src": "948:3:3"
																		}
																	]
																}
															]
														},
														"documentation": "@solidity memory-safe-assembly",
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 457,
																"isOffset": false,
																"isSlot": false,
																"src": "959:6:3",
																"valueSize": 1
															},
															{
																"declaration": 448,
																"isOffset": false,
																"isSlot": false,
																"src": "975:6:3",
																"valueSize": 1
															},
															{
																"declaration": 464,
																"isOffset": false,
																"isSlot": false,
																"src": "948:3:3",
																"valueSize": 1
															}
														],
														"id": 466,
														"nodeType": "InlineAssembly",
														"src": "921:76:3"
													},
													{
														"body": {
															"id": 481,
															"nodeType": "Block",
															"src": "1023:269:3",
															"statements": [
																{
																	"expression": {
																		"id": 469,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "--",
																		"prefix": false,
																		"src": "1041:5:3",
																		"subExpression": {
																			"id": 468,
																			"name": "ptr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 464,
																			"src": "1041:3:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 470,
																	"nodeType": "ExpressionStatement",
																	"src": "1041:5:3"
																},
																{
																	"AST": {
																		"nodeType": "YulBlock",
																		"src": "1124:86:3",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "ptr",
																							"nodeType": "YulIdentifier",
																							"src": "1154:3:3"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value",
																											"nodeType": "YulIdentifier",
																											"src": "1168:5:3"
																										},
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "1175:2:3",
																											"type": "",
																											"value": "10"
																										}
																									],
																									"functionName": {
																										"name": "mod",
																										"nodeType": "YulIdentifier",
																										"src": "1164:3:3"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "1164:14:3"
																								},
																								{
																									"name": "HEX_DIGITS",
																									"nodeType": "YulIdentifier",
																									"src": "1180:10:3"
																								}
																							],
																							"functionName": {
																								"name": "byte",
																								"nodeType": "YulIdentifier",
																								"src": "1159:4:3"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1159:32:3"
																						}
																					],
																					"functionName": {
																						"name": "mstore8",
																						"nodeType": "YulIdentifier",
																						"src": "1146:7:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1146:46:3"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "1146:46:3"
																			}
																		]
																	},
																	"documentation": "@solidity memory-safe-assembly",
																	"evmVersion": "shanghai",
																	"externalReferences": [
																		{
																			"declaration": 429,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1180:10:3",
																			"valueSize": 1
																		},
																		{
																			"declaration": 464,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1154:3:3",
																			"valueSize": 1
																		},
																		{
																			"declaration": 442,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1168:5:3",
																			"valueSize": 1
																		}
																	],
																	"id": 471,
																	"nodeType": "InlineAssembly",
																	"src": "1115:95:3"
																},
																{
																	"expression": {
																		"id": 474,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 472,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 442,
																			"src": "1227:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"hexValue": "3130",
																			"id": 473,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1236:2:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10_by_1",
																				"typeString": "int_const 10"
																			},
																			"value": "10"
																		},
																		"src": "1227:11:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 475,
																	"nodeType": "ExpressionStatement",
																	"src": "1227:11:3"
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 478,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 476,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 442,
																			"src": "1260:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 477,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1269:1:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1260:10:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 480,
																	"nodeType": "IfStatement",
																	"src": "1256:21:3",
																	"trueBody": {
																		"id": 479,
																		"nodeType": "Break",
																		"src": "1272:5:3"
																	}
																}
															]
														},
														"condition": {
															"hexValue": "74727565",
															"id": 467,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1017:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														"id": 482,
														"nodeType": "WhileStatement",
														"src": "1010:282:3"
													},
													{
														"expression": {
															"id": 483,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 457,
															"src": "1312:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 446,
														"id": 484,
														"nodeType": "Return",
														"src": "1305:13:3"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 440,
										"nodeType": "StructuredDocumentation",
										"src": "542:90:3",
										"text": " @dev Converts a `uint256` to its ASCII `string` decimal representation."
									},
									"id": 487,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toString",
									"nameLocation": "646:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 443,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 442,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "663:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 487,
												"src": "655:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 441,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "655:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "654:15:3"
									},
									"returnParameters": {
										"id": 446,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 445,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 487,
												"src": "693:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 444,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "693:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:15:3"
									},
									"scope": 674,
									"src": "637:698:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 512,
										"nodeType": "Block",
										"src": "1511:92:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 500,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 498,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 490,
																	"src": "1542:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 499,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1550:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "1542:9:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseExpression": {
																"hexValue": "",
																"id": 502,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1560:2:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																},
																"value": ""
															},
															"id": 503,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "Conditional",
															"src": "1542:20:3",
															"trueExpression": {
																"hexValue": "2d",
																"id": 501,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1554:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561",
																	"typeString": "literal_string \"-\""
																},
																"value": "-"
															},
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 507,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 490,
																			"src": "1588:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		],
																		"expression": {
																			"id": 505,
																			"name": "SignedMath",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1833,
																			"src": "1573:10:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_SignedMath_$1833_$",
																				"typeString": "type(library SignedMath)"
																			}
																		},
																		"id": 506,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1584:3:3",
																		"memberName": "abs",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1832,
																		"src": "1573:14:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_int256_$returns$_t_uint256_$",
																			"typeString": "function (int256) pure returns (uint256)"
																		}
																	},
																	"id": 508,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1573:21:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 504,
																"name": "toString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 487,
																"src": "1564:8:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																}
															},
															"id": 509,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1564:31:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"expression": {
															"id": 496,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1528:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																"typeString": "type(string storage pointer)"
															},
															"typeName": {
																"id": 495,
																"name": "string",
																"nodeType": "ElementaryTypeName",
																"src": "1528:6:3",
																"typeDescriptions": {}
															}
														},
														"id": 497,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1535:6:3",
														"memberName": "concat",
														"nodeType": "MemberAccess",
														"src": "1528:13:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () pure returns (string memory)"
														}
													},
													"id": 510,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1528:68:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 494,
												"id": 511,
												"nodeType": "Return",
												"src": "1521:75:3"
											}
										]
									},
									"documentation": {
										"id": 488,
										"nodeType": "StructuredDocumentation",
										"src": "1341:89:3",
										"text": " @dev Converts a `int256` to its ASCII `string` decimal representation."
									},
									"id": 513,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toStringSigned",
									"nameLocation": "1444:14:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 491,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 490,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1466:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 513,
												"src": "1459:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 489,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1459:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1458:14:3"
									},
									"returnParameters": {
										"id": 494,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 493,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 513,
												"src": "1496:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 492,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1496:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1495:15:3"
									},
									"scope": 674,
									"src": "1435:168:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 532,
										"nodeType": "Block",
										"src": "1782:100:3",
										"statements": [
											{
												"id": 531,
												"nodeType": "UncheckedBlock",
												"src": "1792:84:3",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 522,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 516,
																	"src": "1835:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 528,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"id": 525,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 516,
																				"src": "1854:5:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 523,
																				"name": "Math",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1728,
																				"src": "1842:4:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_Math_$1728_$",
																					"typeString": "type(library Math)"
																				}
																			},
																			"id": 524,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "1847:6:3",
																			"memberName": "log256",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1670,
																			"src": "1842:11:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																				"typeString": "function (uint256) pure returns (uint256)"
																			}
																		},
																		"id": 526,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1842:18:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 527,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1863:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "1842:22:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 521,
																"name": "toHexString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	533,
																	616,
																	636
																],
																"referencedDeclaration": 616,
																"src": "1823:11:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256,uint256) pure returns (string memory)"
																}
															},
															"id": 529,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1823:42:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 520,
														"id": 530,
														"nodeType": "Return",
														"src": "1816:49:3"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 514,
										"nodeType": "StructuredDocumentation",
										"src": "1609:94:3",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."
									},
									"id": 533,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1717:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 517,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 516,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1737:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 533,
												"src": "1729:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 515,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1729:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1728:15:3"
									},
									"returnParameters": {
										"id": 520,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 519,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 533,
												"src": "1767:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 518,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1767:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1766:15:3"
									},
									"scope": 674,
									"src": "1708:174:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 615,
										"nodeType": "Block",
										"src": "2095:435:3",
										"statements": [
											{
												"assignments": [
													544
												],
												"declarations": [
													{
														"constant": false,
														"id": 544,
														"mutability": "mutable",
														"name": "localValue",
														"nameLocation": "2113:10:3",
														"nodeType": "VariableDeclaration",
														"scope": 615,
														"src": "2105:18:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 543,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2105:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 546,
												"initialValue": {
													"id": 545,
													"name": "value",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 536,
													"src": "2126:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2105:26:3"
											},
											{
												"assignments": [
													548
												],
												"declarations": [
													{
														"constant": false,
														"id": 548,
														"mutability": "mutable",
														"name": "buffer",
														"nameLocation": "2154:6:3",
														"nodeType": "VariableDeclaration",
														"scope": 615,
														"src": "2141:19:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 547,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "2141:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 557,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 555,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 553,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 551,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2173:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 552,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 538,
																	"src": "2177:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2173:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "32",
																"id": 554,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2186:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "2173:14:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 550,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "2163:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 549,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "2167:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 556,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2163:25:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2141:47:3"
											},
											{
												"expression": {
													"id": 562,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 558,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 548,
															"src": "2198:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 560,
														"indexExpression": {
															"hexValue": "30",
															"id": 559,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2205:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2198:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 561,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2210:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
															"typeString": "literal_string \"0\""
														},
														"value": "0"
													},
													"src": "2198:15:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 563,
												"nodeType": "ExpressionStatement",
												"src": "2198:15:3"
											},
											{
												"expression": {
													"id": 568,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 564,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 548,
															"src": "2223:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 566,
														"indexExpression": {
															"hexValue": "31",
															"id": 565,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2230:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2223:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "78",
														"id": 567,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2235:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83",
															"typeString": "literal_string \"x\""
														},
														"value": "x"
													},
													"src": "2223:15:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 569,
												"nodeType": "ExpressionStatement",
												"src": "2223:15:3"
											},
											{
												"body": {
													"id": 598,
													"nodeType": "Block",
													"src": "2293:95:3",
													"statements": [
														{
															"expression": {
																"id": 592,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 584,
																		"name": "buffer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 548,
																		"src": "2307:6:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 586,
																	"indexExpression": {
																		"id": 585,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 571,
																		"src": "2314:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "2307:9:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 587,
																		"name": "HEX_DIGITS",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 429,
																		"src": "2319:10:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes16",
																			"typeString": "bytes16"
																		}
																	},
																	"id": 591,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 590,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 588,
																			"name": "localValue",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 544,
																			"src": "2330:10:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&",
																		"rightExpression": {
																			"hexValue": "307866",
																			"id": 589,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2343:3:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_15_by_1",
																				"typeString": "int_const 15"
																			},
																			"value": "0xf"
																		},
																		"src": "2330:16:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2319:28:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "2307:40:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 593,
															"nodeType": "ExpressionStatement",
															"src": "2307:40:3"
														},
														{
															"expression": {
																"id": 596,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 594,
																	"name": "localValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 544,
																	"src": "2361:10:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "34",
																	"id": 595,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2376:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "2361:16:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 597,
															"nodeType": "ExpressionStatement",
															"src": "2361:16:3"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 580,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 578,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 571,
														"src": "2281:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "31",
														"id": 579,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2285:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "2281:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 599,
												"initializationExpression": {
													"assignments": [
														571
													],
													"declarations": [
														{
															"constant": false,
															"id": 571,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "2261:1:3",
															"nodeType": "VariableDeclaration",
															"scope": 599,
															"src": "2253:9:3",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 570,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2253:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 577,
													"initialValue": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 576,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 574,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "32",
																"id": 572,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2265:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 573,
																"name": "length",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 538,
																"src": "2269:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2265:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 575,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2278:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "2265:14:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "2253:26:3"
												},
												"loopExpression": {
													"expression": {
														"id": 582,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "--",
														"prefix": true,
														"src": "2288:3:3",
														"subExpression": {
															"id": 581,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 571,
															"src": "2290:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 583,
													"nodeType": "ExpressionStatement",
													"src": "2288:3:3"
												},
												"nodeType": "ForStatement",
												"src": "2248:140:3"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 602,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 600,
														"name": "localValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 544,
														"src": "2401:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 601,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2415:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2401:15:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 609,
												"nodeType": "IfStatement",
												"src": "2397:96:3",
												"trueBody": {
													"id": 608,
													"nodeType": "Block",
													"src": "2418:75:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 604,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 536,
																		"src": "2468:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 605,
																		"name": "length",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 538,
																		"src": "2475:6:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 603,
																	"name": "StringsInsufficientHexLength",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 439,
																	"src": "2439:28:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$",
																		"typeString": "function (uint256,uint256) pure"
																	}
																},
																"id": 606,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2439:43:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 607,
															"nodeType": "RevertStatement",
															"src": "2432:50:3"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 612,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 548,
															"src": "2516:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 611,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2509:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 610,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "2509:6:3",
															"typeDescriptions": {}
														}
													},
													"id": 613,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2509:14:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 542,
												"id": 614,
												"nodeType": "Return",
												"src": "2502:21:3"
											}
										]
									},
									"documentation": {
										"id": 534,
										"nodeType": "StructuredDocumentation",
										"src": "1888:112:3",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."
									},
									"id": 616,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "2014:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 539,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 536,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2034:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 616,
												"src": "2026:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 535,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2026:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 538,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "2049:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 616,
												"src": "2041:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 537,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2041:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2025:31:3"
									},
									"returnParameters": {
										"id": 542,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 541,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 616,
												"src": "2080:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 540,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2080:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2079:15:3"
									},
									"scope": 674,
									"src": "2005:525:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 635,
										"nodeType": "Block",
										"src": "2762:75:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 629,
																			"name": "addr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 619,
																			"src": "2807:4:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 628,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2799:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint160_$",
																			"typeString": "type(uint160)"
																		},
																		"typeName": {
																			"id": 627,
																			"name": "uint160",
																			"nodeType": "ElementaryTypeName",
																			"src": "2799:7:3",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 630,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2799:13:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																],
																"id": 626,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2791:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 625,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2791:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 631,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2791:22:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 632,
															"name": "ADDRESS_LENGTH",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 432,
															"src": "2815:14:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 624,
														"name": "toHexString",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															533,
															616,
															636
														],
														"referencedDeclaration": 616,
														"src": "2779:11:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (string memory)"
														}
													},
													"id": 633,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2779:51:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 623,
												"id": 634,
												"nodeType": "Return",
												"src": "2772:58:3"
											}
										]
									},
									"documentation": {
										"id": 617,
										"nodeType": "StructuredDocumentation",
										"src": "2536:148:3",
										"text": " @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n representation."
									},
									"id": 636,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "2698:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 620,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 619,
												"mutability": "mutable",
												"name": "addr",
												"nameLocation": "2718:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 636,
												"src": "2710:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 618,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2710:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2709:14:3"
									},
									"returnParameters": {
										"id": 623,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 622,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 636,
												"src": "2747:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 621,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2747:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2746:15:3"
									},
									"scope": 674,
									"src": "2689:148:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 672,
										"nodeType": "Block",
										"src": "2992:104:3",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 670,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 656,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 648,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 639,
																		"src": "3015:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 647,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3009:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 646,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "3009:5:3",
																		"typeDescriptions": {}
																	}
																},
																"id": 649,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3009:8:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 650,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3018:6:3",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "3009:15:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 653,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 641,
																		"src": "3034:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 652,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3028:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 651,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "3028:5:3",
																		"typeDescriptions": {}
																	}
																},
																"id": 654,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3028:8:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 655,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3037:6:3",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "3028:15:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3009:34:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"id": 669,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 660,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 639,
																			"src": "3063:1:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		],
																		"id": 659,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3057:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 658,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "3057:5:3",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 661,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3057:8:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 657,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967288,
																"src": "3047:9:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 662,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3047:19:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 666,
																			"name": "b",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 641,
																			"src": "3086:1:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		],
																		"id": 665,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3080:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 664,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "3080:5:3",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 667,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3080:8:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 663,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967288,
																"src": "3070:9:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 668,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3070:19:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"src": "3047:42:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "3009:80:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 645,
												"id": 671,
												"nodeType": "Return",
												"src": "3002:87:3"
											}
										]
									},
									"documentation": {
										"id": 637,
										"nodeType": "StructuredDocumentation",
										"src": "2843:66:3",
										"text": " @dev Returns true if the two strings are equal."
									},
									"id": 673,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "equal",
									"nameLocation": "2923:5:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 642,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 639,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2943:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 673,
												"src": "2929:15:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 638,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2929:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 641,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2960:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 673,
												"src": "2946:15:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 640,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2946:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2928:34:3"
									},
									"returnParameters": {
										"id": 645,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 644,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 673,
												"src": "2986:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 643,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2986:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2985:6:3"
									},
									"scope": 674,
									"src": "2914:182:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 675,
							"src": "251:2847:3",
							"usedErrors": [
								439
							],
							"usedEvents": []
						}
					],
					"src": "101:2998:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
					"exportedSymbols": {
						"Math": [
							1728
						]
					},
					"id": 1729,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 676,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "103:24:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Math",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 677,
								"nodeType": "StructuredDocumentation",
								"src": "129:73:4",
								"text": " @dev Standard math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 1728,
							"linearizedBaseContracts": [
								1728
							],
							"name": "Math",
							"nameLocation": "211:4:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 678,
										"nodeType": "StructuredDocumentation",
										"src": "222:50:4",
										"text": " @dev Muldiv operation overflow."
									},
									"errorSelector": "227bc153",
									"id": 680,
									"name": "MathOverflowedMulDiv",
									"nameLocation": "283:20:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 679,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "303:2:4"
									},
									"src": "277:29:4"
								},
								{
									"canonicalName": "Math.Rounding",
									"id": 685,
									"members": [
										{
											"id": 681,
											"name": "Floor",
											"nameLocation": "336:5:4",
											"nodeType": "EnumValue",
											"src": "336:5:4"
										},
										{
											"id": 682,
											"name": "Ceil",
											"nameLocation": "379:4:4",
											"nodeType": "EnumValue",
											"src": "379:4:4"
										},
										{
											"id": 683,
											"name": "Trunc",
											"nameLocation": "421:5:4",
											"nodeType": "EnumValue",
											"src": "421:5:4"
										},
										{
											"id": 684,
											"name": "Expand",
											"nameLocation": "451:6:4",
											"nodeType": "EnumValue",
											"src": "451:6:4"
										}
									],
									"name": "Rounding",
									"nameLocation": "317:8:4",
									"nodeType": "EnumDefinition",
									"src": "312:169:4"
								},
								{
									"body": {
										"id": 716,
										"nodeType": "Block",
										"src": "661:140:4",
										"statements": [
											{
												"id": 715,
												"nodeType": "UncheckedBlock",
												"src": "671:124:4",
												"statements": [
													{
														"assignments": [
															698
														],
														"declarations": [
															{
																"constant": false,
																"id": 698,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "703:1:4",
																"nodeType": "VariableDeclaration",
																"scope": 715,
																"src": "695:9:4",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 697,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "695:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 702,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 701,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 699,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 688,
																"src": "707:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 700,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 690,
																"src": "711:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "707:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "695:17:4"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 705,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 703,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 698,
																"src": "730:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 704,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 688,
																"src": "734:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "730:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 710,
														"nodeType": "IfStatement",
														"src": "726:28:4",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 706,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "745:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 707,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "752:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 708,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "744:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 696,
															"id": 709,
															"nodeType": "Return",
															"src": "737:17:4"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 711,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "776:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 712,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 698,
																	"src": "782:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 713,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "775:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 696,
														"id": 714,
														"nodeType": "Return",
														"src": "768:16:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 686,
										"nodeType": "StructuredDocumentation",
										"src": "487:93:4",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag."
									},
									"id": 717,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "594:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 691,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 688,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "609:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 717,
												"src": "601:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 687,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "601:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 690,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "620:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 717,
												"src": "612:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 689,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "612:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "600:22:4"
									},
									"returnParameters": {
										"id": 696,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 693,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 717,
												"src": "646:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 692,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "646:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 695,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 717,
												"src": "652:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 694,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "645:15:4"
									},
									"scope": 1728,
									"src": "585:216:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 744,
										"nodeType": "Block",
										"src": "984:113:4",
										"statements": [
											{
												"id": 743,
												"nodeType": "UncheckedBlock",
												"src": "994:97:4",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 731,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 729,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 722,
																"src": "1022:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 730,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 720,
																"src": "1026:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1022:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 736,
														"nodeType": "IfStatement",
														"src": "1018:28:4",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 732,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1037:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 733,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1044:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 734,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1036:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 728,
															"id": 735,
															"nodeType": "Return",
															"src": "1029:17:4"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 737,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1068:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 740,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 738,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 720,
																		"src": "1074:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 739,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 722,
																		"src": "1078:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1074:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 741,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1067:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 728,
														"id": 742,
														"nodeType": "Return",
														"src": "1060:20:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 718,
										"nodeType": "StructuredDocumentation",
										"src": "807:96:4",
										"text": " @dev Returns the subtraction of two unsigned integers, with an overflow flag."
									},
									"id": 745,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "917:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 723,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 720,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "932:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 745,
												"src": "924:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 719,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "924:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 722,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "943:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 745,
												"src": "935:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 721,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "935:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "923:22:4"
									},
									"returnParameters": {
										"id": 728,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 725,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 745,
												"src": "969:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 724,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "969:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 727,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 745,
												"src": "975:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 726,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "975:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "968:15:4"
									},
									"scope": 1728,
									"src": "908:189:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 786,
										"nodeType": "Block",
										"src": "1283:417:4",
										"statements": [
											{
												"id": 785,
												"nodeType": "UncheckedBlock",
												"src": "1293:401:4",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 759,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 757,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 748,
																"src": "1551:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 758,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1556:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1551:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 764,
														"nodeType": "IfStatement",
														"src": "1547:28:4",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 760,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1567:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 761,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1573:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 762,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1566:9:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 756,
															"id": 763,
															"nodeType": "Return",
															"src": "1559:16:4"
														}
													},
													{
														"assignments": [
															766
														],
														"declarations": [
															{
																"constant": false,
																"id": 766,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1597:1:4",
																"nodeType": "VariableDeclaration",
																"scope": 785,
																"src": "1589:9:4",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 765,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1589:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 770,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 769,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 767,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 748,
																"src": "1601:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 768,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 750,
																"src": "1605:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1601:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1589:17:4"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 775,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 773,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 771,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 766,
																	"src": "1624:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 772,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 748,
																	"src": "1628:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1624:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 774,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 750,
																"src": "1633:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1624:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 780,
														"nodeType": "IfStatement",
														"src": "1620:33:4",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 776,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1644:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 777,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1651:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 778,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1643:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 756,
															"id": 779,
															"nodeType": "Return",
															"src": "1636:17:4"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 781,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1675:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 782,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 766,
																	"src": "1681:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 783,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1674:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 756,
														"id": 784,
														"nodeType": "Return",
														"src": "1667:16:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 746,
										"nodeType": "StructuredDocumentation",
										"src": "1103:99:4",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag."
									},
									"id": 787,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1216:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 751,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 748,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1231:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 787,
												"src": "1223:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 747,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 750,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1242:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 787,
												"src": "1234:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 749,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1222:22:4"
									},
									"returnParameters": {
										"id": 756,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 753,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 787,
												"src": "1268:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 752,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1268:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 755,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 787,
												"src": "1274:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 754,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1274:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1267:15:4"
									},
									"scope": 1728,
									"src": "1207:493:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 814,
										"nodeType": "Block",
										"src": "1887:114:4",
										"statements": [
											{
												"id": 813,
												"nodeType": "UncheckedBlock",
												"src": "1897:98:4",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 801,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 799,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 792,
																"src": "1925:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 800,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1930:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1925:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 806,
														"nodeType": "IfStatement",
														"src": "1921:29:4",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 802,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1941:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 803,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1948:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 804,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1940:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 798,
															"id": 805,
															"nodeType": "Return",
															"src": "1933:17:4"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 807,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1972:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 810,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 808,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 790,
																		"src": "1978:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 809,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 792,
																		"src": "1982:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1978:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 811,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1971:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 798,
														"id": 812,
														"nodeType": "Return",
														"src": "1964:20:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 788,
										"nodeType": "StructuredDocumentation",
										"src": "1706:100:4",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag."
									},
									"id": 815,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1820:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 793,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 790,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1835:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 815,
												"src": "1827:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 789,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1827:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 792,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1846:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 815,
												"src": "1838:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 791,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1838:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1826:22:4"
									},
									"returnParameters": {
										"id": 798,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 795,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 815,
												"src": "1872:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 794,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1872:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 797,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 815,
												"src": "1878:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 796,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1878:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1871:15:4"
									},
									"scope": 1728,
									"src": "1811:190:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 842,
										"nodeType": "Block",
										"src": "2198:114:4",
										"statements": [
											{
												"id": 841,
												"nodeType": "UncheckedBlock",
												"src": "2208:98:4",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 829,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 827,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 820,
																"src": "2236:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 828,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2241:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2236:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 834,
														"nodeType": "IfStatement",
														"src": "2232:29:4",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 830,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2252:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 831,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2259:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 832,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2251:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 826,
															"id": 833,
															"nodeType": "Return",
															"src": "2244:17:4"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 835,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2283:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 838,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 836,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 818,
																		"src": "2289:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 837,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 820,
																		"src": "2293:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2289:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 839,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2282:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 826,
														"id": 840,
														"nodeType": "Return",
														"src": "2275:20:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 816,
										"nodeType": "StructuredDocumentation",
										"src": "2007:110:4",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag."
									},
									"id": 843,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2131:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 821,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 818,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2146:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 843,
												"src": "2138:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 817,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2138:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 820,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2157:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 843,
												"src": "2149:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 819,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2149:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2137:22:4"
									},
									"returnParameters": {
										"id": 826,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 823,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 843,
												"src": "2183:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 822,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2183:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 825,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 843,
												"src": "2189:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 824,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2189:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2182:15:4"
									},
									"scope": 1728,
									"src": "2122:190:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 860,
										"nodeType": "Block",
										"src": "2449:37:4",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 855,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 853,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 846,
															"src": "2466:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 854,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 848,
															"src": "2470:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2466:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 857,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 848,
														"src": "2478:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 858,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2466:13:4",
													"trueExpression": {
														"id": 856,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 846,
														"src": "2474:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 852,
												"id": 859,
												"nodeType": "Return",
												"src": "2459:20:4"
											}
										]
									},
									"documentation": {
										"id": 844,
										"nodeType": "StructuredDocumentation",
										"src": "2318:59:4",
										"text": " @dev Returns the largest of two numbers."
									},
									"id": 861,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "2391:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 849,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 846,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2403:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 861,
												"src": "2395:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 845,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2395:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 848,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2414:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 861,
												"src": "2406:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 847,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2406:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2394:22:4"
									},
									"returnParameters": {
										"id": 852,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 851,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 861,
												"src": "2440:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 850,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2440:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2439:9:4"
									},
									"scope": 1728,
									"src": "2382:104:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 878,
										"nodeType": "Block",
										"src": "2624:37:4",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 873,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 871,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 864,
															"src": "2641:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 872,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 866,
															"src": "2645:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2641:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 875,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 866,
														"src": "2653:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 876,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2641:13:4",
													"trueExpression": {
														"id": 874,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 864,
														"src": "2649:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 870,
												"id": 877,
												"nodeType": "Return",
												"src": "2634:20:4"
											}
										]
									},
									"documentation": {
										"id": 862,
										"nodeType": "StructuredDocumentation",
										"src": "2492:60:4",
										"text": " @dev Returns the smallest of two numbers."
									},
									"id": 879,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "2566:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 867,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 864,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2578:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 879,
												"src": "2570:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 863,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 866,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2589:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 879,
												"src": "2581:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 865,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2581:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:22:4"
									},
									"returnParameters": {
										"id": 870,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 869,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 879,
												"src": "2615:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 868,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2615:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2614:9:4"
									},
									"scope": 1728,
									"src": "2557:104:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 901,
										"nodeType": "Block",
										"src": "2845:82:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 899,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 891,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 889,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 882,
																	"src": "2900:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 890,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 884,
																	"src": "2904:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2900:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 892,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2899:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 898,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 895,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 893,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 882,
																		"src": "2910:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "^",
																	"rightExpression": {
																		"id": 894,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 884,
																		"src": "2914:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2910:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 896,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2909:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "32",
															"id": 897,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2919:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "2909:11:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2899:21:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 888,
												"id": 900,
												"nodeType": "Return",
												"src": "2892:28:4"
											}
										]
									},
									"documentation": {
										"id": 880,
										"nodeType": "StructuredDocumentation",
										"src": "2667:102:4",
										"text": " @dev Returns the average of two numbers. The result is rounded towards\n zero."
									},
									"id": 902,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "2783:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 885,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 882,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2799:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 902,
												"src": "2791:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 881,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2791:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 884,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2810:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 902,
												"src": "2802:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 883,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2802:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2790:22:4"
									},
									"returnParameters": {
										"id": 888,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 887,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 902,
												"src": "2836:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 886,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2836:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2835:9:4"
									},
									"scope": 1728,
									"src": "2774:153:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 935,
										"nodeType": "Block",
										"src": "3219:260:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 914,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 912,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 907,
														"src": "3233:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 913,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3238:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3233:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 920,
												"nodeType": "IfStatement",
												"src": "3229:127:4",
												"trueBody": {
													"id": 919,
													"nodeType": "Block",
													"src": "3241:115:4",
													"statements": [
														{
															"expression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 917,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 915,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 905,
																	"src": "3340:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 916,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 907,
																	"src": "3344:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3340:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 911,
															"id": 918,
															"nodeType": "Return",
															"src": "3333:12:4"
														}
													]
												}
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 923,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 921,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 905,
															"src": "3444:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 922,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3449:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "3444:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 932,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 930,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 927,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 925,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 905,
																			"src": "3458:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 926,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3462:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "3458:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 928,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3457:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 929,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 907,
																"src": "3467:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3457:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 931,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3471:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "3457:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 933,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "3444:28:4",
													"trueExpression": {
														"hexValue": "30",
														"id": 924,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3453:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 911,
												"id": 934,
												"nodeType": "Return",
												"src": "3437:35:4"
											}
										]
									},
									"documentation": {
										"id": 903,
										"nodeType": "StructuredDocumentation",
										"src": "2933:210:4",
										"text": " @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds towards infinity instead\n of rounding towards zero."
									},
									"id": 936,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ceilDiv",
									"nameLocation": "3157:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 908,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 905,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3173:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 936,
												"src": "3165:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 904,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3165:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 907,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3184:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 936,
												"src": "3176:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 906,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3176:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3164:22:4"
									},
									"returnParameters": {
										"id": 911,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 910,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 936,
												"src": "3210:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 909,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3210:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3209:9:4"
									},
									"scope": 1728,
									"src": "3148:331:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1061,
										"nodeType": "Block",
										"src": "3901:4018:4",
										"statements": [
											{
												"id": 1060,
												"nodeType": "UncheckedBlock",
												"src": "3911:4002:4",
												"statements": [
													{
														"assignments": [
															949
														],
														"declarations": [
															{
																"constant": false,
																"id": 949,
																"mutability": "mutable",
																"name": "prod0",
																"nameLocation": "4240:5:4",
																"nodeType": "VariableDeclaration",
																"scope": 1060,
																"src": "4232:13:4",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 948,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4232:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 953,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 952,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 950,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 939,
																"src": "4248:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 951,
																"name": "y",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 941,
																"src": "4252:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4248:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4232:21:4"
													},
													{
														"assignments": [
															955
														],
														"declarations": [
															{
																"constant": false,
																"id": 955,
																"mutability": "mutable",
																"name": "prod1",
																"nameLocation": "4320:5:4",
																"nodeType": "VariableDeclaration",
																"scope": 1060,
																"src": "4312:13:4",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 954,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4312:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 956,
														"nodeType": "VariableDeclarationStatement",
														"src": "4312:13:4"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "4392:122:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4410:30:4",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "4427:1:4"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "4430:1:4"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4437:1:4",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "4433:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4433:6:4"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nodeType": "YulIdentifier",
																			"src": "4420:6:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4420:20:4"
																	},
																	"variables": [
																		{
																			"name": "mm",
																			"nodeType": "YulTypedName",
																			"src": "4414:2:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4457:43:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nodeType": "YulIdentifier",
																						"src": "4474:2:4"
																					},
																					{
																						"name": "prod0",
																						"nodeType": "YulIdentifier",
																						"src": "4478:5:4"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "4470:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4470:14:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nodeType": "YulIdentifier",
																						"src": "4489:2:4"
																					},
																					{
																						"name": "prod0",
																						"nodeType": "YulIdentifier",
																						"src": "4493:5:4"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "4486:2:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4486:13:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4466:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4466:34:4"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nodeType": "YulIdentifier",
																			"src": "4457:5:4"
																		}
																	]
																}
															]
														},
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 949,
																"isOffset": false,
																"isSlot": false,
																"src": "4478:5:4",
																"valueSize": 1
															},
															{
																"declaration": 949,
																"isOffset": false,
																"isSlot": false,
																"src": "4493:5:4",
																"valueSize": 1
															},
															{
																"declaration": 955,
																"isOffset": false,
																"isSlot": false,
																"src": "4457:5:4",
																"valueSize": 1
															},
															{
																"declaration": 939,
																"isOffset": false,
																"isSlot": false,
																"src": "4427:1:4",
																"valueSize": 1
															},
															{
																"declaration": 941,
																"isOffset": false,
																"isSlot": false,
																"src": "4430:1:4",
																"valueSize": 1
															}
														],
														"id": 957,
														"nodeType": "InlineAssembly",
														"src": "4383:131:4"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 960,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 958,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 955,
																"src": "4595:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 959,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4604:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4595:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 966,
														"nodeType": "IfStatement",
														"src": "4591:368:4",
														"trueBody": {
															"id": 965,
															"nodeType": "Block",
															"src": "4607:352:4",
															"statements": [
																{
																	"expression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 963,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 961,
																			"name": "prod0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 949,
																			"src": "4925:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 962,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 943,
																			"src": "4933:11:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "4925:19:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"functionReturnParameters": 947,
																	"id": 964,
																	"nodeType": "Return",
																	"src": "4918:26:4"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 969,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 967,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 943,
																"src": "5065:11:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 968,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 955,
																"src": "5080:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5065:20:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 974,
														"nodeType": "IfStatement",
														"src": "5061:88:4",
														"trueBody": {
															"id": 973,
															"nodeType": "Block",
															"src": "5087:62:4",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 970,
																			"name": "MathOverflowedMulDiv",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 680,
																			"src": "5112:20:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 971,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5112:22:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 972,
																	"nodeType": "RevertStatement",
																	"src": "5105:29:4"
																}
															]
														}
													},
													{
														"assignments": [
															976
														],
														"declarations": [
															{
																"constant": false,
																"id": 976,
																"mutability": "mutable",
																"name": "remainder",
																"nameLocation": "5412:9:4",
																"nodeType": "VariableDeclaration",
																"scope": 1060,
																"src": "5404:17:4",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 975,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "5404:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 977,
														"nodeType": "VariableDeclarationStatement",
														"src": "5404:17:4"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "5444:291:4",
															"statements": [
																{
																	"nodeType": "YulAssignment",
																	"src": "5513:38:4",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "5533:1:4"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "5536:1:4"
																			},
																			{
																				"name": "denominator",
																				"nodeType": "YulIdentifier",
																				"src": "5539:11:4"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nodeType": "YulIdentifier",
																			"src": "5526:6:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5526:25:4"
																	},
																	"variableNames": [
																		{
																			"name": "remainder",
																			"nodeType": "YulIdentifier",
																			"src": "5513:9:4"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5633:41:4",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod1",
																				"nodeType": "YulIdentifier",
																				"src": "5646:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "remainder",
																						"nodeType": "YulIdentifier",
																						"src": "5656:9:4"
																					},
																					{
																						"name": "prod0",
																						"nodeType": "YulIdentifier",
																						"src": "5667:5:4"
																					}
																				],
																				"functionName": {
																					"name": "gt",
																					"nodeType": "YulIdentifier",
																					"src": "5653:2:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5653:20:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5642:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5642:32:4"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nodeType": "YulIdentifier",
																			"src": "5633:5:4"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5691:30:4",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nodeType": "YulIdentifier",
																				"src": "5704:5:4"
																			},
																			{
																				"name": "remainder",
																				"nodeType": "YulIdentifier",
																				"src": "5711:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5700:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5700:21:4"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nodeType": "YulIdentifier",
																			"src": "5691:5:4"
																		}
																	]
																}
															]
														},
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 943,
																"isOffset": false,
																"isSlot": false,
																"src": "5539:11:4",
																"valueSize": 1
															},
															{
																"declaration": 949,
																"isOffset": false,
																"isSlot": false,
																"src": "5667:5:4",
																"valueSize": 1
															},
															{
																"declaration": 949,
																"isOffset": false,
																"isSlot": false,
																"src": "5691:5:4",
																"valueSize": 1
															},
															{
																"declaration": 949,
																"isOffset": false,
																"isSlot": false,
																"src": "5704:5:4",
																"valueSize": 1
															},
															{
																"declaration": 955,
																"isOffset": false,
																"isSlot": false,
																"src": "5633:5:4",
																"valueSize": 1
															},
															{
																"declaration": 955,
																"isOffset": false,
																"isSlot": false,
																"src": "5646:5:4",
																"valueSize": 1
															},
															{
																"declaration": 976,
																"isOffset": false,
																"isSlot": false,
																"src": "5513:9:4",
																"valueSize": 1
															},
															{
																"declaration": 976,
																"isOffset": false,
																"isSlot": false,
																"src": "5656:9:4",
																"valueSize": 1
															},
															{
																"declaration": 976,
																"isOffset": false,
																"isSlot": false,
																"src": "5711:9:4",
																"valueSize": 1
															},
															{
																"declaration": 939,
																"isOffset": false,
																"isSlot": false,
																"src": "5533:1:4",
																"valueSize": 1
															},
															{
																"declaration": 941,
																"isOffset": false,
																"isSlot": false,
																"src": "5536:1:4",
																"valueSize": 1
															}
														],
														"id": 978,
														"nodeType": "InlineAssembly",
														"src": "5435:300:4"
													},
													{
														"assignments": [
															980
														],
														"declarations": [
															{
																"constant": false,
																"id": 980,
																"mutability": "mutable",
																"name": "twos",
																"nameLocation": "5947:4:4",
																"nodeType": "VariableDeclaration",
																"scope": 1060,
																"src": "5939:12:4",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 979,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "5939:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 987,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 986,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 981,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 943,
																"src": "5954:11:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 984,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "30",
																			"id": 982,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5969:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"id": 983,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 943,
																			"src": "5973:11:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "5969:15:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 985,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "5968:17:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5954:31:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "5939:46:4"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "6008:362:4",
															"statements": [
																{
																	"nodeType": "YulAssignment",
																	"src": "6073:37:4",
																	"value": {
																		"arguments": [
																			{
																				"name": "denominator",
																				"nodeType": "YulIdentifier",
																				"src": "6092:11:4"
																			},
																			{
																				"name": "twos",
																				"nodeType": "YulIdentifier",
																				"src": "6105:4:4"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nodeType": "YulIdentifier",
																			"src": "6088:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6088:22:4"
																	},
																	"variableNames": [
																		{
																			"name": "denominator",
																			"nodeType": "YulIdentifier",
																			"src": "6073:11:4"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6177:25:4",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nodeType": "YulIdentifier",
																				"src": "6190:5:4"
																			},
																			{
																				"name": "twos",
																				"nodeType": "YulIdentifier",
																				"src": "6197:4:4"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nodeType": "YulIdentifier",
																			"src": "6186:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6186:16:4"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nodeType": "YulIdentifier",
																			"src": "6177:5:4"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6317:39:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "6337:1:4",
																								"type": "",
																								"value": "0"
																							},
																							{
																								"name": "twos",
																								"nodeType": "YulIdentifier",
																								"src": "6340:4:4"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "6333:3:4"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "6333:12:4"
																					},
																					{
																						"name": "twos",
																						"nodeType": "YulIdentifier",
																						"src": "6347:4:4"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "6329:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6329:23:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6354:1:4",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6325:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6325:31:4"
																	},
																	"variableNames": [
																		{
																			"name": "twos",
																			"nodeType": "YulIdentifier",
																			"src": "6317:4:4"
																		}
																	]
																}
															]
														},
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 943,
																"isOffset": false,
																"isSlot": false,
																"src": "6073:11:4",
																"valueSize": 1
															},
															{
																"declaration": 943,
																"isOffset": false,
																"isSlot": false,
																"src": "6092:11:4",
																"valueSize": 1
															},
															{
																"declaration": 949,
																"isOffset": false,
																"isSlot": false,
																"src": "6177:5:4",
																"valueSize": 1
															},
															{
																"declaration": 949,
																"isOffset": false,
																"isSlot": false,
																"src": "6190:5:4",
																"valueSize": 1
															},
															{
																"declaration": 980,
																"isOffset": false,
																"isSlot": false,
																"src": "6105:4:4",
																"valueSize": 1
															},
															{
																"declaration": 980,
																"isOffset": false,
																"isSlot": false,
																"src": "6197:4:4",
																"valueSize": 1
															},
															{
																"declaration": 980,
																"isOffset": false,
																"isSlot": false,
																"src": "6317:4:4",
																"valueSize": 1
															},
															{
																"declaration": 980,
																"isOffset": false,
																"isSlot": false,
																"src": "6340:4:4",
																"valueSize": 1
															},
															{
																"declaration": 980,
																"isOffset": false,
																"isSlot": false,
																"src": "6347:4:4",
																"valueSize": 1
															}
														],
														"id": 988,
														"nodeType": "InlineAssembly",
														"src": "5999:371:4"
													},
													{
														"expression": {
															"id": 993,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 989,
																"name": "prod0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 949,
																"src": "6436:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "|=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 992,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 990,
																	"name": "prod1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 955,
																	"src": "6445:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 991,
																	"name": "twos",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 980,
																	"src": "6453:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6445:12:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6436:21:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 994,
														"nodeType": "ExpressionStatement",
														"src": "6436:21:4"
													},
													{
														"assignments": [
															996
														],
														"declarations": [
															{
																"constant": false,
																"id": 996,
																"mutability": "mutable",
																"name": "inverse",
																"nameLocation": "6783:7:4",
																"nodeType": "VariableDeclaration",
																"scope": 1060,
																"src": "6775:15:4",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 995,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "6775:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1003,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1002,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 999,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "33",
																			"id": 997,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "6794:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_3_by_1",
																				"typeString": "int_const 3"
																			},
																			"value": "3"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 998,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 943,
																			"src": "6798:11:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6794:15:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1000,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "6793:17:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "^",
															"rightExpression": {
																"hexValue": "32",
																"id": 1001,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6813:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "6793:21:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "6775:39:4"
													},
													{
														"expression": {
															"id": 1010,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1004,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 996,
																"src": "7031:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1009,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1005,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7042:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1008,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1006,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 943,
																		"src": "7046:11:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1007,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 996,
																		"src": "7060:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7046:21:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7042:25:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7031:36:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1011,
														"nodeType": "ExpressionStatement",
														"src": "7031:36:4"
													},
													{
														"expression": {
															"id": 1018,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1012,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 996,
																"src": "7100:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1017,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1013,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7111:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1016,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1014,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 943,
																		"src": "7115:11:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1015,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 996,
																		"src": "7129:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7115:21:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7111:25:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7100:36:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1019,
														"nodeType": "ExpressionStatement",
														"src": "7100:36:4"
													},
													{
														"expression": {
															"id": 1026,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1020,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 996,
																"src": "7170:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1025,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1021,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7181:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1024,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1022,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 943,
																		"src": "7185:11:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1023,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 996,
																		"src": "7199:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7185:21:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7181:25:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7170:36:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1027,
														"nodeType": "ExpressionStatement",
														"src": "7170:36:4"
													},
													{
														"expression": {
															"id": 1034,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1028,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 996,
																"src": "7240:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1033,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1029,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7251:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1032,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1030,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 943,
																		"src": "7255:11:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1031,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 996,
																		"src": "7269:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7255:21:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7251:25:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7240:36:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1035,
														"nodeType": "ExpressionStatement",
														"src": "7240:36:4"
													},
													{
														"expression": {
															"id": 1042,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1036,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 996,
																"src": "7310:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1041,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1037,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7321:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1040,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1038,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 943,
																		"src": "7325:11:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1039,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 996,
																		"src": "7339:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7325:21:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7321:25:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7310:36:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1043,
														"nodeType": "ExpressionStatement",
														"src": "7310:36:4"
													},
													{
														"expression": {
															"id": 1050,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1044,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 996,
																"src": "7381:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1049,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1045,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7392:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1048,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1046,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 943,
																		"src": "7396:11:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1047,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 996,
																		"src": "7410:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7396:21:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7392:25:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7381:36:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1051,
														"nodeType": "ExpressionStatement",
														"src": "7381:36:4"
													},
													{
														"expression": {
															"id": 1056,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1052,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 946,
																"src": "7851:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1055,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1053,
																	"name": "prod0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 949,
																	"src": "7860:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1054,
																	"name": "inverse",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 996,
																	"src": "7868:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7860:15:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7851:24:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1057,
														"nodeType": "ExpressionStatement",
														"src": "7851:24:4"
													},
													{
														"expression": {
															"id": 1058,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 946,
															"src": "7896:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 947,
														"id": 1059,
														"nodeType": "Return",
														"src": "7889:13:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 937,
										"nodeType": "StructuredDocumentation",
										"src": "3485:313:4",
										"text": " @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n denominator == 0.\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n Uniswap Labs also under MIT license."
									},
									"id": 1062,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "3812:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 944,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 939,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "3827:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 1062,
												"src": "3819:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 938,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3819:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 941,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "3838:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 1062,
												"src": "3830:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 940,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3830:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 943,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "3849:11:4",
												"nodeType": "VariableDeclaration",
												"scope": 1062,
												"src": "3841:19:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 942,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3841:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3818:43:4"
									},
									"returnParameters": {
										"id": 947,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 946,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "3893:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1062,
												"src": "3885:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 945,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3885:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3884:16:4"
									},
									"scope": 1728,
									"src": "3803:4116:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1104,
										"nodeType": "Block",
										"src": "8161:192:4",
										"statements": [
											{
												"assignments": [
													1078
												],
												"declarations": [
													{
														"constant": false,
														"id": 1078,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "8179:6:4",
														"nodeType": "VariableDeclaration",
														"scope": 1104,
														"src": "8171:14:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1077,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8171:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1084,
												"initialValue": {
													"arguments": [
														{
															"id": 1080,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1065,
															"src": "8195:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1081,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1067,
															"src": "8198:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1082,
															"name": "denominator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1069,
															"src": "8201:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1079,
														"name": "mulDiv",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1062,
															1105
														],
														"referencedDeclaration": 1062,
														"src": "8188:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1083,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8188:25:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8171:42:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1095,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 1086,
																"name": "rounding",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1072,
																"src": "8244:8:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Rounding_$685",
																	"typeString": "enum Math.Rounding"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_enum$_Rounding_$685",
																	"typeString": "enum Math.Rounding"
																}
															],
															"id": 1085,
															"name": "unsignedRoundsUp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1727,
															"src": "8227:16:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$685_$returns$_t_bool_$",
																"typeString": "function (enum Math.Rounding) pure returns (bool)"
															}
														},
														"id": 1087,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8227:26:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1094,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 1089,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1065,
																	"src": "8264:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1090,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1067,
																	"src": "8267:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1091,
																	"name": "denominator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1069,
																	"src": "8270:11:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1088,
																"name": "mulmod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967280,
																"src": "8257:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1092,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8257:25:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 1093,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8285:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8257:29:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "8227:59:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1101,
												"nodeType": "IfStatement",
												"src": "8223:101:4",
												"trueBody": {
													"id": 1100,
													"nodeType": "Block",
													"src": "8288:36:4",
													"statements": [
														{
															"expression": {
																"id": 1098,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1096,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1078,
																	"src": "8302:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 1097,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8312:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "8302:11:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1099,
															"nodeType": "ExpressionStatement",
															"src": "8302:11:4"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1102,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1078,
													"src": "8340:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1076,
												"id": 1103,
												"nodeType": "Return",
												"src": "8333:13:4"
											}
										]
									},
									"documentation": {
										"id": 1063,
										"nodeType": "StructuredDocumentation",
										"src": "7925:121:4",
										"text": " @notice Calculates x * y / denominator with full precision, following the selected rounding direction."
									},
									"id": 1105,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "8060:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1073,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1065,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "8075:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 1105,
												"src": "8067:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1064,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8067:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1067,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "8086:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 1105,
												"src": "8078:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1066,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8078:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1069,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "8097:11:4",
												"nodeType": "VariableDeclaration",
												"scope": 1105,
												"src": "8089:19:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1068,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8089:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1072,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "8119:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1105,
												"src": "8110:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$685",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1071,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1070,
														"name": "Rounding",
														"nameLocations": [
															"8110:8:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 685,
														"src": "8110:8:4"
													},
													"referencedDeclaration": 685,
													"src": "8110:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$685",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8066:62:4"
									},
									"returnParameters": {
										"id": 1076,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1075,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1105,
												"src": "8152:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1074,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8152:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8151:9:4"
									},
									"scope": 1728,
									"src": "8051:302:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1216,
										"nodeType": "Block",
										"src": "8644:1585:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1115,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1113,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1108,
														"src": "8658:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1114,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8663:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8658:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1119,
												"nodeType": "IfStatement",
												"src": "8654:45:4",
												"trueBody": {
													"id": 1118,
													"nodeType": "Block",
													"src": "8666:33:4",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 1116,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8687:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 1112,
															"id": 1117,
															"nodeType": "Return",
															"src": "8680:8:4"
														}
													]
												}
											},
											{
												"assignments": [
													1121
												],
												"declarations": [
													{
														"constant": false,
														"id": 1121,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "9386:6:4",
														"nodeType": "VariableDeclaration",
														"scope": 1216,
														"src": "9378:14:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1120,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9378:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1130,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1129,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 1122,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9395:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1127,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 1124,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1108,
																			"src": "9406:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 1123,
																		"name": "log2",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			1384,
																			1419
																		],
																		"referencedDeclaration": 1384,
																		"src": "9401:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1125,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9401:7:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1126,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9412:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9401:12:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1128,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "9400:14:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9395:19:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9378:36:4"
											},
											{
												"id": 1215,
												"nodeType": "UncheckedBlock",
												"src": "9815:408:4",
												"statements": [
													{
														"expression": {
															"id": 1140,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1131,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1121,
																"src": "9839:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1139,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1136,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1132,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1121,
																				"src": "9849:6:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1135,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1133,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1108,
																					"src": "9858:1:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1134,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1121,
																					"src": "9862:6:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9858:10:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9849:19:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1137,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9848:21:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1138,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9873:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9848:26:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9839:35:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1141,
														"nodeType": "ExpressionStatement",
														"src": "9839:35:4"
													},
													{
														"expression": {
															"id": 1151,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1142,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1121,
																"src": "9888:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1150,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1147,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1143,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1121,
																				"src": "9898:6:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1146,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1144,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1108,
																					"src": "9907:1:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1145,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1121,
																					"src": "9911:6:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9907:10:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9898:19:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1148,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9897:21:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1149,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9922:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9897:26:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9888:35:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1152,
														"nodeType": "ExpressionStatement",
														"src": "9888:35:4"
													},
													{
														"expression": {
															"id": 1162,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1153,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1121,
																"src": "9937:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1161,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1158,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1154,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1121,
																				"src": "9947:6:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1157,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1155,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1108,
																					"src": "9956:1:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1156,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1121,
																					"src": "9960:6:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9956:10:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9947:19:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1159,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9946:21:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1160,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9971:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9946:26:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9937:35:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1163,
														"nodeType": "ExpressionStatement",
														"src": "9937:35:4"
													},
													{
														"expression": {
															"id": 1173,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1164,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1121,
																"src": "9986:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1172,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1169,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1165,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1121,
																				"src": "9996:6:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1168,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1166,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1108,
																					"src": "10005:1:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1167,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1121,
																					"src": "10009:6:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10005:10:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9996:19:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1170,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9995:21:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1171,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10020:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9995:26:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9986:35:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1174,
														"nodeType": "ExpressionStatement",
														"src": "9986:35:4"
													},
													{
														"expression": {
															"id": 1184,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1175,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1121,
																"src": "10035:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1183,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1180,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1176,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1121,
																				"src": "10045:6:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1179,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1177,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1108,
																					"src": "10054:1:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1178,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1121,
																					"src": "10058:6:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10054:10:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10045:19:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1181,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10044:21:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1182,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10069:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10044:26:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10035:35:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1185,
														"nodeType": "ExpressionStatement",
														"src": "10035:35:4"
													},
													{
														"expression": {
															"id": 1195,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1186,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1121,
																"src": "10084:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1194,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1191,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1187,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1121,
																				"src": "10094:6:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1190,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1188,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1108,
																					"src": "10103:1:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1189,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1121,
																					"src": "10107:6:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10103:10:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10094:19:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1192,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10093:21:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1193,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10118:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10093:26:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10084:35:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1196,
														"nodeType": "ExpressionStatement",
														"src": "10084:35:4"
													},
													{
														"expression": {
															"id": 1206,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1197,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1121,
																"src": "10133:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1205,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1202,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1198,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1121,
																				"src": "10143:6:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1201,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1199,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1108,
																					"src": "10152:1:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1200,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1121,
																					"src": "10156:6:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10152:10:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10143:19:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1203,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10142:21:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1204,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10167:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10142:26:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10133:35:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1207,
														"nodeType": "ExpressionStatement",
														"src": "10133:35:4"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 1209,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1121,
																	"src": "10193:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1212,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1210,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1108,
																		"src": "10201:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 1211,
																		"name": "result",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1121,
																		"src": "10205:6:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "10201:10:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1208,
																"name": "min",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 879,
																"src": "10189:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1213,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10189:23:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1112,
														"id": 1214,
														"nodeType": "Return",
														"src": "10182:30:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1106,
										"nodeType": "StructuredDocumentation",
										"src": "8359:223:4",
										"text": " @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n towards zero.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."
									},
									"id": 1217,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "8596:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1109,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1108,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "8609:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 1217,
												"src": "8601:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1107,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8601:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8600:11:4"
									},
									"returnParameters": {
										"id": 1112,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1111,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1217,
												"src": "8635:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1110,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8635:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8634:9:4"
									},
									"scope": 1728,
									"src": "8587:1642:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1251,
										"nodeType": "Block",
										"src": "10405:164:4",
										"statements": [
											{
												"id": 1250,
												"nodeType": "UncheckedBlock",
												"src": "10415:148:4",
												"statements": [
													{
														"assignments": [
															1229
														],
														"declarations": [
															{
																"constant": false,
																"id": 1229,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "10447:6:4",
																"nodeType": "VariableDeclaration",
																"scope": 1250,
																"src": "10439:14:4",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1228,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "10439:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1233,
														"initialValue": {
															"arguments": [
																{
																	"id": 1231,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1220,
																	"src": "10461:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1230,
																"name": "sqrt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1217,
																	1252
																],
																"referencedDeclaration": 1217,
																"src": "10456:4:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 1232,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10456:7:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "10439:24:4"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1248,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1234,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1229,
																"src": "10484:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 1243,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 1236,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1223,
																						"src": "10511:8:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$685",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$685",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 1235,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1727,
																					"src": "10494:16:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$685_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 1237,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "10494:26:4",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1242,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1240,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1238,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1229,
																						"src": "10524:6:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"id": 1239,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1229,
																						"src": "10533:6:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "10524:15:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 1241,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1220,
																					"src": "10542:1:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10524:19:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "10494:49:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 1245,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10550:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 1246,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "10494:57:4",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 1244,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10546:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 1247,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "10493:59:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "10484:68:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1227,
														"id": 1249,
														"nodeType": "Return",
														"src": "10477:75:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1218,
										"nodeType": "StructuredDocumentation",
										"src": "10235:89:4",
										"text": " @notice Calculates sqrt(a), following the selected rounding direction."
									},
									"id": 1252,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "10338:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1224,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1220,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "10351:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 1252,
												"src": "10343:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1219,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10343:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1223,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "10363:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1252,
												"src": "10354:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$685",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1222,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1221,
														"name": "Rounding",
														"nameLocations": [
															"10354:8:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 685,
														"src": "10354:8:4"
													},
													"referencedDeclaration": 685,
													"src": "10354:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$685",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10342:30:4"
									},
									"returnParameters": {
										"id": 1227,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1226,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1252,
												"src": "10396:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1225,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10396:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10395:9:4"
									},
									"scope": 1728,
									"src": "10329:240:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1383,
										"nodeType": "Block",
										"src": "10760:922:4",
										"statements": [
											{
												"assignments": [
													1261
												],
												"declarations": [
													{
														"constant": false,
														"id": 1261,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "10778:6:4",
														"nodeType": "VariableDeclaration",
														"scope": 1383,
														"src": "10770:14:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1260,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10770:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1263,
												"initialValue": {
													"hexValue": "30",
													"id": 1262,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "10787:1:4",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10770:18:4"
											},
											{
												"id": 1380,
												"nodeType": "UncheckedBlock",
												"src": "10798:855:4",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1268,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1266,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1264,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1255,
																	"src": "10826:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 1265,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10835:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "10826:12:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1267,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10841:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "10826:16:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1278,
														"nodeType": "IfStatement",
														"src": "10822:99:4",
														"trueBody": {
															"id": 1277,
															"nodeType": "Block",
															"src": "10844:77:4",
															"statements": [
																{
																	"expression": {
																		"id": 1271,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1269,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1255,
																			"src": "10862:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 1270,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10872:3:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "10862:13:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1272,
																	"nodeType": "ExpressionStatement",
																	"src": "10862:13:4"
																},
																{
																	"expression": {
																		"id": 1275,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1273,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1261,
																			"src": "10893:6:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 1274,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10903:3:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "10893:13:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1276,
																	"nodeType": "ExpressionStatement",
																	"src": "10893:13:4"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1283,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1281,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1279,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1255,
																	"src": "10938:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 1280,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10947:2:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "10938:11:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1282,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10952:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "10938:15:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1293,
														"nodeType": "IfStatement",
														"src": "10934:96:4",
														"trueBody": {
															"id": 1292,
															"nodeType": "Block",
															"src": "10955:75:4",
															"statements": [
																{
																	"expression": {
																		"id": 1286,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1284,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1255,
																			"src": "10973:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 1285,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10983:2:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "10973:12:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1287,
																	"nodeType": "ExpressionStatement",
																	"src": "10973:12:4"
																},
																{
																	"expression": {
																		"id": 1290,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1288,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1261,
																			"src": "11003:6:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 1289,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11013:2:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "11003:12:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1291,
																	"nodeType": "ExpressionStatement",
																	"src": "11003:12:4"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1298,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1296,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1294,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1255,
																	"src": "11047:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 1295,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11056:2:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "11047:11:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1297,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11061:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11047:15:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1308,
														"nodeType": "IfStatement",
														"src": "11043:96:4",
														"trueBody": {
															"id": 1307,
															"nodeType": "Block",
															"src": "11064:75:4",
															"statements": [
																{
																	"expression": {
																		"id": 1301,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1299,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1255,
																			"src": "11082:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 1300,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11092:2:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "11082:12:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1302,
																	"nodeType": "ExpressionStatement",
																	"src": "11082:12:4"
																},
																{
																	"expression": {
																		"id": 1305,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1303,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1261,
																			"src": "11112:6:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 1304,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11122:2:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "11112:12:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1306,
																	"nodeType": "ExpressionStatement",
																	"src": "11112:12:4"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1313,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1311,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1309,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1255,
																	"src": "11156:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 1310,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11165:2:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "11156:11:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1312,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11170:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11156:15:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1323,
														"nodeType": "IfStatement",
														"src": "11152:96:4",
														"trueBody": {
															"id": 1322,
															"nodeType": "Block",
															"src": "11173:75:4",
															"statements": [
																{
																	"expression": {
																		"id": 1316,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1314,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1255,
																			"src": "11191:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1315,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11201:2:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11191:12:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1317,
																	"nodeType": "ExpressionStatement",
																	"src": "11191:12:4"
																},
																{
																	"expression": {
																		"id": 1320,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1318,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1261,
																			"src": "11221:6:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1319,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11231:2:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11221:12:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1321,
																	"nodeType": "ExpressionStatement",
																	"src": "11221:12:4"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1328,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1326,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1324,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1255,
																	"src": "11265:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 1325,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11274:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "11265:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1327,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11278:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11265:14:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1338,
														"nodeType": "IfStatement",
														"src": "11261:93:4",
														"trueBody": {
															"id": 1337,
															"nodeType": "Block",
															"src": "11281:73:4",
															"statements": [
																{
																	"expression": {
																		"id": 1331,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1329,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1255,
																			"src": "11299:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 1330,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11309:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "11299:11:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1332,
																	"nodeType": "ExpressionStatement",
																	"src": "11299:11:4"
																},
																{
																	"expression": {
																		"id": 1335,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1333,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1261,
																			"src": "11328:6:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 1334,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11338:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "11328:11:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1336,
																	"nodeType": "ExpressionStatement",
																	"src": "11328:11:4"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1343,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1341,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1339,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1255,
																	"src": "11371:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 1340,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11380:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "11371:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1342,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11384:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11371:14:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1353,
														"nodeType": "IfStatement",
														"src": "11367:93:4",
														"trueBody": {
															"id": 1352,
															"nodeType": "Block",
															"src": "11387:73:4",
															"statements": [
																{
																	"expression": {
																		"id": 1346,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1344,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1255,
																			"src": "11405:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 1345,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11415:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "11405:11:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1347,
																	"nodeType": "ExpressionStatement",
																	"src": "11405:11:4"
																},
																{
																	"expression": {
																		"id": 1350,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1348,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1261,
																			"src": "11434:6:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 1349,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11444:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "11434:11:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1351,
																	"nodeType": "ExpressionStatement",
																	"src": "11434:11:4"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1358,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1356,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1354,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1255,
																	"src": "11477:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 1355,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11486:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "11477:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1357,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11490:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11477:14:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1368,
														"nodeType": "IfStatement",
														"src": "11473:93:4",
														"trueBody": {
															"id": 1367,
															"nodeType": "Block",
															"src": "11493:73:4",
															"statements": [
																{
																	"expression": {
																		"id": 1361,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1359,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1255,
																			"src": "11511:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 1360,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11521:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "11511:11:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1362,
																	"nodeType": "ExpressionStatement",
																	"src": "11511:11:4"
																},
																{
																	"expression": {
																		"id": 1365,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1363,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1261,
																			"src": "11540:6:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 1364,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11550:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "11540:11:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1366,
																	"nodeType": "ExpressionStatement",
																	"src": "11540:11:4"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1373,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1371,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1369,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1255,
																	"src": "11583:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1370,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11592:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "11583:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1372,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11596:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11583:14:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1379,
														"nodeType": "IfStatement",
														"src": "11579:64:4",
														"trueBody": {
															"id": 1378,
															"nodeType": "Block",
															"src": "11599:44:4",
															"statements": [
																{
																	"expression": {
																		"id": 1376,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1374,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1261,
																			"src": "11617:6:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 1375,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11627:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "11617:11:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1377,
																	"nodeType": "ExpressionStatement",
																	"src": "11617:11:4"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 1381,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1261,
													"src": "11669:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1259,
												"id": 1382,
												"nodeType": "Return",
												"src": "11662:13:4"
											}
										]
									},
									"documentation": {
										"id": 1253,
										"nodeType": "StructuredDocumentation",
										"src": "10575:119:4",
										"text": " @dev Return the log in base 2 of a positive value rounded towards zero.\n Returns 0 if given 0."
									},
									"id": 1384,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "10708:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1256,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1255,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10721:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1384,
												"src": "10713:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1254,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10713:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10712:15:4"
									},
									"returnParameters": {
										"id": 1259,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1258,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1384,
												"src": "10751:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1257,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10751:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10750:9:4"
									},
									"scope": 1728,
									"src": "10699:983:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1418,
										"nodeType": "Block",
										"src": "11915:168:4",
										"statements": [
											{
												"id": 1417,
												"nodeType": "UncheckedBlock",
												"src": "11925:152:4",
												"statements": [
													{
														"assignments": [
															1396
														],
														"declarations": [
															{
																"constant": false,
																"id": 1396,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "11957:6:4",
																"nodeType": "VariableDeclaration",
																"scope": 1417,
																"src": "11949:14:4",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1395,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "11949:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1400,
														"initialValue": {
															"arguments": [
																{
																	"id": 1398,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1387,
																	"src": "11971:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1397,
																"name": "log2",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1384,
																	1419
																],
																"referencedDeclaration": 1384,
																"src": "11966:4:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 1399,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11966:11:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "11949:28:4"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1415,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1401,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1396,
																"src": "11998:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 1410,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 1403,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1390,
																						"src": "12025:8:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$685",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$685",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 1402,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1727,
																					"src": "12008:16:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$685_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 1404,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "12008:26:4",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1409,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1407,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 1405,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "12038:1:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"id": 1406,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1396,
																						"src": "12043:6:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "12038:11:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 1408,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1387,
																					"src": "12052:5:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "12038:19:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "12008:49:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 1412,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12064:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 1413,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "12008:57:4",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 1411,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12060:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 1414,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "12007:59:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "11998:68:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1394,
														"id": 1416,
														"nodeType": "Return",
														"src": "11991:75:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1385,
										"nodeType": "StructuredDocumentation",
										"src": "11688:142:4",
										"text": " @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 1419,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "11844:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1391,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1387,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11857:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1419,
												"src": "11849:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1386,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11849:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1390,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "11873:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1419,
												"src": "11864:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$685",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1389,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1388,
														"name": "Rounding",
														"nameLocations": [
															"11864:8:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 685,
														"src": "11864:8:4"
													},
													"referencedDeclaration": 685,
													"src": "11864:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$685",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11848:34:4"
									},
									"returnParameters": {
										"id": 1394,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1393,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1419,
												"src": "11906:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1392,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11906:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11905:9:4"
									},
									"scope": 1728,
									"src": "11835:248:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1547,
										"nodeType": "Block",
										"src": "12276:854:4",
										"statements": [
											{
												"assignments": [
													1428
												],
												"declarations": [
													{
														"constant": false,
														"id": 1428,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "12294:6:4",
														"nodeType": "VariableDeclaration",
														"scope": 1547,
														"src": "12286:14:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1427,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "12286:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1430,
												"initialValue": {
													"hexValue": "30",
													"id": 1429,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "12303:1:4",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12286:18:4"
											},
											{
												"id": 1544,
												"nodeType": "UncheckedBlock",
												"src": "12314:787:4",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1435,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1431,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1422,
																"src": "12342:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																},
																"id": 1434,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1432,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12351:2:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 1433,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12357:2:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "12351:8:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																}
															},
															"src": "12342:17:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1447,
														"nodeType": "IfStatement",
														"src": "12338:103:4",
														"trueBody": {
															"id": 1446,
															"nodeType": "Block",
															"src": "12361:80:4",
															"statements": [
																{
																	"expression": {
																		"id": 1440,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1436,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1422,
																			"src": "12379:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			},
																			"id": 1439,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1437,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12388:2:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3634",
																				"id": 1438,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12394:2:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_64_by_1",
																					"typeString": "int_const 64"
																				},
																				"value": "64"
																			},
																			"src": "12388:8:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			}
																		},
																		"src": "12379:17:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1441,
																	"nodeType": "ExpressionStatement",
																	"src": "12379:17:4"
																},
																{
																	"expression": {
																		"id": 1444,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1442,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1428,
																			"src": "12414:6:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 1443,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12424:2:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "12414:12:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1445,
																	"nodeType": "ExpressionStatement",
																	"src": "12414:12:4"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1452,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1448,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1422,
																"src": "12458:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																},
																"id": 1451,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1449,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12467:2:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 1450,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12473:2:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "12467:8:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																}
															},
															"src": "12458:17:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1464,
														"nodeType": "IfStatement",
														"src": "12454:103:4",
														"trueBody": {
															"id": 1463,
															"nodeType": "Block",
															"src": "12477:80:4",
															"statements": [
																{
																	"expression": {
																		"id": 1457,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1453,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1422,
																			"src": "12495:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			},
																			"id": 1456,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1454,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12504:2:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3332",
																				"id": 1455,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12510:2:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_32_by_1",
																					"typeString": "int_const 32"
																				},
																				"value": "32"
																			},
																			"src": "12504:8:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			}
																		},
																		"src": "12495:17:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1458,
																	"nodeType": "ExpressionStatement",
																	"src": "12495:17:4"
																},
																{
																	"expression": {
																		"id": 1461,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1459,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1428,
																			"src": "12530:6:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 1460,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12540:2:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "12530:12:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1462,
																	"nodeType": "ExpressionStatement",
																	"src": "12530:12:4"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1469,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1465,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1422,
																"src": "12574:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																},
																"id": 1468,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1466,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12583:2:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 1467,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12589:2:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "12583:8:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																}
															},
															"src": "12574:17:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1481,
														"nodeType": "IfStatement",
														"src": "12570:103:4",
														"trueBody": {
															"id": 1480,
															"nodeType": "Block",
															"src": "12593:80:4",
															"statements": [
																{
																	"expression": {
																		"id": 1474,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1470,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1422,
																			"src": "12611:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			},
																			"id": 1473,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1471,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12620:2:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3136",
																				"id": 1472,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12626:2:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_16_by_1",
																					"typeString": "int_const 16"
																				},
																				"value": "16"
																			},
																			"src": "12620:8:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			}
																		},
																		"src": "12611:17:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1475,
																	"nodeType": "ExpressionStatement",
																	"src": "12611:17:4"
																},
																{
																	"expression": {
																		"id": 1478,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1476,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1428,
																			"src": "12646:6:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1477,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12656:2:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "12646:12:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1479,
																	"nodeType": "ExpressionStatement",
																	"src": "12646:12:4"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1486,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1482,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1422,
																"src": "12690:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																},
																"id": 1485,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1483,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12699:2:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 1484,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12705:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "12699:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																}
															},
															"src": "12690:16:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1498,
														"nodeType": "IfStatement",
														"src": "12686:100:4",
														"trueBody": {
															"id": 1497,
															"nodeType": "Block",
															"src": "12708:78:4",
															"statements": [
																{
																	"expression": {
																		"id": 1491,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1487,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1422,
																			"src": "12726:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			},
																			"id": 1490,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1488,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12735:2:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "38",
																				"id": 1489,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12741:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_8_by_1",
																					"typeString": "int_const 8"
																				},
																				"value": "8"
																			},
																			"src": "12735:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			}
																		},
																		"src": "12726:16:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1492,
																	"nodeType": "ExpressionStatement",
																	"src": "12726:16:4"
																},
																{
																	"expression": {
																		"id": 1495,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1493,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1428,
																			"src": "12760:6:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 1494,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12770:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "12760:11:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1496,
																	"nodeType": "ExpressionStatement",
																	"src": "12760:11:4"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1503,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1499,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1422,
																"src": "12803:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																},
																"id": 1502,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1500,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12812:2:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 1501,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12818:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "12812:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																}
															},
															"src": "12803:16:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1515,
														"nodeType": "IfStatement",
														"src": "12799:100:4",
														"trueBody": {
															"id": 1514,
															"nodeType": "Block",
															"src": "12821:78:4",
															"statements": [
																{
																	"expression": {
																		"id": 1508,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1504,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1422,
																			"src": "12839:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			},
																			"id": 1507,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1505,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12848:2:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "34",
																				"id": 1506,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12854:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_4_by_1",
																					"typeString": "int_const 4"
																				},
																				"value": "4"
																			},
																			"src": "12848:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			}
																		},
																		"src": "12839:16:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1509,
																	"nodeType": "ExpressionStatement",
																	"src": "12839:16:4"
																},
																{
																	"expression": {
																		"id": 1512,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1510,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1428,
																			"src": "12873:6:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 1511,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12883:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "12873:11:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1513,
																	"nodeType": "ExpressionStatement",
																	"src": "12873:11:4"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1520,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1516,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1422,
																"src": "12916:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"id": 1519,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1517,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12925:2:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 1518,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12931:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "12925:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																}
															},
															"src": "12916:16:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1532,
														"nodeType": "IfStatement",
														"src": "12912:100:4",
														"trueBody": {
															"id": 1531,
															"nodeType": "Block",
															"src": "12934:78:4",
															"statements": [
																{
																	"expression": {
																		"id": 1525,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1521,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1422,
																			"src": "12952:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			},
																			"id": 1524,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1522,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12961:2:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "32",
																				"id": 1523,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12967:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				},
																				"value": "2"
																			},
																			"src": "12961:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			}
																		},
																		"src": "12952:16:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1526,
																	"nodeType": "ExpressionStatement",
																	"src": "12952:16:4"
																},
																{
																	"expression": {
																		"id": 1529,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1527,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1428,
																			"src": "12986:6:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 1528,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12996:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "12986:11:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1530,
																	"nodeType": "ExpressionStatement",
																	"src": "12986:11:4"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1537,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1533,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1422,
																"src": "13029:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"id": 1536,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1534,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13038:2:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1535,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13044:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "13038:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																}
															},
															"src": "13029:16:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1543,
														"nodeType": "IfStatement",
														"src": "13025:66:4",
														"trueBody": {
															"id": 1542,
															"nodeType": "Block",
															"src": "13047:44:4",
															"statements": [
																{
																	"expression": {
																		"id": 1540,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1538,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1428,
																			"src": "13065:6:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 1539,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13075:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "13065:11:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1541,
																	"nodeType": "ExpressionStatement",
																	"src": "13065:11:4"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 1545,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1428,
													"src": "13117:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1426,
												"id": 1546,
												"nodeType": "Return",
												"src": "13110:13:4"
											}
										]
									},
									"documentation": {
										"id": 1420,
										"nodeType": "StructuredDocumentation",
										"src": "12089:120:4",
										"text": " @dev Return the log in base 10 of a positive value rounded towards zero.\n Returns 0 if given 0."
									},
									"id": 1548,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "12223:5:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1423,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1422,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "12237:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1548,
												"src": "12229:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1421,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12229:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12228:15:4"
									},
									"returnParameters": {
										"id": 1426,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1425,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1548,
												"src": "12267:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1424,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12267:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12266:9:4"
									},
									"scope": 1728,
									"src": "12214:916:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1582,
										"nodeType": "Block",
										"src": "13365:170:4",
										"statements": [
											{
												"id": 1581,
												"nodeType": "UncheckedBlock",
												"src": "13375:154:4",
												"statements": [
													{
														"assignments": [
															1560
														],
														"declarations": [
															{
																"constant": false,
																"id": 1560,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "13407:6:4",
																"nodeType": "VariableDeclaration",
																"scope": 1581,
																"src": "13399:14:4",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1559,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "13399:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1564,
														"initialValue": {
															"arguments": [
																{
																	"id": 1562,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1551,
																	"src": "13422:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1561,
																"name": "log10",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1548,
																	1583
																],
																"referencedDeclaration": 1548,
																"src": "13416:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 1563,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13416:12:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "13399:29:4"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1579,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1565,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1560,
																"src": "13449:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 1574,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 1567,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1554,
																						"src": "13476:8:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$685",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$685",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 1566,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1727,
																					"src": "13459:16:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$685_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 1568,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "13459:26:4",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1573,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1571,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "3130",
																						"id": 1569,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "13489:2:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_10_by_1",
																							"typeString": "int_const 10"
																						},
																						"value": "10"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "**",
																					"rightExpression": {
																						"id": 1570,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1560,
																						"src": "13495:6:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "13489:12:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 1572,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1551,
																					"src": "13504:5:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "13489:20:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "13459:50:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 1576,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13516:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 1577,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "13459:58:4",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 1575,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13512:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 1578,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "13458:60:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "13449:69:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1558,
														"id": 1580,
														"nodeType": "Return",
														"src": "13442:76:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1549,
										"nodeType": "StructuredDocumentation",
										"src": "13136:143:4",
										"text": " @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 1583,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "13293:5:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1555,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1551,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "13307:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1583,
												"src": "13299:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1550,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13299:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1554,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "13323:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1583,
												"src": "13314:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$685",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1553,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1552,
														"name": "Rounding",
														"nameLocations": [
															"13314:8:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 685,
														"src": "13314:8:4"
													},
													"referencedDeclaration": 685,
													"src": "13314:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$685",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13298:34:4"
									},
									"returnParameters": {
										"id": 1558,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1557,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1583,
												"src": "13356:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1556,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13356:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13355:9:4"
									},
									"scope": 1728,
									"src": "13284:251:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1669,
										"nodeType": "Block",
										"src": "13855:600:4",
										"statements": [
											{
												"assignments": [
													1592
												],
												"declarations": [
													{
														"constant": false,
														"id": 1592,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "13873:6:4",
														"nodeType": "VariableDeclaration",
														"scope": 1669,
														"src": "13865:14:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1591,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "13865:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1594,
												"initialValue": {
													"hexValue": "30",
													"id": 1593,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "13882:1:4",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13865:18:4"
											},
											{
												"id": 1666,
												"nodeType": "UncheckedBlock",
												"src": "13893:533:4",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1599,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1597,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1595,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1586,
																	"src": "13921:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 1596,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13930:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "13921:12:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1598,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "13936:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "13921:16:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1609,
														"nodeType": "IfStatement",
														"src": "13917:98:4",
														"trueBody": {
															"id": 1608,
															"nodeType": "Block",
															"src": "13939:76:4",
															"statements": [
																{
																	"expression": {
																		"id": 1602,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1600,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1586,
																			"src": "13957:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 1601,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13967:3:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "13957:13:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1603,
																	"nodeType": "ExpressionStatement",
																	"src": "13957:13:4"
																},
																{
																	"expression": {
																		"id": 1606,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1604,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1592,
																			"src": "13988:6:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1605,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13998:2:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "13988:12:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1607,
																	"nodeType": "ExpressionStatement",
																	"src": "13988:12:4"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1614,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1612,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1610,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1586,
																	"src": "14032:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 1611,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14041:2:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "14032:11:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1613,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14046:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14032:15:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1624,
														"nodeType": "IfStatement",
														"src": "14028:95:4",
														"trueBody": {
															"id": 1623,
															"nodeType": "Block",
															"src": "14049:74:4",
															"statements": [
																{
																	"expression": {
																		"id": 1617,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1615,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1586,
																			"src": "14067:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 1616,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14077:2:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "14067:12:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1618,
																	"nodeType": "ExpressionStatement",
																	"src": "14067:12:4"
																},
																{
																	"expression": {
																		"id": 1621,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1619,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1592,
																			"src": "14097:6:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 1620,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14107:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "14097:11:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1622,
																	"nodeType": "ExpressionStatement",
																	"src": "14097:11:4"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1629,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1627,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1625,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1586,
																	"src": "14140:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 1626,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14149:2:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "14140:11:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1628,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14154:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14140:15:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1639,
														"nodeType": "IfStatement",
														"src": "14136:95:4",
														"trueBody": {
															"id": 1638,
															"nodeType": "Block",
															"src": "14157:74:4",
															"statements": [
																{
																	"expression": {
																		"id": 1632,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1630,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1586,
																			"src": "14175:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 1631,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14185:2:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "14175:12:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1633,
																	"nodeType": "ExpressionStatement",
																	"src": "14175:12:4"
																},
																{
																	"expression": {
																		"id": 1636,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1634,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1592,
																			"src": "14205:6:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 1635,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14215:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "14205:11:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1637,
																	"nodeType": "ExpressionStatement",
																	"src": "14205:11:4"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1644,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1642,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1640,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1586,
																	"src": "14248:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 1641,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14257:2:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "14248:11:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1643,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14262:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14248:15:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1654,
														"nodeType": "IfStatement",
														"src": "14244:95:4",
														"trueBody": {
															"id": 1653,
															"nodeType": "Block",
															"src": "14265:74:4",
															"statements": [
																{
																	"expression": {
																		"id": 1647,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1645,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1586,
																			"src": "14283:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1646,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14293:2:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "14283:12:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1648,
																	"nodeType": "ExpressionStatement",
																	"src": "14283:12:4"
																},
																{
																	"expression": {
																		"id": 1651,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1649,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1592,
																			"src": "14313:6:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 1650,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14323:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "14313:11:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1652,
																	"nodeType": "ExpressionStatement",
																	"src": "14313:11:4"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1659,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1657,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1655,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1586,
																	"src": "14356:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 1656,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14365:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "14356:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1658,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14369:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14356:14:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1665,
														"nodeType": "IfStatement",
														"src": "14352:64:4",
														"trueBody": {
															"id": 1664,
															"nodeType": "Block",
															"src": "14372:44:4",
															"statements": [
																{
																	"expression": {
																		"id": 1662,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1660,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1592,
																			"src": "14390:6:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 1661,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14400:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "14390:11:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1663,
																	"nodeType": "ExpressionStatement",
																	"src": "14390:11:4"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 1667,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1592,
													"src": "14442:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1590,
												"id": 1668,
												"nodeType": "Return",
												"src": "14435:13:4"
											}
										]
									},
									"documentation": {
										"id": 1584,
										"nodeType": "StructuredDocumentation",
										"src": "13541:246:4",
										"text": " @dev Return the log in base 256 of a positive value rounded towards zero.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."
									},
									"id": 1670,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "13801:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1587,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1586,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "13816:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1670,
												"src": "13808:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1585,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13808:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13807:15:4"
									},
									"returnParameters": {
										"id": 1590,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1589,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1670,
												"src": "13846:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1588,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13846:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13845:9:4"
									},
									"scope": 1728,
									"src": "13792:663:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1707,
										"nodeType": "Block",
										"src": "14692:177:4",
										"statements": [
											{
												"id": 1706,
												"nodeType": "UncheckedBlock",
												"src": "14702:161:4",
												"statements": [
													{
														"assignments": [
															1682
														],
														"declarations": [
															{
																"constant": false,
																"id": 1682,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "14734:6:4",
																"nodeType": "VariableDeclaration",
																"scope": 1706,
																"src": "14726:14:4",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1681,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "14726:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1686,
														"initialValue": {
															"arguments": [
																{
																	"id": 1684,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1673,
																	"src": "14750:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1683,
																"name": "log256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1670,
																	1708
																],
																"referencedDeclaration": 1670,
																"src": "14743:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 1685,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14743:13:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "14726:30:4"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1704,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1687,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1682,
																"src": "14777:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 1699,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 1689,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1676,
																						"src": "14804:8:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$685",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$685",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 1688,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1727,
																					"src": "14787:16:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$685_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 1690,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "14787:26:4",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1698,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1696,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 1691,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "14817:1:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"components": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 1694,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 1692,
																									"name": "result",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1682,
																									"src": "14823:6:4",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "<<",
																								"rightExpression": {
																									"hexValue": "33",
																									"id": 1693,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "14833:1:4",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_3_by_1",
																										"typeString": "int_const 3"
																									},
																									"value": "3"
																								},
																								"src": "14823:11:4",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"id": 1695,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "14822:13:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "14817:18:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 1697,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1673,
																					"src": "14838:5:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "14817:26:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "14787:56:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 1701,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14850:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 1702,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "14787:64:4",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 1700,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14846:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 1703,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "14786:66:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "14777:75:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1680,
														"id": 1705,
														"nodeType": "Return",
														"src": "14770:82:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1671,
										"nodeType": "StructuredDocumentation",
										"src": "14461:144:4",
										"text": " @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 1708,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "14619:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1677,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1673,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "14634:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1708,
												"src": "14626:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1672,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14626:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1676,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "14650:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1708,
												"src": "14641:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$685",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1675,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1674,
														"name": "Rounding",
														"nameLocations": [
															"14641:8:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 685,
														"src": "14641:8:4"
													},
													"referencedDeclaration": 685,
													"src": "14641:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$685",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14625:34:4"
									},
									"returnParameters": {
										"id": 1680,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1679,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1708,
												"src": "14683:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1678,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14683:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14682:9:4"
									},
									"scope": 1728,
									"src": "14610:259:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1726,
										"nodeType": "Block",
										"src": "15067:48:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													},
													"id": 1724,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"id": 1722,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 1719,
																	"name": "rounding",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1712,
																	"src": "15090:8:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_Rounding_$685",
																		"typeString": "enum Math.Rounding"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_enum$_Rounding_$685",
																		"typeString": "enum Math.Rounding"
																	}
																],
																"id": 1718,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "15084:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint8_$",
																	"typeString": "type(uint8)"
																},
																"typeName": {
																	"id": 1717,
																	"name": "uint8",
																	"nodeType": "ElementaryTypeName",
																	"src": "15084:5:4",
																	"typeDescriptions": {}
																}
															},
															"id": 1720,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15084:15:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "%",
														"rightExpression": {
															"hexValue": "32",
															"id": 1721,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15102:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "15084:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "31",
														"id": 1723,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "15107:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "15084:24:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1716,
												"id": 1725,
												"nodeType": "Return",
												"src": "15077:31:4"
											}
										]
									},
									"documentation": {
										"id": 1709,
										"nodeType": "StructuredDocumentation",
										"src": "14875:113:4",
										"text": " @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers."
									},
									"id": 1727,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unsignedRoundsUp",
									"nameLocation": "15002:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1713,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1712,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "15028:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1727,
												"src": "15019:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$685",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1711,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1710,
														"name": "Rounding",
														"nameLocations": [
															"15019:8:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 685,
														"src": "15019:8:4"
													},
													"referencedDeclaration": 685,
													"src": "15019:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$685",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15018:19:4"
									},
									"returnParameters": {
										"id": 1716,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1715,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1727,
												"src": "15061:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1714,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15061:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15060:6:4"
									},
									"scope": 1728,
									"src": "14993:122:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1729,
							"src": "203:14914:4",
							"usedErrors": [
								680
							],
							"usedEvents": []
						}
					],
					"src": "103:15015:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/SignedMath.sol",
					"exportedSymbols": {
						"SignedMath": [
							1833
						]
					},
					"id": 1834,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1730,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "109:24:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SignedMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1731,
								"nodeType": "StructuredDocumentation",
								"src": "135:80:5",
								"text": " @dev Standard signed math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 1833,
							"linearizedBaseContracts": [
								1833
							],
							"name": "SignedMath",
							"nameLocation": "224:10:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1748,
										"nodeType": "Block",
										"src": "376:37:5",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 1743,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1741,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1734,
															"src": "393:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 1742,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1736,
															"src": "397:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "393:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 1745,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1736,
														"src": "405:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 1746,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "393:13:5",
													"trueExpression": {
														"id": 1744,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1734,
														"src": "401:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 1740,
												"id": 1747,
												"nodeType": "Return",
												"src": "386:20:5"
											}
										]
									},
									"documentation": {
										"id": 1732,
										"nodeType": "StructuredDocumentation",
										"src": "241:66:5",
										"text": " @dev Returns the largest of two signed numbers."
									},
									"id": 1749,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "321:3:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1737,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1734,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "332:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 1749,
												"src": "325:8:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1733,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "325:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1736,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "342:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 1749,
												"src": "335:8:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1735,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "335:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "324:20:5"
									},
									"returnParameters": {
										"id": 1740,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1739,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1749,
												"src": "368:6:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1738,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "368:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "367:8:5"
									},
									"scope": 1833,
									"src": "312:101:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1766,
										"nodeType": "Block",
										"src": "555:37:5",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 1761,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1759,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1752,
															"src": "572:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 1760,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1754,
															"src": "576:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "572:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 1763,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1754,
														"src": "584:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 1764,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "572:13:5",
													"trueExpression": {
														"id": 1762,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1752,
														"src": "580:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 1758,
												"id": 1765,
												"nodeType": "Return",
												"src": "565:20:5"
											}
										]
									},
									"documentation": {
										"id": 1750,
										"nodeType": "StructuredDocumentation",
										"src": "419:67:5",
										"text": " @dev Returns the smallest of two signed numbers."
									},
									"id": 1767,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "500:3:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1755,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1752,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "511:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 1767,
												"src": "504:8:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1751,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "504:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1754,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "521:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 1767,
												"src": "514:8:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1753,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "514:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "503:20:5"
									},
									"returnParameters": {
										"id": 1758,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1757,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1767,
												"src": "547:6:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1756,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "547:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "546:8:5"
									},
									"scope": 1833,
									"src": "491:101:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1810,
										"nodeType": "Block",
										"src": "797:162:5",
										"statements": [
											{
												"assignments": [
													1778
												],
												"declarations": [
													{
														"constant": false,
														"id": 1778,
														"mutability": "mutable",
														"name": "x",
														"nameLocation": "866:1:5",
														"nodeType": "VariableDeclaration",
														"scope": 1810,
														"src": "859:8:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 1777,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "859:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1791,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 1790,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 1781,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1779,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1770,
																	"src": "871:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 1780,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1772,
																	"src": "875:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "871:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 1782,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "870:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 1788,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 1785,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1783,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1770,
																				"src": "882:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 1784,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1772,
																				"src": "886:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "882:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 1786,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "881:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1787,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "892:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "881:12:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 1789,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "880:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "870:24:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "859:35:5"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 1808,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1792,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1778,
														"src": "911:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 1806,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1800,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 1797,
																						"name": "x",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1778,
																						"src": "931:1:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					],
																					"id": 1796,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "923:7:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint256_$",
																						"typeString": "type(uint256)"
																					},
																					"typeName": {
																						"id": 1795,
																						"name": "uint256",
																						"nodeType": "ElementaryTypeName",
																						"src": "923:7:5",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 1798,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "923:10:5",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">>",
																			"rightExpression": {
																				"hexValue": "323535",
																				"id": 1799,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "937:3:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_255_by_1",
																					"typeString": "int_const 255"
																				},
																				"value": "255"
																			},
																			"src": "923:17:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 1794,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "916:6:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_int256_$",
																			"typeString": "type(int256)"
																		},
																		"typeName": {
																			"id": 1793,
																			"name": "int256",
																			"nodeType": "ElementaryTypeName",
																			"src": "916:6:5",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1801,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "916:25:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 1804,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1802,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1770,
																				"src": "945:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 1803,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1772,
																				"src": "949:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "945:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 1805,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "944:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "916:35:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 1807,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "915:37:5",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "911:41:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 1776,
												"id": 1809,
												"nodeType": "Return",
												"src": "904:48:5"
											}
										]
									},
									"documentation": {
										"id": 1768,
										"nodeType": "StructuredDocumentation",
										"src": "598:126:5",
										"text": " @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."
									},
									"id": 1811,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "738:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1773,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1770,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "753:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 1811,
												"src": "746:8:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1769,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "746:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1772,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "763:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 1811,
												"src": "756:8:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1771,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "756:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "745:20:5"
									},
									"returnParameters": {
										"id": 1776,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1775,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1811,
												"src": "789:6:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1774,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "789:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "788:8:5"
									},
									"scope": 1833,
									"src": "729:230:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1831,
										"nodeType": "Block",
										"src": "1103:158:5",
										"statements": [
											{
												"id": 1830,
												"nodeType": "UncheckedBlock",
												"src": "1113:142:5",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		"id": 1823,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1821,
																			"name": "n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1814,
																			"src": "1228:1:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1822,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1233:1:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1228:6:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseExpression": {
																		"id": 1826,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "-",
																		"prefix": true,
																		"src": "1241:2:5",
																		"subExpression": {
																			"id": 1825,
																			"name": "n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1814,
																			"src": "1242:1:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"id": 1827,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "Conditional",
																	"src": "1228:15:5",
																	"trueExpression": {
																		"id": 1824,
																		"name": "n",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1814,
																		"src": "1237:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																],
																"id": 1820,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1220:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 1819,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1220:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 1828,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1220:24:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1818,
														"id": 1829,
														"nodeType": "Return",
														"src": "1213:31:5"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1812,
										"nodeType": "StructuredDocumentation",
										"src": "965:78:5",
										"text": " @dev Returns the absolute unsigned value of a signed value."
									},
									"id": 1832,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "abs",
									"nameLocation": "1057:3:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1815,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1814,
												"mutability": "mutable",
												"name": "n",
												"nameLocation": "1068:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 1832,
												"src": "1061:8:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1813,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1061:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1060:10:5"
									},
									"returnParameters": {
										"id": 1818,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1817,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1832,
												"src": "1094:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1816,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1094:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1093:9:5"
									},
									"scope": 1833,
									"src": "1048:213:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1834,
							"src": "216:1047:5",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "109:1155:5"
				},
				"id": 5
			},
			"contracts/ERC721TokenContractName.sol": {
				"ast": {
					"absolutePath": "contracts/ERC721TokenContractName.sol",
					"exportedSymbols": {
						"Address": [
							389
						],
						"Context": [
							419
						],
						"ERC721TokenContractName": [
							2183
						],
						"IERC721Errors": [
							89
						],
						"Math": [
							1728
						],
						"SignedMath": [
							1833
						],
						"Strings": [
							674
						]
					},
					"id": 2184,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1835,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
							"file": "@openzeppelin/contracts/utils/Address.sol",
							"id": 1836,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2184,
							"sourceUnit": 390,
							"src": "63:51:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
							"file": "@openzeppelin/contracts/utils/Strings.sol",
							"id": 1837,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2184,
							"sourceUnit": 675,
							"src": "116:51:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "@openzeppelin/contracts/utils/Context.sol",
							"id": 1838,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2184,
							"sourceUnit": 420,
							"src": "169:51:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"id": 1840,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2184,
							"sourceUnit": 137,
							"src": "222:84:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1839,
										"name": "IERC721Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 89,
										"src": "230:13:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1841,
										"name": "Context",
										"nameLocations": [
											"352:7:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 419,
										"src": "352:7:6"
									},
									"id": 1842,
									"nodeType": "InheritanceSpecifier",
									"src": "352:7:6"
								},
								{
									"baseName": {
										"id": 1843,
										"name": "IERC721Errors",
										"nameLocations": [
											"361:13:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 89,
										"src": "361:13:6"
									},
									"id": 1844,
									"nodeType": "InheritanceSpecifier",
									"src": "361:13:6"
								}
							],
							"canonicalName": "ERC721TokenContractName",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 2183,
							"linearizedBaseContracts": [
								2183,
								89,
								419
							],
							"name": "ERC721TokenContractName",
							"nameLocation": "325:23:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"eventSelector": "0a9d294fd4bd42bb30e96cba2b478d149a783fba3c729b1e5c42bec89d95b85a",
									"id": 1852,
									"name": "Approval",
									"nameLocation": "388:8:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1851,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1846,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "413:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1852,
												"src": "397:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1845,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "397:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1848,
												"indexed": true,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "436:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1852,
												"src": "420:24:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1847,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "420:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1850,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "461:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1852,
												"src": "446:22:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 1849,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "446:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "396:73:6"
									},
									"src": "382:88:6"
								},
								{
									"anonymous": false,
									"eventSelector": "17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31",
									"id": 1860,
									"name": "ApprovalForAll",
									"nameLocation": "482:14:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1859,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1854,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "513:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1860,
												"src": "497:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1853,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "497:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1856,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "536:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1860,
												"src": "520:24:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1855,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "520:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1858,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "551:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1860,
												"src": "546:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1857,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "546:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "496:64:6"
									},
									"src": "476:85:6"
								},
								{
									"anonymous": false,
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 1868,
									"name": "Transfer",
									"nameLocation": "573:8:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1867,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1862,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "598:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1868,
												"src": "582:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1861,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "582:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1864,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "620:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1868,
												"src": "604:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1863,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "604:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1866,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "640:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1868,
												"src": "624:23:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1865,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "624:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "581:67:6"
									},
									"src": "567:82:6"
								},
								{
									"global": false,
									"id": 1871,
									"libraryName": {
										"id": 1869,
										"name": "Address",
										"nameLocations": [
											"665:7:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 389,
										"src": "665:7:6"
									},
									"nodeType": "UsingForDirective",
									"src": "659:26:6",
									"typeName": {
										"id": 1870,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "677:7:6",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"global": false,
									"id": 1874,
									"libraryName": {
										"id": 1872,
										"name": "Strings",
										"nameLocations": [
											"697:7:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 674,
										"src": "697:7:6"
									},
									"nodeType": "UsingForDirective",
									"src": "691:25:6",
									"typeName": {
										"id": 1873,
										"name": "uint16",
										"nodeType": "ElementaryTypeName",
										"src": "709:6:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint16",
											"typeString": "uint16"
										}
									}
								},
								{
									"constant": false,
									"id": 1876,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "742:5:6",
									"nodeType": "VariableDeclaration",
									"scope": 2183,
									"src": "726:21:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes20",
										"typeString": "bytes20"
									},
									"typeName": {
										"id": 1875,
										"name": "bytes20",
										"nodeType": "ElementaryTypeName",
										"src": "726:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes20",
											"typeString": "bytes20"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1878,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "774:7:6",
									"nodeType": "VariableDeclaration",
									"scope": 2183,
									"src": "758:23:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes10",
										"typeString": "bytes10"
									},
									"typeName": {
										"id": 1877,
										"name": "bytes10",
										"nodeType": "ElementaryTypeName",
										"src": "758:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes10",
											"typeString": "bytes10"
										}
									},
									"visibility": "private"
								},
								{
									"canonicalName": "ERC721TokenContractName.TokInfo",
									"id": 1883,
									"members": [
										{
											"constant": false,
											"id": 1880,
											"mutability": "mutable",
											"name": "maxMinted",
											"nameLocation": "823:9:6",
											"nodeType": "VariableDeclaration",
											"scope": 1883,
											"src": "816:16:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint16",
												"typeString": "uint16"
											},
											"typeName": {
												"id": 1879,
												"name": "uint16",
												"nodeType": "ElementaryTypeName",
												"src": "816:6:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1882,
											"mutability": "mutable",
											"name": "currentTokens",
											"nameLocation": "850:13:6",
											"nodeType": "VariableDeclaration",
											"scope": 1883,
											"src": "843:20:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint16",
												"typeString": "uint16"
											},
											"typeName": {
												"id": 1881,
												"name": "uint16",
												"nodeType": "ElementaryTypeName",
												"src": "843:6:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "TokInfo",
									"nameLocation": "797:7:6",
									"nodeType": "StructDefinition",
									"scope": 2183,
									"src": "790:81:6",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 1886,
									"mutability": "mutable",
									"name": "tokInfo",
									"nameLocation": "895:7:6",
									"nodeType": "VariableDeclaration",
									"scope": 2183,
									"src": "879:23:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_struct$_TokInfo_$1883_storage",
										"typeString": "struct ERC721TokenContractName.TokInfo"
									},
									"typeName": {
										"id": 1885,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1884,
											"name": "TokInfo",
											"nameLocations": [
												"879:7:6"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1883,
											"src": "879:7:6"
										},
										"referencedDeclaration": 1883,
										"src": "879:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_TokInfo_$1883_storage_ptr",
											"typeString": "struct ERC721TokenContractName.TokInfo"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1890,
									"mutability": "mutable",
									"name": "_owners",
									"nameLocation": "935:7:6",
									"nodeType": "VariableDeclaration",
									"scope": 2183,
									"src": "913:29:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_address_$1201_storage",
										"typeString": "address[1201]"
									},
									"typeName": {
										"baseType": {
											"id": 1887,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "913:7:6",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"id": 1889,
										"length": {
											"hexValue": "31323031",
											"id": 1888,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "921:4:6",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1201_by_1",
												"typeString": "int_const 1201"
											},
											"value": "1201"
										},
										"nodeType": "ArrayTypeName",
										"src": "913:13:6",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_address_$1201_storage_ptr",
											"typeString": "address[1201]"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1896,
									"mutability": "mutable",
									"name": "_balanceAndTokId",
									"nameLocation": "1000:16:6",
									"nodeType": "VariableDeclaration",
									"scope": 2183,
									"src": "953:63:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint16_$1201_storage_$",
										"typeString": "mapping(address => uint16[1201])"
									},
									"typeName": {
										"id": 1895,
										"keyName": "owner",
										"keyNameLocation": "969:5:6",
										"keyType": {
											"id": 1891,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "961:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "953:38:6",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint16_$1201_storage_$",
											"typeString": "mapping(address => uint16[1201])"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"baseType": {
												"id": 1892,
												"name": "uint16",
												"nodeType": "ElementaryTypeName",
												"src": "978:6:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												}
											},
											"id": 1894,
											"length": {
												"hexValue": "31323031",
												"id": 1893,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "985:4:6",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_1201_by_1",
													"typeString": "int_const 1201"
												},
												"value": "1201"
											},
											"nodeType": "ArrayTypeName",
											"src": "978:12:6",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_uint16_$1201_storage_ptr",
												"typeString": "uint16[1201]"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1900,
									"mutability": "mutable",
									"name": "_tokenApprovals",
									"nameLocation": "1079:15:6",
									"nodeType": "VariableDeclaration",
									"scope": 2183,
									"src": "1027:67:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint16_$_t_address_$",
										"typeString": "mapping(uint16 => address)"
									},
									"typeName": {
										"id": 1899,
										"keyName": "tokenId",
										"keyNameLocation": "1042:7:6",
										"keyType": {
											"id": 1897,
											"name": "uint16",
											"nodeType": "ElementaryTypeName",
											"src": "1035:6:6",
											"typeDescriptions": {
												"typeIdentifier": "t_uint16",
												"typeString": "uint16"
											}
										},
										"nodeType": "Mapping",
										"src": "1027:43:6",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint16_$_t_address_$",
											"typeString": "mapping(uint16 => address)"
										},
										"valueName": "operator",
										"valueNameLocation": "1061:8:6",
										"valueType": {
											"id": 1898,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1053:7:6",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1906,
									"mutability": "mutable",
									"name": "_operatorApprovals",
									"nameLocation": "1173:18:6",
									"nodeType": "VariableDeclaration",
									"scope": 2183,
									"src": "1105:86:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
										"typeString": "mapping(address => mapping(address => bool))"
									},
									"typeName": {
										"id": 1905,
										"keyName": "owner",
										"keyNameLocation": "1121:5:6",
										"keyType": {
											"id": 1901,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1113:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1105:59:6",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
											"typeString": "mapping(address => mapping(address => bool))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1904,
											"keyName": "operator",
											"keyNameLocation": "1146:8:6",
											"keyType": {
												"id": 1902,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1138:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1130:33:6",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 1903,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1158:4:6",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 1921,
										"nodeType": "Block",
										"src": "1246:60:6",
										"statements": [
											{
												"expression": {
													"id": 1915,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1913,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1876,
														"src": "1257:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes20",
															"typeString": "bytes20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1914,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1908,
														"src": "1265:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes20",
															"typeString": "bytes20"
														}
													},
													"src": "1257:13:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes20",
														"typeString": "bytes20"
													}
												},
												"id": 1916,
												"nodeType": "ExpressionStatement",
												"src": "1257:13:6"
											},
											{
												"expression": {
													"id": 1919,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1917,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1878,
														"src": "1281:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes10",
															"typeString": "bytes10"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1918,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1910,
														"src": "1291:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes10",
															"typeString": "bytes10"
														}
													},
													"src": "1281:17:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes10",
														"typeString": "bytes10"
													}
												},
												"id": 1920,
												"nodeType": "ExpressionStatement",
												"src": "1281:17:6"
											}
										]
									},
									"id": 1922,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1911,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1908,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1222:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1922,
												"src": "1214:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes20",
													"typeString": "bytes20"
												},
												"typeName": {
													"id": 1907,
													"name": "bytes20",
													"nodeType": "ElementaryTypeName",
													"src": "1214:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes20",
														"typeString": "bytes20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1910,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1237:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1922,
												"src": "1229:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes10",
													"typeString": "bytes10"
												},
												"typeName": {
													"id": 1909,
													"name": "bytes10",
													"nodeType": "ElementaryTypeName",
													"src": "1229:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes10",
														"typeString": "bytes10"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1213:32:6"
									},
									"returnParameters": {
										"id": 1912,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1246:0:6"
									},
									"scope": 2183,
									"src": "1202:104:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1929,
										"nodeType": "Block",
										"src": "1362:31:6",
										"statements": [
											{
												"expression": {
													"id": 1927,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1876,
													"src": "1380:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes20",
														"typeString": "bytes20"
													}
												},
												"functionReturnParameters": 1926,
												"id": 1928,
												"nodeType": "Return",
												"src": "1373:12:6"
											}
										]
									},
									"functionSelector": "06fdde03",
									"id": 1930,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "1325:4:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1923,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1329:2:6"
									},
									"returnParameters": {
										"id": 1926,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1925,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1930,
												"src": "1353:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes20",
													"typeString": "bytes20"
												},
												"typeName": {
													"id": 1924,
													"name": "bytes20",
													"nodeType": "ElementaryTypeName",
													"src": "1353:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes20",
														"typeString": "bytes20"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1352:9:6"
									},
									"scope": 2183,
									"src": "1316:77:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1937,
										"nodeType": "Block",
										"src": "1451:33:6",
										"statements": [
											{
												"expression": {
													"id": 1935,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1878,
													"src": "1469:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes10",
														"typeString": "bytes10"
													}
												},
												"functionReturnParameters": 1934,
												"id": 1936,
												"nodeType": "Return",
												"src": "1462:14:6"
											}
										]
									},
									"functionSelector": "95d89b41",
									"id": 1938,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "1412:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1931,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1418:2:6"
									},
									"returnParameters": {
										"id": 1934,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1933,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1938,
												"src": "1442:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes10",
													"typeString": "bytes10"
												},
												"typeName": {
													"id": 1932,
													"name": "bytes10",
													"nodeType": "ElementaryTypeName",
													"src": "1442:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes10",
														"typeString": "bytes10"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1441:9:6"
									},
									"scope": 2183,
									"src": "1403:81:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1961,
										"nodeType": "Block",
										"src": "1557:126:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1951,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1946,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1940,
																"src": "1576:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1949,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1593:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1948,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1585:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1947,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1585:7:6",
																		"typeDescriptions": {}
																	}
																},
																"id": 1950,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1585:10:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1576:19:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "54686520696e70757420616464726573732063616e6e6f74206265207a65726f",
															"id": 1952,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1596:34:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a0ed4e8cad639975e700098d07f166902169c365243b6972750486c0b152b957",
																"typeString": "literal_string \"The input address cannot be zero\""
															},
															"value": "The input address cannot be zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a0ed4e8cad639975e700098d07f166902169c365243b6972750486c0b152b957",
																"typeString": "literal_string \"The input address cannot be zero\""
															}
														],
														"id": 1945,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1568:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1953,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1568:63:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1954,
												"nodeType": "ExpressionStatement",
												"src": "1568:63:6"
											},
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 1955,
															"name": "_balanceAndTokId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1896,
															"src": "1649:16:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint16_$1201_storage_$",
																"typeString": "mapping(address => uint16[1201] storage ref)"
															}
														},
														"id": 1957,
														"indexExpression": {
															"id": 1956,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1940,
															"src": "1666:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "1649:23:6",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint16_$1201_storage",
															"typeString": "uint16[1201] storage ref"
														}
													},
													"id": 1959,
													"indexExpression": {
														"hexValue": "30",
														"id": 1958,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1673:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1649:26:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"functionReturnParameters": 1944,
												"id": 1960,
												"nodeType": "Return",
												"src": "1642:33:6"
											}
										]
									},
									"functionSelector": "70a08231",
									"id": 1962,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "1503:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1941,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1940,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1521:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1962,
												"src": "1513:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1939,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1513:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1512:15:6"
									},
									"returnParameters": {
										"id": 1944,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1943,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1962,
												"src": "1549:6:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 1942,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "1549:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1548:8:6"
									},
									"scope": 2183,
									"src": "1494:189:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1973,
										"nodeType": "Block",
										"src": "1756:48:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1970,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1964,
															"src": "1788:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															}
														],
														"id": 1969,
														"name": "_requireOwned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2174,
														"src": "1774:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint16_$returns$_t_address_$",
															"typeString": "function (uint16) view returns (address)"
														}
													},
													"id": 1971,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1774:22:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1968,
												"id": 1972,
												"nodeType": "Return",
												"src": "1767:29:6"
											}
										]
									},
									"functionSelector": "82a7cf1e",
									"id": 1974,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "1702:7:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1965,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1964,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1717:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1974,
												"src": "1710:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 1963,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "1710:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1709:16:6"
									},
									"returnParameters": {
										"id": 1968,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1967,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1974,
												"src": "1747:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1966,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1747:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1746:9:6"
									},
									"scope": 2183,
									"src": "1693:111:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2008,
										"nodeType": "Block",
										"src": "1884:170:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1982,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1976,
															"src": "1909:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															}
														],
														"id": 1981,
														"name": "_requireOwned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2174,
														"src": "1895:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint16_$returns$_t_address_$",
															"typeString": "function (uint16) view returns (address)"
														}
													},
													"id": 1983,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1895:22:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1984,
												"nodeType": "ExpressionStatement",
												"src": "1895:22:6"
											},
											{
												"assignments": [
													1986
												],
												"declarations": [
													{
														"constant": false,
														"id": 1986,
														"mutability": "mutable",
														"name": "base",
														"nameLocation": "1942:4:6",
														"nodeType": "VariableDeclaration",
														"scope": 2008,
														"src": "1928:18:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 1985,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "1928:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1989,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1987,
														"name": "_baseURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2182,
														"src": "1949:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () pure returns (string memory)"
														}
													},
													"id": 1988,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1949:10:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1928:31:6"
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1996,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 1992,
																		"name": "base",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1986,
																		"src": "1983:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1991,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1977:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 1990,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "1977:5:6",
																		"typeDescriptions": {}
																	}
																},
																"id": 1993,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1977:11:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 1994,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1989:6:6",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "1977:18:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 1995,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1998:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "1977:22:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"hexValue": "",
														"id": 2005,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2044:2:6",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
															"typeString": "literal_string \"\""
														},
														"value": ""
													},
													"id": 2006,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "1977:69:6",
													"trueExpression": {
														"arguments": [
															{
																"id": 2000,
																"name": "base",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1986,
																"src": "2016:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															{
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 2001,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1976,
																		"src": "2022:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint16",
																			"typeString": "uint16"
																		}
																	},
																	"id": 2002,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2030:8:6",
																	"memberName": "toString",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 487,
																	"src": "2022:16:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$attached_to$_t_uint256_$",
																		"typeString": "function (uint256) pure returns (string memory)"
																	}
																},
																"id": 2003,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2022:18:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																},
																{
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															],
															"expression": {
																"id": 1998,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2002:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																	"typeString": "type(string storage pointer)"
																},
																"typeName": {
																	"id": 1997,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "2002:6:6",
																	"typeDescriptions": {}
																}
															},
															"id": 1999,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2009:6:6",
															"memberName": "concat",
															"nodeType": "MemberAccess",
															"src": "2002:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$",
																"typeString": "function () pure returns (string memory)"
															}
														},
														"id": 2004,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2002:39:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1980,
												"id": 2007,
												"nodeType": "Return",
												"src": "1970:76:6"
											}
										]
									},
									"functionSelector": "dd7d8440",
									"id": 2009,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "1823:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1977,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1976,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1839:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 2009,
												"src": "1832:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 1975,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "1832:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1831:16:6"
									},
									"returnParameters": {
										"id": 1980,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1979,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2009,
												"src": "1869:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1978,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1869:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1868:15:6"
									},
									"scope": 2183,
									"src": "1814:240:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2023,
										"nodeType": "Block",
										"src": "2116:53:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2017,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2011,
															"src": "2135:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2018,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2013,
															"src": "2139:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 2019,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 401,
																"src": "2148:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 2020,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2148:12:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2016,
														"name": "_aprove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2150,
														"src": "2127:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint16_$_t_address_$returns$__$",
															"typeString": "function (address,uint16,address)"
														}
													},
													"id": 2021,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2127:34:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2022,
												"nodeType": "ExpressionStatement",
												"src": "2127:34:6"
											}
										]
									},
									"functionSelector": "e560ca43",
									"id": 2024,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2073:7:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2014,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2011,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2089:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 2024,
												"src": "2081:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2010,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2081:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2013,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2100:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 2024,
												"src": "2093:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 2012,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "2093:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2080:28:6"
									},
									"returnParameters": {
										"id": 2015,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2116:0:6"
									},
									"scope": 2183,
									"src": "2064:105:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2039,
										"nodeType": "Block",
										"src": "2252:85:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2032,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2026,
															"src": "2277:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															}
														],
														"id": 2031,
														"name": "_requireOwned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2174,
														"src": "2263:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint16_$returns$_t_address_$",
															"typeString": "function (uint16) view returns (address)"
														}
													},
													"id": 2033,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2263:22:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2034,
												"nodeType": "ExpressionStatement",
												"src": "2263:22:6"
											},
											{
												"expression": {
													"baseExpression": {
														"id": 2035,
														"name": "_tokenApprovals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1900,
														"src": "2305:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint16_$_t_address_$",
															"typeString": "mapping(uint16 => address)"
														}
													},
													"id": 2037,
													"indexExpression": {
														"id": 2036,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2026,
														"src": "2321:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint16",
															"typeString": "uint16"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2305:24:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 2030,
												"id": 2038,
												"nodeType": "Return",
												"src": "2298:31:6"
											}
										]
									},
									"functionSelector": "93b871f2",
									"id": 2040,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "2186:11:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2027,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2026,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2205:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 2040,
												"src": "2198:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 2025,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "2198:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2197:16:6"
									},
									"returnParameters": {
										"id": 2030,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2029,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2040,
												"src": "2243:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2028,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2243:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2242:9:6"
									},
									"scope": 2183,
									"src": "2177:160:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2083,
										"nodeType": "Block",
										"src": "2412:357:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2051,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 2048,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 401,
																	"src": "2431:10:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 2049,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2431:12:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 2050,
																"name": "operator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2042,
																"src": "2447:8:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2431:24:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5468652061646472657373206f6620746865206f776e657220616e6420746865206f70657261746f72206d75737420626520646966666572656e74",
															"id": 2052,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2457:61:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_04ac8f36c142f1891048ed77339b8705d10008afae0986d82fa07e197d36aa25",
																"typeString": "literal_string \"The address of the owner and the operator must be different\""
															},
															"value": "The address of the owner and the operator must be different"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_04ac8f36c142f1891048ed77339b8705d10008afae0986d82fa07e197d36aa25",
																"typeString": "literal_string \"The address of the owner and the operator must be different\""
															}
														],
														"id": 2047,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2423:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2053,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2423:96:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2054,
												"nodeType": "ExpressionStatement",
												"src": "2423:96:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 2060,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2055,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2042,
														"src": "2534:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 2058,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2554:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 2057,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2546:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 2056,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2546:7:6",
																"typeDescriptions": {}
															}
														},
														"id": 2059,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2546:10:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2534:22:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2066,
												"nodeType": "IfStatement",
												"src": "2530:93:6",
												"trueBody": {
													"id": 2065,
													"nodeType": "Block",
													"src": "2558:65:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 2062,
																		"name": "operator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2042,
																		"src": "2602:8:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 2061,
																	"name": "ERC721InvalidOperator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 88,
																	"src": "2580:21:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 2063,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2580:31:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2064,
															"nodeType": "RevertStatement",
															"src": "2573:38:6"
														}
													]
												}
											},
											{
												"expression": {
													"id": 2074,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 2067,
																"name": "_operatorApprovals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1906,
																"src": "2643:18:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																	"typeString": "mapping(address => mapping(address => bool))"
																}
															},
															"id": 2071,
															"indexExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 2068,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 401,
																	"src": "2662:10:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 2069,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2662:12:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2643:32:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 2072,
														"indexExpression": {
															"id": 2070,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2042,
															"src": "2676:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2643:42:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2073,
														"name": "approved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2044,
														"src": "2688:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "2643:53:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2075,
												"nodeType": "ExpressionStatement",
												"src": "2643:53:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 2077,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 401,
																"src": "2728:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 2078,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2728:12:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2079,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2042,
															"src": "2742:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2080,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2044,
															"src": "2752:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 2076,
														"name": "ApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1860,
														"src": "2713:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 2081,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2713:48:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2082,
												"nodeType": "EmitStatement",
												"src": "2708:53:6"
											}
										]
									},
									"functionSelector": "a22cb465",
									"id": 2084,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "2354:17:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2045,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2042,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "2380:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 2084,
												"src": "2372:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2041,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2372:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2044,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "2395:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 2084,
												"src": "2390:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2043,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2390:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2371:33:6"
									},
									"returnParameters": {
										"id": 2046,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2412:0:6"
									},
									"scope": 2183,
									"src": "2345:424:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2099,
										"nodeType": "Block",
										"src": "2865:61:6",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 2093,
															"name": "_operatorApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1906,
															"src": "2883:18:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																"typeString": "mapping(address => mapping(address => bool))"
															}
														},
														"id": 2095,
														"indexExpression": {
															"id": 2094,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2086,
															"src": "2902:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "2883:25:6",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 2097,
													"indexExpression": {
														"id": 2096,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2088,
														"src": "2909:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2883:35:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2092,
												"id": 2098,
												"nodeType": "Return",
												"src": "2876:42:6"
											}
										]
									},
									"functionSelector": "e985e9c5",
									"id": 2100,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "2788:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2089,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2086,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2813:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 2100,
												"src": "2805:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2085,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2805:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2088,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "2828:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 2100,
												"src": "2820:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2087,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2820:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2804:33:6"
									},
									"returnParameters": {
										"id": 2092,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2091,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2100,
												"src": "2859:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2090,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2859:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2858:6:6"
									},
									"scope": 2183,
									"src": "2779:147:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2149,
										"nodeType": "Block",
										"src": "3008:354:6",
										"statements": [
											{
												"assignments": [
													2110
												],
												"declarations": [
													{
														"constant": false,
														"id": 2110,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3027:5:6",
														"nodeType": "VariableDeclaration",
														"scope": 2149,
														"src": "3019:13:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 2109,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3019:7:6",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2114,
												"initialValue": {
													"arguments": [
														{
															"id": 2112,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2104,
															"src": "3049:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															}
														],
														"id": 2111,
														"name": "_requireOwned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2174,
														"src": "3035:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint16_$returns$_t_address_$",
															"typeString": "function (uint16) view returns (address)"
														}
													},
													"id": 2113,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3035:22:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3019:38:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2118,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2116,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2110,
																"src": "3076:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 2117,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2102,
																"src": "3085:2:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "3076:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5468652061646472657373206f6620746865206f776e657220616e6420746865206f70657261746f72206d75737420626520646966666572656e74",
															"id": 2119,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3089:61:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_04ac8f36c142f1891048ed77339b8705d10008afae0986d82fa07e197d36aa25",
																"typeString": "literal_string \"The address of the owner and the operator must be different\""
															},
															"value": "The address of the owner and the operator must be different"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_04ac8f36c142f1891048ed77339b8705d10008afae0986d82fa07e197d36aa25",
																"typeString": "literal_string \"The address of the owner and the operator must be different\""
															}
														],
														"id": 2115,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3068:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2120,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3068:83:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2121,
												"nodeType": "ExpressionStatement",
												"src": "3068:83:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 2130,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 2124,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2122,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2110,
															"src": "3165:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"id": 2123,
															"name": "auth",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2106,
															"src": "3174:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "3165:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 2129,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "3182:30:6",
														"subExpression": {
															"arguments": [
																{
																	"id": 2126,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2110,
																	"src": "3200:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 2127,
																	"name": "auth",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2106,
																	"src": "3207:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2125,
																"name": "isApprovedForAll",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2100,
																"src": "3183:16:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address,address) view returns (bool)"
																}
															},
															"id": 2128,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3183:29:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "3165:47:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2136,
												"nodeType": "IfStatement",
												"src": "3161:108:6",
												"trueBody": {
													"id": 2135,
													"nodeType": "Block",
													"src": "3213:56:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 2132,
																		"name": "auth",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2106,
																		"src": "3253:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 2131,
																	"name": "ERC721InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 83,
																	"src": "3231:21:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 2133,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3231:27:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2134,
															"nodeType": "RevertStatement",
															"src": "3224:34:6"
														}
													]
												}
											},
											{
												"expression": {
													"id": 2141,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2137,
															"name": "_tokenApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1900,
															"src": "3281:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint16_$_t_address_$",
																"typeString": "mapping(uint16 => address)"
															}
														},
														"id": 2139,
														"indexExpression": {
															"id": 2138,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2104,
															"src": "3297:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3281:24:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2140,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2102,
														"src": "3308:2:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3281:29:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2142,
												"nodeType": "ExpressionStatement",
												"src": "3281:29:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2144,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2110,
															"src": "3335:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2145,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2102,
															"src": "3342:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2146,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2104,
															"src": "3346:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															}
														],
														"id": 2143,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1852,
														"src": "3326:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint16_$returns$__$",
															"typeString": "function (address,address,uint16)"
														}
													},
													"id": 2147,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3326:28:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2148,
												"nodeType": "EmitStatement",
												"src": "3321:33:6"
											}
										]
									},
									"id": 2150,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_aprove",
									"nameLocation": "2949:7:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2107,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2102,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2965:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 2150,
												"src": "2957:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2101,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2957:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2104,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2976:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 2150,
												"src": "2969:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 2103,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "2969:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2106,
												"mutability": "mutable",
												"name": "auth",
												"nameLocation": "2993:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 2150,
												"src": "2985:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2105,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2985:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2956:42:6"
									},
									"returnParameters": {
										"id": 2108,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3008:0:6"
									},
									"scope": 2183,
									"src": "2940:422:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2173,
										"nodeType": "Block",
										"src": "3451:193:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 2165,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint16",
																	"typeString": "uint16"
																},
																"id": 2160,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "30",
																	"id": 2158,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3470:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 2159,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2152,
																	"src": "3474:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint16",
																		"typeString": "uint16"
																	}
																},
																"src": "3470:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint16",
																	"typeString": "uint16"
																},
																"id": 2164,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2161,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2152,
																	"src": "3485:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint16",
																		"typeString": "uint16"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<=",
																"rightExpression": {
																	"expression": {
																		"id": 2162,
																		"name": "tokInfo",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1886,
																		"src": "3496:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_TokInfo_$1883_storage",
																			"typeString": "struct ERC721TokenContractName.TokInfo storage ref"
																		}
																	},
																	"id": 2163,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3504:13:6",
																	"memberName": "currentTokens",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1882,
																	"src": "3496:21:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint16",
																		"typeString": "uint16"
																	}
																},
																"src": "3485:32:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "3470:47:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "54686520494420656e746572656420697320696e76616c69642e204974206d75737420626520696e207468697320696e74657276616c2030203c206964203c3d2063757272656e7420746f6b656e73",
															"id": 2166,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3519:81:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d01a6ddc51808b791794e2bc370247f685df6f3cfeea0cd79f01cec6a9ccb52f",
																"typeString": "literal_string \"The ID entered is invalid. It must be in this interval 0 < id <= current tokens\""
															},
															"value": "The ID entered is invalid. It must be in this interval 0 < id <= current tokens"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d01a6ddc51808b791794e2bc370247f685df6f3cfeea0cd79f01cec6a9ccb52f",
																"typeString": "literal_string \"The ID entered is invalid. It must be in this interval 0 < id <= current tokens\""
															}
														],
														"id": 2157,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3462:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2167,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3462:139:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2168,
												"nodeType": "ExpressionStatement",
												"src": "3462:139:6"
											},
											{
												"expression": {
													"baseExpression": {
														"id": 2169,
														"name": "_owners",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1890,
														"src": "3620:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$1201_storage",
															"typeString": "address[1201] storage ref"
														}
													},
													"id": 2171,
													"indexExpression": {
														"id": 2170,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2152,
														"src": "3628:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint16",
															"typeString": "uint16"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3620:16:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 2156,
												"id": 2172,
												"nodeType": "Return",
												"src": "3613:23:6"
											}
										]
									},
									"id": 2174,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requireOwned",
									"nameLocation": "3389:13:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2153,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2152,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3410:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 2174,
												"src": "3403:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 2151,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "3403:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3402:16:6"
									},
									"returnParameters": {
										"id": 2156,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2155,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2174,
												"src": "3442:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2154,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3442:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3441:9:6"
									},
									"scope": 2183,
									"src": "3380:264:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2181,
										"nodeType": "Block",
										"src": "3712:28:6",
										"statements": [
											{
												"expression": {
													"hexValue": "",
													"id": 2179,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3730:2:6",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
														"typeString": "literal_string \"\""
													},
													"value": ""
												},
												"functionReturnParameters": 2178,
												"id": 2180,
												"nodeType": "Return",
												"src": "3723:9:6"
											}
										]
									},
									"id": 2182,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_baseURI",
									"nameLocation": "3663:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2175,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3671:2:6"
									},
									"returnParameters": {
										"id": 2178,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2177,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2182,
												"src": "3697:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2176,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3697:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3696:15:6"
									},
									"scope": 2183,
									"src": "3654:86:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2184,
							"src": "316:3437:6",
							"usedErrors": [
								47,
								52,
								61,
								66,
								71,
								78,
								83,
								88
							],
							"usedEvents": [
								1852,
								1860,
								1868
							]
						}
					],
					"src": "33:3720:6"
				},
				"id": 6
			}
		}
	}
}